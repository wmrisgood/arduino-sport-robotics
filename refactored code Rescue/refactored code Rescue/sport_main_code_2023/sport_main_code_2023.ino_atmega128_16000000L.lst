
C:\Users\14377\AppData\Local\Temp\arduino\sketches\58BDD3BA43D2DBA3B7A8D2180303254D/sport_main_code_2023.ino.elf:     file format elf32-avr


Disassembly of section .text:

00000000 <__vectors>:
__vectors():
       0:	0c 94 af 00 	jmp	0x15e	; 0x15e <__ctors_end>
       4:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
       8:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
       c:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      10:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      14:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      18:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      1c:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      20:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      24:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      28:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      2c:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      30:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      34:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      38:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      3c:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      40:	0c 94 0d 19 	jmp	0x321a	; 0x321a <__vector_16>
      44:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      48:	0c 94 e1 19 	jmp	0x33c2	; 0x33c2 <__vector_18>
      4c:	0c 94 b7 19 	jmp	0x336e	; 0x336e <__vector_19>
      50:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      54:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      58:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      5c:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      60:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      64:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      68:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      6c:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      70:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      74:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      78:	0c 94 81 19 	jmp	0x3302	; 0x3302 <__vector_30>
      7c:	0c 94 57 19 	jmp	0x32ae	; 0x32ae <__vector_31>
      80:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      84:	0c 94 17 1a 	jmp	0x342e	; 0x342e <__vector_33>
      88:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>

0000008c <__trampolines_end>:
__trampolines_start():
      8c:	00 00       	nop
      8e:	3a 00       	.word	0x003a	; ????
      90:	37 00       	.word	0x0037	; ????
      92:	34 00       	.word	0x0034	; ????
      94:	31 00       	.word	0x0031	; ????
      96:	22 00       	.word	0x0022	; ????
      98:	61 00       	.word	0x0061	; ????
      9a:	64 00       	.word	0x0064	; ????

0000009c <port_to_output_PGM>:
      9c:	00 00 3b 00 38 00 35 00 32 00 23 00 62 00 65 00     ..;.8.5.2.#.b.e.

000000ac <port_to_input_PGM>:
      ac:	00 00 39 00 36 00 33 00 30 00 21 00 20 00 63 00     ..9.6.3.0.!. .c.

000000bc <digital_pin_to_port_PGM>:
      bc:	05 05 05 05 05 05 05 05 02 02 02 02 02 02 02 02     ................
      cc:	07 07 04 04 04 04 04 04 04 04 07 07 03 03 03 03     ................
      dc:	03 03 03 03 07 01 01 01 01 01 01 01 01 06 06 06     ................
      ec:	06 06 06 06 06                                      .....

000000f1 <digital_pin_to_bit_mask_PGM>:
      f1:	01 02 04 08 10 20 40 80 01 02 04 08 10 20 40 80     ..... @...... @.
     101:	08 10 01 02 04 08 10 20 40 80 01 02 01 02 04 08     ....... @.......
     111:	10 20 40 80 04 80 40 20 10 08 04 02 01 01 02 04     . @...@ ........
     121:	08 10 20 40 80                                      .. @.

00000126 <digital_pin_to_timer_PGM>:
     126:	00 00 00 0a 0b 0c 00 00 00 00 00 00 01 04 05 06     ................
	...

0000015c <__ctors_start>:
__ctors_start():
     15c:	c5 2d       	mov	r28, r5

0000015e <__ctors_end>:
__dtors_end():
     15e:	11 24       	eor	r1, r1
     160:	1f be       	out	0x3f, r1	; 63
     162:	cf ef       	ldi	r28, 0xFF	; 255
     164:	d0 e1       	ldi	r29, 0x10	; 16
     166:	de bf       	out	0x3e, r29	; 62
     168:	cd bf       	out	0x3d, r28	; 61

0000016a <__do_copy_data>:
__do_copy_data():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2373
     16a:	18 e0       	ldi	r17, 0x08	; 8
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2374
     16c:	a0 e0       	ldi	r26, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2375
     16e:	b1 e0       	ldi	r27, 0x01	; 1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2376
     170:	ee ea       	ldi	r30, 0xAE	; 174
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2377
     172:	fe e8       	ldi	r31, 0x8E	; 142
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2378
     174:	00 e0       	ldi	r16, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2379
     176:	0b bf       	out	0x3b, r16	; 59
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2380
     178:	02 c0       	rjmp	.+4      	; 0x17e <__do_copy_data+0x14>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2382
     17a:	07 90       	elpm	r0, Z+
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2383
     17c:	0d 92       	st	X+, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2385
     17e:	ac 3f       	cpi	r26, 0xFC	; 252
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2386
     180:	b1 07       	cpc	r27, r17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2387
     182:	d9 f7       	brne	.-10     	; 0x17a <__do_copy_data+0x10>

00000184 <__do_clear_bss>:
__do_clear_bss():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2441
     184:	2b e0       	ldi	r18, 0x0B	; 11
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2442
     186:	ac ef       	ldi	r26, 0xFC	; 252
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2443
     188:	b8 e0       	ldi	r27, 0x08	; 8
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2444
     18a:	01 c0       	rjmp	.+2      	; 0x18e <.do_clear_bss_start>

0000018c <.do_clear_bss_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2446
     18c:	1d 92       	st	X+, r1

0000018e <.do_clear_bss_start>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2448
     18e:	a5 39       	cpi	r26, 0x95	; 149
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2449
     190:	b2 07       	cpc	r27, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2450
     192:	e1 f7       	brne	.-8      	; 0x18c <.do_clear_bss_loop>

00000194 <__do_global_ctors>:
__do_global_ctors():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2466
     194:	10 e0       	ldi	r17, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2467
     196:	cf ea       	ldi	r28, 0xAF	; 175
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2468
     198:	d0 e0       	ldi	r29, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2472
     19a:	04 c0       	rjmp	.+8      	; 0x1a4 <__do_global_ctors+0x10>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2474
     19c:	21 97       	sbiw	r28, 0x01	; 1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2480
     19e:	fe 01       	movw	r30, r28
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2481
     1a0:	0e 94 10 47 	call	0x8e20	; 0x8e20 <__tablejump2__>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2483
     1a4:	ce 3a       	cpi	r28, 0xAE	; 174
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2484
     1a6:	d1 07       	cpc	r29, r17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2489
     1a8:	c9 f7       	brne	.-14     	; 0x19c <__do_global_ctors+0x8>
     1aa:	0e 94 42 2e 	call	0x5c84	; 0x5c84 <main>
     1ae:	0c 94 55 47 	jmp	0x8eaa	; 0x8eaa <_exit>

000001b2 <__bad_interrupt>:
__vector_22():
     1b2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001b6 <update_crc(unsigned short, unsigned short*, unsigned short) [clone .constprop.26]>:
update_crc():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:40
unsigned int puls_cnt;

unsigned char TxBuffer[20];
unsigned short gbpTxBuffer[20], gbpParameter[20], packet[30];

unsigned short update_crc(unsigned short crc_accum, unsigned short *data_blk_ptr, unsigned short data_blk_size)
     1b6:	cf 93       	push	r28
     1b8:	df 93       	push	r29
     1ba:	cd b7       	in	r28, 0x3d	; 61
     1bc:	de b7       	in	r29, 0x3e	; 62
     1be:	d2 50       	subi	r29, 0x02	; 2
     1c0:	0f b6       	in	r0, 0x3f	; 63
     1c2:	f8 94       	cli
     1c4:	de bf       	out	0x3e, r29	; 62
     1c6:	0f be       	out	0x3f, r0	; 63
     1c8:	cd bf       	out	0x3d, r28	; 61
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:43
{
    unsigned short i, j;
    unsigned short crc_table[256] = {
     1ca:	80 e0       	ldi	r24, 0x00	; 0
     1cc:	92 e0       	ldi	r25, 0x02	; 2
     1ce:	e6 e0       	ldi	r30, 0x06	; 6
     1d0:	f1 e0       	ldi	r31, 0x01	; 1
     1d2:	de 01       	movw	r26, r28
     1d4:	11 96       	adiw	r26, 0x01	; 1
     1d6:	01 90       	ld	r0, Z+
     1d8:	0d 92       	st	X+, r0
     1da:	01 97       	sbiw	r24, 0x01	; 1
     1dc:	e1 f7       	brne	.-8      	; 0x1d6 <update_crc(unsigned short, unsigned short*, unsigned short) [clone .constprop.26]+0x20>
     1de:	ab ef       	ldi	r26, 0xFB	; 251
     1e0:	b9 e0       	ldi	r27, 0x09	; 9
     1e2:	27 e1       	ldi	r18, 0x17	; 23
     1e4:	3a e0       	ldi	r19, 0x0A	; 10
     1e6:	90 e0       	ldi	r25, 0x00	; 0
     1e8:	80 e0       	ldi	r24, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:79
        0x0220, 0x8225, 0x822F, 0x022A, 0x823B, 0x023E, 0x0234, 0x8231,
        0x8213, 0x0216, 0x021C, 0x8219, 0x0208, 0x820D, 0x8207, 0x0202};

    for (j = 0; j < data_blk_size; j++)
    {
        i = ((unsigned short)(crc_accum >> 8) ^ data_blk_ptr[j]) & 0xFF;
     1ea:	6d 91       	ld	r22, X+
     1ec:	7d 91       	ld	r23, X+
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:80
        crc_accum = (crc_accum << 8) ^ crc_table[i];
     1ee:	58 2f       	mov	r21, r24
     1f0:	44 27       	eor	r20, r20
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:79
        0x0220, 0x8225, 0x822F, 0x022A, 0x823B, 0x023E, 0x0234, 0x8231,
        0x8213, 0x0216, 0x021C, 0x8219, 0x0208, 0x820D, 0x8207, 0x0202};

    for (j = 0; j < data_blk_size; j++)
    {
        i = ((unsigned short)(crc_accum >> 8) ^ data_blk_ptr[j]) & 0xFF;
     1f2:	e9 2f       	mov	r30, r25
     1f4:	ff 27       	eor	r31, r31
     1f6:	e6 27       	eor	r30, r22
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:80
        crc_accum = (crc_accum << 8) ^ crc_table[i];
     1f8:	ee 0f       	add	r30, r30
     1fa:	ff 1f       	adc	r31, r31
     1fc:	81 e0       	ldi	r24, 0x01	; 1
     1fe:	90 e0       	ldi	r25, 0x00	; 0
     200:	8c 0f       	add	r24, r28
     202:	9d 1f       	adc	r25, r29
     204:	e8 0f       	add	r30, r24
     206:	f9 1f       	adc	r31, r25
     208:	80 81       	ld	r24, Z
     20a:	91 81       	ldd	r25, Z+1	; 0x01
     20c:	84 27       	eor	r24, r20
     20e:	95 27       	eor	r25, r21
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:77
        0x8243, 0x0246, 0x024C, 0x8249, 0x0258, 0x825D, 0x8257, 0x0252,
        0x0270, 0x8275, 0x827F, 0x027A, 0x826B, 0x026E, 0x0264, 0x8261,
        0x0220, 0x8225, 0x822F, 0x022A, 0x823B, 0x023E, 0x0234, 0x8231,
        0x8213, 0x0216, 0x021C, 0x8219, 0x0208, 0x820D, 0x8207, 0x0202};

    for (j = 0; j < data_blk_size; j++)
     210:	2a 17       	cp	r18, r26
     212:	3b 07       	cpc	r19, r27
     214:	51 f7       	brne	.-44     	; 0x1ea <update_crc(unsigned short, unsigned short*, unsigned short) [clone .constprop.26]+0x34>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:83
    {
        i = ((unsigned short)(crc_accum >> 8) ^ data_blk_ptr[j]) & 0xFF;
        crc_accum = (crc_accum << 8) ^ crc_table[i];
    }
    return crc_accum;
}
     216:	de 5f       	subi	r29, 0xFE	; 254
     218:	0f b6       	in	r0, 0x3f	; 63
     21a:	f8 94       	cli
     21c:	de bf       	out	0x3e, r29	; 62
     21e:	0f be       	out	0x3f, r0	; 63
     220:	cd bf       	out	0x3d, r28	; 61
     222:	df 91       	pop	r29
     224:	cf 91       	pop	r28
     226:	08 95       	ret

00000228 <printf_putchar(char, __file*)>:
printf_putchar():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:204
}

// Custom implementation of printf borrowed from the teensy core files
static int16_t printf_putchar(char c, FILE *fp)
{
  ((class Print *)(fdev_get_udata(fp)))->write((uint8_t)c);
     228:	fb 01       	movw	r30, r22
     22a:	a4 85       	ldd	r26, Z+12	; 0x0c
     22c:	b5 85       	ldd	r27, Z+13	; 0x0d
     22e:	ed 91       	ld	r30, X+
     230:	fc 91       	ld	r31, X
     232:	11 97       	sbiw	r26, 0x01	; 1
     234:	01 90       	ld	r0, Z+
     236:	f0 81       	ld	r31, Z
     238:	e0 2d       	mov	r30, r0
     23a:	68 2f       	mov	r22, r24
     23c:	cd 01       	movw	r24, r26
     23e:	09 95       	icall
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:206
  return 0;
}
     240:	90 e0       	ldi	r25, 0x00	; 0
     242:	80 e0       	ldi	r24, 0x00	; 0
     244:	08 95       	ret

00000246 <TwoWire::read()>:
read():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:303
int TwoWire::read(void)
{
  int value = -1;

  // get each successive byte on each call
  if(rxBufferIndex < rxBufferLength){
     246:	90 91 fa 09 	lds	r25, 0x09FA	; 0x8009fa <TwoWire::rxBufferIndex>
     24a:	80 91 f9 09 	lds	r24, 0x09F9	; 0x8009f9 <TwoWire::rxBufferLength>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:300
// must be called in:
// slave rx event callback
// or after requestFrom(address, numBytes)
int TwoWire::read(void)
{
  int value = -1;
     24e:	2f ef       	ldi	r18, 0xFF	; 255
     250:	3f ef       	ldi	r19, 0xFF	; 255
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:303

  // get each successive byte on each call
  if(rxBufferIndex < rxBufferLength){
     252:	98 17       	cp	r25, r24
     254:	48 f4       	brcc	.+18     	; 0x268 <TwoWire::read()+0x22>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:304
    value = rxBuffer[rxBufferIndex];
     256:	e9 2f       	mov	r30, r25
     258:	f0 e0       	ldi	r31, 0x00	; 0
     25a:	e7 52       	subi	r30, 0x27	; 39
     25c:	f6 4f       	sbci	r31, 0xF6	; 246
     25e:	20 81       	ld	r18, Z
     260:	30 e0       	ldi	r19, 0x00	; 0
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:305
    ++rxBufferIndex;
     262:	9f 5f       	subi	r25, 0xFF	; 255
     264:	90 93 fa 09 	sts	0x09FA, r25	; 0x8009fa <TwoWire::rxBufferIndex>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:309
  }

  return value;
}
     268:	c9 01       	movw	r24, r18
     26a:	08 95       	ret

0000026c <TwoWire::read() [clone .constprop.16]>:
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:303
int TwoWire::read(void)
{
  int value = -1;

  // get each successive byte on each call
  if(rxBufferIndex < rxBufferLength){
     26c:	90 91 fa 09 	lds	r25, 0x09FA	; 0x8009fa <TwoWire::rxBufferIndex>
     270:	80 91 f9 09 	lds	r24, 0x09F9	; 0x8009f9 <TwoWire::rxBufferLength>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:300
// must be called in:
// slave rx event callback
// or after requestFrom(address, numBytes)
int TwoWire::read(void)
{
  int value = -1;
     274:	2f ef       	ldi	r18, 0xFF	; 255
     276:	3f ef       	ldi	r19, 0xFF	; 255
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:303

  // get each successive byte on each call
  if(rxBufferIndex < rxBufferLength){
     278:	98 17       	cp	r25, r24
     27a:	48 f4       	brcc	.+18     	; 0x28e <TwoWire::read() [clone .constprop.16]+0x22>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:304
    value = rxBuffer[rxBufferIndex];
     27c:	e9 2f       	mov	r30, r25
     27e:	f0 e0       	ldi	r31, 0x00	; 0
     280:	e7 52       	subi	r30, 0x27	; 39
     282:	f6 4f       	sbci	r31, 0xF6	; 246
     284:	20 81       	ld	r18, Z
     286:	30 e0       	ldi	r19, 0x00	; 0
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:305
    ++rxBufferIndex;
     288:	9f 5f       	subi	r25, 0xFF	; 255
     28a:	90 93 fa 09 	sts	0x09FA, r25	; 0x8009fa <TwoWire::rxBufferIndex>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:309
  }

  return value;
}
     28e:	c9 01       	movw	r24, r18
     290:	08 95       	ret

00000292 <TwoWire::endTransmission(unsigned char) [clone .constprop.12]>:
endTransmission():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:224
//  the bus tenure has been properly ended with a STOP. It
//  is very possible to leave the bus in a hung state if
//  no call to endTransmission(true) is made. Some I2C
//  devices will behave oddly if they do not see a STOP.
//
uint8_t TwoWire::endTransmission(uint8_t sendStop)
     292:	28 2f       	mov	r18, r24
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:227
{
  // transmit buffer (blocking)
  uint8_t ret = twi_writeTo(txAddress, txBuffer, txBufferLength, 1, sendStop);
     294:	90 91 d8 09 	lds	r25, 0x09D8	; 0x8009d8 <TwoWire::txBufferLength>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:263
 */
uint8_t twi_writeTo(uint8_t address, uint8_t* data, uint8_t length, uint8_t wait, uint8_t sendStop)
{
  // ensure data will fit into buffer
  if(TWI_BUFFER_SIZE < length){
    return 1;
     298:	81 e0       	ldi	r24, 0x01	; 1
twi_writeTo():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:262
 *          5 .. timeout
 */
uint8_t twi_writeTo(uint8_t address, uint8_t* data, uint8_t length, uint8_t wait, uint8_t sendStop)
{
  // ensure data will fit into buffer
  if(TWI_BUFFER_SIZE < length){
     29a:	91 32       	cpi	r25, 0x21	; 33
     29c:	08 f0       	brcs	.+2      	; 0x2a0 <TwoWire::endTransmission(unsigned char) [clone .constprop.12]+0xe>
     29e:	42 c0       	rjmp	.+132    	; 0x324 <TwoWire::endTransmission(unsigned char) [clone .constprop.12]+0x92>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:276
        twi_handleTimeout(twi_do_reset_on_timeout);
        return (5);
      }
    }
  #else
    while(TWI_READY != twi_state){
     2a0:	80 91 b4 09 	lds	r24, 0x09B4	; 0x8009b4 <twi_state>
     2a4:	81 11       	cpse	r24, r1
     2a6:	fc cf       	rjmp	.-8      	; 0x2a0 <TwoWire::endTransmission(unsigned char) [clone .constprop.12]+0xe>
endTransmission():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:227
     2a8:	80 91 d7 09 	lds	r24, 0x09D7	; 0x8009d7 <TwoWire::txAddress>
twi_writeTo():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:281
      continue;
    }
  #endif

  twi_state = TWI_MTX;
     2ac:	32 e0       	ldi	r19, 0x02	; 2
     2ae:	30 93 b4 09 	sts	0x09B4, r19	; 0x8009b4 <twi_state>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:282
  twi_sendStop = sendStop;
     2b2:	20 93 b3 09 	sts	0x09B3, r18	; 0x8009b3 <twi_sendStop>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:284
  // reset error state (0xFF.. no error occurred)
  twi_error = 0xFF;
     2b6:	2f ef       	ldi	r18, 0xFF	; 255
     2b8:	20 93 b2 09 	sts	0x09B2, r18	; 0x8009b2 <twi_error>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:287

  // initialize buffer iteration vars
  twi_masterBuffer = data;
     2bc:	27 eb       	ldi	r18, 0xB7	; 183
     2be:	39 e0       	ldi	r19, 0x09	; 9
     2c0:	30 93 b1 09 	sts	0x09B1, r19	; 0x8009b1 <twi_masterBuffer+0x1>
     2c4:	20 93 b0 09 	sts	0x09B0, r18	; 0x8009b0 <twi_masterBuffer>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:288
  twi_masterBufferIndex = 0;
     2c8:	10 92 af 09 	sts	0x09AF, r1	; 0x8009af <twi_masterBufferIndex>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:289
  twi_masterBufferLength = length;
     2cc:	90 93 ae 09 	sts	0x09AE, r25	; 0x8009ae <twi_masterBufferLength>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:292

  // build sla+w, slave device address + w bit
  twi_slarw = TW_WRITE;
     2d0:	10 92 ad 09 	sts	0x09AD, r1	; 0x8009ad <twi_slarw>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:293
  twi_slarw |= address << 1;
     2d4:	90 91 ad 09 	lds	r25, 0x09AD	; 0x8009ad <twi_slarw>
     2d8:	88 0f       	add	r24, r24
     2da:	89 2b       	or	r24, r25
     2dc:	80 93 ad 09 	sts	0x09AD, r24	; 0x8009ad <twi_slarw>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:298

  // if we're in a repeated start, then we've already sent the START
  // in the ISR. Don't do it again.
  //
  if (true == twi_inRepStart) {
     2e0:	80 91 ac 09 	lds	r24, 0x09AC	; 0x8009ac <twi_inRepStart>
     2e4:	81 30       	cpi	r24, 0x01	; 1
     2e6:	29 f5       	brne	.+74     	; 0x332 <TwoWire::endTransmission(unsigned char) [clone .constprop.12]+0xa0>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:305
    // (@@@ we hope), and the TWI statemachine is just waiting for the address byte.
    // We need to remove ourselves from the repeated start state before we enable interrupts,
    // since the ISR is ASYNC, and we could get confused if we hit the ISR before cleaning
    // up. Also, don't enable the START interrupt. There may be one pending from the
    // repeated start that we sent ourselves, and that would really confuse things.
    twi_inRepStart = false; // Remember, we're dealing with an ASYNC ISR
     2e8:	10 92 ac 09 	sts	0x09AC, r1	; 0x8009ac <twi_inRepStart>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:316
          return (5);
        }
      } while(TWCR & _BV(TWWC));
    #else
      do {
        TWDR = twi_slarw;
     2ec:	80 91 ad 09 	lds	r24, 0x09AD	; 0x8009ad <twi_slarw>
     2f0:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:317
      } while(TWCR & _BV(TWWC));
     2f4:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
     2f8:	83 fd       	sbrc	r24, 3
     2fa:	f8 cf       	rjmp	.-16     	; 0x2ec <TwoWire::endTransmission(unsigned char) [clone .constprop.12]+0x5a>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:319
    #endif
    TWCR = _BV(TWINT) | _BV(TWEA) | _BV(TWEN) | _BV(TWIE);  // enable INTs, but not START
     2fc:	85 ec       	ldi	r24, 0xC5	; 197
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:323
  }
  else
    // send start condition
    TWCR = _BV(TWINT) | _BV(TWEA) | _BV(TWEN) | _BV(TWIE) | _BV(TWSTA); // enable INTs
     2fe:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:335
        twi_handleTimeout(twi_do_reset_on_timeout);
        return (5);
      }
    }
  #else
    while(wait && (TWI_MTX == twi_state)){
     302:	80 91 b4 09 	lds	r24, 0x09B4	; 0x8009b4 <twi_state>
     306:	82 30       	cpi	r24, 0x02	; 2
     308:	e1 f3       	breq	.-8      	; 0x302 <TwoWire::endTransmission(unsigned char) [clone .constprop.12]+0x70>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:340
      continue;
    }
  #endif

  if (twi_error == 0xFF)
     30a:	80 91 b2 09 	lds	r24, 0x09B2	; 0x8009b2 <twi_error>
     30e:	8f 3f       	cpi	r24, 0xFF	; 255
     310:	91 f0       	breq	.+36     	; 0x336 <TwoWire::endTransmission(unsigned char) [clone .constprop.12]+0xa4>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:342
    return 0; // success
  else if (twi_error == TW_MT_SLA_NACK)
     312:	80 91 b2 09 	lds	r24, 0x09B2	; 0x8009b2 <twi_error>
     316:	80 32       	cpi	r24, 0x20	; 32
     318:	81 f0       	breq	.+32     	; 0x33a <TwoWire::endTransmission(unsigned char) [clone .constprop.12]+0xa8>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:344
    return 2; // error: address send, nack received
  else if (twi_error == TW_MT_DATA_NACK)
     31a:	80 91 b2 09 	lds	r24, 0x09B2	; 0x8009b2 <twi_error>
     31e:	80 33       	cpi	r24, 0x30	; 48
     320:	71 f0       	breq	.+28     	; 0x33e <TwoWire::endTransmission(unsigned char) [clone .constprop.12]+0xac>
endTransmission():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:347
    return 3; // error: data send, nack received
  else
    return 4; // other twi error
     322:	84 e0       	ldi	r24, 0x04	; 4
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:229
  // reset tx buffer iterator vars
  txBufferIndex = 0;
     324:	10 92 b6 09 	sts	0x09B6, r1	; 0x8009b6 <TwoWire::txBufferIndex>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:230
  txBufferLength = 0;
     328:	10 92 d8 09 	sts	0x09D8, r1	; 0x8009d8 <TwoWire::txBufferLength>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:232
  // indicate that we are done transmitting
  transmitting = 0;
     32c:	10 92 b5 09 	sts	0x09B5, r1	; 0x8009b5 <TwoWire::transmitting>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:234
  return ret;
}
     330:	08 95       	ret
twi_writeTo():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:323
    #endif
    TWCR = _BV(TWINT) | _BV(TWEA) | _BV(TWEN) | _BV(TWIE);  // enable INTs, but not START
  }
  else
    // send start condition
    TWCR = _BV(TWINT) | _BV(TWEA) | _BV(TWEN) | _BV(TWIE) | _BV(TWSTA); // enable INTs
     332:	85 ee       	ldi	r24, 0xE5	; 229
     334:	e4 cf       	rjmp	.-56     	; 0x2fe <TwoWire::endTransmission(unsigned char) [clone .constprop.12]+0x6c>
endTransmission():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:341
      continue;
    }
  #endif

  if (twi_error == 0xFF)
    return 0; // success
     336:	80 e0       	ldi	r24, 0x00	; 0
     338:	f5 cf       	rjmp	.-22     	; 0x324 <TwoWire::endTransmission(unsigned char) [clone .constprop.12]+0x92>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:343
  else if (twi_error == TW_MT_SLA_NACK)
    return 2; // error: address send, nack received
     33a:	82 e0       	ldi	r24, 0x02	; 2
     33c:	f3 cf       	rjmp	.-26     	; 0x324 <TwoWire::endTransmission(unsigned char) [clone .constprop.12]+0x92>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:345
  else if (twi_error == TW_MT_DATA_NACK)
    return 3; // error: data send, nack received
     33e:	83 e0       	ldi	r24, 0x03	; 3
     340:	f1 cf       	rjmp	.-30     	; 0x324 <TwoWire::endTransmission(unsigned char) [clone .constprop.12]+0x92>

00000342 <TwoWire::beginTransmission(unsigned char) [clone .constprop.11]>:
beginTransmission():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:198
}

void TwoWire::beginTransmission(uint8_t address)
{
  // indicate that we are transmitting
  transmitting = 1;
     342:	91 e0       	ldi	r25, 0x01	; 1
     344:	90 93 b5 09 	sts	0x09B5, r25	; 0x8009b5 <TwoWire::transmitting>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:200
  // set address of targeted slave
  txAddress = address;
     348:	80 93 d7 09 	sts	0x09D7, r24	; 0x8009d7 <TwoWire::txAddress>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:202
  // reset tx buffer iterator vars
  txBufferIndex = 0;
     34c:	10 92 b6 09 	sts	0x09B6, r1	; 0x8009b6 <TwoWire::txBufferIndex>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:203
  txBufferLength = 0;
     350:	10 92 d8 09 	sts	0x09D8, r1	; 0x8009d8 <TwoWire::txBufferLength>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:204
}
     354:	08 95       	ret

00000356 <TwoWire::endTransmission() [clone .constprop.7]>:
endTransmission():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:241
//  This provides backwards compatibility with the original
//  definition, and expected behaviour, of endTransmission
//
uint8_t TwoWire::endTransmission(void)
{
  return endTransmission(true);
     356:	81 e0       	ldi	r24, 0x01	; 1
     358:	0c 94 49 01 	jmp	0x292	; 0x292 <TwoWire::endTransmission(unsigned char) [clone .constprop.12]>

0000035c <turnOffPWM>:
turnOffPWM():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:77
//
//static inline void turnOffPWM(uint8_t timer) __attribute__ ((always_inline));
//static inline void turnOffPWM(uint8_t timer)
static void turnOffPWM(uint8_t timer)
{
  switch (timer)
     35c:	81 50       	subi	r24, 0x01	; 1
     35e:	8c 30       	cpi	r24, 0x0C	; 12
     360:	88 f5       	brcc	.+98     	; 0x3c4 <turnOffPWM+0x68>
     362:	e8 2f       	mov	r30, r24
     364:	f0 e0       	ldi	r31, 0x00	; 0
     366:	e9 54       	subi	r30, 0x49	; 73
     368:	fe 4f       	sbci	r31, 0xFE	; 254
     36a:	0c 94 10 47 	jmp	0x8e20	; 0x8e20 <__tablejump2__>
     36e:	df 01       	movw	r26, r30
     370:	df 01       	movw	r26, r30
     372:	e2 01       	movw	r28, r4
     374:	c3 01       	movw	r24, r6
     376:	c7 01       	movw	r24, r14
     378:	ca 01       	movw	r24, r20
     37a:	cd 01       	movw	r24, r26
     37c:	e2 01       	movw	r28, r4
     37e:	e2 01       	movw	r28, r4
     380:	d1 01       	movw	r26, r2
     382:	d7 01       	movw	r26, r14
     384:	db 01       	movw	r26, r22
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:82
  {
    // Timer1
    #if defined(TCCR1A) && defined(COM1A1)
      case TIMER1A:
        TCCR1A &= ~_BV(COM1A1);
     386:	8f b5       	in	r24, 0x2f	; 47
     388:	8f 77       	andi	r24, 0x7F	; 127
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:87
        break;
    #endif
    #if defined(TCCR1A) && defined(COM1B1)
      case TIMER1B:
        TCCR1A &= ~_BV(COM1B1);
     38a:	8f bd       	out	0x2f, r24	; 47
     38c:	08 95       	ret
     38e:	8f b5       	in	r24, 0x2f	; 47
     390:	8f 7d       	andi	r24, 0xDF	; 223
     392:	fb cf       	rjmp	.-10     	; 0x38a <turnOffPWM+0x2e>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:92
        break;
    #endif
    #if defined(TCCR1A) && defined(COM1C1)
      case TIMER1C:
        TCCR1A &= ~_BV(COM1C1);
     394:	8f b5       	in	r24, 0x2f	; 47
     396:	87 7f       	andi	r24, 0xF7	; 247
     398:	f8 cf       	rjmp	.-16     	; 0x38a <turnOffPWM+0x2e>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:99
    #endif
    
    // Timer2
    #if defined(TCCR2) && defined(COM21)
      case TIMER2:
        TCCR2 &= ~_BV(COM21);
     39a:	85 b5       	in	r24, 0x25	; 37
     39c:	8f 7d       	andi	r24, 0xDF	; 223
     39e:	85 bd       	out	0x25, r24	; 37
     3a0:	08 95       	ret
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:116
    #endif

    // Timer3
    #if defined(TCCR3A) && defined(COM3A1)
      case TIMER3A:
        TCCR3A &= ~_BV(COM3A1);
     3a2:	80 91 8b 00 	lds	r24, 0x008B	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
     3a6:	8f 77       	andi	r24, 0x7F	; 127
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:126
        TCCR3A &= ~_BV(COM3B1);
        break;
    #endif
    #if defined(TCCR3A) && defined(COM3C1)
      case TIMER3C:
        TCCR3A &= ~_BV(COM3C1);
     3a8:	80 93 8b 00 	sts	0x008B, r24	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
     3ac:	08 95       	ret
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:121
        TCCR3A &= ~_BV(COM3A1);
        break;
    #endif
    #if defined(TCCR3A) && defined(COM3B1)
      case TIMER3B:
        TCCR3A &= ~_BV(COM3B1);
     3ae:	80 91 8b 00 	lds	r24, 0x008B	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
     3b2:	8f 7d       	andi	r24, 0xDF	; 223
     3b4:	f9 cf       	rjmp	.-14     	; 0x3a8 <turnOffPWM+0x4c>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:126
        break;
    #endif
    #if defined(TCCR3A) && defined(COM3C1)
      case TIMER3C:
        TCCR3A &= ~_BV(COM3C1);
     3b6:	80 91 8b 00 	lds	r24, 0x008B	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
     3ba:	87 7f       	andi	r24, 0xF7	; 247
     3bc:	f5 cf       	rjmp	.-22     	; 0x3a8 <turnOffPWM+0x4c>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:171
    #if defined(TCCR0) && defined(COM01)
      case TIMER0:
        TCCR0 &= ~_BV(COM01);
        break;
      case TIMER0A:
        TCCR0 &= ~_BV(COM01);
     3be:	83 b7       	in	r24, 0x33	; 51
     3c0:	8f 7d       	andi	r24, 0xDF	; 223
     3c2:	83 bf       	out	0x33, r24	; 51
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:185
      case TIMER0B:
        TCCR0A &= ~_BV(COM0B1);
        break;
    #endif
  }
}
     3c4:	08 95       	ret

000003c6 <digitalRead>:
digitalRead():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:215

  SREG = oldSREG;
}

int digitalRead(uint8_t pin)
{
     3c6:	cf 93       	push	r28
     3c8:	df 93       	push	r29
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:216
  uint8_t timer = digitalPinToTimer(pin);
     3ca:	28 2f       	mov	r18, r24
     3cc:	30 e0       	ldi	r19, 0x00	; 0
     3ce:	f9 01       	movw	r30, r18
     3d0:	ea 5d       	subi	r30, 0xDA	; 218
     3d2:	fe 4f       	sbci	r31, 0xFE	; 254
     3d4:	84 91       	lpm	r24, Z
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:217
  uint8_t bit = digitalPinToBitMask(pin);
     3d6:	f9 01       	movw	r30, r18
     3d8:	ef 50       	subi	r30, 0x0F	; 15
     3da:	ff 4f       	sbci	r31, 0xFF	; 255
     3dc:	d4 91       	lpm	r29, Z
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:218
  uint8_t port = digitalPinToPort(pin);
     3de:	f9 01       	movw	r30, r18
     3e0:	e4 54       	subi	r30, 0x44	; 68
     3e2:	ff 4f       	sbci	r31, 0xFF	; 255
     3e4:	c4 91       	lpm	r28, Z
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:220

  if (port == NOT_A_PIN) return LOW;
     3e6:	cc 23       	and	r28, r28
     3e8:	a1 f0       	breq	.+40     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:224

  // If the pin that support PWM output, we need to turn it off
  // before getting a digital reading.
  if (timer != NOT_ON_TIMER) turnOffPWM(timer);
     3ea:	81 11       	cpse	r24, r1
     3ec:	0e 94 ae 01 	call	0x35c	; 0x35c <turnOffPWM>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:226

  if (*portInputRegister(port) & bit) return HIGH;
     3f0:	ec 2f       	mov	r30, r28
     3f2:	f0 e0       	ldi	r31, 0x00	; 0
     3f4:	ee 0f       	add	r30, r30
     3f6:	ff 1f       	adc	r31, r31
     3f8:	e4 55       	subi	r30, 0x54	; 84
     3fa:	ff 4f       	sbci	r31, 0xFF	; 255
     3fc:	a5 91       	lpm	r26, Z+
     3fe:	b4 91       	lpm	r27, Z
     400:	ec 91       	ld	r30, X
     402:	ed 23       	and	r30, r29
     404:	81 e0       	ldi	r24, 0x01	; 1
     406:	90 e0       	ldi	r25, 0x00	; 0
     408:	09 f4       	brne	.+2      	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
     40a:	80 e0       	ldi	r24, 0x00	; 0
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:228
  return LOW;
}
     40c:	df 91       	pop	r29
     40e:	cf 91       	pop	r28
     410:	08 95       	ret
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:220
{
  uint8_t timer = digitalPinToTimer(pin);
  uint8_t bit = digitalPinToBitMask(pin);
  uint8_t port = digitalPinToPort(pin);

  if (port == NOT_A_PIN) return LOW;
     412:	80 e0       	ldi	r24, 0x00	; 0
     414:	90 e0       	ldi	r25, 0x00	; 0
     416:	fa cf       	rjmp	.-12     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>

00000418 <digitalWrite>:
digitalWrite():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:188
    #endif
  }
}

void digitalWrite(uint8_t pin, uint8_t val)
{
     418:	1f 93       	push	r17
     41a:	cf 93       	push	r28
     41c:	df 93       	push	r29
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:189
  uint8_t timer = digitalPinToTimer(pin);
     41e:	28 2f       	mov	r18, r24
     420:	30 e0       	ldi	r19, 0x00	; 0
     422:	f9 01       	movw	r30, r18
     424:	ea 5d       	subi	r30, 0xDA	; 218
     426:	fe 4f       	sbci	r31, 0xFE	; 254
     428:	84 91       	lpm	r24, Z
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:190
  uint8_t bit = digitalPinToBitMask(pin);
     42a:	f9 01       	movw	r30, r18
     42c:	ef 50       	subi	r30, 0x0F	; 15
     42e:	ff 4f       	sbci	r31, 0xFF	; 255
     430:	d4 91       	lpm	r29, Z
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:191
  uint8_t port = digitalPinToPort(pin);
     432:	f9 01       	movw	r30, r18
     434:	e4 54       	subi	r30, 0x44	; 68
     436:	ff 4f       	sbci	r31, 0xFF	; 255
     438:	c4 91       	lpm	r28, Z
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:194
  volatile uint8_t *out;

  if (port == NOT_A_PIN) return;
     43a:	cc 23       	and	r28, r28
     43c:	a9 f0       	breq	.+42     	; 0x468 <digitalWrite+0x50>
     43e:	16 2f       	mov	r17, r22
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:198

  // If the pin that support PWM output, we need to turn it off
  // before doing a digital write.
  if (timer != NOT_ON_TIMER) turnOffPWM(timer);
     440:	81 11       	cpse	r24, r1
     442:	0e 94 ae 01 	call	0x35c	; 0x35c <turnOffPWM>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:200

  out = portOutputRegister(port);
     446:	ec 2f       	mov	r30, r28
     448:	f0 e0       	ldi	r31, 0x00	; 0
     44a:	ee 0f       	add	r30, r30
     44c:	ff 1f       	adc	r31, r31
     44e:	e4 56       	subi	r30, 0x64	; 100
     450:	ff 4f       	sbci	r31, 0xFF	; 255
     452:	a5 91       	lpm	r26, Z+
     454:	b4 91       	lpm	r27, Z
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:202

  uint8_t oldSREG = SREG;
     456:	8f b7       	in	r24, 0x3f	; 63
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:203
  cli();
     458:	f8 94       	cli
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:206

  if (val == LOW) {
    *out &= ~bit;
     45a:	ec 91       	ld	r30, X
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:205
  out = portOutputRegister(port);

  uint8_t oldSREG = SREG;
  cli();

  if (val == LOW) {
     45c:	11 11       	cpse	r17, r1
     45e:	08 c0       	rjmp	.+16     	; 0x470 <digitalWrite+0x58>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:206
    *out &= ~bit;
     460:	d0 95       	com	r29
     462:	de 23       	and	r29, r30
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:208
  } else {
    *out |= bit;
     464:	dc 93       	st	X, r29
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:211
  }

  SREG = oldSREG;
     466:	8f bf       	out	0x3f, r24	; 63
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:212
}
     468:	df 91       	pop	r29
     46a:	cf 91       	pop	r28
     46c:	1f 91       	pop	r17
     46e:	08 95       	ret
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:208
  cli();

  if (val == LOW) {
    *out &= ~bit;
  } else {
    *out |= bit;
     470:	de 2b       	or	r29, r30
     472:	f8 cf       	rjmp	.-16     	; 0x464 <digitalWrite+0x4c>

00000474 <pinMode>:
pinMode():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:30
#define ARDUINO_MAIN
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
{
     474:	cf 93       	push	r28
     476:	df 93       	push	r29
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:31
  uint8_t bit = digitalPinToBitMask(pin);
     478:	90 e0       	ldi	r25, 0x00	; 0
     47a:	fc 01       	movw	r30, r24
     47c:	ef 50       	subi	r30, 0x0F	; 15
     47e:	ff 4f       	sbci	r31, 0xFF	; 255
     480:	24 91       	lpm	r18, Z
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:32
  uint8_t port = digitalPinToPort(pin);
     482:	84 54       	subi	r24, 0x44	; 68
     484:	9f 4f       	sbci	r25, 0xFF	; 255
     486:	fc 01       	movw	r30, r24
     488:	84 91       	lpm	r24, Z
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:35
  volatile uint8_t *reg, *out;

  if (port == NOT_A_PIN) return;
     48a:	88 23       	and	r24, r24
     48c:	c9 f0       	breq	.+50     	; 0x4c0 <pinMode+0x4c>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:38

  // JWS: can I let the optimizer do this?
  reg = portModeRegister(port);
     48e:	90 e0       	ldi	r25, 0x00	; 0
     490:	88 0f       	add	r24, r24
     492:	99 1f       	adc	r25, r25
     494:	fc 01       	movw	r30, r24
     496:	e4 57       	subi	r30, 0x74	; 116
     498:	ff 4f       	sbci	r31, 0xFF	; 255
     49a:	a5 91       	lpm	r26, Z+
     49c:	b4 91       	lpm	r27, Z
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:39
  out = portOutputRegister(port);
     49e:	fc 01       	movw	r30, r24
     4a0:	e4 56       	subi	r30, 0x64	; 100
     4a2:	ff 4f       	sbci	r31, 0xFF	; 255
     4a4:	c5 91       	lpm	r28, Z+
     4a6:	d4 91       	lpm	r29, Z
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:41

  if (mode == INPUT) { 
     4a8:	61 11       	cpse	r22, r1
     4aa:	0d c0       	rjmp	.+26     	; 0x4c6 <pinMode+0x52>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:42
    uint8_t oldSREG = SREG;
     4ac:	9f b7       	in	r25, 0x3f	; 63
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:43
    cli();
     4ae:	f8 94       	cli
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:44
    *reg &= ~bit;
     4b0:	8c 91       	ld	r24, X
     4b2:	20 95       	com	r18
     4b4:	82 23       	and	r24, r18
     4b6:	8c 93       	st	X, r24
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:45
    *out &= ~bit;
     4b8:	88 81       	ld	r24, Y
     4ba:	28 23       	and	r18, r24
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:51
    SREG = oldSREG;
  } else if (mode == INPUT_PULLUP) {
    uint8_t oldSREG = SREG;
    cli();
    *reg &= ~bit;
    *out |= bit;
     4bc:	28 83       	st	Y, r18
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:52
    SREG = oldSREG;
     4be:	9f bf       	out	0x3f, r25	; 63
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:59
    uint8_t oldSREG = SREG;
    cli();
    *reg |= bit;
    SREG = oldSREG;
  }
}
     4c0:	df 91       	pop	r29
     4c2:	cf 91       	pop	r28
     4c4:	08 95       	ret
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:47
    uint8_t oldSREG = SREG;
    cli();
    *reg &= ~bit;
    *out &= ~bit;
    SREG = oldSREG;
  } else if (mode == INPUT_PULLUP) {
     4c6:	62 30       	cpi	r22, 0x02	; 2
     4c8:	51 f4       	brne	.+20     	; 0x4de <pinMode+0x6a>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:48
    uint8_t oldSREG = SREG;
     4ca:	9f b7       	in	r25, 0x3f	; 63
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:49
    cli();
     4cc:	f8 94       	cli
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:50
    *reg &= ~bit;
     4ce:	3c 91       	ld	r19, X
     4d0:	82 2f       	mov	r24, r18
     4d2:	80 95       	com	r24
     4d4:	83 23       	and	r24, r19
     4d6:	8c 93       	st	X, r24
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:51
    *out |= bit;
     4d8:	e8 81       	ld	r30, Y
     4da:	2e 2b       	or	r18, r30
     4dc:	ef cf       	rjmp	.-34     	; 0x4bc <pinMode+0x48>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:54
    SREG = oldSREG;
  } else {
    uint8_t oldSREG = SREG;
     4de:	8f b7       	in	r24, 0x3f	; 63
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:55
    cli();
     4e0:	f8 94       	cli
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:56
    *reg |= bit;
     4e2:	ec 91       	ld	r30, X
     4e4:	2e 2b       	or	r18, r30
     4e6:	2c 93       	st	X, r18
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_digital.c:57
    SREG = oldSREG;
     4e8:	8f bf       	out	0x3f, r24	; 63
     4ea:	ea cf       	rjmp	.-44     	; 0x4c0 <pinMode+0x4c>

000004ec <analogWrite>:
analogWrite():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_analog.c:95
// Right now, PWM output only works on the pins with
// hardware support.  These are defined in the appropriate
// pins_*.c file.  For the rest of the pins, we default
// to digital output.
void analogWrite(uint8_t pin, int val)
{
     4ec:	1f 93       	push	r17
     4ee:	cf 93       	push	r28
     4f0:	df 93       	push	r29
     4f2:	18 2f       	mov	r17, r24
     4f4:	eb 01       	movw	r28, r22
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_analog.c:101
  // We need to make sure the PWM output is enabled for those pins
  // that support it, as we turn it off when digitally reading or
  // writing with them.  Also, make sure the pin is in output mode
  // for consistenty with Wiring, which doesn't require a pinMode
  // call for the analog output pins.
  pinMode(pin, OUTPUT);
     4f6:	61 e0       	ldi	r22, 0x01	; 1
     4f8:	0e 94 3a 02 	call	0x474	; 0x474 <pinMode>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_analog.c:102
  if (val == 0)
     4fc:	20 97       	sbiw	r28, 0x00	; 0
     4fe:	39 f4       	brne	.+14     	; 0x50e <analogWrite+0x22>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_analog.c:104
  {
    digitalWrite(pin, LOW);
     500:	60 e0       	ldi	r22, 0x00	; 0
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_analog.c:108
  }
  else if (val == 255)
  {
    digitalWrite(pin, HIGH);
     502:	81 2f       	mov	r24, r17
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_analog.c:299
        } else {
          digitalWrite(pin, HIGH);
        }
    }
  }
}
     504:	df 91       	pop	r29
     506:	cf 91       	pop	r28
     508:	1f 91       	pop	r17
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_analog.c:108
  {
    digitalWrite(pin, LOW);
  }
  else if (val == 255)
  {
    digitalWrite(pin, HIGH);
     50a:	0c 94 0c 02 	jmp	0x418	; 0x418 <digitalWrite>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_analog.c:106
  pinMode(pin, OUTPUT);
  if (val == 0)
  {
    digitalWrite(pin, LOW);
  }
  else if (val == 255)
     50e:	cf 3f       	cpi	r28, 0xFF	; 255
     510:	d1 05       	cpc	r29, r1
     512:	11 f4       	brne	.+4      	; 0x518 <analogWrite+0x2c>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_analog.c:108
  {
    digitalWrite(pin, HIGH);
     514:	61 e0       	ldi	r22, 0x01	; 1
     516:	f5 cf       	rjmp	.-22     	; 0x502 <analogWrite+0x16>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_analog.c:112
  }
  else
  {
    switch(digitalPinToTimer(pin))
     518:	e1 2f       	mov	r30, r17
     51a:	f0 e0       	ldi	r31, 0x00	; 0
     51c:	ea 5d       	subi	r30, 0xDA	; 218
     51e:	fe 4f       	sbci	r31, 0xFE	; 254
     520:	e4 91       	lpm	r30, Z
     522:	e1 50       	subi	r30, 0x01	; 1
     524:	ec 30       	cpi	r30, 0x0C	; 12
     526:	08 f0       	brcs	.+2      	; 0x52a <analogWrite+0x3e>
     528:	50 c0       	rjmp	.+160    	; 0x5ca <analogWrite+0xde>
     52a:	f0 e0       	ldi	r31, 0x00	; 0
     52c:	e6 56       	subi	r30, 0x66	; 102
     52e:	fd 4f       	sbci	r31, 0xFD	; 253
     530:	0c 94 10 47 	jmp	0x8e20	; 0x8e20 <__tablejump2__>
     534:	a6 02       	muls	r26, r22
     536:	a6 02       	muls	r26, r22
     538:	e5 02       	muls	r30, r21
     53a:	ae 02       	muls	r26, r30
     53c:	b4 02       	muls	r27, r20
     53e:	ba 02       	muls	r27, r26
     540:	c2 02       	muls	r28, r18
     542:	e5 02       	muls	r30, r21
     544:	e5 02       	muls	r30, r21
     546:	c7 02       	muls	r28, r23
     548:	d1 02       	muls	r29, r17
     54a:	db 02       	muls	r29, r27
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_analog.c:124
        break;
        
      case TIMER0A:
        // connect pwm to pin on timer 0
        // this combination is for the ATmega8535, ATmega16 and ATmega32
        TCCR0 |= _BV(COM01);
     54c:	83 b7       	in	r24, 0x33	; 51
     54e:	80 62       	ori	r24, 0x20	; 32
     550:	83 bf       	out	0x33, r24	; 51
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_analog.c:125
        OCR0 = val; // set pwm duty
     552:	c1 bf       	out	0x31, r28	; 49
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_analog.c:299
        } else {
          digitalWrite(pin, HIGH);
        }
    }
  }
}
     554:	df 91       	pop	r29
     556:	cf 91       	pop	r28
     558:	1f 91       	pop	r17
     55a:	08 95       	ret
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_analog.c:148
      #endif

      #if defined(TCCR1A) && defined(COM1A1)
      case TIMER1A:
        // connect pwm to pin on timer 1, channel A
        TCCR1A |= _BV(COM1A1);
     55c:	8f b5       	in	r24, 0x2f	; 47
     55e:	80 68       	ori	r24, 0x80	; 128
     560:	8f bd       	out	0x2f, r24	; 47
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_analog.c:149
        OCR1A = val; // set pwm duty
     562:	db bd       	out	0x2b, r29	; 43
     564:	ca bd       	out	0x2a, r28	; 42
     566:	f6 cf       	rjmp	.-20     	; 0x554 <analogWrite+0x68>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_analog.c:156
      #endif

      #if defined(TCCR1A) && defined(COM1B1)
      case TIMER1B:
        // connect pwm to pin on timer 1, channel B
        TCCR1A |= _BV(COM1B1);
     568:	8f b5       	in	r24, 0x2f	; 47
     56a:	80 62       	ori	r24, 0x20	; 32
     56c:	8f bd       	out	0x2f, r24	; 47
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_analog.c:157
        OCR1B = val; // set pwm duty
     56e:	d9 bd       	out	0x29, r29	; 41
     570:	c8 bd       	out	0x28, r28	; 40
     572:	f0 cf       	rjmp	.-32     	; 0x554 <analogWrite+0x68>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_analog.c:164
      #endif

      #if defined(TCCR1A) && defined(COM1C1)
      case TIMER1C:
        // connect pwm to pin on timer 1, channel B
        TCCR1A |= _BV(COM1C1);
     574:	8f b5       	in	r24, 0x2f	; 47
     576:	88 60       	ori	r24, 0x08	; 8
     578:	8f bd       	out	0x2f, r24	; 47
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_analog.c:165
        OCR1C = val; // set pwm duty
     57a:	d0 93 79 00 	sts	0x0079, r29	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     57e:	c0 93 78 00 	sts	0x0078, r28	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     582:	e8 cf       	rjmp	.-48     	; 0x554 <analogWrite+0x68>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_analog.c:172
      #endif

      #if defined(TCCR2) && defined(COM21)
      case TIMER2:
        // connect pwm to pin on timer 2
        TCCR2 |= _BV(COM21);
     584:	85 b5       	in	r24, 0x25	; 37
     586:	80 62       	ori	r24, 0x20	; 32
     588:	85 bd       	out	0x25, r24	; 37
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_analog.c:173
        OCR2 = val; // set pwm duty
     58a:	c3 bd       	out	0x23, r28	; 35
     58c:	e3 cf       	rjmp	.-58     	; 0x554 <analogWrite+0x68>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_analog.c:196
      #endif

      #if defined(TCCR3A) && defined(COM3A1)
      case TIMER3A:
        // connect pwm to pin on timer 3, channel A
        TCCR3A |= _BV(COM3A1);
     58e:	80 91 8b 00 	lds	r24, 0x008B	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
     592:	80 68       	ori	r24, 0x80	; 128
     594:	80 93 8b 00 	sts	0x008B, r24	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_analog.c:197
        OCR3A = val; // set pwm duty
     598:	d0 93 87 00 	sts	0x0087, r29	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
     59c:	c0 93 86 00 	sts	0x0086, r28	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
     5a0:	d9 cf       	rjmp	.-78     	; 0x554 <analogWrite+0x68>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_analog.c:209
        #if defined(__AVR_ATmega328PB__) // Fix 324PB/328PB silicon bug
          PORTD |= _BV(PD2);
        #elif defined(__AVR_ATmega324PB__)
          PORTB |= _BV(PB7);
        #endif
        TCCR3A |= _BV(COM3B1);
     5a2:	80 91 8b 00 	lds	r24, 0x008B	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
     5a6:	80 62       	ori	r24, 0x20	; 32
     5a8:	80 93 8b 00 	sts	0x008B, r24	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_analog.c:210
        OCR3B = val; // set pwm duty
     5ac:	d0 93 85 00 	sts	0x0085, r29	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     5b0:	c0 93 84 00 	sts	0x0084, r28	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     5b4:	cf cf       	rjmp	.-98     	; 0x554 <analogWrite+0x68>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_analog.c:217
      #endif

      #if defined(TCCR3A) && defined(COM3C1)
      case TIMER3C:
        // connect pwm to pin on timer 3, channel C
        TCCR3A |= _BV(COM3C1);
     5b6:	80 91 8b 00 	lds	r24, 0x008B	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
     5ba:	88 60       	ori	r24, 0x08	; 8
     5bc:	80 93 8b 00 	sts	0x008B, r24	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_analog.c:218
        OCR3C = val; // set pwm duty
     5c0:	d0 93 83 00 	sts	0x0083, r29	; 0x800083 <__TEXT_REGION_LENGTH__+0x7e0083>
     5c4:	c0 93 82 00 	sts	0x0082, r28	; 0x800082 <__TEXT_REGION_LENGTH__+0x7e0082>
     5c8:	c5 cf       	rjmp	.-118    	; 0x554 <analogWrite+0x68>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_analog.c:292
        break;
      #endif

      case NOT_ON_TIMER:
      default:
        if (val < 128) {
     5ca:	c0 38       	cpi	r28, 0x80	; 128
     5cc:	d1 05       	cpc	r29, r1
     5ce:	0c f0       	brlt	.+2      	; 0x5d2 <analogWrite+0xe6>
     5d0:	a1 cf       	rjmp	.-190    	; 0x514 <analogWrite+0x28>
     5d2:	96 cf       	rjmp	.-212    	; 0x500 <analogWrite+0x14>

000005d4 <analogRead>:
analogRead():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_analog.c:49
int analogRead(uint8_t pin)
{

// Macro located in the pins_arduino.h file
#ifdef analogPinToChannel
  pin = analogPinToChannel(pin);
     5d4:	8d 52       	subi	r24, 0x2D	; 45
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_analog.c:68
  
  // set the analog reference (high two bits of ADMUX) and select the
  // channel (low 4 bits).  this also sets ADLAR (left-adjust result)
  // to 0 (the default).
#if defined(ADMUX)
  ADMUX = (analog_reference << 6) | (pin & 0x07);
     5d6:	80 64       	ori	r24, 0x40	; 64
     5d8:	87 b9       	out	0x07, r24	; 7
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_analog.c:76
  // without a delay, we seem to read from the wrong channel
  //delay(1);

#if defined(ADCSRA) && defined(ADC)
  // start the conversion
  ADCSRA |= _BV(ADSC);
     5da:	36 9a       	sbi	0x06, 6	; 6
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_analog.c:79

  // ADSC is cleared when the conversion finishes
  while (ADCSRA & _BV(ADSC)) {};
     5dc:	36 99       	sbic	0x06, 6	; 6
     5de:	fe cf       	rjmp	.-4      	; 0x5dc <analogRead+0x8>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_analog.c:83

  // ADC macro takes care of reading ADC register.
 	// avr-gcc implements the proper reading order: ADCL is read first.
 	return ADC;
     5e0:	84 b1       	in	r24, 0x04	; 4
     5e2:	95 b1       	in	r25, 0x05	; 5
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_analog.c:87
#else
  return 0;
#endif
}
     5e4:	08 95       	ret

000005e6 <delayMicroseconds>:
delayMicroseconds():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:619
  us -= 7; // = 2 cycles

#elif F_CPU >= 16000000L
  // for a one-microsecond delay, simply return.  the overhead
  // of the function call takes 14 (16) cycles, which is 1 us
  if (us <= 1) return; //  = 3 cycles, (4 when true)
     5e6:	81 30       	cpi	r24, 0x01	; 1
     5e8:	91 05       	cpc	r25, r1
     5ea:	39 f0       	breq	.+14     	; 0x5fa <delayMicroseconds+0x14>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:624

  // the following loop takes 1/4 of a microsecond (4 cycles)
  // per iteration, so execute it four times for each microsecond of
  // delay requested.
  us <<= 2; // x4 us, = 4 cycles
     5ec:	88 0f       	add	r24, r24
     5ee:	99 1f       	adc	r25, r25
     5f0:	88 0f       	add	r24, r24
     5f2:	99 1f       	adc	r25, r25
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:629

  // account for the time taken in the preceeding commands.
  // we just burned 19 (21) cycles above, remove 5, (5*4=20)
  // to 2nd us is at least 8 so we can substract 5
  us -= 5; // = 2 cycles,
     5f4:	05 97       	sbiw	r24, 0x05	; 5
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:929
  us >>= 2; // us div 4, = 4 cycles

#endif

  // busy wait
  __asm__ __volatile__ (
     5f6:	01 97       	sbiw	r24, 0x01	; 1
     5f8:	f1 f7       	brne	.-4      	; 0x5f6 <delayMicroseconds+0x10>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:939
    "   brne 1b"                     // 2 cycles
    : /* no outputs */
    : "w" (us)
  );
  // return = 4 cycles
}
     5fa:	08 95       	ret

000005fc <micros>:
micros():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:237
  unsigned char f; // temporary storage for millis fraction counter
  unsigned char q = 0; // record whether an overflow is flagged
#endif
  // t will be the number where the timer0 counter stopped
  uint8_t t;
  uint8_t oldSREG = SREG;
     5fc:	3f b7       	in	r19, 0x3f	; 63
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:240

  // Stop all interrupts
  cli();
     5fe:	f8 94       	cli
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:247
#ifdef CORRECT_EXACT_MICROS
  // combine exact millisec and 8usec counters
  m = timer0_millis;
  f = timer0_fract;
#else
  m = timer0_overflow_count;
     600:	80 91 a8 09 	lds	r24, 0x09A8	; 0x8009a8 <timer0_overflow_count>
     604:	90 91 a9 09 	lds	r25, 0x09A9	; 0x8009a9 <timer0_overflow_count+0x1>
     608:	a0 91 aa 09 	lds	r26, 0x09AA	; 0x8009aa <timer0_overflow_count+0x2>
     60c:	b0 91 ab 09 	lds	r27, 0x09AB	; 0x8009ab <timer0_overflow_count+0x3>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:252
#endif

  // TCNT0 : The Timer Counter Register
#if defined(TCNT0)
  t = TCNT0;
     610:	22 b7       	in	r18, 0x32	; 50
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:268
    m++;
#else
    q = 1;
#endif
#else
  if ((TIFR & _BV(TOV0)) && (t < 255))
     612:	06 b6       	in	r0, 0x36	; 54
     614:	00 fe       	sbrs	r0, 0
     616:	05 c0       	rjmp	.+10     	; 0x622 <micros+0x26>
     618:	2f 3f       	cpi	r18, 0xFF	; 255
     61a:	19 f0       	breq	.+6      	; 0x622 <micros+0x26>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:270
#ifndef CORRECT_EXACT_MICROS
    m++;
     61c:	01 96       	adiw	r24, 0x01	; 1
     61e:	a1 1d       	adc	r26, r1
     620:	b1 1d       	adc	r27, r1
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:276
#else
    q = 1;
#endif
#endif
  // Restore SREG
  SREG = oldSREG;
     622:	3f bf       	out	0x3f, r19	; 63
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:292
      ((t * MICROSECONDS_PER_TIMER0_OVERFLOW) >> 8);
  return q ? m + MICROSECONDS_PER_TIMER0_OVERFLOW : m;
#elif 1
  /* All power-of-two Megahertz frequencies enter here, as well as 12.8 MHz.
     We only end up here if right shift before multiplication is exact. */
  return ((m << 8) + t) * (MICROSECONDS_PER_TIMER0_OVERFLOW >> 8);
     624:	ba 2f       	mov	r27, r26
     626:	a9 2f       	mov	r26, r25
     628:	98 2f       	mov	r25, r24
     62a:	88 27       	eor	r24, r24
     62c:	bc 01       	movw	r22, r24
     62e:	cd 01       	movw	r24, r26
     630:	62 0f       	add	r22, r18
     632:	71 1d       	adc	r23, r1
     634:	81 1d       	adc	r24, r1
     636:	91 1d       	adc	r25, r1
     638:	42 e0       	ldi	r20, 0x02	; 2
     63a:	66 0f       	add	r22, r22
     63c:	77 1f       	adc	r23, r23
     63e:	88 1f       	adc	r24, r24
     640:	99 1f       	adc	r25, r25
     642:	4a 95       	dec	r20
     644:	d1 f7       	brne	.-12     	; 0x63a <micros+0x3e>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:393
  // m & t are multiplied by 4 (since it was already multiplied by 256)
  // t is multiplied by 4
  return ((m << 8) + t) * (64 / clockCyclesPerMicrosecond());
#endif
#endif // 0
}
     646:	08 95       	ret

00000648 <delay>:
delay():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:396

void delay(unsigned long ms)
{
     648:	8f 92       	push	r8
     64a:	9f 92       	push	r9
     64c:	af 92       	push	r10
     64e:	bf 92       	push	r11
     650:	cf 92       	push	r12
     652:	df 92       	push	r13
     654:	ef 92       	push	r14
     656:	ff 92       	push	r15
     658:	4b 01       	movw	r8, r22
     65a:	5c 01       	movw	r10, r24
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:397
  unsigned long start = micros();
     65c:	0e 94 fe 02 	call	0x5fc	; 0x5fc <micros>
     660:	6b 01       	movw	r12, r22
     662:	7c 01       	movw	r14, r24
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:401

  while (ms > 0UL) {
    yield();
    while (ms > 0UL && (micros() - start) >= 1000UL) {
     664:	0e 94 fe 02 	call	0x5fc	; 0x5fc <micros>
     668:	6c 19       	sub	r22, r12
     66a:	7d 09       	sbc	r23, r13
     66c:	8e 09       	sbc	r24, r14
     66e:	9f 09       	sbc	r25, r15
     670:	68 3e       	cpi	r22, 0xE8	; 232
     672:	73 40       	sbci	r23, 0x03	; 3
     674:	81 05       	cpc	r24, r1
     676:	91 05       	cpc	r25, r1
     678:	a8 f3       	brcs	.-22     	; 0x664 <delay+0x1c>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:402
      ms--;
     67a:	21 e0       	ldi	r18, 0x01	; 1
     67c:	82 1a       	sub	r8, r18
     67e:	91 08       	sbc	r9, r1
     680:	a1 08       	sbc	r10, r1
     682:	b1 08       	sbc	r11, r1
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:403
      start += 1000UL;
     684:	88 ee       	ldi	r24, 0xE8	; 232
     686:	c8 0e       	add	r12, r24
     688:	83 e0       	ldi	r24, 0x03	; 3
     68a:	d8 1e       	adc	r13, r24
     68c:	e1 1c       	adc	r14, r1
     68e:	f1 1c       	adc	r15, r1
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:401
{
  unsigned long start = micros();

  while (ms > 0UL) {
    yield();
    while (ms > 0UL && (micros() - start) >= 1000UL) {
     690:	81 14       	cp	r8, r1
     692:	91 04       	cpc	r9, r1
     694:	a1 04       	cpc	r10, r1
     696:	b1 04       	cpc	r11, r1
     698:	29 f7       	brne	.-54     	; 0x664 <delay+0x1c>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:406
      ms--;
      start += 1000UL;
    }
  }
}
     69a:	ff 90       	pop	r15
     69c:	ef 90       	pop	r14
     69e:	df 90       	pop	r13
     6a0:	cf 90       	pop	r12
     6a2:	bf 90       	pop	r11
     6a4:	af 90       	pop	r10
     6a6:	9f 90       	pop	r9
     6a8:	8f 90       	pop	r8
     6aa:	08 95       	ret

000006ac <TwoWire::onRequestService()>:
onRequestService():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:368
  // !!! this will kill any pending pre-master sendTo() activity
  txBufferIndex = 0;
  txBufferLength = 0;
  // alert user program
  user_onRequest();
}
     6ac:	08 95       	ret

000006ae <TwoWire::onReceiveService(unsigned char*, int)>:
onReceiveService():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:353
  // set rx iterator vars
  rxBufferIndex = 0;
  rxBufferLength = numBytes;
  // alert user program
  user_onReceive(numBytes);
}
     6ae:	08 95       	ret

000006b0 <Print::write(unsigned char const*, unsigned int)>:
write():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:35

// Public Methods //////////////////////////////////////////////////////////////

/* default implementation: may be overridden */
size_t Print::write(const uint8_t *buffer, size_t size)
{
     6b0:	af 92       	push	r10
     6b2:	bf 92       	push	r11
     6b4:	cf 92       	push	r12
     6b6:	df 92       	push	r13
     6b8:	ef 92       	push	r14
     6ba:	ff 92       	push	r15
     6bc:	0f 93       	push	r16
     6be:	1f 93       	push	r17
     6c0:	cf 93       	push	r28
     6c2:	df 93       	push	r29
     6c4:	6c 01       	movw	r12, r24
     6c6:	7b 01       	movw	r14, r22
     6c8:	8b 01       	movw	r16, r22
     6ca:	04 0f       	add	r16, r20
     6cc:	15 1f       	adc	r17, r21
     6ce:	eb 01       	movw	r28, r22
     6d0:	5e 01       	movw	r10, r28
     6d2:	ae 18       	sub	r10, r14
     6d4:	bf 08       	sbc	r11, r15
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:37
  size_t n = 0;
  while (size--) {
     6d6:	c0 17       	cp	r28, r16
     6d8:	d1 07       	cpc	r29, r17
     6da:	59 f0       	breq	.+22     	; 0x6f2 <Print::write(unsigned char const*, unsigned int)+0x42>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:38
    if (write(*buffer++)) n++;
     6dc:	69 91       	ld	r22, Y+
     6de:	d6 01       	movw	r26, r12
     6e0:	ed 91       	ld	r30, X+
     6e2:	fc 91       	ld	r31, X
     6e4:	01 90       	ld	r0, Z+
     6e6:	f0 81       	ld	r31, Z
     6e8:	e0 2d       	mov	r30, r0
     6ea:	c6 01       	movw	r24, r12
     6ec:	09 95       	icall
     6ee:	89 2b       	or	r24, r25
     6f0:	79 f7       	brne	.-34     	; 0x6d0 <Print::write(unsigned char const*, unsigned int)+0x20>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:42
    else break;
  }
  return n;
}
     6f2:	c5 01       	movw	r24, r10
     6f4:	df 91       	pop	r29
     6f6:	cf 91       	pop	r28
     6f8:	1f 91       	pop	r17
     6fa:	0f 91       	pop	r16
     6fc:	ff 90       	pop	r15
     6fe:	ef 90       	pop	r14
     700:	df 90       	pop	r13
     702:	cf 90       	pop	r12
     704:	bf 90       	pop	r11
     706:	af 90       	pop	r10
     708:	08 95       	ret

0000070a <HardwareSerial::availableForWrite()>:
availableForWrite():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:195
{
  tx_buffer_index_t head;
  tx_buffer_index_t tail;

  TX_BUFFER_ATOMIC {
    head = _tx_buffer_head;
     70a:	fc 01       	movw	r30, r24
     70c:	53 8d       	ldd	r21, Z+27	; 0x1b
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:196
    tail = _tx_buffer_tail;
     70e:	44 8d       	ldd	r20, Z+28	; 0x1c
     710:	25 2f       	mov	r18, r21
     712:	30 e0       	ldi	r19, 0x00	; 0
     714:	84 2f       	mov	r24, r20
     716:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:198
  }
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
     718:	82 1b       	sub	r24, r18
     71a:	93 0b       	sbc	r25, r19
     71c:	54 17       	cp	r21, r20
     71e:	10 f0       	brcs	.+4      	; 0x724 <HardwareSerial::availableForWrite()+0x1a>
     720:	cf 96       	adiw	r24, 0x3f	; 63
     722:	08 95       	ret
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:199
  return tail - head - 1;
     724:	01 97       	sbiw	r24, 0x01	; 1
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:200
}
     726:	08 95       	ret

00000728 <HardwareSerial::read()>:
read():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:178
    return _rx_buffer[_rx_buffer_tail];
  }
}

int HardwareSerial::read(void)
{
     728:	fc 01       	movw	r30, r24
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:180
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail) {
     72a:	91 8d       	ldd	r25, Z+25	; 0x19
     72c:	82 8d       	ldd	r24, Z+26	; 0x1a
     72e:	98 17       	cp	r25, r24
     730:	61 f0       	breq	.+24     	; 0x74a <HardwareSerial::read()+0x22>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:183
    return -1;
  } else {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
     732:	a2 8d       	ldd	r26, Z+26	; 0x1a
     734:	ae 0f       	add	r26, r30
     736:	bf 2f       	mov	r27, r31
     738:	b1 1d       	adc	r27, r1
     73a:	5d 96       	adiw	r26, 0x1d	; 29
     73c:	8c 91       	ld	r24, X
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:184
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
     73e:	92 8d       	ldd	r25, Z+26	; 0x1a
     740:	9f 5f       	subi	r25, 0xFF	; 255
     742:	9f 73       	andi	r25, 0x3F	; 63
     744:	92 8f       	std	Z+26, r25	; 0x1a
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:185
    return c;
     746:	90 e0       	ldi	r25, 0x00	; 0
     748:	08 95       	ret
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:181

int HardwareSerial::read(void)
{
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail) {
    return -1;
     74a:	8f ef       	ldi	r24, 0xFF	; 255
     74c:	9f ef       	ldi	r25, 0xFF	; 255
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:187
  } else {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
    return c;
  }
}
     74e:	08 95       	ret

00000750 <HardwareSerial::peek()>:
peek():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:169
{
  return ((unsigned int)(SERIAL_RX_BUFFER_SIZE + _rx_buffer_head - _rx_buffer_tail)) % SERIAL_RX_BUFFER_SIZE;
}

int HardwareSerial::peek(void)
{
     750:	fc 01       	movw	r30, r24
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:170
  if (_rx_buffer_head == _rx_buffer_tail) {
     752:	91 8d       	ldd	r25, Z+25	; 0x19
     754:	82 8d       	ldd	r24, Z+26	; 0x1a
     756:	98 17       	cp	r25, r24
     758:	31 f0       	breq	.+12     	; 0x766 <HardwareSerial::peek()+0x16>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:173
    return -1;
  } else {
    return _rx_buffer[_rx_buffer_tail];
     75a:	82 8d       	ldd	r24, Z+26	; 0x1a
     75c:	e8 0f       	add	r30, r24
     75e:	f1 1d       	adc	r31, r1
     760:	85 8d       	ldd	r24, Z+29	; 0x1d
     762:	90 e0       	ldi	r25, 0x00	; 0
     764:	08 95       	ret
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:171
}

int HardwareSerial::peek(void)
{
  if (_rx_buffer_head == _rx_buffer_tail) {
    return -1;
     766:	8f ef       	ldi	r24, 0xFF	; 255
     768:	9f ef       	ldi	r25, 0xFF	; 255
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:175
  } else {
    return _rx_buffer[_rx_buffer_tail];
  }
}
     76a:	08 95       	ret

0000076c <HardwareSerial::available()>:
available():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:164
  // clear any received data
  _rx_buffer_head = _rx_buffer_tail;
}

int HardwareSerial::available(void)
{
     76c:	fc 01       	movw	r30, r24
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:165
  return ((unsigned int)(SERIAL_RX_BUFFER_SIZE + _rx_buffer_head - _rx_buffer_tail)) % SERIAL_RX_BUFFER_SIZE;
     76e:	91 8d       	ldd	r25, Z+25	; 0x19
     770:	22 8d       	ldd	r18, Z+26	; 0x1a
     772:	89 2f       	mov	r24, r25
     774:	90 e0       	ldi	r25, 0x00	; 0
     776:	80 5c       	subi	r24, 0xC0	; 192
     778:	9f 4f       	sbci	r25, 0xFF	; 255
     77a:	82 1b       	sub	r24, r18
     77c:	91 09       	sbc	r25, r1
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:166
}
     77e:	8f 73       	andi	r24, 0x3F	; 63
     780:	99 27       	eor	r25, r25
     782:	08 95       	ret

00000784 <Serial1_available()>:
Serial1_available():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial1.cpp:68
HardwareSerial Serial1(&UBRR1H, &UBRR1L, &UCSR1A, &UCSR1B, &UCSR1C, &UDR1);

// Function that can be weakly referenced by serialEventRun to prevent
// pulling in this file if it's not otherwise used.
bool Serial1_available() {
  return Serial1.available();
     784:	87 e3       	ldi	r24, 0x37	; 55
     786:	9a e0       	ldi	r25, 0x0A	; 10
     788:	0e 94 b6 03 	call	0x76c	; 0x76c <HardwareSerial::available()>
     78c:	21 e0       	ldi	r18, 0x01	; 1
     78e:	89 2b       	or	r24, r25
     790:	09 f4       	brne	.+2      	; 0x794 <Serial1_available()+0x10>
     792:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial1.cpp:69
}
     794:	82 2f       	mov	r24, r18
     796:	08 95       	ret

00000798 <Serial0_available()>:
Serial0_available():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial0.cpp:76
#endif

// Function that can be weakly referenced by serialEventRun to prevent
// pulling in this file if it's not otherwise used.
bool Serial0_available() {
  return Serial.available();
     798:	84 ed       	ldi	r24, 0xD4	; 212
     79a:	9a e0       	ldi	r25, 0x0A	; 10
     79c:	0e 94 b6 03 	call	0x76c	; 0x76c <HardwareSerial::available()>
     7a0:	21 e0       	ldi	r18, 0x01	; 1
     7a2:	89 2b       	or	r24, r25
     7a4:	09 f4       	brne	.+2      	; 0x7a8 <Serial0_available()+0x10>
     7a6:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial0.cpp:77
}
     7a8:	82 2f       	mov	r24, r18
     7aa:	08 95       	ret

000007ac <HardwareSerial::_tx_udr_empty_irq()>:
_tx_udr_empty_irq():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:90
#endif

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_tx_udr_empty_irq(void)
{
     7ac:	fc 01       	movw	r30, r24
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:93
  // If interrupts are enabled, there must be more data in the output
  // buffer. Send the next byte
  unsigned char c = _tx_buffer[_tx_buffer_tail];
     7ae:	a4 8d       	ldd	r26, Z+28	; 0x1c
     7b0:	a8 0f       	add	r26, r24
     7b2:	b9 2f       	mov	r27, r25
     7b4:	b1 1d       	adc	r27, r1
     7b6:	a3 5a       	subi	r26, 0xA3	; 163
     7b8:	bf 4f       	sbci	r27, 0xFF	; 255
     7ba:	2c 91       	ld	r18, X
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:94
  _tx_buffer_tail = (_tx_buffer_tail + 1) % SERIAL_TX_BUFFER_SIZE;
     7bc:	84 8d       	ldd	r24, Z+28	; 0x1c
     7be:	90 e0       	ldi	r25, 0x00	; 0
     7c0:	01 96       	adiw	r24, 0x01	; 1
     7c2:	8f 73       	andi	r24, 0x3F	; 63
     7c4:	99 27       	eor	r25, r25
     7c6:	84 8f       	std	Z+28, r24	; 0x1c
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:96

  *_udr = c;
     7c8:	a6 89       	ldd	r26, Z+22	; 0x16
     7ca:	b7 89       	ldd	r27, Z+23	; 0x17
     7cc:	2c 93       	st	X, r18
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:104
  // location". This makes sure flush() won't return until the bytes
  // actually got written. Other r/w bits are preserved, and zeroes
  // written to the rest.

  #ifdef MPCM0
    *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << MPCM0))) | (1 << TXC0);
     7ce:	a0 89       	ldd	r26, Z+16	; 0x10
     7d0:	b1 89       	ldd	r27, Z+17	; 0x11
     7d2:	8c 91       	ld	r24, X
     7d4:	83 70       	andi	r24, 0x03	; 3
     7d6:	80 64       	ori	r24, 0x40	; 64
     7d8:	8c 93       	st	X, r24
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:109
  #else
    *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << TXC0)));
  #endif

  if (_tx_buffer_head == _tx_buffer_tail) {
     7da:	93 8d       	ldd	r25, Z+27	; 0x1b
     7dc:	84 8d       	ldd	r24, Z+28	; 0x1c
     7de:	98 13       	cpse	r25, r24
     7e0:	06 c0       	rjmp	.+12     	; 0x7ee <HardwareSerial::_tx_udr_empty_irq()+0x42>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:111
    // Buffer empty, so disable interrupts
    *_ucsrb &= ~_BV(UDRIE0);
     7e2:	02 88       	ldd	r0, Z+18	; 0x12
     7e4:	f3 89       	ldd	r31, Z+19	; 0x13
     7e6:	e0 2d       	mov	r30, r0
     7e8:	80 81       	ld	r24, Z
     7ea:	8f 7d       	andi	r24, 0xDF	; 223
     7ec:	80 83       	st	Z, r24
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:113
  }
}
     7ee:	08 95       	ret

000007f0 <HardwareSerial::write(unsigned char)>:
write():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:223
  // If we get here, nothing is queued anymore (DRIE is disabled) and
  // the hardware finished tranmission (TXC is set).
}

size_t HardwareSerial::write(uint8_t c)
{
     7f0:	ef 92       	push	r14
     7f2:	ff 92       	push	r15
     7f4:	0f 93       	push	r16
     7f6:	1f 93       	push	r17
     7f8:	cf 93       	push	r28
     7fa:	df 93       	push	r29
     7fc:	ec 01       	movw	r28, r24
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:224
  _written = true;
     7fe:	81 e0       	ldi	r24, 0x01	; 1
     800:	88 8f       	std	Y+24, r24	; 0x18
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:229
  // If the buffer and the data register is empty, just write the byte
  // to the data register and be done. This shortcut helps
  // significantly improve the effective datarate at high (>
  // 500kbit/s) bitrates, where interrupt overhead becomes a slowdown.
  if (_tx_buffer_head == _tx_buffer_tail && bit_is_set(*_ucsra, UDRE0)) {
     802:	9b 8d       	ldd	r25, Y+27	; 0x1b
     804:	8c 8d       	ldd	r24, Y+28	; 0x1c
     806:	98 13       	cpse	r25, r24
     808:	1a c0       	rjmp	.+52     	; 0x83e <HardwareSerial::write(unsigned char)+0x4e>
     80a:	e8 89       	ldd	r30, Y+16	; 0x10
     80c:	f9 89       	ldd	r31, Y+17	; 0x11
     80e:	80 81       	ld	r24, Z
     810:	85 ff       	sbrs	r24, 5
     812:	15 c0       	rjmp	.+42     	; 0x83e <HardwareSerial::write(unsigned char)+0x4e>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:238
    // So writing UDR must happen first.
    // Writing UDR and clearing TC must be done atomically, otherwise
    // interrupts might delay the TXC clear so the byte written to UDR
    // is transmitted (setting TXC) before clearing TXC. Then TXC will
    // be cleared when no bytes are left, causing flush() to hang
    ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
     814:	9f b7       	in	r25, 0x3f	; 63
__iCliRetVal():
c:\users\14377\appdata\local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7\avr\include\util/atomic.h:50
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
     816:	f8 94       	cli
write():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:239
      *_udr = c;
     818:	ee 89       	ldd	r30, Y+22	; 0x16
     81a:	ff 89       	ldd	r31, Y+23	; 0x17
     81c:	60 83       	st	Z, r22
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:241
      #ifdef MPCM0
        *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << MPCM0))) | (1 << TXC0);
     81e:	e8 89       	ldd	r30, Y+16	; 0x10
     820:	f9 89       	ldd	r31, Y+17	; 0x11
     822:	80 81       	ld	r24, Z
     824:	83 70       	andi	r24, 0x03	; 3
     826:	80 64       	ori	r24, 0x40	; 64
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:271
  // make atomic to prevent execution of ISR between setting the
  // head pointer and setting the interrupt flag resulting in buffer
  // retransmission
  ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    _tx_buffer_head = i;
    *_ucsrb |= _BV(UDRIE0);
     828:	80 83       	st	Z, r24
__iRestore():
c:\users\14377\appdata\local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7\avr\include\util/atomic.h:70
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
     82a:	9f bf       	out	0x3f, r25	; 63
write():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:275
  }
  
  return 1;
}
     82c:	81 e0       	ldi	r24, 0x01	; 1
     82e:	90 e0       	ldi	r25, 0x00	; 0
     830:	df 91       	pop	r29
     832:	cf 91       	pop	r28
     834:	1f 91       	pop	r17
     836:	0f 91       	pop	r16
     838:	ff 90       	pop	r15
     83a:	ef 90       	pop	r14
     83c:	08 95       	ret
     83e:	f6 2e       	mov	r15, r22
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:248
        *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << TXC0)));
      #endif
    }
    return 1;
  }
  tx_buffer_index_t i = (_tx_buffer_head + 1) % SERIAL_TX_BUFFER_SIZE;
     840:	0b 8d       	ldd	r16, Y+27	; 0x1b
     842:	10 e0       	ldi	r17, 0x00	; 0
     844:	0f 5f       	subi	r16, 0xFF	; 255
     846:	1f 4f       	sbci	r17, 0xFF	; 255
     848:	0f 73       	andi	r16, 0x3F	; 63
     84a:	11 27       	eor	r17, r17
     84c:	e0 2e       	mov	r14, r16
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:252

  // If the output buffer is full, there's nothing for it other than to 
  // wait for the interrupt handler to empty it a bit
  while (i == _tx_buffer_tail) {
     84e:	8c 8d       	ldd	r24, Y+28	; 0x1c
     850:	8e 11       	cpse	r24, r14
     852:	0c c0       	rjmp	.+24     	; 0x86c <HardwareSerial::write(unsigned char)+0x7c>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:253
    if (bit_is_clear(SREG, SREG_I)) {
     854:	0f b6       	in	r0, 0x3f	; 63
     856:	07 fc       	sbrc	r0, 7
     858:	fa cf       	rjmp	.-12     	; 0x84e <HardwareSerial::write(unsigned char)+0x5e>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:258
      // Interrupts are disabled, so we'll have to poll the data
      // register empty flag ourselves. If it is set, pretend an
      // interrupt has happened and call the handler to free up
      // space for us.
      if(bit_is_set(*_ucsra, UDRE0))
     85a:	e8 89       	ldd	r30, Y+16	; 0x10
     85c:	f9 89       	ldd	r31, Y+17	; 0x11
     85e:	80 81       	ld	r24, Z
     860:	85 ff       	sbrs	r24, 5
     862:	f5 cf       	rjmp	.-22     	; 0x84e <HardwareSerial::write(unsigned char)+0x5e>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:259
        _tx_udr_empty_irq();
     864:	ce 01       	movw	r24, r28
     866:	0e 94 d6 03 	call	0x7ac	; 0x7ac <HardwareSerial::_tx_udr_empty_irq()>
     86a:	f1 cf       	rjmp	.-30     	; 0x84e <HardwareSerial::write(unsigned char)+0x5e>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:265
    } else {
      // nop, the interrupt handler will free up space for us
    }
  }

  _tx_buffer[_tx_buffer_head] = c;
     86c:	eb 8d       	ldd	r30, Y+27	; 0x1b
     86e:	ec 0f       	add	r30, r28
     870:	fd 2f       	mov	r31, r29
     872:	f1 1d       	adc	r31, r1
     874:	e3 5a       	subi	r30, 0xA3	; 163
     876:	ff 4f       	sbci	r31, 0xFF	; 255
     878:	f0 82       	st	Z, r15
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:269
  // make atomic to prevent execution of ISR between setting the
  // head pointer and setting the interrupt flag resulting in buffer
  // retransmission
  ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
     87a:	9f b7       	in	r25, 0x3f	; 63
__iCliRetVal():
c:\users\14377\appdata\local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7\avr\include\util/atomic.h:50
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
     87c:	f8 94       	cli
write():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:270
    _tx_buffer_head = i;
     87e:	0b 8f       	std	Y+27, r16	; 0x1b
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:271
    *_ucsrb |= _BV(UDRIE0);
     880:	ea 89       	ldd	r30, Y+18	; 0x12
     882:	fb 89       	ldd	r31, Y+19	; 0x13
     884:	80 81       	ld	r24, Z
     886:	80 62       	ori	r24, 0x20	; 32
     888:	cf cf       	rjmp	.-98     	; 0x828 <HardwareSerial::write(unsigned char)+0x38>

0000088a <HardwareSerial::flush()>:
flush():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:203
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
  return tail - head - 1;
}

void HardwareSerial::flush()
{
     88a:	cf 93       	push	r28
     88c:	df 93       	push	r29
     88e:	ec 01       	movw	r28, r24
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:207
  // If we have never written a byte, no need to flush. This special
  // case is needed since there is no way to force the TXC (transmit
  // complete) bit to 1 during initialization
  if (!_written)
     890:	88 8d       	ldd	r24, Y+24	; 0x18
     892:	88 23       	and	r24, r24
     894:	b9 f0       	breq	.+46     	; 0x8c4 <HardwareSerial::flush()+0x3a>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:210
    return;

  while (bit_is_set(*_ucsrb, UDRIE0) || bit_is_clear(*_ucsra, TXC0)) {
     896:	aa 89       	ldd	r26, Y+18	; 0x12
     898:	bb 89       	ldd	r27, Y+19	; 0x13
     89a:	e8 89       	ldd	r30, Y+16	; 0x10
     89c:	f9 89       	ldd	r31, Y+17	; 0x11
     89e:	8c 91       	ld	r24, X
     8a0:	85 fd       	sbrc	r24, 5
     8a2:	03 c0       	rjmp	.+6      	; 0x8aa <HardwareSerial::flush()+0x20>
     8a4:	80 81       	ld	r24, Z
     8a6:	86 fd       	sbrc	r24, 6
     8a8:	0d c0       	rjmp	.+26     	; 0x8c4 <HardwareSerial::flush()+0x3a>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:211
    if (bit_is_clear(SREG, SREG_I) && bit_is_set(*_ucsrb, UDRIE0))
     8aa:	0f b6       	in	r0, 0x3f	; 63
     8ac:	07 fc       	sbrc	r0, 7
     8ae:	f7 cf       	rjmp	.-18     	; 0x89e <HardwareSerial::flush()+0x14>
     8b0:	8c 91       	ld	r24, X
     8b2:	85 ff       	sbrs	r24, 5
     8b4:	f2 cf       	rjmp	.-28     	; 0x89a <HardwareSerial::flush()+0x10>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:215
      // Interrupts are globally disabled, but the DR empty
      // interrupt should be enabled, so poll the DR empty flag to
      // prevent deadlock
      if (bit_is_set(*_ucsra, UDRE0))
     8b6:	80 81       	ld	r24, Z
     8b8:	85 ff       	sbrs	r24, 5
     8ba:	ed cf       	rjmp	.-38     	; 0x896 <HardwareSerial::flush()+0xc>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:216
        _tx_udr_empty_irq();
     8bc:	ce 01       	movw	r24, r28
     8be:	0e 94 d6 03 	call	0x7ac	; 0x7ac <HardwareSerial::_tx_udr_empty_irq()>
     8c2:	e9 cf       	rjmp	.-46     	; 0x896 <HardwareSerial::flush()+0xc>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:220
  }
  // If we get here, nothing is queued anymore (DRIE is disabled) and
  // the hardware finished tranmission (TXC is set).
}
     8c4:	df 91       	pop	r29
     8c6:	cf 91       	pop	r28
     8c8:	08 95       	ret

000008ca <serialEventRun()>:
serialEventRun():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:67
#endif

void serialEventRun(void)
{
#if defined(HAVE_HWSERIAL0)
  if (Serial0_available && serialEvent && Serial0_available()) serialEvent();
     8ca:	80 e0       	ldi	r24, 0x00	; 0
     8cc:	90 e0       	ldi	r25, 0x00	; 0
     8ce:	89 2b       	or	r24, r25
     8d0:	29 f0       	breq	.+10     	; 0x8dc <serialEventRun()+0x12>
     8d2:	0e 94 cc 03 	call	0x798	; 0x798 <Serial0_available()>
     8d6:	81 11       	cpse	r24, r1
     8d8:	0e 94 00 00 	call	0	; 0x0 <__vectors>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:70
#endif
#if defined(HAVE_HWSERIAL1)
  if (Serial1_available && serialEvent1 && Serial1_available()) serialEvent1();
     8dc:	80 e0       	ldi	r24, 0x00	; 0
     8de:	90 e0       	ldi	r25, 0x00	; 0
     8e0:	89 2b       	or	r24, r25
     8e2:	29 f0       	breq	.+10     	; 0x8ee <serialEventRun()+0x24>
     8e4:	0e 94 c2 03 	call	0x784	; 0x784 <Serial1_available()>
     8e8:	81 11       	cpse	r24, r1
     8ea:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:78
  if (Serial2_available && serialEvent2 && Serial2_available()) serialEvent2();
#endif
#if defined(HAVE_HWSERIAL3)
  if (Serial3_available && serialEvent3 && Serial3_available()) serialEvent3();
#endif
}
     8ee:	08 95       	ret

000008f0 <twi_stop>:
twi_stop():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:430
 * Output   none
 */
void twi_stop(void)
{
  // send stop condition
  TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWEA) | _BV(TWINT) | _BV(TWSTO);
     8f0:	85 ed       	ldi	r24, 0xD5	; 213
     8f2:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:450
          return;
        }
      }
    }
  #else
    while(TWCR & _BV(TWSTO)){
     8f6:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
     8fa:	84 fd       	sbrc	r24, 4
     8fc:	fc cf       	rjmp	.-8      	; 0x8f6 <twi_stop+0x6>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:456
      continue;
    }
  #endif

  // update twi state
  twi_state = TWI_READY;
     8fe:	10 92 b4 09 	sts	0x09B4, r1	; 0x8009b4 <twi_state>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:457
}
     902:	08 95       	ret

00000904 <twi_transmit>:
twi_transmit():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:365
uint8_t twi_transmit(const uint8_t* data, uint8_t length)
{
  uint8_t i;

  // ensure data will fit into buffer
  if(TWI_BUFFER_SIZE < (twi_txBufferLength+length)){
     904:	20 91 44 09 	lds	r18, 0x0944	; 0x800944 <twi_txBufferLength>
     908:	26 0f       	add	r18, r22
     90a:	33 27       	eor	r19, r19
     90c:	33 1f       	adc	r19, r19
     90e:	21 32       	cpi	r18, 0x21	; 33
     910:	31 05       	cpc	r19, r1
     912:	ec f4       	brge	.+58     	; 0x94e <twi_transmit+0x4a>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:370
    return 1;
  }

  // ensure we are currently a slave transmitter
  if(TWI_STX != twi_state){
     914:	20 91 b4 09 	lds	r18, 0x09B4	; 0x8009b4 <twi_state>
     918:	fc 01       	movw	r30, r24
     91a:	90 e0       	ldi	r25, 0x00	; 0
     91c:	80 e0       	ldi	r24, 0x00	; 0
     91e:	24 30       	cpi	r18, 0x04	; 4
     920:	69 f0       	breq	.+26     	; 0x93c <twi_transmit+0x38>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:371
    return 2;
     922:	82 e0       	ldi	r24, 0x02	; 2
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:381
    twi_txBuffer[twi_txBufferLength+i] = data[i];
  }
  twi_txBufferLength += length;

  return 0;
}
     924:	08 95       	ret
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:376
    return 2;
  }

  // set length and copy data into tx buffer
  for(i = 0; i < length; ++i){
    twi_txBuffer[twi_txBufferLength+i] = data[i];
     926:	a0 91 44 09 	lds	r26, 0x0944	; 0x800944 <twi_txBufferLength>
     92a:	21 91       	ld	r18, Z+
     92c:	ac 01       	movw	r20, r24
     92e:	4c 5d       	subi	r20, 0xDC	; 220
     930:	56 4f       	sbci	r21, 0xF6	; 246
     932:	a4 0f       	add	r26, r20
     934:	b5 2f       	mov	r27, r21
     936:	b1 1d       	adc	r27, r1
     938:	2c 93       	st	X, r18
     93a:	01 96       	adiw	r24, 0x01	; 1
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:375
  if(TWI_STX != twi_state){
    return 2;
  }

  // set length and copy data into tx buffer
  for(i = 0; i < length; ++i){
     93c:	86 17       	cp	r24, r22
     93e:	98 f3       	brcs	.-26     	; 0x926 <twi_transmit+0x22>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:378
    twi_txBuffer[twi_txBufferLength+i] = data[i];
  }
  twi_txBufferLength += length;
     940:	80 91 44 09 	lds	r24, 0x0944	; 0x800944 <twi_txBufferLength>
     944:	68 0f       	add	r22, r24
     946:	60 93 44 09 	sts	0x0944, r22	; 0x800944 <twi_txBufferLength>
     94a:	80 e0       	ldi	r24, 0x00	; 0
     94c:	08 95       	ret
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:366
{
  uint8_t i;

  // ensure data will fit into buffer
  if(TWI_BUFFER_SIZE < (twi_txBufferLength+length)){
    return 1;
     94e:	81 e0       	ldi	r24, 0x01	; 1
     950:	08 95       	ret

00000952 <TwoWire::flush()>:
flush():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:328
}

void TwoWire::flush(void)
{
  // XXX: to be implemented.
}
     952:	08 95       	ret

00000954 <TwoWire::peek()>:
peek():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:318
// or after requestFrom(address, numBytes)
int TwoWire::peek(void)
{
  int value = -1;

  if(rxBufferIndex < rxBufferLength){
     954:	e0 91 fa 09 	lds	r30, 0x09FA	; 0x8009fa <TwoWire::rxBufferIndex>
     958:	80 91 f9 09 	lds	r24, 0x09F9	; 0x8009f9 <TwoWire::rxBufferLength>
     95c:	e8 17       	cp	r30, r24
     95e:	30 f4       	brcc	.+12     	; 0x96c <TwoWire::peek()+0x18>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:319
    value = rxBuffer[rxBufferIndex];
     960:	f0 e0       	ldi	r31, 0x00	; 0
     962:	e7 52       	subi	r30, 0x27	; 39
     964:	f6 4f       	sbci	r31, 0xF6	; 246
     966:	80 81       	ld	r24, Z
     968:	90 e0       	ldi	r25, 0x00	; 0
     96a:	08 95       	ret
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:316
// must be called in:
// slave rx event callback
// or after requestFrom(address, numBytes)
int TwoWire::peek(void)
{
  int value = -1;
     96c:	8f ef       	ldi	r24, 0xFF	; 255
     96e:	9f ef       	ldi	r25, 0xFF	; 255
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:323
  if(rxBufferIndex < rxBufferLength){
    value = rxBuffer[rxBufferIndex];
  }

  return value;
}
     970:	08 95       	ret

00000972 <TwoWire::available()>:
available():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:292
// must be called in:
// slave rx event callback
// or after requestFrom(address, numBytes)
int TwoWire::available(void)
{
  return rxBufferLength - rxBufferIndex;
     972:	80 91 f9 09 	lds	r24, 0x09F9	; 0x8009f9 <TwoWire::rxBufferLength>
     976:	90 91 fa 09 	lds	r25, 0x09FA	; 0x8009fa <TwoWire::rxBufferIndex>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:293
}
     97a:	89 1b       	sub	r24, r25
     97c:	99 0b       	sbc	r25, r25
     97e:	08 95       	ret

00000980 <TwoWire::write(unsigned char const*, unsigned int)>:
write():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:273

// must be called in:
// slave tx event callback
// or after beginTransmission(address)
size_t TwoWire::write(const uint8_t *data, size_t quantity)
{
     980:	cf 92       	push	r12
     982:	df 92       	push	r13
     984:	ef 92       	push	r14
     986:	ff 92       	push	r15
     988:	0f 93       	push	r16
     98a:	1f 93       	push	r17
     98c:	cf 93       	push	r28
     98e:	df 93       	push	r29
     990:	7c 01       	movw	r14, r24
     992:	cb 01       	movw	r24, r22
     994:	8a 01       	movw	r16, r20
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:274
  if(transmitting){
     996:	20 91 b5 09 	lds	r18, 0x09B5	; 0x8009b5 <TwoWire::transmitting>
     99a:	22 23       	and	r18, r18
     99c:	89 f0       	breq	.+34     	; 0x9c0 <TwoWire::write(unsigned char const*, unsigned int)+0x40>
     99e:	eb 01       	movw	r28, r22
     9a0:	6b 01       	movw	r12, r22
     9a2:	c4 0e       	add	r12, r20
     9a4:	d5 1e       	adc	r13, r21
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:276
  // in master transmitter mode
    for(size_t i = 0; i < quantity; ++i){
     9a6:	cc 15       	cp	r28, r12
     9a8:	dd 05       	cpc	r29, r13
     9aa:	69 f0       	breq	.+26     	; 0x9c6 <TwoWire::write(unsigned char const*, unsigned int)+0x46>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:277
      write(data[i]);
     9ac:	69 91       	ld	r22, Y+
     9ae:	d7 01       	movw	r26, r14
     9b0:	ed 91       	ld	r30, X+
     9b2:	fc 91       	ld	r31, X
     9b4:	01 90       	ld	r0, Z+
     9b6:	f0 81       	ld	r31, Z
     9b8:	e0 2d       	mov	r30, r0
     9ba:	c7 01       	movw	r24, r14
     9bc:	09 95       	icall
     9be:	f3 cf       	rjmp	.-26     	; 0x9a6 <TwoWire::write(unsigned char const*, unsigned int)+0x26>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:282
    }
  }else{
  // in slave send mode
    // reply to master
    twi_transmit(data, quantity);
     9c0:	64 2f       	mov	r22, r20
     9c2:	0e 94 82 04 	call	0x904	; 0x904 <twi_transmit>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:285
  }
  return quantity;
}
     9c6:	c8 01       	movw	r24, r16
     9c8:	df 91       	pop	r29
     9ca:	cf 91       	pop	r28
     9cc:	1f 91       	pop	r17
     9ce:	0f 91       	pop	r16
     9d0:	ff 90       	pop	r15
     9d2:	ef 90       	pop	r14
     9d4:	df 90       	pop	r13
     9d6:	cf 90       	pop	r12
     9d8:	08 95       	ret

000009da <TwoWire::write(unsigned char)>:
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:248

// must be called in:
// slave tx event callback
// or after beginTransmission(address)
size_t TwoWire::write(uint8_t data)
{
     9da:	cf 93       	push	r28
     9dc:	df 93       	push	r29
     9de:	1f 92       	push	r1
     9e0:	cd b7       	in	r28, 0x3d	; 61
     9e2:	de b7       	in	r29, 0x3e	; 62
     9e4:	69 83       	std	Y+1, r22	; 0x01
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:249
  if(transmitting){
     9e6:	20 91 b5 09 	lds	r18, 0x09B5	; 0x8009b5 <TwoWire::transmitting>
     9ea:	22 23       	and	r18, r18
     9ec:	f9 f0       	breq	.+62     	; 0xa2c <TwoWire::write(unsigned char)+0x52>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:252
  // in master transmitter mode
    // don't bother if buffer is full
    if(txBufferLength >= TWI_BUFFER_SIZE){
     9ee:	20 91 d8 09 	lds	r18, 0x09D8	; 0x8009d8 <TwoWire::txBufferLength>
     9f2:	20 32       	cpi	r18, 0x20	; 32
     9f4:	58 f0       	brcs	.+22     	; 0xa0c <TwoWire::write(unsigned char)+0x32>
_ZN5Print13setWriteErrorEi():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.h:44
  private:
    int write_error;
    size_t printNumber(unsigned long, uint8_t);
    size_t printFloat(double, uint8_t);
  protected:
    void setWriteError(int err = 1) { write_error = err; }
     9f6:	21 e0       	ldi	r18, 0x01	; 1
     9f8:	30 e0       	ldi	r19, 0x00	; 0
     9fa:	fc 01       	movw	r30, r24
     9fc:	33 83       	std	Z+3, r19	; 0x03
     9fe:	22 83       	std	Z+2, r18	; 0x02
write():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:254
      setWriteError();
      return 0;
     a00:	90 e0       	ldi	r25, 0x00	; 0
     a02:	80 e0       	ldi	r24, 0x00	; 0
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:267
  // in slave send mode
    // reply to master
    twi_transmit(&data, 1);
  }
  return 1;
}
     a04:	0f 90       	pop	r0
     a06:	df 91       	pop	r29
     a08:	cf 91       	pop	r28
     a0a:	08 95       	ret
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:257
    if(txBufferLength >= TWI_BUFFER_SIZE){
      setWriteError();
      return 0;
    }
    // put byte in tx buffer
    txBuffer[txBufferIndex] = data;
     a0c:	80 91 b6 09 	lds	r24, 0x09B6	; 0x8009b6 <TwoWire::txBufferIndex>
     a10:	e8 2f       	mov	r30, r24
     a12:	f0 e0       	ldi	r31, 0x00	; 0
     a14:	e9 54       	subi	r30, 0x49	; 73
     a16:	f6 4f       	sbci	r31, 0xF6	; 246
     a18:	99 81       	ldd	r25, Y+1	; 0x01
     a1a:	90 83       	st	Z, r25
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:258
    ++txBufferIndex;
     a1c:	8f 5f       	subi	r24, 0xFF	; 255
     a1e:	80 93 b6 09 	sts	0x09B6, r24	; 0x8009b6 <TwoWire::txBufferIndex>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:260
    // update amount in buffer
    txBufferLength = txBufferIndex;
     a22:	80 93 d8 09 	sts	0x09D8, r24	; 0x8009d8 <TwoWire::txBufferLength>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:266
  }else{
  // in slave send mode
    // reply to master
    twi_transmit(&data, 1);
  }
  return 1;
     a26:	81 e0       	ldi	r24, 0x01	; 1
     a28:	90 e0       	ldi	r25, 0x00	; 0
     a2a:	ec cf       	rjmp	.-40     	; 0xa04 <TwoWire::write(unsigned char)+0x2a>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:264
    // update amount in buffer
    txBufferLength = txBufferIndex;
  }else{
  // in slave send mode
    // reply to master
    twi_transmit(&data, 1);
     a2c:	61 e0       	ldi	r22, 0x01	; 1
     a2e:	ce 01       	movw	r24, r28
     a30:	01 96       	adiw	r24, 0x01	; 1
     a32:	0e 94 82 04 	call	0x904	; 0x904 <twi_transmit>
     a36:	f7 cf       	rjmp	.-18     	; 0xa26 <TwoWire::write(unsigned char)+0x4c>

00000a38 <TwoWire::write(int) [clone .constprop.23]>:
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.h:88
    void onRequest( void (*)(void) );

    inline size_t write(unsigned long n) { return write((uint8_t)n); }
    inline size_t write(long n) { return write((uint8_t)n); }
    inline size_t write(unsigned int n) { return write((uint8_t)n); }
    inline size_t write(int n) { return write((uint8_t)n); }
     a38:	68 2f       	mov	r22, r24
     a3a:	81 e7       	ldi	r24, 0x71	; 113
     a3c:	9b e0       	ldi	r25, 0x0B	; 11
     a3e:	0c 94 ed 04 	jmp	0x9da	; 0x9da <TwoWire::write(unsigned char)>

00000a42 <LiquidCrystal::pulseEnable()>:
pulseEnable():
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:303
    write4bits(value>>4);
    write4bits(value);
  }
}

void LiquidCrystal::pulseEnable(void) {
     a42:	cf 93       	push	r28
     a44:	df 93       	push	r29
     a46:	ec 01       	movw	r28, r24
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:304
  digitalWrite(_enable_pin, LOW);
     a48:	60 e0       	ldi	r22, 0x00	; 0
     a4a:	8e 81       	ldd	r24, Y+6	; 0x06
     a4c:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:305
  delayMicroseconds(1);    
     a50:	81 e0       	ldi	r24, 0x01	; 1
     a52:	90 e0       	ldi	r25, 0x00	; 0
     a54:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <delayMicroseconds>
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:306
  digitalWrite(_enable_pin, HIGH);
     a58:	61 e0       	ldi	r22, 0x01	; 1
     a5a:	8e 81       	ldd	r24, Y+6	; 0x06
     a5c:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:307
  delayMicroseconds(1);    // enable pulse must be >450ns
     a60:	81 e0       	ldi	r24, 0x01	; 1
     a62:	90 e0       	ldi	r25, 0x00	; 0
     a64:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <delayMicroseconds>
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:308
  digitalWrite(_enable_pin, LOW);
     a68:	60 e0       	ldi	r22, 0x00	; 0
     a6a:	8e 81       	ldd	r24, Y+6	; 0x06
     a6c:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:309
  delayMicroseconds(100);   // commands need > 37us to settle
     a70:	84 e6       	ldi	r24, 0x64	; 100
     a72:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:310
}
     a74:	df 91       	pop	r29
     a76:	cf 91       	pop	r28
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:309
  digitalWrite(_enable_pin, LOW);
  delayMicroseconds(1);    
  digitalWrite(_enable_pin, HIGH);
  delayMicroseconds(1);    // enable pulse must be >450ns
  digitalWrite(_enable_pin, LOW);
  delayMicroseconds(100);   // commands need > 37us to settle
     a78:	0c 94 f3 02 	jmp	0x5e6	; 0x5e6 <delayMicroseconds>

00000a7c <LiquidCrystal::write4bits(unsigned char)>:
write4bits():
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:312
}

void LiquidCrystal::write4bits(uint8_t value) {
     a7c:	cf 92       	push	r12
     a7e:	df 92       	push	r13
     a80:	ef 92       	push	r14
     a82:	ff 92       	push	r15
     a84:	0f 93       	push	r16
     a86:	1f 93       	push	r17
     a88:	cf 93       	push	r28
     a8a:	df 93       	push	r29
     a8c:	6c 01       	movw	r12, r24
     a8e:	7c 01       	movw	r14, r24
     a90:	87 e0       	ldi	r24, 0x07	; 7
     a92:	e8 0e       	add	r14, r24
     a94:	f1 1c       	adc	r15, r1
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:313
  for (int i = 0; i < 4; i++) {
     a96:	d0 e0       	ldi	r29, 0x00	; 0
     a98:	c0 e0       	ldi	r28, 0x00	; 0
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:314
    digitalWrite(_data_pins[i], (value >> i) & 0x01);
     a9a:	06 2f       	mov	r16, r22
     a9c:	10 e0       	ldi	r17, 0x00	; 0
     a9e:	b8 01       	movw	r22, r16
     aa0:	0c 2e       	mov	r0, r28
     aa2:	02 c0       	rjmp	.+4      	; 0xaa8 <LiquidCrystal::write4bits(unsigned char)+0x2c>
     aa4:	75 95       	asr	r23
     aa6:	67 95       	ror	r22
     aa8:	0a 94       	dec	r0
     aaa:	e2 f7       	brpl	.-8      	; 0xaa4 <LiquidCrystal::write4bits(unsigned char)+0x28>
     aac:	61 70       	andi	r22, 0x01	; 1
     aae:	f7 01       	movw	r30, r14
     ab0:	81 91       	ld	r24, Z+
     ab2:	7f 01       	movw	r14, r30
     ab4:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:313
  digitalWrite(_enable_pin, LOW);
  delayMicroseconds(100);   // commands need > 37us to settle
}

void LiquidCrystal::write4bits(uint8_t value) {
  for (int i = 0; i < 4; i++) {
     ab8:	21 96       	adiw	r28, 0x01	; 1
     aba:	c4 30       	cpi	r28, 0x04	; 4
     abc:	d1 05       	cpc	r29, r1
     abe:	79 f7       	brne	.-34     	; 0xa9e <LiquidCrystal::write4bits(unsigned char)+0x22>
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:317
    digitalWrite(_data_pins[i], (value >> i) & 0x01);
  }

  pulseEnable();
     ac0:	c6 01       	movw	r24, r12
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:318
}
     ac2:	df 91       	pop	r29
     ac4:	cf 91       	pop	r28
     ac6:	1f 91       	pop	r17
     ac8:	0f 91       	pop	r16
     aca:	ff 90       	pop	r15
     acc:	ef 90       	pop	r14
     ace:	df 90       	pop	r13
     ad0:	cf 90       	pop	r12
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:317
void LiquidCrystal::write4bits(uint8_t value) {
  for (int i = 0; i < 4; i++) {
    digitalWrite(_data_pins[i], (value >> i) & 0x01);
  }

  pulseEnable();
     ad2:	0c 94 21 05 	jmp	0xa42	; 0xa42 <LiquidCrystal::pulseEnable()>

00000ad6 <LiquidCrystal::send(unsigned char, unsigned char)>:
send():
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:287
}

/************ low level data pushing commands **********/

// write either command or data, with automatic 4/8-bit selection
void LiquidCrystal::send(uint8_t value, uint8_t mode) {
     ad6:	cf 92       	push	r12
     ad8:	df 92       	push	r13
     ada:	ef 92       	push	r14
     adc:	ff 92       	push	r15
     ade:	0f 93       	push	r16
     ae0:	1f 93       	push	r17
     ae2:	cf 93       	push	r28
     ae4:	df 93       	push	r29
     ae6:	ec 01       	movw	r28, r24
     ae8:	f6 2e       	mov	r15, r22
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:288
  digitalWrite(_rs_pin, mode);
     aea:	64 2f       	mov	r22, r20
     aec:	8c 81       	ldd	r24, Y+4	; 0x04
     aee:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:291

  // if there is a RW pin indicated, set it low to Write
  if (_rw_pin != 255) { 
     af2:	8d 81       	ldd	r24, Y+5	; 0x05
     af4:	8f 3f       	cpi	r24, 0xFF	; 255
     af6:	19 f0       	breq	.+6      	; 0xafe <LiquidCrystal::send(unsigned char, unsigned char)+0x28>
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:292
    digitalWrite(_rw_pin, LOW);
     af8:	60 e0       	ldi	r22, 0x00	; 0
     afa:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
     afe:	0f 2d       	mov	r16, r15
     b00:	10 e0       	ldi	r17, 0x00	; 0
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:295
  }
  
  if (_displayfunction & LCD_8BITMODE) {
     b02:	8f 85       	ldd	r24, Y+15	; 0x0f
     b04:	84 ff       	sbrs	r24, 4
     b06:	25 c0       	rjmp	.+74     	; 0xb52 <LiquidCrystal::send(unsigned char, unsigned char)+0x7c>
     b08:	6e 01       	movw	r12, r28
     b0a:	87 e0       	ldi	r24, 0x07	; 7
     b0c:	c8 0e       	add	r12, r24
     b0e:	d1 1c       	adc	r13, r1
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:321

  pulseEnable();
}

void LiquidCrystal::write8bits(uint8_t value) {
  for (int i = 0; i < 8; i++) {
     b10:	f1 2c       	mov	r15, r1
     b12:	e1 2c       	mov	r14, r1
write8bits():
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:322
    digitalWrite(_data_pins[i], (value >> i) & 0x01);
     b14:	b8 01       	movw	r22, r16
     b16:	0e 2c       	mov	r0, r14
     b18:	02 c0       	rjmp	.+4      	; 0xb1e <LiquidCrystal::send(unsigned char, unsigned char)+0x48>
     b1a:	75 95       	asr	r23
     b1c:	67 95       	ror	r22
     b1e:	0a 94       	dec	r0
     b20:	e2 f7       	brpl	.-8      	; 0xb1a <LiquidCrystal::send(unsigned char, unsigned char)+0x44>
     b22:	61 70       	andi	r22, 0x01	; 1
     b24:	f6 01       	movw	r30, r12
     b26:	81 91       	ld	r24, Z+
     b28:	6f 01       	movw	r12, r30
     b2a:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:321

  pulseEnable();
}

void LiquidCrystal::write8bits(uint8_t value) {
  for (int i = 0; i < 8; i++) {
     b2e:	ff ef       	ldi	r31, 0xFF	; 255
     b30:	ef 1a       	sub	r14, r31
     b32:	ff 0a       	sbc	r15, r31
     b34:	88 e0       	ldi	r24, 0x08	; 8
     b36:	e8 16       	cp	r14, r24
     b38:	f1 04       	cpc	r15, r1
     b3a:	61 f7       	brne	.-40     	; 0xb14 <LiquidCrystal::send(unsigned char, unsigned char)+0x3e>
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:325
    digitalWrite(_data_pins[i], (value >> i) & 0x01);
  }
  
  pulseEnable();
     b3c:	ce 01       	movw	r24, r28
send():
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:301
    write8bits(value); 
  } else {
    write4bits(value>>4);
    write4bits(value);
  }
}
     b3e:	df 91       	pop	r29
     b40:	cf 91       	pop	r28
     b42:	1f 91       	pop	r17
     b44:	0f 91       	pop	r16
     b46:	ff 90       	pop	r15
     b48:	ef 90       	pop	r14
     b4a:	df 90       	pop	r13
     b4c:	cf 90       	pop	r12
write8bits():
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:325
void LiquidCrystal::write8bits(uint8_t value) {
  for (int i = 0; i < 8; i++) {
    digitalWrite(_data_pins[i], (value >> i) & 0x01);
  }
  
  pulseEnable();
     b4e:	0c 94 21 05 	jmp	0xa42	; 0xa42 <LiquidCrystal::pulseEnable()>
send():
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:298
  }
  
  if (_displayfunction & LCD_8BITMODE) {
    write8bits(value); 
  } else {
    write4bits(value>>4);
     b52:	b8 01       	movw	r22, r16
     b54:	84 e0       	ldi	r24, 0x04	; 4
     b56:	75 95       	asr	r23
     b58:	67 95       	ror	r22
     b5a:	8a 95       	dec	r24
     b5c:	e1 f7       	brne	.-8      	; 0xb56 <LiquidCrystal::send(unsigned char, unsigned char)+0x80>
     b5e:	ce 01       	movw	r24, r28
     b60:	0e 94 3e 05 	call	0xa7c	; 0xa7c <LiquidCrystal::write4bits(unsigned char)>
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:299
    write4bits(value);
     b64:	6f 2d       	mov	r22, r15
     b66:	ce 01       	movw	r24, r28
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:301
  }
}
     b68:	df 91       	pop	r29
     b6a:	cf 91       	pop	r28
     b6c:	1f 91       	pop	r17
     b6e:	0f 91       	pop	r16
     b70:	ff 90       	pop	r15
     b72:	ef 90       	pop	r14
     b74:	df 90       	pop	r13
     b76:	cf 90       	pop	r12
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:299
  
  if (_displayfunction & LCD_8BITMODE) {
    write8bits(value); 
  } else {
    write4bits(value>>4);
    write4bits(value);
     b78:	0c 94 3e 05 	jmp	0xa7c	; 0xa7c <LiquidCrystal::write4bits(unsigned char)>

00000b7c <LiquidCrystal::command(unsigned char) [clone .constprop.33]>:
command():
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:276
}

/*********** mid level commands, for sending data/cmds */

inline void LiquidCrystal::command(uint8_t value) {
  send(value, LOW);
     b7c:	40 e0       	ldi	r20, 0x00	; 0
     b7e:	68 2f       	mov	r22, r24
     b80:	8d e7       	ldi	r24, 0x7D	; 125
     b82:	9b e0       	ldi	r25, 0x0B	; 11
     b84:	0c 94 6b 05 	jmp	0xad6	; 0xad6 <LiquidCrystal::send(unsigned char, unsigned char)>

00000b88 <LiquidCrystal::clear() [clone .constprop.32]>:
clear():
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:178
}

/********** high level commands, for the user! */
void LiquidCrystal::clear()
{
  command(LCD_CLEARDISPLAY);  // clear display, set cursor position to zero
     b88:	81 e0       	ldi	r24, 0x01	; 1
     b8a:	0e 94 be 05 	call	0xb7c	; 0xb7c <LiquidCrystal::command(unsigned char) [clone .constprop.33]>
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:179
  delayMicroseconds(2000);  // this command takes a long time!
     b8e:	80 ed       	ldi	r24, 0xD0	; 208
     b90:	97 e0       	ldi	r25, 0x07	; 7
     b92:	0c 94 f3 02 	jmp	0x5e6	; 0x5e6 <delayMicroseconds>

00000b96 <LiquidCrystal::begin(unsigned char, unsigned char, unsigned char) [clone .constprop.30]>:
begin():
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:78
    _displayfunction = LCD_8BITMODE | LCD_1LINE | LCD_5x8DOTS;
  
  begin(16, 1);  
}

void LiquidCrystal::begin(uint8_t cols, uint8_t lines, uint8_t dotsize) {
     b96:	cf 93       	push	r28
     b98:	df 93       	push	r29
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:79
  if (lines > 1) {
     b9a:	61 30       	cpi	r22, 0x01	; 1
     b9c:	29 f0       	breq	.+10     	; 0xba8 <LiquidCrystal::begin(unsigned char, unsigned char, unsigned char) [clone .constprop.30]+0x12>
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:80
    _displayfunction |= LCD_2LINE;
     b9e:	90 91 8c 0b 	lds	r25, 0x0B8C	; 0x800b8c <lcd+0xf>
     ba2:	98 60       	ori	r25, 0x08	; 8
     ba4:	90 93 8c 0b 	sts	0x0B8C, r25	; 0x800b8c <lcd+0xf>
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:82
  }
  _numlines = lines;
     ba8:	60 93 90 0b 	sts	0x0B90, r22	; 0x800b90 <lcd+0x13>
setRowOffsets():
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:169

}

void LiquidCrystal::setRowOffsets(int row0, int row1, int row2, int row3)
{
  _row_offsets[0] = row0;
     bac:	10 92 91 0b 	sts	0x0B91, r1	; 0x800b91 <lcd+0x14>
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:170
  _row_offsets[1] = row1;
     bb0:	90 e4       	ldi	r25, 0x40	; 64
     bb2:	90 93 92 0b 	sts	0x0B92, r25	; 0x800b92 <lcd+0x15>
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:171
  _row_offsets[2] = row2;
     bb6:	80 93 93 0b 	sts	0x0B93, r24	; 0x800b93 <lcd+0x16>
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:172
  _row_offsets[3] = row3;
     bba:	80 5c       	subi	r24, 0xC0	; 192
     bbc:	80 93 94 0b 	sts	0x0B94, r24	; 0x800b94 <lcd+0x17>
begin():
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:91
  // for some 1 line displays you can select a 10 pixel high font
  if ((dotsize != LCD_5x8DOTS) && (lines == 1)) {
    _displayfunction |= LCD_5x10DOTS;
  }

  pinMode(_rs_pin, OUTPUT);
     bc0:	61 e0       	ldi	r22, 0x01	; 1
     bc2:	80 91 81 0b 	lds	r24, 0x0B81	; 0x800b81 <lcd+0x4>
     bc6:	0e 94 3a 02 	call	0x474	; 0x474 <pinMode>
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:93
  // we can save 1 pin by not using RW. Indicate by passing 255 instead of pin#
  if (_rw_pin != 255) { 
     bca:	80 91 82 0b 	lds	r24, 0x0B82	; 0x800b82 <lcd+0x5>
     bce:	8f 3f       	cpi	r24, 0xFF	; 255
     bd0:	19 f0       	breq	.+6      	; 0xbd8 <LiquidCrystal::begin(unsigned char, unsigned char, unsigned char) [clone .constprop.30]+0x42>
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:94
    pinMode(_rw_pin, OUTPUT);
     bd2:	61 e0       	ldi	r22, 0x01	; 1
     bd4:	0e 94 3a 02 	call	0x474	; 0x474 <pinMode>
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:96
  }
  pinMode(_enable_pin, OUTPUT);
     bd8:	61 e0       	ldi	r22, 0x01	; 1
     bda:	80 91 83 0b 	lds	r24, 0x0B83	; 0x800b83 <lcd+0x6>
     bde:	0e 94 3a 02 	call	0x474	; 0x474 <pinMode>
     be2:	cd e7       	ldi	r28, 0x7D	; 125
     be4:	db e0       	ldi	r29, 0x0B	; 11
     be6:	9e 01       	movw	r18, r28
     be8:	2d 57       	subi	r18, 0x7D	; 125
     bea:	3b 40       	sbci	r19, 0x0B	; 11
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:99
  
  // Do these once, instead of every time a character is drawn for speed reasons.
  for (int i=0; i<((_displayfunction & LCD_8BITMODE) ? 8 : 4); ++i)
     bec:	80 91 8c 0b 	lds	r24, 0x0B8C	; 0x800b8c <lcd+0xf>
     bf0:	84 fd       	sbrc	r24, 4
     bf2:	0b c0       	rjmp	.+22     	; 0xc0a <LiquidCrystal::begin(unsigned char, unsigned char, unsigned char) [clone .constprop.30]+0x74>
     bf4:	84 e0       	ldi	r24, 0x04	; 4
     bf6:	90 e0       	ldi	r25, 0x00	; 0
     bf8:	21 96       	adiw	r28, 0x01	; 1
     bfa:	28 17       	cp	r18, r24
     bfc:	39 07       	cpc	r19, r25
     bfe:	44 f4       	brge	.+16     	; 0xc10 <LiquidCrystal::begin(unsigned char, unsigned char, unsigned char) [clone .constprop.30]+0x7a>
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:101
  {
    pinMode(_data_pins[i], OUTPUT);
     c00:	61 e0       	ldi	r22, 0x01	; 1
     c02:	8e 81       	ldd	r24, Y+6	; 0x06
     c04:	0e 94 3a 02 	call	0x474	; 0x474 <pinMode>
     c08:	ee cf       	rjmp	.-36     	; 0xbe6 <LiquidCrystal::begin(unsigned char, unsigned char, unsigned char) [clone .constprop.30]+0x50>
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:99
    pinMode(_rw_pin, OUTPUT);
  }
  pinMode(_enable_pin, OUTPUT);
  
  // Do these once, instead of every time a character is drawn for speed reasons.
  for (int i=0; i<((_displayfunction & LCD_8BITMODE) ? 8 : 4); ++i)
     c0a:	88 e0       	ldi	r24, 0x08	; 8
     c0c:	90 e0       	ldi	r25, 0x00	; 0
     c0e:	f4 cf       	rjmp	.-24     	; 0xbf8 <LiquidCrystal::begin(unsigned char, unsigned char, unsigned char) [clone .constprop.30]+0x62>
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:107
   } 

  // SEE PAGE 45/46 FOR INITIALIZATION SPECIFICATION!
  // according to datasheet, we need at least 40ms after power rises above 2.7V
  // before sending commands. Arduino can turn on way before 4.5V so we'll wait 50
  delayMicroseconds(50000); 
     c10:	80 e5       	ldi	r24, 0x50	; 80
     c12:	93 ec       	ldi	r25, 0xC3	; 195
     c14:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <delayMicroseconds>
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:109
  // Now we pull both RS and R/W low to begin commands
  digitalWrite(_rs_pin, LOW);
     c18:	60 e0       	ldi	r22, 0x00	; 0
     c1a:	80 91 81 0b 	lds	r24, 0x0B81	; 0x800b81 <lcd+0x4>
     c1e:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:110
  digitalWrite(_enable_pin, LOW);
     c22:	60 e0       	ldi	r22, 0x00	; 0
     c24:	80 91 83 0b 	lds	r24, 0x0B83	; 0x800b83 <lcd+0x6>
     c28:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:111
  if (_rw_pin != 255) { 
     c2c:	80 91 82 0b 	lds	r24, 0x0B82	; 0x800b82 <lcd+0x5>
     c30:	8f 3f       	cpi	r24, 0xFF	; 255
     c32:	19 f0       	breq	.+6      	; 0xc3a <LiquidCrystal::begin(unsigned char, unsigned char, unsigned char) [clone .constprop.30]+0xa4>
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:112
    digitalWrite(_rw_pin, LOW);
     c34:	60 e0       	ldi	r22, 0x00	; 0
     c36:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:116
  }
  
  //put the LCD into 4 bit or 8 bit mode
  if (! (_displayfunction & LCD_8BITMODE)) {
     c3a:	80 91 8c 0b 	lds	r24, 0x0B8C	; 0x800b8c <lcd+0xf>
     c3e:	84 fd       	sbrc	r24, 4
     c40:	35 c0       	rjmp	.+106    	; 0xcac <LiquidCrystal::begin(unsigned char, unsigned char, unsigned char) [clone .constprop.30]+0x116>
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:121
    // this is according to the hitachi HD44780 datasheet
    // figure 24, pg 46

    // we start in 8bit mode, try to set 4 bit mode
    write4bits(0x03);
     c42:	63 e0       	ldi	r22, 0x03	; 3
     c44:	8d e7       	ldi	r24, 0x7D	; 125
     c46:	9b e0       	ldi	r25, 0x0B	; 11
     c48:	0e 94 3e 05 	call	0xa7c	; 0xa7c <LiquidCrystal::write4bits(unsigned char)>
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:122
    delayMicroseconds(4500); // wait min 4.1ms
     c4c:	84 e9       	ldi	r24, 0x94	; 148
     c4e:	91 e1       	ldi	r25, 0x11	; 17
     c50:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <delayMicroseconds>
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:125

    // second try
    write4bits(0x03);
     c54:	63 e0       	ldi	r22, 0x03	; 3
     c56:	8d e7       	ldi	r24, 0x7D	; 125
     c58:	9b e0       	ldi	r25, 0x0B	; 11
     c5a:	0e 94 3e 05 	call	0xa7c	; 0xa7c <LiquidCrystal::write4bits(unsigned char)>
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:126
    delayMicroseconds(4500); // wait min 4.1ms
     c5e:	84 e9       	ldi	r24, 0x94	; 148
     c60:	91 e1       	ldi	r25, 0x11	; 17
     c62:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <delayMicroseconds>
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:129
    
    // third go!
    write4bits(0x03); 
     c66:	63 e0       	ldi	r22, 0x03	; 3
     c68:	8d e7       	ldi	r24, 0x7D	; 125
     c6a:	9b e0       	ldi	r25, 0x0B	; 11
     c6c:	0e 94 3e 05 	call	0xa7c	; 0xa7c <LiquidCrystal::write4bits(unsigned char)>
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:130
    delayMicroseconds(150);
     c70:	86 e9       	ldi	r24, 0x96	; 150
     c72:	90 e0       	ldi	r25, 0x00	; 0
     c74:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <delayMicroseconds>
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:133

    // finally, set to 4-bit interface
    write4bits(0x02); 
     c78:	62 e0       	ldi	r22, 0x02	; 2
     c7a:	8d e7       	ldi	r24, 0x7D	; 125
     c7c:	9b e0       	ldi	r25, 0x0B	; 11
     c7e:	0e 94 3e 05 	call	0xa7c	; 0xa7c <LiquidCrystal::write4bits(unsigned char)>
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:151
    // third go
    command(LCD_FUNCTIONSET | _displayfunction);
  }

  // finally, set # lines, font size, etc.
  command(LCD_FUNCTIONSET | _displayfunction);  
     c82:	80 91 8c 0b 	lds	r24, 0x0B8C	; 0x800b8c <lcd+0xf>
     c86:	80 62       	ori	r24, 0x20	; 32
     c88:	0e 94 be 05 	call	0xb7c	; 0xb7c <LiquidCrystal::command(unsigned char) [clone .constprop.33]>
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:154

  // turn the display on with no cursor or blinking default
  _displaycontrol = LCD_DISPLAYON | LCD_CURSOROFF | LCD_BLINKOFF;  
     c8c:	84 e0       	ldi	r24, 0x04	; 4
     c8e:	80 93 8d 0b 	sts	0x0B8D, r24	; 0x800b8d <lcd+0x10>
display():
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:208
  _displaycontrol &= ~LCD_DISPLAYON;
  command(LCD_DISPLAYCONTROL | _displaycontrol);
}
void LiquidCrystal::display() {
  _displaycontrol |= LCD_DISPLAYON;
  command(LCD_DISPLAYCONTROL | _displaycontrol);
     c92:	8c e0       	ldi	r24, 0x0C	; 12
     c94:	0e 94 be 05 	call	0xb7c	; 0xb7c <LiquidCrystal::command(unsigned char) [clone .constprop.33]>
begin():
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:158
  // turn the display on with no cursor or blinking default
  _displaycontrol = LCD_DISPLAYON | LCD_CURSOROFF | LCD_BLINKOFF;  
  display();

  // clear it off
  clear();
     c98:	0e 94 c4 05 	call	0xb88	; 0xb88 <LiquidCrystal::clear() [clone .constprop.32]>
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:161

  // Initialize to default text direction (for romance languages)
  _displaymode = LCD_ENTRYLEFT | LCD_ENTRYSHIFTDECREMENT;
     c9c:	82 e0       	ldi	r24, 0x02	; 2
     c9e:	80 93 8e 0b 	sts	0x0B8E, r24	; 0x800b8e <lcd+0x11>
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:163
  // set the entry mode
  command(LCD_ENTRYMODESET | _displaymode);
     ca2:	86 e0       	ldi	r24, 0x06	; 6
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:165

}
     ca4:	df 91       	pop	r29
     ca6:	cf 91       	pop	r28
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:163
  clear();

  // Initialize to default text direction (for romance languages)
  _displaymode = LCD_ENTRYLEFT | LCD_ENTRYSHIFTDECREMENT;
  // set the entry mode
  command(LCD_ENTRYMODESET | _displaymode);
     ca8:	0c 94 be 05 	jmp	0xb7c	; 0xb7c <LiquidCrystal::command(unsigned char) [clone .constprop.33]>
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:139
  } else {
    // this is according to the hitachi HD44780 datasheet
    // page 45 figure 23

    // Send function set command sequence
    command(LCD_FUNCTIONSET | _displayfunction);
     cac:	80 62       	ori	r24, 0x20	; 32
     cae:	0e 94 be 05 	call	0xb7c	; 0xb7c <LiquidCrystal::command(unsigned char) [clone .constprop.33]>
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:140
    delayMicroseconds(4500);  // wait more than 4.1ms
     cb2:	84 e9       	ldi	r24, 0x94	; 148
     cb4:	91 e1       	ldi	r25, 0x11	; 17
     cb6:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <delayMicroseconds>
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:143

    // second try
    command(LCD_FUNCTIONSET | _displayfunction);
     cba:	80 91 8c 0b 	lds	r24, 0x0B8C	; 0x800b8c <lcd+0xf>
     cbe:	80 62       	ori	r24, 0x20	; 32
     cc0:	0e 94 be 05 	call	0xb7c	; 0xb7c <LiquidCrystal::command(unsigned char) [clone .constprop.33]>
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:144
    delayMicroseconds(150);
     cc4:	86 e9       	ldi	r24, 0x96	; 150
     cc6:	90 e0       	ldi	r25, 0x00	; 0
     cc8:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <delayMicroseconds>
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:147

    // third go
    command(LCD_FUNCTIONSET | _displayfunction);
     ccc:	80 91 8c 0b 	lds	r24, 0x0B8C	; 0x800b8c <lcd+0xf>
     cd0:	80 62       	ori	r24, 0x20	; 32
     cd2:	0e 94 be 05 	call	0xb7c	; 0xb7c <LiquidCrystal::command(unsigned char) [clone .constprop.33]>
     cd6:	d5 cf       	rjmp	.-86     	; 0xc82 <LiquidCrystal::begin(unsigned char, unsigned char, unsigned char) [clone .constprop.30]+0xec>

00000cd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>:
setCursor():
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:188
{
  command(LCD_RETURNHOME);  // set cursor position to zero
  delayMicroseconds(2000);  // this command takes a long time!
}

void LiquidCrystal::setCursor(uint8_t col, uint8_t row)
     cd8:	64 30       	cpi	r22, 0x04	; 4
     cda:	08 f0       	brcs	.+2      	; 0xcde <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]+0x6>
     cdc:	63 e0       	ldi	r22, 0x03	; 3
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:194
{
  const size_t max_lines = sizeof(_row_offsets) / sizeof(*_row_offsets);
  if ( row >= max_lines ) {
    row = max_lines - 1;    // we count rows starting w/0
  }
  if ( row >= _numlines ) {
     cde:	90 91 90 0b 	lds	r25, 0x0B90	; 0x800b90 <lcd+0x13>
     ce2:	69 17       	cp	r22, r25
     ce4:	10 f0       	brcs	.+4      	; 0xcea <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]+0x12>
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:195
    row = _numlines - 1;    // we count rows starting w/0
     ce6:	6f ef       	ldi	r22, 0xFF	; 255
     ce8:	69 0f       	add	r22, r25
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:198
  }
  
  command(LCD_SETDDRAMADDR | (col + _row_offsets[row]));
     cea:	e6 2f       	mov	r30, r22
     cec:	f0 e0       	ldi	r31, 0x00	; 0
     cee:	e3 58       	subi	r30, 0x83	; 131
     cf0:	f4 4f       	sbci	r31, 0xF4	; 244
     cf2:	94 89       	ldd	r25, Z+20	; 0x14
     cf4:	89 0f       	add	r24, r25
     cf6:	80 68       	ori	r24, 0x80	; 128
     cf8:	0c 94 be 05 	jmp	0xb7c	; 0xb7c <LiquidCrystal::command(unsigned char) [clone .constprop.33]>

00000cfc <LiquidCrystal::write(unsigned char)>:
write():
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:280
inline void LiquidCrystal::command(uint8_t value) {
  send(value, LOW);
}

inline size_t LiquidCrystal::write(uint8_t value) {
  send(value, HIGH);
     cfc:	41 e0       	ldi	r20, 0x01	; 1
     cfe:	0e 94 6b 05 	call	0xad6	; 0xad6 <LiquidCrystal::send(unsigned char, unsigned char)>
C:\Users\14377\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:282
  return 1; // assume sucess
}
     d02:	81 e0       	ldi	r24, 0x01	; 1
     d04:	90 e0       	ldi	r25, 0x00	; 0
     d06:	08 95       	ret

00000d08 <Print::flush()>:
flush():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.h:65

    // default to zero, meaning "a single write may block"
    // should be overriden by subclasses with buffering
    virtual int availableForWrite() { return 0; }

    virtual void flush() { /* Empty implementation for backward compatibility */ }
     d08:	08 95       	ret

00000d0a <Print::availableForWrite()>:
availableForWrite():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.h:63
      return write((const uint8_t *)buffer, size);
    }

    // default to zero, meaning "a single write may block"
    // should be overriden by subclasses with buffering
    virtual int availableForWrite() { return 0; }
     d0a:	90 e0       	ldi	r25, 0x00	; 0
     d0c:	80 e0       	ldi	r24, 0x00	; 0
     d0e:	08 95       	ret

00000d10 <read_sensor(char, char, char)>:
read_sensor():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:209
  int result = 0;
  result = (EEPROM.read(address) << 8) + EEPROM.read(address + 1);
  return result;
}

int read_sensor(char sensorNum, char pinNum, char outputMode) {
     d10:	1f 93       	push	r17
     d12:	cf 93       	push	r28
     d14:	df 93       	push	r29
     d16:	d8 2f       	mov	r29, r24
     d18:	c6 2f       	mov	r28, r22
     d1a:	14 2f       	mov	r17, r20
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:211
  int output = 0;
  byte n1 = sensorNum & 0b0001;
     d1c:	68 2f       	mov	r22, r24
     d1e:	61 70       	andi	r22, 0x01	; 1
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:215
  byte n2 = (sensorNum & 0b0010) / 2;
  byte n3 = (sensorNum & 0b0100) / 4;

  digitalWrite(MUX_A, n1);
     d20:	8c e2       	ldi	r24, 0x2C	; 44
     d22:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:212
}

int read_sensor(char sensorNum, char pinNum, char outputMode) {
  int output = 0;
  byte n1 = sensorNum & 0b0001;
  byte n2 = (sensorNum & 0b0010) / 2;
     d26:	d1 fb       	bst	r29, 1
     d28:	66 27       	eor	r22, r22
     d2a:	60 f9       	bld	r22, 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:216
  byte n3 = (sensorNum & 0b0100) / 4;

  digitalWrite(MUX_A, n1);
  digitalWrite(MUX_B, n2);
     d2c:	8b e2       	ldi	r24, 0x2B	; 43
     d2e:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:213

int read_sensor(char sensorNum, char pinNum, char outputMode) {
  int output = 0;
  byte n1 = sensorNum & 0b0001;
  byte n2 = (sensorNum & 0b0010) / 2;
  byte n3 = (sensorNum & 0b0100) / 4;
     d32:	6d 2f       	mov	r22, r29
     d34:	65 95       	asr	r22
     d36:	65 95       	asr	r22
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:217

  digitalWrite(MUX_A, n1);
  digitalWrite(MUX_B, n2);
  digitalWrite(MUX_C, n3);
     d38:	8a e2       	ldi	r24, 0x2A	; 42
     d3a:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:218
  if (outputMode == 0)  // digital Mode
     d3e:	11 11       	cpse	r17, r1
     d40:	0f c0       	rjmp	.+30     	; 0xd60 <read_sensor(char, char, char)+0x50>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:221
  {
    if (pinNum == 0)
      output = digitalRead(A0);
     d42:	8d e2       	ldi	r24, 0x2D	; 45
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:220
  digitalWrite(MUX_A, n1);
  digitalWrite(MUX_B, n2);
  digitalWrite(MUX_C, n3);
  if (outputMode == 0)  // digital Mode
  {
    if (pinNum == 0)
     d44:	cc 23       	and	r28, r28
     d46:	39 f0       	breq	.+14     	; 0xd56 <read_sensor(char, char, char)+0x46>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:223
      output = digitalRead(A0);
    else if (pinNum == 1)
      output = digitalRead(A1);
     d48:	8e e2       	ldi	r24, 0x2E	; 46
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:222
  digitalWrite(MUX_C, n3);
  if (outputMode == 0)  // digital Mode
  {
    if (pinNum == 0)
      output = digitalRead(A0);
    else if (pinNum == 1)
     d4a:	c1 30       	cpi	r28, 0x01	; 1
     d4c:	21 f0       	breq	.+8      	; 0xd56 <read_sensor(char, char, char)+0x46>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:225
      output = digitalRead(A1);
    else if (pinNum == 2)
      output = digitalRead(A2);
     d4e:	8f e2       	ldi	r24, 0x2F	; 47
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:224
  {
    if (pinNum == 0)
      output = digitalRead(A0);
    else if (pinNum == 1)
      output = digitalRead(A1);
    else if (pinNum == 2)
     d50:	c2 30       	cpi	r28, 0x02	; 2
     d52:	09 f0       	breq	.+2      	; 0xd56 <read_sensor(char, char, char)+0x46>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:227
      output = digitalRead(A2);
    else if (pinNum == 3)
      output = digitalRead(A3);
     d54:	80 e3       	ldi	r24, 0x30	; 48
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:241
    else if (pinNum == 3)
      output = analogRead(A3);
    output = output * 5 / 102.3;
  }
  return output;
}
     d56:	df 91       	pop	r29
     d58:	cf 91       	pop	r28
     d5a:	1f 91       	pop	r17
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:227
    else if (pinNum == 1)
      output = digitalRead(A1);
    else if (pinNum == 2)
      output = digitalRead(A2);
    else if (pinNum == 3)
      output = digitalRead(A3);
     d5c:	0c 94 e3 01 	jmp	0x3c6	; 0x3c6 <digitalRead>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:231
  } else if (outputMode == 1)  // analog Mode
  {
    if (pinNum == 0)
      output = analogRead(A0);
     d60:	8d e2       	ldi	r24, 0x2D	; 45
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:230
      output = digitalRead(A2);
    else if (pinNum == 3)
      output = digitalRead(A3);
  } else if (outputMode == 1)  // analog Mode
  {
    if (pinNum == 0)
     d62:	cc 23       	and	r28, r28
     d64:	39 f0       	breq	.+14     	; 0xd74 <read_sensor(char, char, char)+0x64>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:233
      output = analogRead(A0);
    else if (pinNum == 1)
      output = analogRead(A1);
     d66:	8e e2       	ldi	r24, 0x2E	; 46
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:232
      output = digitalRead(A3);
  } else if (outputMode == 1)  // analog Mode
  {
    if (pinNum == 0)
      output = analogRead(A0);
    else if (pinNum == 1)
     d68:	c1 30       	cpi	r28, 0x01	; 1
     d6a:	21 f0       	breq	.+8      	; 0xd74 <read_sensor(char, char, char)+0x64>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:235
      output = analogRead(A1);
    else if (pinNum == 2)
      output = analogRead(A2);
     d6c:	8f e2       	ldi	r24, 0x2F	; 47
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:234
  {
    if (pinNum == 0)
      output = analogRead(A0);
    else if (pinNum == 1)
      output = analogRead(A1);
    else if (pinNum == 2)
     d6e:	c2 30       	cpi	r28, 0x02	; 2
     d70:	09 f0       	breq	.+2      	; 0xd74 <read_sensor(char, char, char)+0x64>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:237
      output = analogRead(A2);
    else if (pinNum == 3)
      output = analogRead(A3);
     d72:	80 e3       	ldi	r24, 0x30	; 48
     d74:	0e 94 ea 02 	call	0x5d4	; 0x5d4 <analogRead>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:238
    output = output * 5 / 102.3;
     d78:	25 e0       	ldi	r18, 0x05	; 5
     d7a:	28 9f       	mul	r18, r24
     d7c:	b0 01       	movw	r22, r0
     d7e:	29 9f       	mul	r18, r25
     d80:	70 0d       	add	r23, r0
     d82:	11 24       	eor	r1, r1
     d84:	07 2e       	mov	r0, r23
     d86:	00 0c       	add	r0, r0
     d88:	88 0b       	sbc	r24, r24
     d8a:	99 0b       	sbc	r25, r25
     d8c:	0e 94 ac 45 	call	0x8b58	; 0x8b58 <__floatsisf>
     d90:	2a e9       	ldi	r18, 0x9A	; 154
     d92:	39 e9       	ldi	r19, 0x99	; 153
     d94:	4c ec       	ldi	r20, 0xCC	; 204
     d96:	52 e4       	ldi	r21, 0x42	; 66
     d98:	0e 94 02 45 	call	0x8a04	; 0x8a04 <__divsf3>
     d9c:	0e 94 74 45 	call	0x8ae8	; 0x8ae8 <__fixsfsi>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:241
  }
  return output;
}
     da0:	cb 01       	movw	r24, r22
     da2:	df 91       	pop	r29
     da4:	cf 91       	pop	r28
     da6:	1f 91       	pop	r17
     da8:	08 95       	ret

00000daa <go(int, int)>:
go():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:165
  else if (SR8) go(spd, -spd);

  else if (SL9) go(-spd, spd);
  else if (SR9) go(spd, -spd);
}
void go(int left, int right) {
     daa:	0f 93       	push	r16
     dac:	1f 93       	push	r17
     dae:	cf 93       	push	r28
     db0:	df 93       	push	r29
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:167
  left = -left;
  right = -right;
     db2:	00 27       	eor	r16, r16
     db4:	11 27       	eor	r17, r17
     db6:	06 1b       	sub	r16, r22
     db8:	17 0b       	sbc	r17, r23
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:169

  if (left > 255)
     dba:	81 30       	cpi	r24, 0x01	; 1
     dbc:	2f ef       	ldi	r18, 0xFF	; 255
     dbe:	92 07       	cpc	r25, r18
     dc0:	0c f4       	brge	.+2      	; 0xdc4 <go(int, int)+0x1a>
     dc2:	46 c0       	rjmp	.+140    	; 0xe50 <go(int, int)+0xa6>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:171
    left = 255;
  if (left < -255)
     dc4:	8f 3f       	cpi	r24, 0xFF	; 255
     dc6:	91 05       	cpc	r25, r1
     dc8:	09 f0       	breq	.+2      	; 0xdcc <go(int, int)+0x22>
     dca:	cc f5       	brge	.+114    	; 0xe3e <go(int, int)+0x94>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:166

  else if (SL9) go(-spd, spd);
  else if (SR9) go(spd, -spd);
}
void go(int left, int right) {
  left = -left;
     dcc:	cc 27       	eor	r28, r28
     dce:	dd 27       	eor	r29, r29
     dd0:	c8 1b       	sub	r28, r24
     dd2:	d9 0b       	sbc	r29, r25
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:173

  if (left > 255)
    left = 255;
  if (left < -255)
    left = -255;
  if (right > 255)
     dd4:	61 30       	cpi	r22, 0x01	; 1
     dd6:	2f ef       	ldi	r18, 0xFF	; 255
     dd8:	72 07       	cpc	r23, r18
     dda:	2c f1       	brlt	.+74     	; 0xe26 <go(int, int)+0x7c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:175
    right = 255;
  if (right < -255)
     ddc:	6f 3f       	cpi	r22, 0xFF	; 255
     dde:	71 05       	cpc	r23, r1
     de0:	09 f0       	breq	.+2      	; 0xde4 <go(int, int)+0x3a>
     de2:	24 f5       	brge	.+72     	; 0xe2c <go(int, int)+0x82>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:178
    right = -255;

  if (left <= 0) {
     de4:	97 fd       	sbrc	r25, 7
     de6:	29 c0       	rjmp	.+82     	; 0xe3a <go(int, int)+0x90>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:179
    digitalWrite(2, LOW);
     de8:	60 e0       	ldi	r22, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:182
    analogWrite(3, -left);
  } else if (left > 0) {
    digitalWrite(2, HIGH);
     dea:	82 e0       	ldi	r24, 0x02	; 2
     dec:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:183
    analogWrite(3, -left);
     df0:	66 27       	eor	r22, r22
     df2:	77 27       	eor	r23, r23
     df4:	6c 1b       	sub	r22, r28
     df6:	7d 0b       	sbc	r23, r29
     df8:	83 e0       	ldi	r24, 0x03	; 3
     dfa:	0e 94 76 02 	call	0x4ec	; 0x4ec <analogWrite>
     dfe:	cc 27       	eor	r28, r28
     e00:	dd 27       	eor	r29, r29
     e02:	c0 1b       	sub	r28, r16
     e04:	d1 0b       	sbc	r29, r17
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:187
  }

  if (right <= 0) {
    digitalWrite(4, LOW);
     e06:	60 e0       	ldi	r22, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:186
  } else if (left > 0) {
    digitalWrite(2, HIGH);
    analogWrite(3, -left);
  }

  if (right <= 0) {
     e08:	10 16       	cp	r1, r16
     e0a:	11 06       	cpc	r1, r17
     e0c:	0c f4       	brge	.+2      	; 0xe10 <go(int, int)+0x66>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:192
    digitalWrite(4, LOW);
    analogWrite(5, -right);
  }

  else if (right > 0) {
    digitalWrite(4, HIGH);
     e0e:	61 e0       	ldi	r22, 0x01	; 1
     e10:	84 e0       	ldi	r24, 0x04	; 4
     e12:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:193
    analogWrite(5, -right);
     e16:	be 01       	movw	r22, r28
     e18:	85 e0       	ldi	r24, 0x05	; 5
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:195
  }
}
     e1a:	df 91       	pop	r29
     e1c:	cf 91       	pop	r28
     e1e:	1f 91       	pop	r17
     e20:	0f 91       	pop	r16
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:193
    analogWrite(5, -right);
  }

  else if (right > 0) {
    digitalWrite(4, HIGH);
    analogWrite(5, -right);
     e22:	0c 94 76 02 	jmp	0x4ec	; 0x4ec <analogWrite>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:174
  if (left > 255)
    left = 255;
  if (left < -255)
    left = -255;
  if (right > 255)
    right = 255;
     e26:	0f ef       	ldi	r16, 0xFF	; 255
     e28:	10 e0       	ldi	r17, 0x00	; 0
     e2a:	dc cf       	rjmp	.-72     	; 0xde4 <go(int, int)+0x3a>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:176
  if (right < -255)
    right = -255;
     e2c:	01 e0       	ldi	r16, 0x01	; 1
     e2e:	1f ef       	ldi	r17, 0xFF	; 255
     e30:	d9 cf       	rjmp	.-78     	; 0xde4 <go(int, int)+0x3a>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:174
  if (left > 255)
    left = 255;
  if (left < -255)
    left = -255;
  if (right > 255)
    right = 255;
     e32:	0f ef       	ldi	r16, 0xFF	; 255
     e34:	10 e0       	ldi	r17, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:170
void go(int left, int right) {
  left = -left;
  right = -right;

  if (left > 255)
    left = 255;
     e36:	cf ef       	ldi	r28, 0xFF	; 255
     e38:	d0 e0       	ldi	r29, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:182

  if (left <= 0) {
    digitalWrite(2, LOW);
    analogWrite(3, -left);
  } else if (left > 0) {
    digitalWrite(2, HIGH);
     e3a:	61 e0       	ldi	r22, 0x01	; 1
     e3c:	d6 cf       	rjmp	.-84     	; 0xdea <go(int, int)+0x40>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:173

  if (left > 255)
    left = 255;
  if (left < -255)
    left = -255;
  if (right > 255)
     e3e:	61 30       	cpi	r22, 0x01	; 1
     e40:	8f ef       	ldi	r24, 0xFF	; 255
     e42:	78 07       	cpc	r23, r24
     e44:	84 f4       	brge	.+32     	; 0xe66 <go(int, int)+0xbc>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:174
    right = 255;
     e46:	0f ef       	ldi	r16, 0xFF	; 255
     e48:	10 e0       	ldi	r17, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:172
  right = -right;

  if (left > 255)
    left = 255;
  if (left < -255)
    left = -255;
     e4a:	c1 e0       	ldi	r28, 0x01	; 1
     e4c:	df ef       	ldi	r29, 0xFF	; 255
     e4e:	cc cf       	rjmp	.-104    	; 0xde8 <go(int, int)+0x3e>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:173
  if (right > 255)
     e50:	61 30       	cpi	r22, 0x01	; 1
     e52:	2f ef       	ldi	r18, 0xFF	; 255
     e54:	72 07       	cpc	r23, r18
     e56:	6c f3       	brlt	.-38     	; 0xe32 <go(int, int)+0x88>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:175
    right = 255;
  if (right < -255)
     e58:	6f 3f       	cpi	r22, 0xFF	; 255
     e5a:	71 05       	cpc	r23, r1
     e5c:	61 f3       	breq	.-40     	; 0xe36 <go(int, int)+0x8c>
     e5e:	5c f3       	brlt	.-42     	; 0xe36 <go(int, int)+0x8c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:176
    right = -255;
     e60:	01 e0       	ldi	r16, 0x01	; 1
     e62:	1f ef       	ldi	r17, 0xFF	; 255
     e64:	e8 cf       	rjmp	.-48     	; 0xe36 <go(int, int)+0x8c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:175
    left = 255;
  if (left < -255)
    left = -255;
  if (right > 255)
    right = 255;
  if (right < -255)
     e66:	6f 3f       	cpi	r22, 0xFF	; 255
     e68:	71 05       	cpc	r23, r1
     e6a:	79 f3       	breq	.-34     	; 0xe4a <go(int, int)+0xa0>
     e6c:	74 f3       	brlt	.-36     	; 0xe4a <go(int, int)+0xa0>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:176
    right = -255;
     e6e:	01 e0       	ldi	r16, 0x01	; 1
     e70:	1f ef       	ldi	r17, 0xFF	; 255
     e72:	eb cf       	rjmp	.-42     	; 0xe4a <go(int, int)+0xa0>

00000e74 <move(int, int, int)>:
move():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1889
      break;
    }
  }
  get_back();
}
void move(int direction, int lenth, int speed=180) {
     e74:	cf 92       	push	r12
     e76:	df 92       	push	r13
     e78:	ef 92       	push	r14
     e7a:	ff 92       	push	r15
     e7c:	0f 93       	push	r16
     e7e:	1f 93       	push	r17
     e80:	cf 93       	push	r28
     e82:	df 93       	push	r29
     e84:	8b 01       	movw	r16, r22
     e86:	ea 01       	movw	r28, r20
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1906
        go(-speed, speed);
      }
      go(0, 0);
      break;
    case Right:
      cnt = 0;
     e88:	1d bc       	out	0x2d, r1	; 45
     e8a:	1c bc       	out	0x2c, r1	; 44
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1890
    }
  }
  get_back();
}
void move(int direction, int lenth, int speed=180) {
  switch (direction) {
     e8c:	8c 30       	cpi	r24, 0x0C	; 12
     e8e:	91 05       	cpc	r25, r1
     e90:	c1 f1       	breq	.+112    	; 0xf02 <move(int, int, int)+0x8e>
     e92:	8d 30       	cpi	r24, 0x0D	; 13
     e94:	91 05       	cpc	r25, r1
     e96:	09 f4       	brne	.+2      	; 0xe9a <move(int, int, int)+0x26>
     e98:	48 c0       	rjmp	.+144    	; 0xf2a <move(int, int, int)+0xb6>
     e9a:	0b 97       	sbiw	r24, 0x0b	; 11
     e9c:	f1 f0       	breq	.+60     	; 0xeda <move(int, int, int)+0x66>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1893
    case forward:
      cnt = 0;
      while (cnt / 100 < lenth) {
     e9e:	34 e6       	ldi	r19, 0x64	; 100
     ea0:	e3 2e       	mov	r14, r19
     ea2:	f1 2c       	mov	r15, r1
     ea4:	8c b5       	in	r24, 0x2c	; 44
     ea6:	9d b5       	in	r25, 0x2d	; 45
     ea8:	b7 01       	movw	r22, r14
     eaa:	0e 94 c9 46 	call	0x8d92	; 0x8d92 <__udivmodhi4>
     eae:	60 17       	cp	r22, r16
     eb0:	71 07       	cpc	r23, r17
     eb2:	28 f4       	brcc	.+10     	; 0xebe <move(int, int, int)+0x4a>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1894
        go(speed, speed);
     eb4:	be 01       	movw	r22, r28
     eb6:	ce 01       	movw	r24, r28
     eb8:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
     ebc:	f3 cf       	rjmp	.-26     	; 0xea4 <move(int, int, int)+0x30>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1896
      }
      go(0, 0);
     ebe:	70 e0       	ldi	r23, 0x00	; 0
     ec0:	60 e0       	ldi	r22, 0x00	; 0
     ec2:	90 e0       	ldi	r25, 0x00	; 0
     ec4:	80 e0       	ldi	r24, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1920
        go(-speed, -speed);
      }
      go(0, 0);
      break;
  }
}
     ec6:	df 91       	pop	r29
     ec8:	cf 91       	pop	r28
     eca:	1f 91       	pop	r17
     ecc:	0f 91       	pop	r16
     ece:	ff 90       	pop	r15
     ed0:	ef 90       	pop	r14
     ed2:	df 90       	pop	r13
     ed4:	cf 90       	pop	r12
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1896
    case forward:
      cnt = 0;
      while (cnt / 100 < lenth) {
        go(speed, speed);
      }
      go(0, 0);
     ed6:	0c 94 d5 06 	jmp	0xdaa	; 0xdaa <go(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1900
      break;
    case Left:
      cnt = 0;
      while (cnt / 100 < lenth) {
     eda:	24 e6       	ldi	r18, 0x64	; 100
     edc:	c2 2e       	mov	r12, r18
     ede:	d1 2c       	mov	r13, r1
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1901
        go(-speed, speed);
     ee0:	ee 24       	eor	r14, r14
     ee2:	ff 24       	eor	r15, r15
     ee4:	e4 1a       	sub	r14, r20
     ee6:	f5 0a       	sbc	r15, r21
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1900
      }
      go(0, 0);
      break;
    case Left:
      cnt = 0;
      while (cnt / 100 < lenth) {
     ee8:	8c b5       	in	r24, 0x2c	; 44
     eea:	9d b5       	in	r25, 0x2d	; 45
     eec:	b6 01       	movw	r22, r12
     eee:	0e 94 c9 46 	call	0x8d92	; 0x8d92 <__udivmodhi4>
     ef2:	60 17       	cp	r22, r16
     ef4:	71 07       	cpc	r23, r17
     ef6:	18 f7       	brcc	.-58     	; 0xebe <move(int, int, int)+0x4a>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1901
        go(-speed, speed);
     ef8:	be 01       	movw	r22, r28
     efa:	c7 01       	movw	r24, r14
     efc:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
     f00:	f3 cf       	rjmp	.-26     	; 0xee8 <move(int, int, int)+0x74>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1907
      }
      go(0, 0);
      break;
    case Right:
      cnt = 0;
      while (cnt / 100 < lenth) {
     f02:	94 e6       	ldi	r25, 0x64	; 100
     f04:	c9 2e       	mov	r12, r25
     f06:	d1 2c       	mov	r13, r1
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1908
        go(speed, -speed);
     f08:	ee 24       	eor	r14, r14
     f0a:	ff 24       	eor	r15, r15
     f0c:	e4 1a       	sub	r14, r20
     f0e:	f5 0a       	sbc	r15, r21
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1907
      }
      go(0, 0);
      break;
    case Right:
      cnt = 0;
      while (cnt / 100 < lenth) {
     f10:	8c b5       	in	r24, 0x2c	; 44
     f12:	9d b5       	in	r25, 0x2d	; 45
     f14:	b6 01       	movw	r22, r12
     f16:	0e 94 c9 46 	call	0x8d92	; 0x8d92 <__udivmodhi4>
     f1a:	60 17       	cp	r22, r16
     f1c:	71 07       	cpc	r23, r17
     f1e:	78 f6       	brcc	.-98     	; 0xebe <move(int, int, int)+0x4a>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1908
        go(speed, -speed);
     f20:	b7 01       	movw	r22, r14
     f22:	ce 01       	movw	r24, r28
     f24:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
     f28:	f3 cf       	rjmp	.-26     	; 0xf10 <move(int, int, int)+0x9c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1914
      }
      go(0, 0);
      break;
    case Back:
      cnt = 0;
      while (cnt / 100 < lenth) {
     f2a:	84 e6       	ldi	r24, 0x64	; 100
     f2c:	e8 2e       	mov	r14, r24
     f2e:	f1 2c       	mov	r15, r1
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1915
        go(-speed, -speed);
     f30:	d1 95       	neg	r29
     f32:	c1 95       	neg	r28
     f34:	d1 09       	sbc	r29, r1
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1914
      }
      go(0, 0);
      break;
    case Back:
      cnt = 0;
      while (cnt / 100 < lenth) {
     f36:	8c b5       	in	r24, 0x2c	; 44
     f38:	9d b5       	in	r25, 0x2d	; 45
     f3a:	b7 01       	movw	r22, r14
     f3c:	0e 94 c9 46 	call	0x8d92	; 0x8d92 <__udivmodhi4>
     f40:	60 17       	cp	r22, r16
     f42:	71 07       	cpc	r23, r17
     f44:	08 f0       	brcs	.+2      	; 0xf48 <move(int, int, int)+0xd4>
     f46:	bb cf       	rjmp	.-138    	; 0xebe <move(int, int, int)+0x4a>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1915
        go(-speed, -speed);
     f48:	be 01       	movw	r22, r28
     f4a:	ce 01       	movw	r24, r28
     f4c:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
     f50:	f2 cf       	rjmp	.-28     	; 0xf36 <move(int, int, int)+0xc2>

00000f52 <beep(int)>:
beep():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:7
void move(int direction, int lenth, int speed);
unsigned int vl(char xv);
void handle_color();
void get_out();

void beep(int num) {
     f52:	0f 93       	push	r16
     f54:	1f 93       	push	r17
     f56:	cf 93       	push	r28
     f58:	df 93       	push	r29
     f5a:	8c 01       	movw	r16, r24
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:8
  for (int i = 0; i < num; i++) {
     f5c:	d0 e0       	ldi	r29, 0x00	; 0
     f5e:	c0 e0       	ldi	r28, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:9
    buz_on;
     f60:	61 e0       	ldi	r22, 0x01	; 1
     f62:	83 e2       	ldi	r24, 0x23	; 35
     f64:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:10
    delay(50);
     f68:	62 e3       	ldi	r22, 0x32	; 50
     f6a:	70 e0       	ldi	r23, 0x00	; 0
     f6c:	80 e0       	ldi	r24, 0x00	; 0
     f6e:	90 e0       	ldi	r25, 0x00	; 0
     f70:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:11
    buz_off;
     f74:	60 e0       	ldi	r22, 0x00	; 0
     f76:	83 e2       	ldi	r24, 0x23	; 35
     f78:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:12
    delay(50);
     f7c:	62 e3       	ldi	r22, 0x32	; 50
     f7e:	70 e0       	ldi	r23, 0x00	; 0
     f80:	80 e0       	ldi	r24, 0x00	; 0
     f82:	90 e0       	ldi	r25, 0x00	; 0
     f84:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:8
unsigned int vl(char xv);
void handle_color();
void get_out();

void beep(int num) {
  for (int i = 0; i < num; i++) {
     f88:	21 96       	adiw	r28, 0x01	; 1
     f8a:	0c 17       	cp	r16, r28
     f8c:	1d 07       	cpc	r17, r29
     f8e:	41 f7       	brne	.-48     	; 0xf60 <beep(int)+0xe>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:14
    buz_on;
    delay(50);
    buz_off;
    delay(50);
  }
}
     f90:	df 91       	pop	r29
     f92:	cf 91       	pop	r28
     f94:	1f 91       	pop	r17
     f96:	0f 91       	pop	r16
     f98:	08 95       	ret

00000f9a <AX(char, int, int)>:
AX():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:284
    delay(10); // bayad bashe hatman    hade aghal=10  // 1 bazi vaghta error mideh
               //    RXD;
}
void AX(char ID, int position, int speed)
{
    TxBuffer[0] = 0xff;
     f9a:	9f ef       	ldi	r25, 0xFF	; 255
     f9c:	90 93 02 09 	sts	0x0902, r25	; 0x800902 <TxBuffer>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:285
    TxBuffer[1] = 0xff;
     fa0:	90 93 03 09 	sts	0x0903, r25	; 0x800903 <TxBuffer+0x1>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:286
    TxBuffer[2] = ID; // ID
     fa4:	80 93 04 09 	sts	0x0904, r24	; 0x800904 <TxBuffer+0x2>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:287
    TxBuffer[3] = 7;  // Length(Paramter=5,Instruction=1,Checksum=1)
     fa8:	87 e0       	ldi	r24, 0x07	; 7
     faa:	80 93 05 09 	sts	0x0905, r24	; 0x800905 <TxBuffer+0x3>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:288
    TxBuffer[4] = 3;  // bInstruction;
     fae:	83 e0       	ldi	r24, 0x03	; 3
     fb0:	80 93 06 09 	sts	0x0906, r24	; 0x800906 <TxBuffer+0x4>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:290

    TxBuffer[5] = 30;             // Address of position
     fb4:	8e e1       	ldi	r24, 0x1E	; 30
     fb6:	80 93 07 09 	sts	0x0907, r24	; 0x800907 <TxBuffer+0x5>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:291
    TxBuffer[6] = position & 255; // Writing Data P_GOAL_POSITION_L2
     fba:	60 93 08 09 	sts	0x0908, r22	; 0x800908 <TxBuffer+0x6>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:292
    TxBuffer[7] = position >> 8;  // Writing Data P_GOAL_POSITION_H
     fbe:	70 93 09 09 	sts	0x0909, r23	; 0x800909 <TxBuffer+0x7>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:293
    TxBuffer[8] = speed & 255;    // Writing Data P_GOAL_SPEED_L2
     fc2:	40 93 0a 09 	sts	0x090A, r20	; 0x80090a <TxBuffer+0x8>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:294
    TxBuffer[9] = speed >> 8;     // Writing Data P_GOAL_SPEED_H
     fc6:	50 93 0b 09 	sts	0x090B, r21	; 0x80090b <TxBuffer+0x9>
_TXsend():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:262
void _TXsend(char last_TXBuffer)
{
    unsigned char CheckSum, Count;
    //    TXD;
    //    DDRD.3=1; ready to send
    send_mode;
     fca:	61 e0       	ldi	r22, 0x01	; 1
     fcc:	86 e1       	ldi	r24, 0x16	; 22
     fce:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
     fd2:	e4 e0       	ldi	r30, 0x04	; 4
     fd4:	f9 e0       	ldi	r31, 0x09	; 9
AX():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:263
    CheckSum = 0;
     fd6:	80 e0       	ldi	r24, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:264
    for (Count = 2; Count <= last_TXBuffer; Count++) // except 0xff,checksum
     fd8:	92 e0       	ldi	r25, 0x02	; 2
_TXsend():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:265
        CheckSum += TxBuffer[Count];
     fda:	21 91       	ld	r18, Z+
     fdc:	82 0f       	add	r24, r18
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:264
    unsigned char CheckSum, Count;
    //    TXD;
    //    DDRD.3=1; ready to send
    send_mode;
    CheckSum = 0;
    for (Count = 2; Count <= last_TXBuffer; Count++) // except 0xff,checksum
     fde:	9f 5f       	subi	r25, 0xFF	; 255
     fe0:	9a 30       	cpi	r25, 0x0A	; 10
     fe2:	d9 f7       	brne	.-10     	; 0xfda <AX(char, int, int)+0x40>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:266
        CheckSum += TxBuffer[Count];
    TxBuffer[last_TXBuffer + 1] = ~CheckSum; // Writing Checksum with Bit Inversion
     fe4:	80 95       	com	r24
     fe6:	80 93 0c 09 	sts	0x090C, r24	; 0x80090c <TxBuffer+0xa>
     fea:	e2 e0       	ldi	r30, 0x02	; 2
     fec:	f9 e0       	ldi	r31, 0x09	; 9
AX():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:267
    for (Count = 0; Count <= last_TXBuffer + 1; Count++)
     fee:	80 e0       	ldi	r24, 0x00	; 0
_TXsend():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:271
    {
        // Serial1.write(TxBuffer[Count]);
        // delayMicroseconds(100);
        while (!TXD_READY)
     ff0:	90 91 9b 00 	lds	r25, 0x009B	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
     ff4:	95 ff       	sbrs	r25, 5
     ff6:	fc cf       	rjmp	.-8      	; 0xff0 <AX(char, int, int)+0x56>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:273
            ;
        M_UDR = TxBuffer[Count];
     ff8:	91 91       	ld	r25, Z+
     ffa:	90 93 9c 00 	sts	0x009C, r25	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:267
    send_mode;
    CheckSum = 0;
    for (Count = 2; Count <= last_TXBuffer; Count++) // except 0xff,checksum
        CheckSum += TxBuffer[Count];
    TxBuffer[last_TXBuffer + 1] = ~CheckSum; // Writing Checksum with Bit Inversion
    for (Count = 0; Count <= last_TXBuffer + 1; Count++)
     ffe:	8f 5f       	subi	r24, 0xFF	; 255
    1000:	8b 30       	cpi	r24, 0x0B	; 11
    1002:	b1 f7       	brne	.-20     	; 0xff0 <AX(char, int, int)+0x56>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:275
        // delayMicroseconds(100);
        while (!TXD_READY)
            ;
        M_UDR = TxBuffer[Count];
    }
    while (!CHECK_TXD_FINISH)
    1004:	80 91 9b 00 	lds	r24, 0x009B	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
    1008:	86 ff       	sbrs	r24, 6
    100a:	fc cf       	rjmp	.-8      	; 0x1004 <AX(char, int, int)+0x6a>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:279
        ; // Wait until TXD Shift register empty

    //    DDRD.3=0;
    delay(10); // bayad bashe hatman    hade aghal=10  // 1 bazi vaghta error mideh
    100c:	6a e0       	ldi	r22, 0x0A	; 10
    100e:	70 e0       	ldi	r23, 0x00	; 0
    1010:	80 e0       	ldi	r24, 0x00	; 0
    1012:	90 e0       	ldi	r25, 0x00	; 0
    1014:	0c 94 24 03 	jmp	0x648	; 0x648 <delay>

00001018 <rotate(int)>:
rotate():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2264
    else if(pos==1)AX(20,400,400);
    else if(pos==2)AX(20,715,400);
    else if(pos==3)AX(20,1022,400);
  } 
int  rotate(int type)
    {
    1018:	cf 93       	push	r28
    101a:	df 93       	push	r29
    101c:	e5 e8       	ldi	r30, 0x85	; 133
    101e:	f9 e0       	ldi	r31, 0x09	; 9
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2267
    int i;
    //#asm("cli")
    for(i=0;i<=3;i++)
    1020:	d0 e0       	ldi	r29, 0x00	; 0
    1022:	c0 e0       	ldi	r28, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2269
        {
        if(barband[i]==type )
    1024:	21 91       	ld	r18, Z+
    1026:	02 2e       	mov	r0, r18
    1028:	00 0c       	add	r0, r0
    102a:	33 0b       	sbc	r19, r19
    102c:	28 17       	cp	r18, r24
    102e:	39 07       	cpc	r19, r25
    1030:	f9 f4       	brne	.+62     	; 0x1070 <rotate(int)+0x58>
rotation_motor():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2258
  XL_Gripper(30, pos, speed);delay(1);
  XL_Gripper(31, 1023 - pos+xl_error, speed);
}
void rotation_motor(int pos)
    {
    if(pos==0)AX(20,90,400);
    1032:	40 e9       	ldi	r20, 0x90	; 144
    1034:	51 e0       	ldi	r21, 0x01	; 1
    1036:	6a e5       	ldi	r22, 0x5A	; 90
    1038:	70 e0       	ldi	r23, 0x00	; 0
    103a:	20 97       	sbiw	r28, 0x00	; 0
    103c:	51 f0       	breq	.+20     	; 0x1052 <rotate(int)+0x3a>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2259
    else if(pos==1)AX(20,400,400);
    103e:	60 e9       	ldi	r22, 0x90	; 144
    1040:	71 e0       	ldi	r23, 0x01	; 1
    1042:	c1 30       	cpi	r28, 0x01	; 1
    1044:	d1 05       	cpc	r29, r1
    1046:	29 f0       	breq	.+10     	; 0x1052 <rotate(int)+0x3a>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2260
    else if(pos==2)AX(20,715,400);
    1048:	c2 30       	cpi	r28, 0x02	; 2
    104a:	d1 05       	cpc	r29, r1
    104c:	49 f4       	brne	.+18     	; 0x1060 <rotate(int)+0x48>
    104e:	6b ec       	ldi	r22, 0xCB	; 203
    1050:	72 e0       	ldi	r23, 0x02	; 2
    1052:	84 e1       	ldi	r24, 0x14	; 20
    1054:	0e 94 cd 07 	call	0xf9a	; 0xf9a <AX(char, int, int)>
rotate():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2278
            return i;
            }
        }
    //#asm("sei")                         
    return 10;
  }
    1058:	ce 01       	movw	r24, r28
    105a:	df 91       	pop	r29
    105c:	cf 91       	pop	r28
    105e:	08 95       	ret
rotation_motor():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2261
void rotation_motor(int pos)
    {
    if(pos==0)AX(20,90,400);
    else if(pos==1)AX(20,400,400);
    else if(pos==2)AX(20,715,400);
    else if(pos==3)AX(20,1022,400);
    1060:	6e ef       	ldi	r22, 0xFE	; 254
    1062:	73 e0       	ldi	r23, 0x03	; 3
    1064:	84 e1       	ldi	r24, 0x14	; 20
    1066:	0e 94 cd 07 	call	0xf9a	; 0xf9a <AX(char, int, int)>
    106a:	c3 e0       	ldi	r28, 0x03	; 3
    106c:	d0 e0       	ldi	r29, 0x00	; 0
    106e:	f4 cf       	rjmp	.-24     	; 0x1058 <rotate(int)+0x40>
rotate():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2267
  } 
int  rotate(int type)
    {
    int i;
    //#asm("cli")
    for(i=0;i<=3;i++)
    1070:	21 96       	adiw	r28, 0x01	; 1
    1072:	c4 30       	cpi	r28, 0x04	; 4
    1074:	d1 05       	cpc	r29, r1
    1076:	b1 f6       	brne	.-84     	; 0x1024 <rotate(int)+0xc>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2277
            //#asm("sei")                         
            return i;
            }
        }
    //#asm("sei")                         
    return 10;
    1078:	ca e0       	ldi	r28, 0x0A	; 10
    107a:	d0 e0       	ldi	r29, 0x00	; 0
    107c:	ed cf       	rjmp	.-38     	; 0x1058 <rotate(int)+0x40>

0000107e <move_arm(int, int)>:
move_arm():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2248

void move_basket(int pos,int speed){
  AX(10,pos,speed);

  }
void move_arm(int pos,int speed){
    107e:	ab 01       	movw	r20, r22
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2249
  AX(11,pos,speed);
    1080:	bc 01       	movw	r22, r24
    1082:	8b e0       	ldi	r24, 0x0B	; 11
    1084:	0c 94 cd 07 	jmp	0xf9a	; 0xf9a <AX(char, int, int)>

00001088 <XL_Gripper(char, int, int)>:
XL_Gripper():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:151
void XL_Gripper(char ID, int position, int speed)
{
    char Count;
    unsigned short CRC;

    packet[0] = 0xFF;
    1088:	2f ef       	ldi	r18, 0xFF	; 255
    108a:	30 e0       	ldi	r19, 0x00	; 0
    108c:	30 93 fc 09 	sts	0x09FC, r19	; 0x8009fc <packet+0x1>
    1090:	20 93 fb 09 	sts	0x09FB, r18	; 0x8009fb <packet>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:152
    packet[1] = 0xFF;
    1094:	30 93 fe 09 	sts	0x09FE, r19	; 0x8009fe <packet+0x3>
    1098:	20 93 fd 09 	sts	0x09FD, r18	; 0x8009fd <packet+0x2>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:153
    packet[2] = 0xFD;
    109c:	2d ef       	ldi	r18, 0xFD	; 253
    109e:	30 e0       	ldi	r19, 0x00	; 0
    10a0:	30 93 00 0a 	sts	0x0A00, r19	; 0x800a00 <packet+0x5>
    10a4:	20 93 ff 09 	sts	0x09FF, r18	; 0x8009ff <packet+0x4>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:154
    packet[3] = 0x00;                   // RESERVED
    10a8:	10 92 02 0a 	sts	0x0A02, r1	; 0x800a02 <packet+0x7>
    10ac:	10 92 01 0a 	sts	0x0A01, r1	; 0x800a01 <packet+0x6>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:155
    packet[4] = ID;                     // id
    10b0:	08 2e       	mov	r0, r24
    10b2:	00 0c       	add	r0, r0
    10b4:	99 0b       	sbc	r25, r25
    10b6:	90 93 04 0a 	sts	0x0A04, r25	; 0x800a04 <packet+0x9>
    10ba:	80 93 03 0a 	sts	0x0A03, r24	; 0x800a03 <packet+0x8>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:156
    packet[5] = 7 + 2;                  // packet lengh L  : packet lengh after packet lengh
    10be:	89 e0       	ldi	r24, 0x09	; 9
    10c0:	90 e0       	ldi	r25, 0x00	; 0
    10c2:	90 93 06 0a 	sts	0x0A06, r25	; 0x800a06 <packet+0xb>
    10c6:	80 93 05 0a 	sts	0x0A05, r24	; 0x800a05 <packet+0xa>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:157
    packet[6] = 0;                      // packet lengh H
    10ca:	10 92 08 0a 	sts	0x0A08, r1	; 0x800a08 <packet+0xd>
    10ce:	10 92 07 0a 	sts	0x0A07, r1	; 0x800a07 <packet+0xc>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:158
    packet[7] = 3;                      // Instraction
    10d2:	83 e0       	ldi	r24, 0x03	; 3
    10d4:	90 e0       	ldi	r25, 0x00	; 0
    10d6:	90 93 0a 0a 	sts	0x0A0A, r25	; 0x800a0a <packet+0xf>
    10da:	80 93 09 0a 	sts	0x0A09, r24	; 0x800a09 <packet+0xe>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:159
    packet[8] = 30;                     // address L
    10de:	8e e1       	ldi	r24, 0x1E	; 30
    10e0:	90 e0       	ldi	r25, 0x00	; 0
    10e2:	90 93 0c 0a 	sts	0x0A0C, r25	; 0x800a0c <packet+0x11>
    10e6:	80 93 0b 0a 	sts	0x0A0B, r24	; 0x800a0b <packet+0x10>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:160
    packet[9] = 0;                      // address H
    10ea:	10 92 0e 0a 	sts	0x0A0E, r1	; 0x800a0e <packet+0x13>
    10ee:	10 92 0d 0a 	sts	0x0A0D, r1	; 0x800a0d <packet+0x12>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:161
    packet[10] = position & 255;        // parameter
    10f2:	cb 01       	movw	r24, r22
    10f4:	99 27       	eor	r25, r25
    10f6:	90 93 10 0a 	sts	0x0A10, r25	; 0x800a10 <packet+0x15>
    10fa:	80 93 0f 0a 	sts	0x0A0F, r24	; 0x800a0f <packet+0x14>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:162
    packet[11] = (position >> 8) & 255; // parameter
    10fe:	70 93 11 0a 	sts	0x0A11, r23	; 0x800a11 <packet+0x16>
    1102:	10 92 12 0a 	sts	0x0A12, r1	; 0x800a12 <packet+0x17>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:163
    packet[12] = speed & 255;           // parameter
    1106:	ca 01       	movw	r24, r20
    1108:	99 27       	eor	r25, r25
    110a:	90 93 14 0a 	sts	0x0A14, r25	; 0x800a14 <packet+0x19>
    110e:	80 93 13 0a 	sts	0x0A13, r24	; 0x800a13 <packet+0x18>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:164
    packet[13] = (speed >> 8) & 255;    // parameter
    1112:	50 93 15 0a 	sts	0x0A15, r21	; 0x800a15 <packet+0x1a>
    1116:	10 92 16 0a 	sts	0x0A16, r1	; 0x800a16 <packet+0x1b>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:166

    CRC = update_crc(0, packet, 14);
    111a:	0e 94 db 00 	call	0x1b6	; 0x1b6 <update_crc(unsigned short, unsigned short*, unsigned short) [clone .constprop.26]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:167
    packet[14] = CRC & 0xFF;        // CRC_L
    111e:	9c 01       	movw	r18, r24
    1120:	33 27       	eor	r19, r19
    1122:	30 93 18 0a 	sts	0x0A18, r19	; 0x800a18 <packet+0x1d>
    1126:	20 93 17 0a 	sts	0x0A17, r18	; 0x800a17 <packet+0x1c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:168
    packet[15] = (CRC >> 8) & 0xFF; // CRC_H
    112a:	90 93 19 0a 	sts	0x0A19, r25	; 0x800a19 <packet+0x1e>
    112e:	10 92 1a 0a 	sts	0x0A1A, r1	; 0x800a1a <packet+0x1f>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:169
    send_mode;
    1132:	61 e0       	ldi	r22, 0x01	; 1
    1134:	86 e1       	ldi	r24, 0x16	; 22
    1136:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
    113a:	eb ef       	ldi	r30, 0xFB	; 251
    113c:	f9 e0       	ldi	r31, 0x09	; 9
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:172
    for (Count = 0; Count < 16; Count++)
    {
        while (!TXD_READY)
    113e:	80 91 9b 00 	lds	r24, 0x009B	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
    1142:	85 ff       	sbrs	r24, 5
    1144:	fc cf       	rjmp	.-8      	; 0x113e <__stack+0x3f>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:174
            ;
        M_UDR = packet[Count];
    1146:	80 81       	ld	r24, Z
    1148:	32 96       	adiw	r30, 0x02	; 2
    114a:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:170

    CRC = update_crc(0, packet, 14);
    packet[14] = CRC & 0xFF;        // CRC_L
    packet[15] = (CRC >> 8) & 0xFF; // CRC_H
    send_mode;
    for (Count = 0; Count < 16; Count++)
    114e:	8a e0       	ldi	r24, 0x0A	; 10
    1150:	eb 31       	cpi	r30, 0x1B	; 27
    1152:	f8 07       	cpc	r31, r24
    1154:	a1 f7       	brne	.-24     	; 0x113e <__stack+0x3f>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:176
    {
        while (!TXD_READY)
            ;
        M_UDR = packet[Count];
    }
    while (!CHECK_TXD_FINISH)
    1156:	80 91 9b 00 	lds	r24, 0x009B	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
    115a:	86 ff       	sbrs	r24, 6
    115c:	fc cf       	rjmp	.-8      	; 0x1156 <__stack+0x57>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:178
        ; // Wait until TXD Shift register empty
    delay(15);
    115e:	6f e0       	ldi	r22, 0x0F	; 15
    1160:	70 e0       	ldi	r23, 0x00	; 0
    1162:	80 e0       	ldi	r24, 0x00	; 0
    1164:	90 e0       	ldi	r25, 0x00	; 0
    1166:	0c 94 24 03 	jmp	0x648	; 0x648 <delay>

0000116a <move_gripper(int, int)>:
move_gripper():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2252

  }
void move_gripper(int pos,int speed){
    116a:	0f 93       	push	r16
    116c:	1f 93       	push	r17
    116e:	cf 93       	push	r28
    1170:	df 93       	push	r29
    1172:	8c 01       	movw	r16, r24
    1174:	eb 01       	movw	r28, r22
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2253
  XL_Gripper(30, pos, speed);delay(1);
    1176:	ab 01       	movw	r20, r22
    1178:	bc 01       	movw	r22, r24
    117a:	8e e1       	ldi	r24, 0x1E	; 30
    117c:	0e 94 44 08 	call	0x1088	; 0x1088 <XL_Gripper(char, int, int)>
    1180:	61 e0       	ldi	r22, 0x01	; 1
    1182:	70 e0       	ldi	r23, 0x00	; 0
    1184:	80 e0       	ldi	r24, 0x00	; 0
    1186:	90 e0       	ldi	r25, 0x00	; 0
    1188:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2254
  XL_Gripper(31, 1023 - pos+xl_error, speed);
    118c:	65 e4       	ldi	r22, 0x45	; 69
    118e:	74 e0       	ldi	r23, 0x04	; 4
    1190:	60 1b       	sub	r22, r16
    1192:	71 0b       	sbc	r23, r17
    1194:	ae 01       	movw	r20, r28
    1196:	8f e1       	ldi	r24, 0x1F	; 31
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2255
}
    1198:	df 91       	pop	r29
    119a:	cf 91       	pop	r28
    119c:	1f 91       	pop	r17
    119e:	0f 91       	pop	r16
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2254
  AX(11,pos,speed);

  }
void move_gripper(int pos,int speed){
  XL_Gripper(30, pos, speed);delay(1);
  XL_Gripper(31, 1023 - pos+xl_error, speed);
    11a0:	0c 94 44 08 	jmp	0x1088	; 0x1088 <XL_Gripper(char, int, int)>

000011a4 <Print::printf(char const*, ...) [clone .constprop.22]>:
printf():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:208
{
  ((class Print *)(fdev_get_udata(fp)))->write((uint8_t)c);
  return 0;
}

int16_t Print::printf(const char *format, ...)
    11a4:	cf 93       	push	r28
    11a6:	df 93       	push	r29
    11a8:	cd b7       	in	r28, 0x3d	; 61
    11aa:	de b7       	in	r29, 0x3e	; 62
    11ac:	2e 97       	sbiw	r28, 0x0e	; 14
    11ae:	0f b6       	in	r0, 0x3f	; 63
    11b0:	f8 94       	cli
    11b2:	de bf       	out	0x3e, r29	; 62
    11b4:	0f be       	out	0x3f, r0	; 63
    11b6:	cd bf       	out	0x3d, r28	; 61
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:213
{
  FILE f;
  va_list ap;

  fdev_setup_stream(&f, printf_putchar, NULL, _FDEV_SETUP_WRITE);
    11b8:	84 e1       	ldi	r24, 0x14	; 20
    11ba:	91 e0       	ldi	r25, 0x01	; 1
    11bc:	9a 87       	std	Y+10, r25	; 0x0a
    11be:	89 87       	std	Y+9, r24	; 0x09
    11c0:	1c 86       	std	Y+12, r1	; 0x0c
    11c2:	1b 86       	std	Y+11, r1	; 0x0b
    11c4:	82 e0       	ldi	r24, 0x02	; 2
    11c6:	8c 83       	std	Y+4, r24	; 0x04
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:214
  fdev_set_udata(&f, this);
    11c8:	8d e7       	ldi	r24, 0x7D	; 125
    11ca:	9b e0       	ldi	r25, 0x0B	; 11
    11cc:	9e 87       	std	Y+14, r25	; 0x0e
    11ce:	8d 87       	std	Y+13, r24	; 0x0d
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:216
  va_start(ap, format);
  return vfprintf(&f, format, ap);
    11d0:	ae 01       	movw	r20, r28
    11d2:	49 5e       	subi	r20, 0xE9	; 233
    11d4:	5f 4f       	sbci	r21, 0xFF	; 255
    11d6:	6d 89       	ldd	r22, Y+21	; 0x15
    11d8:	7e 89       	ldd	r23, Y+22	; 0x16
    11da:	ce 01       	movw	r24, r28
    11dc:	01 96       	adiw	r24, 0x01	; 1
    11de:	0e 94 41 42 	call	0x8482	; 0x8482 <vfprintf>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.cpp:217
}
    11e2:	2e 96       	adiw	r28, 0x0e	; 14
    11e4:	0f b6       	in	r0, 0x3f	; 63
    11e6:	f8 94       	cli
    11e8:	de bf       	out	0x3e, r29	; 62
    11ea:	0f be       	out	0x3f, r0	; 63
    11ec:	cd bf       	out	0x3d, r28	; 61
    11ee:	df 91       	pop	r29
    11f0:	cf 91       	pop	r28
    11f2:	08 95       	ret

000011f4 <TwoWire::requestFrom(int, int) [clone .constprop.8]>:
requestFrom():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:185
uint8_t TwoWire::requestFrom(uint8_t address, uint8_t quantity)
{
  return requestFrom((uint8_t)address, (uint8_t)quantity, (uint8_t)true);
}

uint8_t TwoWire::requestFrom(int address, int quantity)
    11f4:	ac 01       	movw	r20, r24
twi_readFrom():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:171
        twi_handleTimeout(twi_do_reset_on_timeout);
        return 0;
      }
    }
  #else
    while(TWI_READY != twi_state){
    11f6:	80 91 b4 09 	lds	r24, 0x09B4	; 0x8009b4 <twi_state>
    11fa:	81 11       	cpse	r24, r1
    11fc:	fc cf       	rjmp	.-8      	; 0x11f6 <TwoWire::requestFrom(int, int) [clone .constprop.8]+0x2>
requestFrom():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:187
{
  return requestFrom((uint8_t)address, (uint8_t)quantity, (uint8_t)true);
    11fe:	96 2f       	mov	r25, r22
twi_readFrom():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:175
      continue;
    }
  #endif
  twi_state = TWI_MRX;
    1200:	81 e0       	ldi	r24, 0x01	; 1
    1202:	80 93 b4 09 	sts	0x09B4, r24	; 0x8009b4 <twi_state>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:176
  twi_sendStop = sendStop;
    1206:	80 93 b3 09 	sts	0x09B3, r24	; 0x8009b3 <twi_sendStop>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:178
  // reset error state (0xFF.. no error occurred)
  twi_error = 0xFF;
    120a:	2f ef       	ldi	r18, 0xFF	; 255
    120c:	20 93 b2 09 	sts	0x09B2, r18	; 0x8009b2 <twi_error>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:181

  // initialize buffer iteration vars
  twi_masterBuffer = data;
    1210:	29 ed       	ldi	r18, 0xD9	; 217
    1212:	39 e0       	ldi	r19, 0x09	; 9
    1214:	30 93 b1 09 	sts	0x09B1, r19	; 0x8009b1 <twi_masterBuffer+0x1>
    1218:	20 93 b0 09 	sts	0x09B0, r18	; 0x8009b0 <twi_masterBuffer>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:182
  twi_masterBufferIndex = 0;
    121c:	10 92 af 09 	sts	0x09AF, r1	; 0x8009af <twi_masterBufferIndex>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:183
  twi_masterBufferLength = length-1;  // This is not intuitive, read on...
    1220:	2f ef       	ldi	r18, 0xFF	; 255
    1222:	26 0f       	add	r18, r22
    1224:	20 93 ae 09 	sts	0x09AE, r18	; 0x8009ae <twi_masterBufferLength>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:191
  // Therefore we must actually set NACK when the _next_ to last byte is
  // received, causing that NACK to be sent in response to receiving the last
  // expected byte of data.

  // build sla+w, slave device address + w bit
  twi_slarw = TW_READ;
    1228:	80 93 ad 09 	sts	0x09AD, r24	; 0x8009ad <twi_slarw>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:192
  twi_slarw |= address << 1;
    122c:	20 91 ad 09 	lds	r18, 0x09AD	; 0x8009ad <twi_slarw>
    1230:	44 0f       	add	r20, r20
    1232:	55 1f       	adc	r21, r21
    1234:	82 2f       	mov	r24, r18
    1236:	84 2b       	or	r24, r20
    1238:	80 93 ad 09 	sts	0x09AD, r24	; 0x8009ad <twi_slarw>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:194

  if (true == twi_inRepStart) {
    123c:	80 91 ac 09 	lds	r24, 0x09AC	; 0x8009ac <twi_inRepStart>
    1240:	81 30       	cpi	r24, 0x01	; 1
    1242:	e9 f4       	brne	.+58     	; 0x127e <TwoWire::requestFrom(int, int) [clone .constprop.8]+0x8a>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:201
    // (@@@ we hope), and the TWI statemachine is just waiting for the address byte.
    // We need to remove ourselves from the repeated start state before we enable interrupts,
    // since the ISR is ASYNC, and we could get confused if we hit the ISR before cleaning
    // up. Also, don't enable the START interrupt. There may be one pending from the
    // repeated start that we sent ourselves, and that would really confuse things.
    twi_inRepStart = false; // Remember, we're dealing with an ASYNC ISR
    1244:	10 92 ac 09 	sts	0x09AC, r1	; 0x8009ac <twi_inRepStart>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:213
          return 0;
        }
      } while(TWCR & _BV(TWWC));
    #else
      do {
        TWDR = twi_slarw;
    1248:	80 91 ad 09 	lds	r24, 0x09AD	; 0x8009ad <twi_slarw>
    124c:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:214
      } while(TWCR & _BV(TWWC));
    1250:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1254:	83 fd       	sbrc	r24, 3
    1256:	f8 cf       	rjmp	.-16     	; 0x1248 <TwoWire::requestFrom(int, int) [clone .constprop.8]+0x54>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:216
    #endif
    TWCR = _BV(TWINT) | _BV(TWEA) | _BV(TWEN) | _BV(TWIE);  // enable INTs, but not START
    1258:	85 ec       	ldi	r24, 0xC5	; 197
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:220
  }
  else
    // send start condition
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWEA) | _BV(TWINT) | _BV(TWSTA);
    125a:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:232
        twi_handleTimeout(twi_do_reset_on_timeout);
        return 0;
      }
    }
  #else
    while(TWI_MRX == twi_state){
    125e:	80 91 b4 09 	lds	r24, 0x09B4	; 0x8009b4 <twi_state>
    1262:	81 30       	cpi	r24, 0x01	; 1
    1264:	e1 f3       	breq	.-8      	; 0x125e <TwoWire::requestFrom(int, int) [clone .constprop.8]+0x6a>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:237
      continue;
    }
  #endif

  if (twi_masterBufferIndex < length)
    1266:	80 91 af 09 	lds	r24, 0x09AF	; 0x8009af <twi_masterBufferIndex>
    126a:	86 17       	cp	r24, r22
    126c:	10 f4       	brcc	.+4      	; 0x1272 <TwoWire::requestFrom(int, int) [clone .constprop.8]+0x7e>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:238
    length = twi_masterBufferIndex;
    126e:	90 91 af 09 	lds	r25, 0x09AF	; 0x8009af <twi_masterBufferIndex>
requestFrom():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:122
    quantity = TWI_BUFFER_SIZE;
  }
  // perform blocking read into buffer
  uint8_t read = twi_readFrom(address, rxBuffer, quantity, sendStop);
  // set rx buffer iterator vars
  rxBufferIndex = 0;
    1272:	10 92 fa 09 	sts	0x09FA, r1	; 0x8009fa <TwoWire::rxBufferIndex>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:123
  rxBufferLength = read;
    1276:	90 93 f9 09 	sts	0x09F9, r25	; 0x8009f9 <TwoWire::rxBufferLength>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:188
}

uint8_t TwoWire::requestFrom(int address, int quantity)
{
  return requestFrom((uint8_t)address, (uint8_t)quantity, (uint8_t)true);
}
    127a:	89 2f       	mov	r24, r25
    127c:	08 95       	ret
twi_readFrom():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:220
    #endif
    TWCR = _BV(TWINT) | _BV(TWEA) | _BV(TWEN) | _BV(TWIE);  // enable INTs, but not START
  }
  else
    // send start condition
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWEA) | _BV(TWINT) | _BV(TWSTA);
    127e:	85 ee       	ldi	r24, 0xE5	; 229
    1280:	ec cf       	rjmp	.-40     	; 0x125a <TwoWire::requestFrom(int, int) [clone .constprop.8]+0x66>

00001282 <vl(char)>:
vl():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1700

  // Your additional processing logic here
  
  return vl_dis;
}
unsigned int vl(char xv) {
    1282:	cf 93       	push	r28
    1284:	df 93       	push	r29
    1286:	c8 2f       	mov	r28, r24
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1709

  // Select the appropriate sensor
  if (xv == 1) {
    // Set MUX pins to select sensor 1
    // B11 Right
    digitalWrite(MUX_A, LOW);
    1288:	60 e0       	ldi	r22, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1706
  unsigned int vl_dis = 1;

  // Your pin manipulation logic here if needed

  // Select the appropriate sensor
  if (xv == 1) {
    128a:	81 30       	cpi	r24, 0x01	; 1
    128c:	09 f4       	brne	.+2      	; 0x1290 <vl(char)+0xe>
    128e:	3f c0       	rjmp	.+126    	; 0x130e <vl(char)+0x8c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1722
    digitalWrite(MUX_C, HIGH);
  }
  else if (xv == 3) {
    // Set MUX pins to select sensor 2
    // B13 Left
    digitalWrite(MUX_A, HIGH);
    1290:	61 e0       	ldi	r22, 0x01	; 1
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1712
    // Set MUX pins to select sensor 1
    // B11 Right
    digitalWrite(MUX_A, LOW);
    digitalWrite(MUX_B, HIGH);
    digitalWrite(MUX_C, LOW);
  } else if (xv == 2) {
    1292:	82 30       	cpi	r24, 0x02	; 2
    1294:	e1 f5       	brne	.+120    	; 0x130e <vl(char)+0x8c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1715
    // Set MUX pins to select sensor 2
    // B13 Left
    digitalWrite(MUX_A, LOW);
    1296:	60 e0       	ldi	r22, 0x00	; 0
    1298:	8c e2       	ldi	r24, 0x2C	; 44
    129a:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1716
    digitalWrite(MUX_B, LOW);
    129e:	60 e0       	ldi	r22, 0x00	; 0
    12a0:	8b e2       	ldi	r24, 0x2B	; 43
    12a2:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1717
    digitalWrite(MUX_C, HIGH);
    12a6:	61 e0       	ldi	r22, 0x01	; 1
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1724
  else if (xv == 3) {
    // Set MUX pins to select sensor 2
    // B13 Left
    digitalWrite(MUX_A, HIGH);
    digitalWrite(MUX_B, HIGH);
    digitalWrite(MUX_C, LOW);
    12a8:	8a e2       	ldi	r24, 0x2A	; 42
    12aa:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
beginTransmission():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:208
  txBufferLength = 0;
}

void TwoWire::beginTransmission(int address)
{
  beginTransmission((uint8_t)address);
    12ae:	89 e2       	ldi	r24, 0x29	; 41
    12b0:	0e 94 a1 01 	call	0x342	; 0x342 <TwoWire::beginTransmission(unsigned char) [clone .constprop.11]>
vl():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1728
  }
  // Send command to start distance measurement
  Wire.beginTransmission(VL53L0X_ADDRESS);
  Wire.write(VL53L0X_REG_SYSRANGE_START);
    12b4:	90 e0       	ldi	r25, 0x00	; 0
    12b6:	80 e0       	ldi	r24, 0x00	; 0
    12b8:	0e 94 1c 05 	call	0xa38	; 0xa38 <TwoWire::write(int) [clone .constprop.23]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1729
  Wire.write(0x01);
    12bc:	81 e0       	ldi	r24, 0x01	; 1
    12be:	90 e0       	ldi	r25, 0x00	; 0
    12c0:	0e 94 1c 05 	call	0xa38	; 0xa38 <TwoWire::write(int) [clone .constprop.23]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1730
  Wire.endTransmission();
    12c4:	0e 94 ab 01 	call	0x356	; 0x356 <TwoWire::endTransmission() [clone .constprop.7]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1733

  // Delay for measurement completion
  delay(10);  // Adjust delay if needed
    12c8:	6a e0       	ldi	r22, 0x0A	; 10
    12ca:	70 e0       	ldi	r23, 0x00	; 0
    12cc:	80 e0       	ldi	r24, 0x00	; 0
    12ce:	90 e0       	ldi	r25, 0x00	; 0
    12d0:	0e 94 24 03 	call	0x648	; 0x648 <delay>
beginTransmission():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:208
    12d4:	89 e2       	ldi	r24, 0x29	; 41
    12d6:	0e 94 a1 01 	call	0x342	; 0x342 <TwoWire::beginTransmission(unsigned char) [clone .constprop.11]>
vl():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1737

  // Request distance measurement
  Wire.beginTransmission(VL53L0X_ADDRESS);
  Wire.write(VL53L0X_REG_RESULT_RANGE_VAL);
    12da:	8e e1       	ldi	r24, 0x1E	; 30
    12dc:	90 e0       	ldi	r25, 0x00	; 0
    12de:	0e 94 1c 05 	call	0xa38	; 0xa38 <TwoWire::write(int) [clone .constprop.23]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1738
  Wire.endTransmission(false);
    12e2:	80 e0       	ldi	r24, 0x00	; 0
    12e4:	0e 94 49 01 	call	0x292	; 0x292 <TwoWire::endTransmission(unsigned char) [clone .constprop.12]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1741

  // Read distance measurement (2 bytes)
  Wire.requestFrom(VL53L0X_ADDRESS, 2);
    12e8:	62 e0       	ldi	r22, 0x02	; 2
    12ea:	70 e0       	ldi	r23, 0x00	; 0
    12ec:	89 e2       	ldi	r24, 0x29	; 41
    12ee:	90 e0       	ldi	r25, 0x00	; 0
    12f0:	0e 94 fa 08 	call	0x11f4	; 0x11f4 <TwoWire::requestFrom(int, int) [clone .constprop.8]>
available():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:292
// must be called in:
// slave rx event callback
// or after requestFrom(address, numBytes)
int TwoWire::available(void)
{
  return rxBufferLength - rxBufferIndex;
    12f4:	80 91 f9 09 	lds	r24, 0x09F9	; 0x8009f9 <TwoWire::rxBufferLength>
    12f8:	90 91 fa 09 	lds	r25, 0x09FA	; 0x8009fa <TwoWire::rxBufferIndex>
    12fc:	89 1b       	sub	r24, r25
    12fe:	99 0b       	sbc	r25, r25
vl():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1742
  if (Wire.available() >= 2) {
    1300:	02 97       	sbiw	r24, 0x02	; 2
    1302:	74 f4       	brge	.+28     	; 0x1320 <vl(char)+0x9e>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1701
  // Your additional processing logic here
  
  return vl_dis;
}
unsigned int vl(char xv) {
  unsigned int vl_dis = 1;
    1304:	81 e0       	ldi	r24, 0x01	; 1
    1306:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1751
  }

  // Your additional processing logic here
  if(vl_dis==20) {delay(10);return vl_double_check(xv);}
  else return vl_dis;
}
    1308:	df 91       	pop	r29
    130a:	cf 91       	pop	r28
    130c:	08 95       	ret
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1722
    digitalWrite(MUX_C, HIGH);
  }
  else if (xv == 3) {
    // Set MUX pins to select sensor 2
    // B13 Left
    digitalWrite(MUX_A, HIGH);
    130e:	8c e2       	ldi	r24, 0x2C	; 44
    1310:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1723
    digitalWrite(MUX_B, HIGH);
    1314:	61 e0       	ldi	r22, 0x01	; 1
    1316:	8b e2       	ldi	r24, 0x2B	; 43
    1318:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1724
    digitalWrite(MUX_C, LOW);
    131c:	60 e0       	ldi	r22, 0x00	; 0
    131e:	c4 cf       	rjmp	.-120    	; 0x12a8 <vl(char)+0x26>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1743
  Wire.endTransmission(false);

  // Read distance measurement (2 bytes)
  Wire.requestFrom(VL53L0X_ADDRESS, 2);
  if (Wire.available() >= 2) {
    byte distance_msb = Wire.read();
    1320:	0e 94 36 01 	call	0x26c	; 0x26c <TwoWire::read() [clone .constprop.16]>
    1324:	d8 2f       	mov	r29, r24
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1744
    byte distance_lsb = Wire.read();
    1326:	0e 94 36 01 	call	0x26c	; 0x26c <TwoWire::read() [clone .constprop.16]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1745
    vl_dis = ((unsigned int)distance_msb << 8) | distance_lsb;
    132a:	20 e0       	ldi	r18, 0x00	; 0
    132c:	3d 2f       	mov	r19, r29
    132e:	a9 01       	movw	r20, r18
    1330:	48 2b       	or	r20, r24
    1332:	ca 01       	movw	r24, r20
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1749
  }

  // Your additional processing logic here
  if(vl_dis==20) {delay(10);return vl_double_check(xv);}
    1334:	84 31       	cpi	r24, 0x14	; 20
    1336:	91 05       	cpc	r25, r1
    1338:	39 f7       	brne	.-50     	; 0x1308 <vl(char)+0x86>
    133a:	6a e0       	ldi	r22, 0x0A	; 10
    133c:	70 e0       	ldi	r23, 0x00	; 0
    133e:	80 e0       	ldi	r24, 0x00	; 0
    1340:	90 e0       	ldi	r25, 0x00	; 0
    1342:	0e 94 24 03 	call	0x648	; 0x648 <delay>
vl_double_check():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1657

  // Select the appropriate sensor
  if (xv == 1) {
    // Set MUX pins to select sensor 1
    // B11 Right
    digitalWrite(MUX_A, LOW);
    1346:	60 e0       	ldi	r22, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1654
  unsigned int vl_dis = 1;

  // Your pin manipulation logic here if needed

  // Select the appropriate sensor
  if (xv == 1) {
    1348:	c1 30       	cpi	r28, 0x01	; 1
    134a:	09 f4       	brne	.+2      	; 0x134e <vl(char)+0xcc>
    134c:	47 c0       	rjmp	.+142    	; 0x13dc <vl(char)+0x15a>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1670
    digitalWrite(MUX_C, HIGH);
  }
  else if (xv == 3) {
    // Set MUX pins to select sensor 2
    // B13 Left
    digitalWrite(MUX_A, HIGH);
    134e:	61 e0       	ldi	r22, 0x01	; 1
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1660
    // Set MUX pins to select sensor 1
    // B11 Right
    digitalWrite(MUX_A, LOW);
    digitalWrite(MUX_B, HIGH);
    digitalWrite(MUX_C, LOW);
  } else if (xv == 2) {
    1350:	c2 30       	cpi	r28, 0x02	; 2
    1352:	09 f0       	breq	.+2      	; 0x1356 <vl(char)+0xd4>
    1354:	43 c0       	rjmp	.+134    	; 0x13dc <vl(char)+0x15a>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1663
    // Set MUX pins to select sensor 2
    // B13 Left
    digitalWrite(MUX_A, LOW);
    1356:	60 e0       	ldi	r22, 0x00	; 0
    1358:	8c e2       	ldi	r24, 0x2C	; 44
    135a:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1664
    digitalWrite(MUX_B, LOW);
    135e:	60 e0       	ldi	r22, 0x00	; 0
    1360:	8b e2       	ldi	r24, 0x2B	; 43
    1362:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1665
    digitalWrite(MUX_C, HIGH);
    1366:	61 e0       	ldi	r22, 0x01	; 1
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1672
  else if (xv == 3) {
    // Set MUX pins to select sensor 2
    // B13 Left
    digitalWrite(MUX_A, HIGH);
    digitalWrite(MUX_B, HIGH);
    digitalWrite(MUX_C, LOW);
    1368:	8a e2       	ldi	r24, 0x2A	; 42
    136a:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
beginTransmission():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:208
  txBufferLength = 0;
}

void TwoWire::beginTransmission(int address)
{
  beginTransmission((uint8_t)address);
    136e:	89 e2       	ldi	r24, 0x29	; 41
    1370:	0e 94 a1 01 	call	0x342	; 0x342 <TwoWire::beginTransmission(unsigned char) [clone .constprop.11]>
vl_double_check():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1676
  }
  // Send command to start distance measurement
  Wire.beginTransmission(VL53L0X_ADDRESS);
  Wire.write(VL53L0X_REG_SYSRANGE_START);
    1374:	90 e0       	ldi	r25, 0x00	; 0
    1376:	80 e0       	ldi	r24, 0x00	; 0
    1378:	0e 94 1c 05 	call	0xa38	; 0xa38 <TwoWire::write(int) [clone .constprop.23]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1677
  Wire.write(0x01);
    137c:	81 e0       	ldi	r24, 0x01	; 1
    137e:	90 e0       	ldi	r25, 0x00	; 0
    1380:	0e 94 1c 05 	call	0xa38	; 0xa38 <TwoWire::write(int) [clone .constprop.23]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1678
  Wire.endTransmission();
    1384:	0e 94 ab 01 	call	0x356	; 0x356 <TwoWire::endTransmission() [clone .constprop.7]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1681

  // Delay for measurement completion
  delay(10);  // Adjust delay if needed
    1388:	6a e0       	ldi	r22, 0x0A	; 10
    138a:	70 e0       	ldi	r23, 0x00	; 0
    138c:	80 e0       	ldi	r24, 0x00	; 0
    138e:	90 e0       	ldi	r25, 0x00	; 0
    1390:	0e 94 24 03 	call	0x648	; 0x648 <delay>
beginTransmission():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:208
    1394:	89 e2       	ldi	r24, 0x29	; 41
    1396:	0e 94 a1 01 	call	0x342	; 0x342 <TwoWire::beginTransmission(unsigned char) [clone .constprop.11]>
vl_double_check():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1685

  // Request distance measurement
  Wire.beginTransmission(VL53L0X_ADDRESS);
  Wire.write(VL53L0X_REG_RESULT_RANGE_VAL);
    139a:	8e e1       	ldi	r24, 0x1E	; 30
    139c:	90 e0       	ldi	r25, 0x00	; 0
    139e:	0e 94 1c 05 	call	0xa38	; 0xa38 <TwoWire::write(int) [clone .constprop.23]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1686
  Wire.endTransmission(false);
    13a2:	80 e0       	ldi	r24, 0x00	; 0
    13a4:	0e 94 49 01 	call	0x292	; 0x292 <TwoWire::endTransmission(unsigned char) [clone .constprop.12]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1689

  // Read distance measurement (2 bytes)
  Wire.requestFrom(VL53L0X_ADDRESS, 2);
    13a8:	62 e0       	ldi	r22, 0x02	; 2
    13aa:	70 e0       	ldi	r23, 0x00	; 0
    13ac:	89 e2       	ldi	r24, 0x29	; 41
    13ae:	90 e0       	ldi	r25, 0x00	; 0
    13b0:	0e 94 fa 08 	call	0x11f4	; 0x11f4 <TwoWire::requestFrom(int, int) [clone .constprop.8]>
available():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:292
// must be called in:
// slave rx event callback
// or after requestFrom(address, numBytes)
int TwoWire::available(void)
{
  return rxBufferLength - rxBufferIndex;
    13b4:	80 91 f9 09 	lds	r24, 0x09F9	; 0x8009f9 <TwoWire::rxBufferLength>
    13b8:	90 91 fa 09 	lds	r25, 0x09FA	; 0x8009fa <TwoWire::rxBufferIndex>
    13bc:	89 1b       	sub	r24, r25
    13be:	99 0b       	sbc	r25, r25
vl_double_check():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1690
  if (Wire.available() >= 2) {
    13c0:	02 97       	sbiw	r24, 0x02	; 2
    13c2:	0c f4       	brge	.+2      	; 0x13c6 <vl(char)+0x144>
    13c4:	9f cf       	rjmp	.-194    	; 0x1304 <vl(char)+0x82>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1691
    byte distance_msb = Wire.read();
    13c6:	0e 94 36 01 	call	0x26c	; 0x26c <TwoWire::read() [clone .constprop.16]>
    13ca:	c8 2f       	mov	r28, r24
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1692
    byte distance_lsb = Wire.read();
    13cc:	0e 94 36 01 	call	0x26c	; 0x26c <TwoWire::read() [clone .constprop.16]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1693
    vl_dis = ((unsigned int)distance_msb << 8) | distance_lsb;
    13d0:	20 e0       	ldi	r18, 0x00	; 0
    13d2:	3c 2f       	mov	r19, r28
    13d4:	a9 01       	movw	r20, r18
    13d6:	48 2b       	or	r20, r24
    13d8:	ca 01       	movw	r24, r20
    13da:	96 cf       	rjmp	.-212    	; 0x1308 <vl(char)+0x86>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1670
    digitalWrite(MUX_C, HIGH);
  }
  else if (xv == 3) {
    // Set MUX pins to select sensor 2
    // B13 Left
    digitalWrite(MUX_A, HIGH);
    13dc:	8c e2       	ldi	r24, 0x2C	; 44
    13de:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1671
    digitalWrite(MUX_B, HIGH);
    13e2:	61 e0       	ldi	r22, 0x01	; 1
    13e4:	8b e2       	ldi	r24, 0x2B	; 43
    13e6:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1672
    digitalWrite(MUX_C, LOW);
    13ea:	60 e0       	ldi	r22, 0x00	; 0
    13ec:	bd cf       	rjmp	.-134    	; 0x1368 <vl(char)+0xe6>

000013ee <silver()>:
silver():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2366
    }


}
void silver(void)
{
    13ee:	cf 93       	push	r28
    13f0:	df 93       	push	r29
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2367
  if(VSR10<=silver_voltage_R||VSL10<=silver_voltage_L||SM)
    13f2:	41 e0       	ldi	r20, 0x01	; 1
    13f4:	63 e0       	ldi	r22, 0x03	; 3
    13f6:	82 e0       	ldi	r24, 0x02	; 2
    13f8:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    13fc:	04 97       	sbiw	r24, 0x04	; 4
    13fe:	f4 f4       	brge	.+60     	; 0x143c <silver()+0x4e>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2369
    {
    move(Back,75,100);
    1400:	44 e6       	ldi	r20, 0x64	; 100
    1402:	50 e0       	ldi	r21, 0x00	; 0
    1404:	6b e4       	ldi	r22, 0x4B	; 75
    1406:	70 e0       	ldi	r23, 0x00	; 0
    1408:	8d e0       	ldi	r24, 0x0D	; 13
    140a:	90 e0       	ldi	r25, 0x00	; 0
    140c:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
    1410:	c0 91 7d 09 	lds	r28, 0x097D	; 0x80097d <T90>
    1414:	d0 91 7e 09 	lds	r29, 0x097E	; 0x80097e <T90+0x1>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2370
    if(redroom_dir==Right)
    1418:	80 91 9b 09 	lds	r24, 0x099B	; 0x80099b <redroom_dir>
    141c:	90 91 9c 09 	lds	r25, 0x099C	; 0x80099c <redroom_dir+0x1>
    1420:	0c 97       	sbiw	r24, 0x0c	; 12
    1422:	e9 f4       	brne	.+58     	; 0x145e <silver()+0x70>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2373
        {
        pich_sakoo=0;
        if(VL_Right>165)
    1424:	81 e0       	ldi	r24, 0x01	; 1
    1426:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2374
        {move(Right,T90,100);}
    142a:	44 e6       	ldi	r20, 0x64	; 100
    142c:	50 e0       	ldi	r21, 0x00	; 0
    142e:	be 01       	movw	r22, r28
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2373
    {
    move(Back,75,100);
    if(redroom_dir==Right)
        {
        pich_sakoo=0;
        if(VL_Right>165)
    1430:	86 3a       	cpi	r24, 0xA6	; 166
    1432:	91 05       	cpc	r25, r1
    1434:	e8 f0       	brcs	.+58     	; 0x1470 <silver()+0x82>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2384
        }
    else                
        {
            pich_sakoo=0;
            if(VL_Left>170){move(Left,T90,100);}
            else {move(Right,T90,100);}
    1436:	8c e0       	ldi	r24, 0x0C	; 12
    1438:	90 e0       	ldi	r25, 0x00	; 0
    143a:	1c c0       	rjmp	.+56     	; 0x1474 <silver()+0x86>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2367


}
void silver(void)
{
  if(VSR10<=silver_voltage_R||VSL10<=silver_voltage_L||SM)
    143c:	41 e0       	ldi	r20, 0x01	; 1
    143e:	62 e0       	ldi	r22, 0x02	; 2
    1440:	82 e0       	ldi	r24, 0x02	; 2
    1442:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    1446:	04 97       	sbiw	r24, 0x04	; 4
    1448:	dc f2       	brlt	.-74     	; 0x1400 <silver()+0x12>
    144a:	40 e0       	ldi	r20, 0x00	; 0
    144c:	60 e0       	ldi	r22, 0x00	; 0
    144e:	80 e0       	ldi	r24, 0x00	; 0
    1450:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    1454:	89 2b       	or	r24, r25
    1456:	a1 f6       	brne	.-88     	; 0x1400 <silver()+0x12>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2389
            else {move(Right,T90,100);}
            //if((ev_ball>0 && ball_num>=1)||(ball_num>=2));
            // else redroom_dir=Right;
        }
    }
}
    1458:	df 91       	pop	r29
    145a:	cf 91       	pop	r28
    145c:	08 95       	ret
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2383
        //else redroom_dir=Left;
        }
    else                
        {
            pich_sakoo=0;
            if(VL_Left>170){move(Left,T90,100);}
    145e:	82 e0       	ldi	r24, 0x02	; 2
    1460:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    1464:	44 e6       	ldi	r20, 0x64	; 100
    1466:	50 e0       	ldi	r21, 0x00	; 0
    1468:	be 01       	movw	r22, r28
    146a:	8b 3a       	cpi	r24, 0xAB	; 171
    146c:	91 05       	cpc	r25, r1
    146e:	18 f3       	brcs	.-58     	; 0x1436 <silver()+0x48>
    1470:	8b e0       	ldi	r24, 0x0B	; 11
    1472:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2389
            else {move(Right,T90,100);}
            //if((ev_ball>0 && ball_num>=1)||(ball_num>=2));
            // else redroom_dir=Right;
        }
    }
}
    1474:	df 91       	pop	r29
    1476:	cf 91       	pop	r28
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2384
        }
    else                
        {
            pich_sakoo=0;
            if(VL_Left>170){move(Left,T90,100);}
            else {move(Right,T90,100);}
    1478:	0c 94 3a 07 	jmp	0xe74	; 0xe74 <move(int, int, int)>

0000147c <Print::print(char const*) [clone .constprop.3]>:
write():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/Print.h:54
    void clearWriteError() { setWriteError(0); }

    virtual size_t write(uint8_t) = 0;
    size_t write(const char *str) {
      if (str == NULL) return 0;
      return write((const uint8_t *)str, strlen(str));
    147c:	fc 01       	movw	r30, r24
    147e:	01 90       	ld	r0, Z+
    1480:	00 20       	and	r0, r0
    1482:	e9 f7       	brne	.-6      	; 0x147e <Print::print(char const*) [clone .constprop.3]+0x2>
    1484:	31 97       	sbiw	r30, 0x01	; 1
    1486:	af 01       	movw	r20, r30
    1488:	48 1b       	sub	r20, r24
    148a:	59 0b       	sbc	r21, r25
    148c:	bc 01       	movw	r22, r24
    148e:	8d e7       	ldi	r24, 0x7D	; 125
    1490:	9b e0       	ldi	r25, 0x0B	; 11
    1492:	0c 94 58 03 	jmp	0x6b0	; 0x6b0 <Print::write(unsigned char const*, unsigned int)>

00001496 <EEPROM_write_int(int, int)>:
EEPROM_write_int():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:198
    analogWrite(5, -right);
  }
}


void EEPROM_write_int(int address, int number) {
    1496:	1f 93       	push	r17
    1498:	cf 93       	push	r28
    149a:	df 93       	push	r29
    149c:	ec 01       	movw	r28, r24
    149e:	16 2f       	mov	r17, r22
    14a0:	67 2f       	mov	r22, r23
operator=():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\EEPROM\src/EEPROM.h:47
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }

    //Assignment/write members.
    EERef &operator=( const EERef &ref ) { return *this = *ref; }
    EERef &operator=( uint8_t in )       { return eeprom_write_byte( (uint8_t*) index, in ), *this;  }
    14a2:	0e 94 f0 44 	call	0x89e0	; 0x89e0 <eeprom_write_byte>
    14a6:	61 2f       	mov	r22, r17
    14a8:	ce 01       	movw	r24, r28
    14aa:	01 96       	adiw	r24, 0x01	; 1
EEPROM_write_int():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:201
  EEPROM.write(address, number >> 8);
  EEPROM.write(address + 1, number & 0xFF);
}
    14ac:	df 91       	pop	r29
    14ae:	cf 91       	pop	r28
    14b0:	1f 91       	pop	r17
operator=():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\EEPROM\src/EEPROM.h:47
    14b2:	0c 94 f0 44 	jmp	0x89e0	; 0x89e0 <eeprom_write_byte>

000014b6 <EEPROM_read_int(int)>:
EEPROM_read_int():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:203

int EEPROM_read_int(int address) {
    14b6:	0f 93       	push	r16
    14b8:	1f 93       	push	r17
    14ba:	cf 93       	push	r28
    14bc:	8c 01       	movw	r16, r24
operator*():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\EEPROM\src/EEPROM.h:42

    EERef( const int index )
        : index( index )                 {}

    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    14be:	0e 94 e8 44 	call	0x89d0	; 0x89d0 <eeprom_read_byte>
    14c2:	c8 2f       	mov	r28, r24
    14c4:	c8 01       	movw	r24, r16
    14c6:	01 96       	adiw	r24, 0x01	; 1
    14c8:	0e 94 e8 44 	call	0x89d0	; 0x89d0 <eeprom_read_byte>
EEPROM_read_int():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:205
  int result = 0;
  result = (EEPROM.read(address) << 8) + EEPROM.read(address + 1);
    14cc:	2c 2f       	mov	r18, r28
    14ce:	30 e0       	ldi	r19, 0x00	; 0
    14d0:	32 2f       	mov	r19, r18
    14d2:	22 27       	eor	r18, r18
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:207
  return result;
}
    14d4:	82 0f       	add	r24, r18
    14d6:	93 2f       	mov	r25, r19
    14d8:	91 1d       	adc	r25, r1
    14da:	cf 91       	pop	r28
    14dc:	1f 91       	pop	r17
    14de:	0f 91       	pop	r16
    14e0:	08 95       	ret

000014e2 <come_down()>:
come_down():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2391
            // else redroom_dir=Right;
        }
    }
}
void come_down(void)
{
    14e2:	0f 93       	push	r16
    14e4:	1f 93       	push	r17
    14e6:	cf 93       	push	r28
    14e8:	df 93       	push	r29
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2392
  int T90 = EEPROM_read_int(T90_address);
    14ea:	88 e9       	ldi	r24, 0x98	; 152
    14ec:	90 e0       	ldi	r25, 0x00	; 0
    14ee:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    14f2:	8c 01       	movw	r16, r24
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2393
if(SM+SL1+SL2+SR1+SR2+SL3+SL4+SR4+SL5+SR6+SL7+SR7>6)
    14f4:	40 e0       	ldi	r20, 0x00	; 0
    14f6:	60 e0       	ldi	r22, 0x00	; 0
    14f8:	80 e0       	ldi	r24, 0x00	; 0
    14fa:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    14fe:	ec 01       	movw	r28, r24
    1500:	40 e0       	ldi	r20, 0x00	; 0
    1502:	60 e0       	ldi	r22, 0x00	; 0
    1504:	81 e0       	ldi	r24, 0x01	; 1
    1506:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    150a:	c8 0f       	add	r28, r24
    150c:	d9 1f       	adc	r29, r25
    150e:	40 e0       	ldi	r20, 0x00	; 0
    1510:	60 e0       	ldi	r22, 0x00	; 0
    1512:	82 e0       	ldi	r24, 0x02	; 2
    1514:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    1518:	c8 0f       	add	r28, r24
    151a:	d9 1f       	adc	r29, r25
    151c:	40 e0       	ldi	r20, 0x00	; 0
    151e:	61 e0       	ldi	r22, 0x01	; 1
    1520:	81 e0       	ldi	r24, 0x01	; 1
    1522:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    1526:	c8 0f       	add	r28, r24
    1528:	d9 1f       	adc	r29, r25
    152a:	40 e0       	ldi	r20, 0x00	; 0
    152c:	61 e0       	ldi	r22, 0x01	; 1
    152e:	82 e0       	ldi	r24, 0x02	; 2
    1530:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    1534:	c8 0f       	add	r28, r24
    1536:	d9 1f       	adc	r29, r25
    1538:	40 e0       	ldi	r20, 0x00	; 0
    153a:	60 e0       	ldi	r22, 0x00	; 0
    153c:	83 e0       	ldi	r24, 0x03	; 3
    153e:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    1542:	c8 0f       	add	r28, r24
    1544:	d9 1f       	adc	r29, r25
    1546:	40 e0       	ldi	r20, 0x00	; 0
    1548:	60 e0       	ldi	r22, 0x00	; 0
    154a:	84 e0       	ldi	r24, 0x04	; 4
    154c:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    1550:	c8 0f       	add	r28, r24
    1552:	d9 1f       	adc	r29, r25
    1554:	40 e0       	ldi	r20, 0x00	; 0
    1556:	61 e0       	ldi	r22, 0x01	; 1
    1558:	84 e0       	ldi	r24, 0x04	; 4
    155a:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    155e:	c8 0f       	add	r28, r24
    1560:	d9 1f       	adc	r29, r25
    1562:	40 e0       	ldi	r20, 0x00	; 0
    1564:	60 e0       	ldi	r22, 0x00	; 0
    1566:	85 e0       	ldi	r24, 0x05	; 5
    1568:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    156c:	c8 0f       	add	r28, r24
    156e:	d9 1f       	adc	r29, r25
    1570:	40 e0       	ldi	r20, 0x00	; 0
    1572:	61 e0       	ldi	r22, 0x01	; 1
    1574:	86 e0       	ldi	r24, 0x06	; 6
    1576:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    157a:	c8 0f       	add	r28, r24
    157c:	d9 1f       	adc	r29, r25
    157e:	40 e0       	ldi	r20, 0x00	; 0
    1580:	60 e0       	ldi	r22, 0x00	; 0
    1582:	87 e0       	ldi	r24, 0x07	; 7
    1584:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    1588:	c8 0f       	add	r28, r24
    158a:	d9 1f       	adc	r29, r25
    158c:	40 e0       	ldi	r20, 0x00	; 0
    158e:	61 e0       	ldi	r22, 0x01	; 1
    1590:	87 e0       	ldi	r24, 0x07	; 7
    1592:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    1596:	8c 0f       	add	r24, r28
    1598:	9d 1f       	adc	r25, r29
    159a:	07 97       	sbiw	r24, 0x07	; 7
    159c:	0c f4       	brge	.+2      	; 0x15a0 <come_down()+0xbe>
    159e:	67 c0       	rjmp	.+206    	; 0x166e <come_down()+0x18c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2395
    {
    move_arm(arm_normal,500);delay(400);
    15a0:	64 ef       	ldi	r22, 0xF4	; 244
    15a2:	71 e0       	ldi	r23, 0x01	; 1
    15a4:	80 91 71 09 	lds	r24, 0x0971	; 0x800971 <arm_normal>
    15a8:	90 91 72 09 	lds	r25, 0x0972	; 0x800972 <arm_normal+0x1>
    15ac:	0e 94 3f 08 	call	0x107e	; 0x107e <move_arm(int, int)>
    15b0:	60 e9       	ldi	r22, 0x90	; 144
    15b2:	71 e0       	ldi	r23, 0x01	; 1
    15b4:	80 e0       	ldi	r24, 0x00	; 0
    15b6:	90 e0       	ldi	r25, 0x00	; 0
    15b8:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2396
    move(Back,50,100);
    15bc:	44 e6       	ldi	r20, 0x64	; 100
    15be:	50 e0       	ldi	r21, 0x00	; 0
    15c0:	62 e3       	ldi	r22, 0x32	; 50
    15c2:	70 e0       	ldi	r23, 0x00	; 0
    15c4:	8d e0       	ldi	r24, 0x0D	; 13
    15c6:	90 e0       	ldi	r25, 0x00	; 0
    15c8:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2397
    if(VL_Left<150 && VL_Left!=20)move(Right,T90/2.5,100);
    15cc:	82 e0       	ldi	r24, 0x02	; 2
    15ce:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    15d2:	86 39       	cpi	r24, 0x96	; 150
    15d4:	91 05       	cpc	r25, r1
    15d6:	68 f5       	brcc	.+90     	; 0x1632 <come_down()+0x150>
    15d8:	82 e0       	ldi	r24, 0x02	; 2
    15da:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    15de:	44 97       	sbiw	r24, 0x14	; 20
    15e0:	41 f1       	breq	.+80     	; 0x1632 <come_down()+0x150>
    15e2:	b8 01       	movw	r22, r16
    15e4:	11 0f       	add	r17, r17
    15e6:	88 0b       	sbc	r24, r24
    15e8:	99 0b       	sbc	r25, r25
    15ea:	0e 94 ac 45 	call	0x8b58	; 0x8b58 <__floatsisf>
    15ee:	20 e0       	ldi	r18, 0x00	; 0
    15f0:	30 e0       	ldi	r19, 0x00	; 0
    15f2:	40 e2       	ldi	r20, 0x20	; 32
    15f4:	50 e4       	ldi	r21, 0x40	; 64
    15f6:	0e 94 02 45 	call	0x8a04	; 0x8a04 <__divsf3>
    15fa:	0e 94 74 45 	call	0x8ae8	; 0x8ae8 <__fixsfsi>
    15fe:	44 e6       	ldi	r20, 0x64	; 100
    1600:	50 e0       	ldi	r21, 0x00	; 0
    1602:	8c e0       	ldi	r24, 0x0C	; 12
    1604:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2398
    else if(VL_Right<150 && VL_Right!=20)move(Left,T90/2.5,100);
    1606:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2399
    move(Back,30,100);
    160a:	44 e6       	ldi	r20, 0x64	; 100
    160c:	50 e0       	ldi	r21, 0x00	; 0
    160e:	6e e1       	ldi	r22, 0x1E	; 30
    1610:	70 e0       	ldi	r23, 0x00	; 0
    1612:	8d e0       	ldi	r24, 0x0D	; 13
    1614:	90 e0       	ldi	r25, 0x00	; 0
    1616:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2400
    move_arm(arm_down,500);
    161a:	64 ef       	ldi	r22, 0xF4	; 244
    161c:	71 e0       	ldi	r23, 0x01	; 1
    161e:	80 91 9d 09 	lds	r24, 0x099D	; 0x80099d <arm_down>
    1622:	90 91 9e 09 	lds	r25, 0x099E	; 0x80099e <arm_down+0x1>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2403
    }

}
    1626:	df 91       	pop	r29
    1628:	cf 91       	pop	r28
    162a:	1f 91       	pop	r17
    162c:	0f 91       	pop	r16
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2400
    move_arm(arm_normal,500);delay(400);
    move(Back,50,100);
    if(VL_Left<150 && VL_Left!=20)move(Right,T90/2.5,100);
    else if(VL_Right<150 && VL_Right!=20)move(Left,T90/2.5,100);
    move(Back,30,100);
    move_arm(arm_down,500);
    162e:	0c 94 3f 08 	jmp	0x107e	; 0x107e <move_arm(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2398
if(SM+SL1+SL2+SR1+SR2+SL3+SL4+SR4+SL5+SR6+SL7+SR7>6)
    {
    move_arm(arm_normal,500);delay(400);
    move(Back,50,100);
    if(VL_Left<150 && VL_Left!=20)move(Right,T90/2.5,100);
    else if(VL_Right<150 && VL_Right!=20)move(Left,T90/2.5,100);
    1632:	81 e0       	ldi	r24, 0x01	; 1
    1634:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    1638:	86 39       	cpi	r24, 0x96	; 150
    163a:	91 05       	cpc	r25, r1
    163c:	30 f7       	brcc	.-52     	; 0x160a <come_down()+0x128>
    163e:	81 e0       	ldi	r24, 0x01	; 1
    1640:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    1644:	44 97       	sbiw	r24, 0x14	; 20
    1646:	09 f3       	breq	.-62     	; 0x160a <come_down()+0x128>
    1648:	b8 01       	movw	r22, r16
    164a:	11 0f       	add	r17, r17
    164c:	88 0b       	sbc	r24, r24
    164e:	99 0b       	sbc	r25, r25
    1650:	0e 94 ac 45 	call	0x8b58	; 0x8b58 <__floatsisf>
    1654:	20 e0       	ldi	r18, 0x00	; 0
    1656:	30 e0       	ldi	r19, 0x00	; 0
    1658:	40 e2       	ldi	r20, 0x20	; 32
    165a:	50 e4       	ldi	r21, 0x40	; 64
    165c:	0e 94 02 45 	call	0x8a04	; 0x8a04 <__divsf3>
    1660:	0e 94 74 45 	call	0x8ae8	; 0x8ae8 <__fixsfsi>
    1664:	44 e6       	ldi	r20, 0x64	; 100
    1666:	50 e0       	ldi	r21, 0x00	; 0
    1668:	8b e0       	ldi	r24, 0x0B	; 11
    166a:	90 e0       	ldi	r25, 0x00	; 0
    166c:	cc cf       	rjmp	.-104    	; 0x1606 <come_down()+0x124>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2403
    move(Back,30,100);
    move_arm(arm_down,500);
    }

}
    166e:	df 91       	pop	r29
    1670:	cf 91       	pop	r28
    1672:	1f 91       	pop	r17
    1674:	0f 91       	pop	r16
    1676:	08 95       	ret

00001678 <victim()>:
victim():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2280
        }
    //#asm("sei")                         
    return 10;
  }

void victim(void){
    1678:	ef 92       	push	r14
    167a:	ff 92       	push	r15
    167c:	0f 93       	push	r16
    167e:	1f 93       	push	r17
    1680:	cf 93       	push	r28
    1682:	df 93       	push	r29
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2282
  int uuu;
    int spd = EEPROM_read_int(spd_address);
    1684:	86 e9       	ldi	r24, 0x96	; 150
    1686:	90 e0       	ldi	r25, 0x00	; 0
    1688:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    168c:	8c 01       	movw	r16, r24
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2283
  if(fifth==1 && ball==0){move_arm(arm_down,400);move_gripper(gripper_open,800);fifth=0;}
    168e:	80 91 83 09 	lds	r24, 0x0983	; 0x800983 <fifth>
    1692:	90 91 84 09 	lds	r25, 0x0984	; 0x800984 <fifth+0x1>
    1696:	81 30       	cpi	r24, 0x01	; 1
    1698:	91 05       	cpc	r25, r1
    169a:	11 f5       	brne	.+68     	; 0x16e0 <victim()+0x68>
    169c:	40 e0       	ldi	r20, 0x00	; 0
    169e:	62 e0       	ldi	r22, 0x02	; 2
    16a0:	85 e0       	ldi	r24, 0x05	; 5
    16a2:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    16a6:	89 2b       	or	r24, r25
    16a8:	a1 f4       	brne	.+40     	; 0x16d2 <victim()+0x5a>
    16aa:	60 e9       	ldi	r22, 0x90	; 144
    16ac:	71 e0       	ldi	r23, 0x01	; 1
    16ae:	80 91 9d 09 	lds	r24, 0x099D	; 0x80099d <arm_down>
    16b2:	90 91 9e 09 	lds	r25, 0x099E	; 0x80099e <arm_down+0x1>
    16b6:	0e 94 3f 08 	call	0x107e	; 0x107e <move_arm(int, int)>
    16ba:	60 e2       	ldi	r22, 0x20	; 32
    16bc:	73 e0       	ldi	r23, 0x03	; 3
    16be:	80 91 6b 09 	lds	r24, 0x096B	; 0x80096b <gripper_open>
    16c2:	90 91 6c 09 	lds	r25, 0x096C	; 0x80096c <gripper_open+0x1>
    16c6:	0e 94 b5 08 	call	0x116a	; 0x116a <move_gripper(int, int)>
    16ca:	10 92 84 09 	sts	0x0984, r1	; 0x800984 <fifth+0x1>
    16ce:	10 92 83 09 	sts	0x0983, r1	; 0x800983 <fifth>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2364
        correct=0;both_touched=0;

    }


}
    16d2:	df 91       	pop	r29
    16d4:	cf 91       	pop	r28
    16d6:	1f 91       	pop	r17
    16d8:	0f 91       	pop	r16
    16da:	ff 90       	pop	r15
    16dc:	ef 90       	pop	r14
    16de:	08 95       	ret
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2284

void victim(void){
  int uuu;
    int spd = EEPROM_read_int(spd_address);
  if(fifth==1 && ball==0){move_arm(arm_down,400);move_gripper(gripper_open,800);fifth=0;}
  else if(fifth==0 && ball==1)
    16e0:	89 2b       	or	r24, r25
    16e2:	b9 f7       	brne	.-18     	; 0x16d2 <victim()+0x5a>
    16e4:	40 e0       	ldi	r20, 0x00	; 0
    16e6:	62 e0       	ldi	r22, 0x02	; 2
    16e8:	85 e0       	ldi	r24, 0x05	; 5
    16ea:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    16ee:	01 97       	sbiw	r24, 0x01	; 1
    16f0:	81 f7       	brne	.-32     	; 0x16d2 <victim()+0x5a>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2287
    {
      //delay(30);
      lcd.clear(); 
    16f2:	0e 94 c4 05 	call	0xb88	; 0xb88 <LiquidCrystal::clear() [clone .constprop.32]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2288
      lcd.print("masdoom");
    16f6:	86 e3       	ldi	r24, 0x36	; 54
    16f8:	93 e0       	ldi	r25, 0x03	; 3
    16fa:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2290
      //delay(80);
      move_gripper(gripper_close,1000);
    16fe:	68 ee       	ldi	r22, 0xE8	; 232
    1700:	73 e0       	ldi	r23, 0x03	; 3
    1702:	80 91 6d 09 	lds	r24, 0x096D	; 0x80096d <gripper_close>
    1706:	90 91 6e 09 	lds	r25, 0x096E	; 0x80096e <gripper_close+0x1>
    170a:	0e 94 b5 08 	call	0x116a	; 0x116a <move_gripper(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2291
      if(ball==1)victim_checked=1;
    170e:	40 e0       	ldi	r20, 0x00	; 0
    1710:	62 e0       	ldi	r22, 0x02	; 2
    1712:	85 e0       	ldi	r24, 0x05	; 5
    1714:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    1718:	81 30       	cpi	r24, 0x01	; 1
    171a:	91 05       	cpc	r25, r1
    171c:	09 f0       	breq	.+2      	; 0x1720 <victim()+0xa8>
    171e:	2e c1       	rjmp	.+604    	; 0x197c <victim()+0x304>
    1720:	90 93 23 09 	sts	0x0923, r25	; 0x800923 <victim_checked+0x1>
    1724:	80 93 22 09 	sts	0x0922, r24	; 0x800922 <victim_checked>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2293
      else victim_checked=0;
      if(ball==1)
    1728:	40 e0       	ldi	r20, 0x00	; 0
    172a:	62 e0       	ldi	r22, 0x02	; 2
    172c:	85 e0       	ldi	r24, 0x05	; 5
    172e:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    1732:	ec 01       	movw	r28, r24
    1734:	01 97       	sbiw	r24, 0x01	; 1
    1736:	09 f0       	breq	.+2      	; 0x173a <victim()+0xc2>
    1738:	b5 c1       	rjmp	.+874    	; 0x1aa4 <victim()+0x42c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2295
        {
          if(rotate(0)!=10)
    173a:	90 e0       	ldi	r25, 0x00	; 0
    173c:	80 e0       	ldi	r24, 0x00	; 0
    173e:	0e 94 0c 08 	call	0x1018	; 0x1018 <rotate(int)>
    1742:	0a 97       	sbiw	r24, 0x0a	; 10
    1744:	09 f4       	brne	.+2      	; 0x1748 <victim()+0xd0>
    1746:	80 c1       	rjmp	.+768    	; 0x1a48 <victim()+0x3d0>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2297
            {  
              delay(5);
    1748:	65 e0       	ldi	r22, 0x05	; 5
    174a:	70 e0       	ldi	r23, 0x00	; 0
    174c:	80 e0       	ldi	r24, 0x00	; 0
    174e:	90 e0       	ldi	r25, 0x00	; 0
    1750:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2298
              rotate(0); 
    1754:	90 e0       	ldi	r25, 0x00	; 0
    1756:	80 e0       	ldi	r24, 0x00	; 0
    1758:	0e 94 0c 08 	call	0x1018	; 0x1018 <rotate(int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2299
              delay(150);
    175c:	66 e9       	ldi	r22, 0x96	; 150
    175e:	70 e0       	ldi	r23, 0x00	; 0
    1760:	80 e0       	ldi	r24, 0x00	; 0
    1762:	90 e0       	ldi	r25, 0x00	; 0
    1764:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2300
              go(-100,-100);delay(500);
    1768:	6c e9       	ldi	r22, 0x9C	; 156
    176a:	7f ef       	ldi	r23, 0xFF	; 255
    176c:	8c e9       	ldi	r24, 0x9C	; 156
    176e:	9f ef       	ldi	r25, 0xFF	; 255
    1770:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
    1774:	64 ef       	ldi	r22, 0xF4	; 244
    1776:	71 e0       	ldi	r23, 0x01	; 1
    1778:	80 e0       	ldi	r24, 0x00	; 0
    177a:	90 e0       	ldi	r25, 0x00	; 0
    177c:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2301
              move_arm(arm_dropping,600);delay(800);
    1780:	68 e5       	ldi	r22, 0x58	; 88
    1782:	72 e0       	ldi	r23, 0x02	; 2
    1784:	80 91 6f 09 	lds	r24, 0x096F	; 0x80096f <arm_dropping>
    1788:	90 91 70 09 	lds	r25, 0x0970	; 0x800970 <arm_dropping+0x1>
    178c:	0e 94 3f 08 	call	0x107e	; 0x107e <move_arm(int, int)>
    1790:	60 e2       	ldi	r22, 0x20	; 32
    1792:	73 e0       	ldi	r23, 0x03	; 3
    1794:	80 e0       	ldi	r24, 0x00	; 0
    1796:	90 e0       	ldi	r25, 0x00	; 0
    1798:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2302
              go(0,0);
    179c:	70 e0       	ldi	r23, 0x00	; 0
    179e:	60 e0       	ldi	r22, 0x00	; 0
    17a0:	90 e0       	ldi	r25, 0x00	; 0
    17a2:	80 e0       	ldi	r24, 0x00	; 0
    17a4:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2303
              delay(200);
    17a8:	68 ec       	ldi	r22, 0xC8	; 200
    17aa:	70 e0       	ldi	r23, 0x00	; 0
    17ac:	80 e0       	ldi	r24, 0x00	; 0
    17ae:	90 e0       	ldi	r25, 0x00	; 0
    17b0:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2304
              if(victim_checked==1)
    17b4:	c0 91 22 09 	lds	r28, 0x0922	; 0x800922 <victim_checked>
    17b8:	d0 91 23 09 	lds	r29, 0x0923	; 0x800923 <victim_checked+0x1>
    17bc:	c1 30       	cpi	r28, 0x01	; 1
    17be:	d1 05       	cpc	r29, r1
    17c0:	09 f0       	breq	.+2      	; 0x17c4 <victim()+0x14c>
    17c2:	2b c1       	rjmp	.+598    	; 0x1a1a <victim()+0x3a2>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2306
                {
                  if(con==0){farz=conductive;lcd.print("conductive");}
    17c4:	40 e0       	ldi	r20, 0x00	; 0
    17c6:	63 e0       	ldi	r22, 0x03	; 3
    17c8:	83 e0       	ldi	r24, 0x03	; 3
    17ca:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    17ce:	89 2b       	or	r24, r25
    17d0:	09 f0       	breq	.+2      	; 0x17d4 <victim()+0x15c>
    17d2:	d9 c0       	rjmp	.+434    	; 0x1986 <victim()+0x30e>
    17d4:	d0 93 21 09 	sts	0x0921, r29	; 0x800921 <farz+0x1>
    17d8:	c0 93 20 09 	sts	0x0920, r28	; 0x800920 <farz>
    17dc:	8e e3       	ldi	r24, 0x3E	; 62
    17de:	93 e0       	ldi	r25, 0x03	; 3
    17e0:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2308
                   else            {farz=inconductive;}
                  move_gripper(gripper_open,800);
    17e4:	60 e2       	ldi	r22, 0x20	; 32
    17e6:	73 e0       	ldi	r23, 0x03	; 3
    17e8:	80 91 6b 09 	lds	r24, 0x096B	; 0x80096b <gripper_open>
    17ec:	90 91 6c 09 	lds	r25, 0x096C	; 0x80096c <gripper_open+0x1>
    17f0:	0e 94 b5 08 	call	0x116a	; 0x116a <move_gripper(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2309
                  delay(900); 
    17f4:	64 e8       	ldi	r22, 0x84	; 132
    17f6:	73 e0       	ldi	r23, 0x03	; 3
    17f8:	80 e0       	ldi	r24, 0x00	; 0
    17fa:	90 e0       	ldi	r25, 0x00	; 0
    17fc:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2310
                  if(obs==1)                                   
    1800:	40 e0       	ldi	r20, 0x00	; 0
    1802:	62 e0       	ldi	r22, 0x02	; 2
    1804:	86 e0       	ldi	r24, 0x06	; 6
    1806:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    180a:	01 97       	sbiw	r24, 0x01	; 1
    180c:	81 f5       	brne	.+96     	; 0x186e <victim()+0x1f6>
    180e:	c0 91 a1 09 	lds	r28, 0x09A1	; 0x8009a1 <ball_num>
    1812:	d0 91 a2 09 	lds	r29, 0x09A2	; 0x8009a2 <ball_num+0x1>
    1816:	21 96       	adiw	r28, 0x01	; 1
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2312
                  {
                  if(farz==conductive){barband[rotate(0)]=1;delay(500);s_ball++; ball_num++;delay(50);}
    1818:	80 91 20 09 	lds	r24, 0x0920	; 0x800920 <farz>
    181c:	90 91 21 09 	lds	r25, 0x0921	; 0x800921 <farz+0x1>
    1820:	01 97       	sbiw	r24, 0x01	; 1
    1822:	09 f0       	breq	.+2      	; 0x1826 <victim()+0x1ae>
    1824:	b5 c0       	rjmp	.+362    	; 0x1990 <victim()+0x318>
    1826:	e0 90 8b 09 	lds	r14, 0x098B	; 0x80098b <s_ball>
    182a:	f0 90 8c 09 	lds	r15, 0x098C	; 0x80098c <s_ball+0x1>
    182e:	90 e0       	ldi	r25, 0x00	; 0
    1830:	80 e0       	ldi	r24, 0x00	; 0
    1832:	0e 94 0c 08 	call	0x1018	; 0x1018 <rotate(int)>
    1836:	8b 57       	subi	r24, 0x7B	; 123
    1838:	96 4f       	sbci	r25, 0xF6	; 246
    183a:	21 e0       	ldi	r18, 0x01	; 1
    183c:	fc 01       	movw	r30, r24
    183e:	20 83       	st	Z, r18
    1840:	64 ef       	ldi	r22, 0xF4	; 244
    1842:	71 e0       	ldi	r23, 0x01	; 1
    1844:	80 e0       	ldi	r24, 0x00	; 0
    1846:	90 e0       	ldi	r25, 0x00	; 0
    1848:	0e 94 24 03 	call	0x648	; 0x648 <delay>
    184c:	ff ef       	ldi	r31, 0xFF	; 255
    184e:	ef 1a       	sub	r14, r31
    1850:	ff 0a       	sbc	r15, r31
    1852:	f0 92 8c 09 	sts	0x098C, r15	; 0x80098c <s_ball+0x1>
    1856:	e0 92 8b 09 	sts	0x098B, r14	; 0x80098b <s_ball>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2313
                  else            {barband[rotate(0)]=2;delay(500);b_ball++; ball_num++;delay(50);}
    185a:	d0 93 a2 09 	sts	0x09A2, r29	; 0x8009a2 <ball_num+0x1>
    185e:	c0 93 a1 09 	sts	0x09A1, r28	; 0x8009a1 <ball_num>
    1862:	62 e3       	ldi	r22, 0x32	; 50
    1864:	70 e0       	ldi	r23, 0x00	; 0
    1866:	80 e0       	ldi	r24, 0x00	; 0
    1868:	90 e0       	ldi	r25, 0x00	; 0
    186a:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2316

                  }
                  lcd.clear();
    186e:	0e 94 c4 05 	call	0xb88	; 0xb88 <LiquidCrystal::clear() [clone .constprop.32]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2317
                  lcd.setCursor(0,0);
    1872:	60 e0       	ldi	r22, 0x00	; 0
    1874:	80 e0       	ldi	r24, 0x00	; 0
    1876:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2318
                  lcd.printf(" s=%d   b=%d  ",s_ball,b_ball);
    187a:	80 91 94 09 	lds	r24, 0x0994	; 0x800994 <b_ball+0x1>
    187e:	8f 93       	push	r24
    1880:	80 91 93 09 	lds	r24, 0x0993	; 0x800993 <b_ball>
    1884:	8f 93       	push	r24
    1886:	80 91 8c 09 	lds	r24, 0x098C	; 0x80098c <s_ball+0x1>
    188a:	8f 93       	push	r24
    188c:	80 91 8b 09 	lds	r24, 0x098B	; 0x80098b <s_ball>
    1890:	8f 93       	push	r24
    1892:	89 e4       	ldi	r24, 0x49	; 73
    1894:	93 e0       	ldi	r25, 0x03	; 3
    1896:	9f 93       	push	r25
    1898:	8f 93       	push	r24
    189a:	cd e7       	ldi	r28, 0x7D	; 125
    189c:	db e0       	ldi	r29, 0x0B	; 11
    189e:	df 93       	push	r29
    18a0:	cf 93       	push	r28
    18a2:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2319
                  lcd.setCursor(0,1);
    18a6:	61 e0       	ldi	r22, 0x01	; 1
    18a8:	80 e0       	ldi	r24, 0x00	; 0
    18aa:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2320
                  lcd.printf(" 1=%d 2=%d  3=%d  4=%d ",barband[0],barband[1],barband[2],barband[3]);                  
    18ae:	80 91 88 09 	lds	r24, 0x0988	; 0x800988 <barband+0x3>
    18b2:	28 2f       	mov	r18, r24
    18b4:	08 2e       	mov	r0, r24
    18b6:	00 0c       	add	r0, r0
    18b8:	33 0b       	sbc	r19, r19
    18ba:	3f 93       	push	r19
    18bc:	8f 93       	push	r24
    18be:	80 91 87 09 	lds	r24, 0x0987	; 0x800987 <barband+0x2>
    18c2:	28 2f       	mov	r18, r24
    18c4:	08 2e       	mov	r0, r24
    18c6:	00 0c       	add	r0, r0
    18c8:	33 0b       	sbc	r19, r19
    18ca:	3f 93       	push	r19
    18cc:	8f 93       	push	r24
    18ce:	80 91 86 09 	lds	r24, 0x0986	; 0x800986 <barband+0x1>
    18d2:	28 2f       	mov	r18, r24
    18d4:	08 2e       	mov	r0, r24
    18d6:	00 0c       	add	r0, r0
    18d8:	33 0b       	sbc	r19, r19
    18da:	3f 93       	push	r19
    18dc:	8f 93       	push	r24
    18de:	80 91 85 09 	lds	r24, 0x0985	; 0x800985 <barband>
    18e2:	28 2f       	mov	r18, r24
    18e4:	08 2e       	mov	r0, r24
    18e6:	00 0c       	add	r0, r0
    18e8:	33 0b       	sbc	r19, r19
    18ea:	3f 93       	push	r19
    18ec:	8f 93       	push	r24
    18ee:	88 e5       	ldi	r24, 0x58	; 88
    18f0:	93 e0       	ldi	r25, 0x03	; 3
    18f2:	9f 93       	push	r25
    18f4:	8f 93       	push	r24
    18f6:	df 93       	push	r29
    18f8:	cf 93       	push	r28
    18fa:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2321
                  move_arm(arm_down,400);delay(700);
    18fe:	60 e9       	ldi	r22, 0x90	; 144
    1900:	71 e0       	ldi	r23, 0x01	; 1
    1902:	80 91 9d 09 	lds	r24, 0x099D	; 0x80099d <arm_down>
    1906:	90 91 9e 09 	lds	r25, 0x099E	; 0x80099e <arm_down+0x1>
    190a:	0e 94 3f 08 	call	0x107e	; 0x107e <move_arm(int, int)>
    190e:	6c eb       	ldi	r22, 0xBC	; 188
    1910:	72 e0       	ldi	r23, 0x02	; 2
    1912:	80 e0       	ldi	r24, 0x00	; 0
    1914:	90 e0       	ldi	r25, 0x00	; 0
    1916:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2322
                  if(VSR10<=silver_voltage_R||VSL10<=silver_voltage_L||SM)
    191a:	41 e0       	ldi	r20, 0x01	; 1
    191c:	63 e0       	ldi	r22, 0x03	; 3
    191e:	82 e0       	ldi	r24, 0x02	; 2
    1920:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    1924:	2d b7       	in	r18, 0x3d	; 61
    1926:	3e b7       	in	r19, 0x3e	; 62
    1928:	2c 5e       	subi	r18, 0xEC	; 236
    192a:	3f 4f       	sbci	r19, 0xFF	; 255
    192c:	0f b6       	in	r0, 0x3f	; 63
    192e:	f8 94       	cli
    1930:	3e bf       	out	0x3e, r19	; 62
    1932:	0f be       	out	0x3f, r0	; 63
    1934:	2d bf       	out	0x3d, r18	; 61
    1936:	04 97       	sbiw	r24, 0x04	; 4
    1938:	0c f0       	brlt	.+2      	; 0x193c <victim()+0x2c4>
    193a:	45 c0       	rjmp	.+138    	; 0x19c6 <victim()+0x34e>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2324
                  {
                    move(Back,75,100);
    193c:	44 e6       	ldi	r20, 0x64	; 100
    193e:	50 e0       	ldi	r21, 0x00	; 0
    1940:	6b e4       	ldi	r22, 0x4B	; 75
    1942:	70 e0       	ldi	r23, 0x00	; 0
    1944:	8d e0       	ldi	r24, 0x0D	; 13
    1946:	90 e0       	ldi	r25, 0x00	; 0
    1948:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
    194c:	c0 91 7d 09 	lds	r28, 0x097D	; 0x80097d <T90>
    1950:	d0 91 7e 09 	lds	r29, 0x097E	; 0x80097e <T90+0x1>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2325
                    if(redroom_dir==Right)
    1954:	80 91 9b 09 	lds	r24, 0x099B	; 0x80099b <redroom_dir>
    1958:	90 91 9c 09 	lds	r25, 0x099C	; 0x80099c <redroom_dir+0x1>
    195c:	0c 97       	sbiw	r24, 0x0c	; 12
    195e:	09 f0       	breq	.+2      	; 0x1962 <victim()+0x2ea>
    1960:	4d c0       	rjmp	.+154    	; 0x19fc <victim()+0x384>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2328
                        {
                        pich_sakoo=0;
                        if(VL_Right>165)
    1962:	81 e0       	ldi	r24, 0x01	; 1
    1964:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2329
                        {move(Right,T90,100);}
    1968:	44 e6       	ldi	r20, 0x64	; 100
    196a:	50 e0       	ldi	r21, 0x00	; 0
    196c:	be 01       	movw	r22, r28
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2328
                  {
                    move(Back,75,100);
                    if(redroom_dir==Right)
                        {
                        pich_sakoo=0;
                        if(VL_Right>165)
    196e:	86 3a       	cpi	r24, 0xA6	; 166
    1970:	91 05       	cpc	r25, r1
    1972:	08 f4       	brcc	.+2      	; 0x1976 <victim()+0x2fe>
    1974:	4d c0       	rjmp	.+154    	; 0x1a10 <victim()+0x398>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2339
                        }
                    else                
                      {
                          pich_sakoo=0;
                          if(VL_Left>170){move(Left,T90,100);}
                          else {move(Right,T90,100);}
    1976:	8c e0       	ldi	r24, 0x0C	; 12
    1978:	90 e0       	ldi	r25, 0x00	; 0
    197a:	4c c0       	rjmp	.+152    	; 0x1a14 <victim()+0x39c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2292
      lcd.clear(); 
      lcd.print("masdoom");
      //delay(80);
      move_gripper(gripper_close,1000);
      if(ball==1)victim_checked=1;
      else victim_checked=0;
    197c:	10 92 23 09 	sts	0x0923, r1	; 0x800923 <victim_checked+0x1>
    1980:	10 92 22 09 	sts	0x0922, r1	; 0x800922 <victim_checked>
    1984:	d1 ce       	rjmp	.-606    	; 0x1728 <victim()+0xb0>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2307
              go(0,0);
              delay(200);
              if(victim_checked==1)
                {
                  if(con==0){farz=conductive;lcd.print("conductive");}
                   else            {farz=inconductive;}
    1986:	10 92 21 09 	sts	0x0921, r1	; 0x800921 <farz+0x1>
    198a:	10 92 20 09 	sts	0x0920, r1	; 0x800920 <farz>
    198e:	2a cf       	rjmp	.-428    	; 0x17e4 <victim()+0x16c>
    1990:	e0 90 93 09 	lds	r14, 0x0993	; 0x800993 <b_ball>
    1994:	f0 90 94 09 	lds	r15, 0x0994	; 0x800994 <b_ball+0x1>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2313
                  move_gripper(gripper_open,800);
                  delay(900); 
                  if(obs==1)                                   
                  {
                  if(farz==conductive){barband[rotate(0)]=1;delay(500);s_ball++; ball_num++;delay(50);}
                  else            {barband[rotate(0)]=2;delay(500);b_ball++; ball_num++;delay(50);}
    1998:	90 e0       	ldi	r25, 0x00	; 0
    199a:	80 e0       	ldi	r24, 0x00	; 0
    199c:	0e 94 0c 08 	call	0x1018	; 0x1018 <rotate(int)>
    19a0:	8b 57       	subi	r24, 0x7B	; 123
    19a2:	96 4f       	sbci	r25, 0xF6	; 246
    19a4:	22 e0       	ldi	r18, 0x02	; 2
    19a6:	fc 01       	movw	r30, r24
    19a8:	20 83       	st	Z, r18
    19aa:	64 ef       	ldi	r22, 0xF4	; 244
    19ac:	71 e0       	ldi	r23, 0x01	; 1
    19ae:	80 e0       	ldi	r24, 0x00	; 0
    19b0:	90 e0       	ldi	r25, 0x00	; 0
    19b2:	0e 94 24 03 	call	0x648	; 0x648 <delay>
    19b6:	ff ef       	ldi	r31, 0xFF	; 255
    19b8:	ef 1a       	sub	r14, r31
    19ba:	ff 0a       	sbc	r15, r31
    19bc:	f0 92 94 09 	sts	0x0994, r15	; 0x800994 <b_ball+0x1>
    19c0:	e0 92 93 09 	sts	0x0993, r14	; 0x800993 <b_ball>
    19c4:	4a cf       	rjmp	.-364    	; 0x185a <victim()+0x1e2>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2322
                  lcd.setCursor(0,0);
                  lcd.printf(" s=%d   b=%d  ",s_ball,b_ball);
                  lcd.setCursor(0,1);
                  lcd.printf(" 1=%d 2=%d  3=%d  4=%d ",barband[0],barband[1],barband[2],barband[3]);                  
                  move_arm(arm_down,400);delay(700);
                  if(VSR10<=silver_voltage_R||VSL10<=silver_voltage_L||SM)
    19c6:	41 e0       	ldi	r20, 0x01	; 1
    19c8:	62 e0       	ldi	r22, 0x02	; 2
    19ca:	82 e0       	ldi	r24, 0x02	; 2
    19cc:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    19d0:	04 97       	sbiw	r24, 0x04	; 4
    19d2:	0c f4       	brge	.+2      	; 0x19d6 <victim()+0x35e>
    19d4:	b3 cf       	rjmp	.-154    	; 0x193c <victim()+0x2c4>
    19d6:	40 e0       	ldi	r20, 0x00	; 0
    19d8:	60 e0       	ldi	r22, 0x00	; 0
    19da:	80 e0       	ldi	r24, 0x00	; 0
    19dc:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    19e0:	89 2b       	or	r24, r25
    19e2:	09 f0       	breq	.+2      	; 0x19e6 <victim()+0x36e>
    19e4:	ab cf       	rjmp	.-170    	; 0x193c <victim()+0x2c4>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2355
            //delay(150);
            ball_num++;fifth=1;
            if(con==0){s_ball++;}
            else {b_ball++;}
            }
          go(spd,spd);
    19e6:	b8 01       	movw	r22, r16
    19e8:	c8 01       	movw	r24, r16
    19ea:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2356
          get_out();  //exit after picking up  
    19ee:	0e 94 05 0f 	call	0x1e0a	; 0x1e0a <get_out()>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2359
        } 
      else {move_arm(arm_down,400);move_gripper(gripper_open,500);delay(200);} 
        correct=0;both_touched=0;
    19f2:	10 92 8e 09 	sts	0x098E, r1	; 0x80098e <correct+0x1>
    19f6:	10 92 8d 09 	sts	0x098D, r1	; 0x80098d <correct>
    19fa:	6b ce       	rjmp	.-810    	; 0x16d2 <victim()+0x5a>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2338
                        //else redroom_dir=Left;
                        }
                    else                
                      {
                          pich_sakoo=0;
                          if(VL_Left>170){move(Left,T90,100);}
    19fc:	82 e0       	ldi	r24, 0x02	; 2
    19fe:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    1a02:	44 e6       	ldi	r20, 0x64	; 100
    1a04:	50 e0       	ldi	r21, 0x00	; 0
    1a06:	be 01       	movw	r22, r28
    1a08:	8b 3a       	cpi	r24, 0xAB	; 171
    1a0a:	91 05       	cpc	r25, r1
    1a0c:	08 f4       	brcc	.+2      	; 0x1a10 <victim()+0x398>
    1a0e:	b3 cf       	rjmp	.-154    	; 0x1976 <victim()+0x2fe>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2330
                    if(redroom_dir==Right)
                        {
                        pich_sakoo=0;
                        if(VL_Right>165)
                        {move(Right,T90,100);}
                        else{move(Left,T90,100);}
    1a10:	8b e0       	ldi	r24, 0x0B	; 11
    1a12:	90 e0       	ldi	r25, 0x00	; 0
    1a14:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
    1a18:	e6 cf       	rjmp	.-52     	; 0x19e6 <victim()+0x36e>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2345
                          //if((ev_ball>0 && ball_num>=1)||(ball_num>=2));
                          // else redroom_dir=Right;
                      }
                  }
                 }
              else{move_arm(arm_down,400);move_gripper(gripper_open,500);delay(200);}
    1a1a:	60 e9       	ldi	r22, 0x90	; 144
    1a1c:	71 e0       	ldi	r23, 0x01	; 1
    1a1e:	80 91 9d 09 	lds	r24, 0x099D	; 0x80099d <arm_down>
    1a22:	90 91 9e 09 	lds	r25, 0x099E	; 0x80099e <arm_down+0x1>
    1a26:	0e 94 3f 08 	call	0x107e	; 0x107e <move_arm(int, int)>
    1a2a:	64 ef       	ldi	r22, 0xF4	; 244
    1a2c:	71 e0       	ldi	r23, 0x01	; 1
    1a2e:	80 91 6b 09 	lds	r24, 0x096B	; 0x80096b <gripper_open>
    1a32:	90 91 6c 09 	lds	r25, 0x096C	; 0x80096c <gripper_open+0x1>
    1a36:	0e 94 b5 08 	call	0x116a	; 0x116a <move_gripper(int, int)>
    1a3a:	68 ec       	ldi	r22, 0xC8	; 200
    1a3c:	70 e0       	ldi	r23, 0x00	; 0
    1a3e:	80 e0       	ldi	r24, 0x00	; 0
    1a40:	90 e0       	ldi	r25, 0x00	; 0
    1a42:	0e 94 24 03 	call	0x648	; 0x648 <delay>
    1a46:	cf cf       	rjmp	.-98     	; 0x19e6 <victim()+0x36e>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2348
                  
            }
          else if(rotate(0)==10)
    1a48:	90 e0       	ldi	r25, 0x00	; 0
    1a4a:	80 e0       	ldi	r24, 0x00	; 0
    1a4c:	0e 94 0c 08 	call	0x1018	; 0x1018 <rotate(int)>
    1a50:	0a 97       	sbiw	r24, 0x0a	; 10
    1a52:	49 f6       	brne	.-110    	; 0x19e6 <victim()+0x36e>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2351
            {
            //delay(150);
            ball_num++;fifth=1;
    1a54:	80 91 a1 09 	lds	r24, 0x09A1	; 0x8009a1 <ball_num>
    1a58:	90 91 a2 09 	lds	r25, 0x09A2	; 0x8009a2 <ball_num+0x1>
    1a5c:	01 96       	adiw	r24, 0x01	; 1
    1a5e:	90 93 a2 09 	sts	0x09A2, r25	; 0x8009a2 <ball_num+0x1>
    1a62:	80 93 a1 09 	sts	0x09A1, r24	; 0x8009a1 <ball_num>
    1a66:	d0 93 84 09 	sts	0x0984, r29	; 0x800984 <fifth+0x1>
    1a6a:	c0 93 83 09 	sts	0x0983, r28	; 0x800983 <fifth>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2352
            if(con==0){s_ball++;}
    1a6e:	40 e0       	ldi	r20, 0x00	; 0
    1a70:	63 e0       	ldi	r22, 0x03	; 3
    1a72:	83 e0       	ldi	r24, 0x03	; 3
    1a74:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    1a78:	89 2b       	or	r24, r25
    1a7a:	51 f4       	brne	.+20     	; 0x1a90 <victim()+0x418>
    1a7c:	80 91 8b 09 	lds	r24, 0x098B	; 0x80098b <s_ball>
    1a80:	90 91 8c 09 	lds	r25, 0x098C	; 0x80098c <s_ball+0x1>
    1a84:	01 96       	adiw	r24, 0x01	; 1
    1a86:	90 93 8c 09 	sts	0x098C, r25	; 0x80098c <s_ball+0x1>
    1a8a:	80 93 8b 09 	sts	0x098B, r24	; 0x80098b <s_ball>
    1a8e:	ab cf       	rjmp	.-170    	; 0x19e6 <victim()+0x36e>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2353
            else {b_ball++;}
    1a90:	80 91 93 09 	lds	r24, 0x0993	; 0x800993 <b_ball>
    1a94:	90 91 94 09 	lds	r25, 0x0994	; 0x800994 <b_ball+0x1>
    1a98:	01 96       	adiw	r24, 0x01	; 1
    1a9a:	90 93 94 09 	sts	0x0994, r25	; 0x800994 <b_ball+0x1>
    1a9e:	80 93 93 09 	sts	0x0993, r24	; 0x800993 <b_ball>
    1aa2:	a1 cf       	rjmp	.-190    	; 0x19e6 <victim()+0x36e>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2358
            }
          go(spd,spd);
          get_out();  //exit after picking up  
        } 
      else {move_arm(arm_down,400);move_gripper(gripper_open,500);delay(200);} 
    1aa4:	60 e9       	ldi	r22, 0x90	; 144
    1aa6:	71 e0       	ldi	r23, 0x01	; 1
    1aa8:	80 91 9d 09 	lds	r24, 0x099D	; 0x80099d <arm_down>
    1aac:	90 91 9e 09 	lds	r25, 0x099E	; 0x80099e <arm_down+0x1>
    1ab0:	0e 94 3f 08 	call	0x107e	; 0x107e <move_arm(int, int)>
    1ab4:	64 ef       	ldi	r22, 0xF4	; 244
    1ab6:	71 e0       	ldi	r23, 0x01	; 1
    1ab8:	80 91 6b 09 	lds	r24, 0x096B	; 0x80096b <gripper_open>
    1abc:	90 91 6c 09 	lds	r25, 0x096C	; 0x80096c <gripper_open+0x1>
    1ac0:	0e 94 b5 08 	call	0x116a	; 0x116a <move_gripper(int, int)>
    1ac4:	68 ec       	ldi	r22, 0xC8	; 200
    1ac6:	70 e0       	ldi	r23, 0x00	; 0
    1ac8:	80 e0       	ldi	r24, 0x00	; 0
    1aca:	90 e0       	ldi	r25, 0x00	; 0
    1acc:	0e 94 24 03 	call	0x648	; 0x648 <delay>
    1ad0:	90 cf       	rjmp	.-224    	; 0x19f2 <victim()+0x37a>

00001ad2 <correction(char)>:
correction():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2405
    move_arm(arm_down,500);
    }

}
void correction(char direction)
{
    1ad2:	af 92       	push	r10
    1ad4:	bf 92       	push	r11
    1ad6:	df 92       	push	r13
    1ad8:	ef 92       	push	r14
    1ada:	ff 92       	push	r15
    1adc:	0f 93       	push	r16
    1ade:	1f 93       	push	r17
    1ae0:	cf 93       	push	r28
    1ae2:	df 93       	push	r29
    1ae4:	d8 2e       	mov	r13, r24
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2406
  int T90 = EEPROM_read_int(T90_address);
    1ae6:	88 e9       	ldi	r24, 0x98	; 152
    1ae8:	90 e0       	ldi	r25, 0x00	; 0
    1aea:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2453

                go(-120,255);both_touched=0;correct=1;its_not_obs=1;
                if(t>3000)
                    {

                    move(Back,40);move(Right,T90*2);
    1aee:	5c 01       	movw	r10, r24
    1af0:	aa 0c       	add	r10, r10
    1af2:	bb 1c       	adc	r11, r11
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2407

}
void correction(char direction)
{
  int T90 = EEPROM_read_int(T90_address);
  int t=0,m=0,l_touch=0,r_touch=0,dance=0;
    1af4:	10 e0       	ldi	r17, 0x00	; 0
    1af6:	00 e0       	ldi	r16, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2411
  char obs_check_time=0;
  while(1)
    {
        t++;
    1af8:	e8 01       	movw	r28, r16
    1afa:	21 96       	adiw	r28, 0x01	; 1
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2412
        if(t>2000){correct=0;both_touched=0;break;}
    1afc:	c1 3d       	cpi	r28, 0xD1	; 209
    1afe:	87 e0       	ldi	r24, 0x07	; 7
    1b00:	d8 07       	cpc	r29, r24
    1b02:	74 f0       	brlt	.+28     	; 0x1b20 <correction(char)+0x4e>
    1b04:	10 92 8e 09 	sts	0x098E, r1	; 0x80098e <correct+0x1>
    1b08:	10 92 8d 09 	sts	0x098D, r1	; 0x80098d <correct>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2518
        else{side_check=0;}

        break;
        }
    }
  }
    1b0c:	df 91       	pop	r29
    1b0e:	cf 91       	pop	r28
    1b10:	1f 91       	pop	r17
    1b12:	0f 91       	pop	r16
    1b14:	ff 90       	pop	r15
    1b16:	ef 90       	pop	r14
    1b18:	df 90       	pop	r13
    1b1a:	bf 90       	pop	r11
    1b1c:	af 90       	pop	r10
    1b1e:	08 95       	ret
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2413
  char obs_check_time=0;
  while(1)
    {
        t++;
        if(t>2000){correct=0;both_touched=0;break;}
        delay(1);    
    1b20:	61 e0       	ldi	r22, 0x01	; 1
    1b22:	70 e0       	ldi	r23, 0x00	; 0
    1b24:	80 e0       	ldi	r24, 0x00	; 0
    1b26:	90 e0       	ldi	r25, 0x00	; 0
    1b28:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2414
        victim();
    1b2c:	0e 94 3c 0b 	call	0x1678	; 0x1678 <victim()>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2415
        come_down();
    1b30:	0e 94 71 0a 	call	0x14e2	; 0x14e2 <come_down()>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2416
        if(direction==forward)
    1b34:	8a e0       	ldi	r24, 0x0A	; 10
    1b36:	d8 12       	cpse	r13, r24
    1b38:	c7 c0       	rjmp	.+398    	; 0x1cc8 <correction(char)+0x1f6>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2418
            {
            if(SFL && SFR){obs_check_time=0;correct=1;both_touched=1;go(0,0);break;}
    1b3a:	40 e0       	ldi	r20, 0x00	; 0
    1b3c:	62 e0       	ldi	r22, 0x02	; 2
    1b3e:	84 e0       	ldi	r24, 0x04	; 4
    1b40:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    1b44:	89 2b       	or	r24, r25
    1b46:	e1 f0       	breq	.+56     	; 0x1b80 <correction(char)+0xae>
    1b48:	40 e0       	ldi	r20, 0x00	; 0
    1b4a:	63 e0       	ldi	r22, 0x03	; 3
    1b4c:	84 e0       	ldi	r24, 0x04	; 4
    1b4e:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    1b52:	89 2b       	or	r24, r25
    1b54:	a9 f0       	breq	.+42     	; 0x1b80 <correction(char)+0xae>
    1b56:	81 e0       	ldi	r24, 0x01	; 1
    1b58:	90 e0       	ldi	r25, 0x00	; 0
    1b5a:	90 93 8e 09 	sts	0x098E, r25	; 0x80098e <correct+0x1>
    1b5e:	80 93 8d 09 	sts	0x098D, r24	; 0x80098d <correct>
    1b62:	70 e0       	ldi	r23, 0x00	; 0
    1b64:	60 e0       	ldi	r22, 0x00	; 0
    1b66:	90 e0       	ldi	r25, 0x00	; 0
    1b68:	80 e0       	ldi	r24, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2518
        else{side_check=0;}

        break;
        }
    }
  }
    1b6a:	df 91       	pop	r29
    1b6c:	cf 91       	pop	r28
    1b6e:	1f 91       	pop	r17
    1b70:	0f 91       	pop	r16
    1b72:	ff 90       	pop	r15
    1b74:	ef 90       	pop	r14
    1b76:	df 90       	pop	r13
    1b78:	bf 90       	pop	r11
    1b7a:	af 90       	pop	r10
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2418
        delay(1);    
        victim();
        come_down();
        if(direction==forward)
            {
            if(SFL && SFR){obs_check_time=0;correct=1;both_touched=1;go(0,0);break;}
    1b7c:	0c 94 d5 06 	jmp	0xdaa	; 0xdaa <go(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2420
            
            else if(SFL==0 && SFR==0)
    1b80:	40 e0       	ldi	r20, 0x00	; 0
    1b82:	62 e0       	ldi	r22, 0x02	; 2
    1b84:	84 e0       	ldi	r24, 0x04	; 4
    1b86:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    1b8a:	89 2b       	or	r24, r25
    1b8c:	09 f4       	brne	.+2      	; 0x1b90 <correction(char)+0xbe>
    1b8e:	44 c0       	rjmp	.+136    	; 0x1c18 <correction(char)+0x146>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2425
                {
                go(250,250);both_touched=0;correct=0;
                if(obs){its_not_obs=0;break;}
                }
            else if(SFL==0 && SFR==1)
    1b90:	40 e0       	ldi	r20, 0x00	; 0
    1b92:	62 e0       	ldi	r22, 0x02	; 2
    1b94:	84 e0       	ldi	r24, 0x04	; 4
    1b96:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    1b9a:	89 2b       	or	r24, r25
    1b9c:	09 f4       	brne	.+2      	; 0x1ba0 <correction(char)+0xce>
    1b9e:	5a c0       	rjmp	.+180    	; 0x1c54 <correction(char)+0x182>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2442
                    //move(forward,35);move(Right,T90);
                    t=0;
                    }
                }

            else if(SFL==1 && SFR==0)
    1ba0:	40 e0       	ldi	r20, 0x00	; 0
    1ba2:	62 e0       	ldi	r22, 0x02	; 2
    1ba4:	84 e0       	ldi	r24, 0x04	; 4
    1ba6:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    1baa:	7c 01       	movw	r14, r24
    1bac:	81 e0       	ldi	r24, 0x01	; 1
    1bae:	e8 16       	cp	r14, r24
    1bb0:	f1 04       	cpc	r15, r1
    1bb2:	09 f0       	breq	.+2      	; 0x1bb6 <correction(char)+0xe4>
    1bb4:	85 c0       	rjmp	.+266    	; 0x1cc0 <correction(char)+0x1ee>
    1bb6:	40 e0       	ldi	r20, 0x00	; 0
    1bb8:	63 e0       	ldi	r22, 0x03	; 3
    1bba:	84 e0       	ldi	r24, 0x04	; 4
    1bbc:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    1bc0:	89 2b       	or	r24, r25
    1bc2:	09 f0       	breq	.+2      	; 0x1bc6 <correction(char)+0xf4>
    1bc4:	7d c0       	rjmp	.+250    	; 0x1cc0 <correction(char)+0x1ee>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2445
                {

                t++; 
    1bc6:	e8 01       	movw	r28, r16
    1bc8:	22 96       	adiw	r28, 0x02	; 2
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2446
                lcd.clear();
    1bca:	0e 94 c4 05 	call	0xb88	; 0xb88 <LiquidCrystal::clear() [clone .constprop.32]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2447
                lcd.print("correct R");
    1bce:	8a e7       	ldi	r24, 0x7A	; 122
    1bd0:	93 e0       	ldi	r25, 0x03	; 3
    1bd2:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2449

                go(-120,255);both_touched=0;correct=1;its_not_obs=1;
    1bd6:	6f ef       	ldi	r22, 0xFF	; 255
    1bd8:	70 e0       	ldi	r23, 0x00	; 0
    1bda:	88 e8       	ldi	r24, 0x88	; 136
    1bdc:	9f ef       	ldi	r25, 0xFF	; 255
    1bde:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
    1be2:	f0 92 8e 09 	sts	0x098E, r15	; 0x80098e <correct+0x1>
    1be6:	e0 92 8d 09 	sts	0x098D, r14	; 0x80098d <correct>
    1bea:	f0 92 82 09 	sts	0x0982, r15	; 0x800982 <its_not_obs+0x1>
    1bee:	e0 92 81 09 	sts	0x0981, r14	; 0x800981 <its_not_obs>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2450
                if(t>3000)
    1bf2:	c9 3b       	cpi	r28, 0xB9	; 185
    1bf4:	8b e0       	ldi	r24, 0x0B	; 11
    1bf6:	d8 07       	cpc	r29, r24
    1bf8:	0c f4       	brge	.+2      	; 0x1bfc <correction(char)+0x12a>
    1bfa:	62 c0       	rjmp	.+196    	; 0x1cc0 <correction(char)+0x1ee>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2453
                    {

                    move(Back,40);move(Right,T90*2);
    1bfc:	44 eb       	ldi	r20, 0xB4	; 180
    1bfe:	50 e0       	ldi	r21, 0x00	; 0
    1c00:	68 e2       	ldi	r22, 0x28	; 40
    1c02:	70 e0       	ldi	r23, 0x00	; 0
    1c04:	8d e0       	ldi	r24, 0x0D	; 13
    1c06:	90 e0       	ldi	r25, 0x00	; 0
    1c08:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
    1c0c:	44 eb       	ldi	r20, 0xB4	; 180
    1c0e:	50 e0       	ldi	r21, 0x00	; 0
    1c10:	b5 01       	movw	r22, r10
    1c12:	8c e0       	ldi	r24, 0x0C	; 12
    1c14:	90 e0       	ldi	r25, 0x00	; 0
    1c16:	50 c0       	rjmp	.+160    	; 0x1cb8 <correction(char)+0x1e6>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2420
        come_down();
        if(direction==forward)
            {
            if(SFL && SFR){obs_check_time=0;correct=1;both_touched=1;go(0,0);break;}
            
            else if(SFL==0 && SFR==0)
    1c18:	40 e0       	ldi	r20, 0x00	; 0
    1c1a:	63 e0       	ldi	r22, 0x03	; 3
    1c1c:	84 e0       	ldi	r24, 0x04	; 4
    1c1e:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    1c22:	89 2b       	or	r24, r25
    1c24:	09 f0       	breq	.+2      	; 0x1c28 <correction(char)+0x156>
    1c26:	b4 cf       	rjmp	.-152    	; 0x1b90 <correction(char)+0xbe>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2422
                {
                go(250,250);both_touched=0;correct=0;
    1c28:	6a ef       	ldi	r22, 0xFA	; 250
    1c2a:	70 e0       	ldi	r23, 0x00	; 0
    1c2c:	8a ef       	ldi	r24, 0xFA	; 250
    1c2e:	90 e0       	ldi	r25, 0x00	; 0
    1c30:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
    1c34:	10 92 8e 09 	sts	0x098E, r1	; 0x80098e <correct+0x1>
    1c38:	10 92 8d 09 	sts	0x098D, r1	; 0x80098d <correct>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2423
                if(obs){its_not_obs=0;break;}
    1c3c:	40 e0       	ldi	r20, 0x00	; 0
    1c3e:	62 e0       	ldi	r22, 0x02	; 2
    1c40:	86 e0       	ldi	r24, 0x06	; 6
    1c42:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    1c46:	89 2b       	or	r24, r25
    1c48:	d9 f1       	breq	.+118    	; 0x1cc0 <correction(char)+0x1ee>
    1c4a:	10 92 82 09 	sts	0x0982, r1	; 0x800982 <its_not_obs+0x1>
    1c4e:	10 92 81 09 	sts	0x0981, r1	; 0x800981 <its_not_obs>
    1c52:	5c cf       	rjmp	.-328    	; 0x1b0c <correction(char)+0x3a>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2425
                }
            else if(SFL==0 && SFR==1)
    1c54:	40 e0       	ldi	r20, 0x00	; 0
    1c56:	63 e0       	ldi	r22, 0x03	; 3
    1c58:	84 e0       	ldi	r24, 0x04	; 4
    1c5a:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    1c5e:	7c 01       	movw	r14, r24
    1c60:	81 e0       	ldi	r24, 0x01	; 1
    1c62:	e8 16       	cp	r14, r24
    1c64:	f1 04       	cpc	r15, r1
    1c66:	09 f0       	breq	.+2      	; 0x1c6a <correction(char)+0x198>
    1c68:	9b cf       	rjmp	.-202    	; 0x1ba0 <correction(char)+0xce>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2428
                {

                t++; 
    1c6a:	e8 01       	movw	r28, r16
    1c6c:	22 96       	adiw	r28, 0x02	; 2
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2429
                lcd.clear();
    1c6e:	0e 94 c4 05 	call	0xb88	; 0xb88 <LiquidCrystal::clear() [clone .constprop.32]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2430
                lcd.print("correct L");
    1c72:	80 e7       	ldi	r24, 0x70	; 112
    1c74:	93 e0       	ldi	r25, 0x03	; 3
    1c76:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2431
                go(255,-120);both_touched=0;correct=1;its_not_obs=1;
    1c7a:	68 e8       	ldi	r22, 0x88	; 136
    1c7c:	7f ef       	ldi	r23, 0xFF	; 255
    1c7e:	8f ef       	ldi	r24, 0xFF	; 255
    1c80:	90 e0       	ldi	r25, 0x00	; 0
    1c82:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
    1c86:	f0 92 8e 09 	sts	0x098E, r15	; 0x80098e <correct+0x1>
    1c8a:	e0 92 8d 09 	sts	0x098D, r14	; 0x80098d <correct>
    1c8e:	f0 92 82 09 	sts	0x0982, r15	; 0x800982 <its_not_obs+0x1>
    1c92:	e0 92 81 09 	sts	0x0981, r14	; 0x800981 <its_not_obs>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2432
                if(t>3000)       
    1c96:	c9 3b       	cpi	r28, 0xB9	; 185
    1c98:	8b e0       	ldi	r24, 0x0B	; 11
    1c9a:	d8 07       	cpc	r29, r24
    1c9c:	8c f0       	brlt	.+34     	; 0x1cc0 <correction(char)+0x1ee>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2436
                
                    {

                    move(Back,40);move(Left,T90*2);
    1c9e:	44 eb       	ldi	r20, 0xB4	; 180
    1ca0:	50 e0       	ldi	r21, 0x00	; 0
    1ca2:	68 e2       	ldi	r22, 0x28	; 40
    1ca4:	70 e0       	ldi	r23, 0x00	; 0
    1ca6:	8d e0       	ldi	r24, 0x0D	; 13
    1ca8:	90 e0       	ldi	r25, 0x00	; 0
    1caa:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
    1cae:	44 eb       	ldi	r20, 0xB4	; 180
    1cb0:	50 e0       	ldi	r21, 0x00	; 0
    1cb2:	b5 01       	movw	r22, r10
    1cb4:	8b e0       	ldi	r24, 0x0B	; 11
    1cb6:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2453

                go(-120,255);both_touched=0;correct=1;its_not_obs=1;
                if(t>3000)
                    {

                    move(Back,40);move(Right,T90*2);
    1cb8:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2455
                    //move(forward,35);move(Left,T90);
                    t=0;
    1cbc:	d0 e0       	ldi	r29, 0x00	; 0
    1cbe:	c0 e0       	ldi	r28, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2459
                    }
                }
            else both_touched=0;
            silver();
    1cc0:	0e 94 f7 09 	call	0x13ee	; 0x13ee <silver()>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2405
    move_arm(arm_down,500);
    }

}
void correction(char direction)
{
    1cc4:	8e 01       	movw	r16, r28
    1cc6:	18 cf       	rjmp	.-464    	; 0x1af8 <correction(char)+0x26>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2480
            else if(SBL==1 &&SBR==0)
            go(50,-500);

            }

        else if(direction==sides)
    1cc8:	83 e0       	ldi	r24, 0x03	; 3
    1cca:	d8 12       	cpse	r13, r24
    1ccc:	fb cf       	rjmp	.-10     	; 0x1cc4 <correction(char)+0x1f2>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2482
        {
        if(VL_Right<=100 && VL_Right!=20)//change
    1cce:	81 e0       	ldi	r24, 0x01	; 1
    1cd0:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    1cd4:	85 36       	cpi	r24, 0x65	; 101
    1cd6:	91 05       	cpc	r25, r1
    1cd8:	08 f4       	brcc	.+2      	; 0x1cdc <correction(char)+0x20a>
    1cda:	4f c0       	rjmp	.+158    	; 0x1d7a <correction(char)+0x2a8>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2498
                    }
                    dance=0;
                    side_check=1; 
                    } 
            }
        else if(VL_Left<=100 && VL_Left!=20) //try 100change(120)
    1cdc:	82 e0       	ldi	r24, 0x02	; 2
    1cde:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    1ce2:	85 36       	cpi	r24, 0x65	; 101
    1ce4:	91 05       	cpc	r25, r1
    1ce6:	08 f0       	brcs	.+2      	; 0x1cea <correction(char)+0x218>
    1ce8:	11 cf       	rjmp	.-478    	; 0x1b0c <correction(char)+0x3a>
    1cea:	82 e0       	ldi	r24, 0x02	; 2
    1cec:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    1cf0:	44 97       	sbiw	r24, 0x14	; 20
    1cf2:	09 f4       	brne	.+2      	; 0x1cf6 <correction(char)+0x224>
    1cf4:	0b cf       	rjmp	.-490    	; 0x1b0c <correction(char)+0x3a>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2500
            {
                    if(VL_Left<=100 && VL_Left!=20)//change
    1cf6:	82 e0       	ldi	r24, 0x02	; 2
    1cf8:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    1cfc:	85 36       	cpi	r24, 0x65	; 101
    1cfe:	91 05       	cpc	r25, r1
    1d00:	08 f0       	brcs	.+2      	; 0x1d04 <correction(char)+0x232>
    1d02:	04 cf       	rjmp	.-504    	; 0x1b0c <correction(char)+0x3a>
    1d04:	82 e0       	ldi	r24, 0x02	; 2
    1d06:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    1d0a:	44 97       	sbiw	r24, 0x14	; 20
    1d0c:	09 f4       	brne	.+2      	; 0x1d10 <correction(char)+0x23e>
    1d0e:	fe ce       	rjmp	.-516    	; 0x1b0c <correction(char)+0x3a>
    1d10:	c3 e0       	ldi	r28, 0x03	; 3
    1d12:	d0 e0       	ldi	r29, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2503
                    {
                      while(dance<3){//try3or2change
                      go(-250,-250);delay(100);
    1d14:	66 e0       	ldi	r22, 0x06	; 6
    1d16:	7f ef       	ldi	r23, 0xFF	; 255
    1d18:	86 e0       	ldi	r24, 0x06	; 6
    1d1a:	9f ef       	ldi	r25, 0xFF	; 255
    1d1c:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
    1d20:	64 e6       	ldi	r22, 0x64	; 100
    1d22:	70 e0       	ldi	r23, 0x00	; 0
    1d24:	80 e0       	ldi	r24, 0x00	; 0
    1d26:	90 e0       	ldi	r25, 0x00	; 0
    1d28:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2504
                      go(250,-250);delay(200);
    1d2c:	66 e0       	ldi	r22, 0x06	; 6
    1d2e:	7f ef       	ldi	r23, 0xFF	; 255
    1d30:	8a ef       	ldi	r24, 0xFA	; 250
    1d32:	90 e0       	ldi	r25, 0x00	; 0
    1d34:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
    1d38:	68 ec       	ldi	r22, 0xC8	; 200
    1d3a:	70 e0       	ldi	r23, 0x00	; 0
    1d3c:	80 e0       	ldi	r24, 0x00	; 0
    1d3e:	90 e0       	ldi	r25, 0x00	; 0
    1d40:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2505
                      go(250,250);delay(100);
    1d44:	6a ef       	ldi	r22, 0xFA	; 250
    1d46:	70 e0       	ldi	r23, 0x00	; 0
    1d48:	8a ef       	ldi	r24, 0xFA	; 250
    1d4a:	90 e0       	ldi	r25, 0x00	; 0
    1d4c:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
    1d50:	64 e6       	ldi	r22, 0x64	; 100
    1d52:	70 e0       	ldi	r23, 0x00	; 0
    1d54:	80 e0       	ldi	r24, 0x00	; 0
    1d56:	90 e0       	ldi	r25, 0x00	; 0
    1d58:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2506
                      go(-250,250);delay(200);
    1d5c:	6a ef       	ldi	r22, 0xFA	; 250
    1d5e:	70 e0       	ldi	r23, 0x00	; 0
    1d60:	86 e0       	ldi	r24, 0x06	; 6
    1d62:	9f ef       	ldi	r25, 0xFF	; 255
    1d64:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
    1d68:	68 ec       	ldi	r22, 0xC8	; 200
    1d6a:	70 e0       	ldi	r23, 0x00	; 0
    1d6c:	80 e0       	ldi	r24, 0x00	; 0
    1d6e:	90 e0       	ldi	r25, 0x00	; 0
    1d70:	0e 94 24 03 	call	0x648	; 0x648 <delay>
    1d74:	21 97       	sbiw	r28, 0x01	; 1
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2502
            }
        else if(VL_Left<=100 && VL_Left!=20) //try 100change(120)
            {
                    if(VL_Left<=100 && VL_Left!=20)//change
                    {
                      while(dance<3){//try3or2change
    1d76:	71 f6       	brne	.-100    	; 0x1d14 <correction(char)+0x242>
    1d78:	c9 ce       	rjmp	.-622    	; 0x1b0c <correction(char)+0x3a>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2482

            }

        else if(direction==sides)
        {
        if(VL_Right<=100 && VL_Right!=20)//change
    1d7a:	81 e0       	ldi	r24, 0x01	; 1
    1d7c:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    1d80:	44 97       	sbiw	r24, 0x14	; 20
    1d82:	09 f4       	brne	.+2      	; 0x1d86 <correction(char)+0x2b4>
    1d84:	ab cf       	rjmp	.-170    	; 0x1cdc <correction(char)+0x20a>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2485
            {
            
            if(VL_Right<=100 && VL_Right !=20) //try 100change(120)
    1d86:	81 e0       	ldi	r24, 0x01	; 1
    1d88:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    1d8c:	85 36       	cpi	r24, 0x65	; 101
    1d8e:	91 05       	cpc	r25, r1
    1d90:	08 f0       	brcs	.+2      	; 0x1d94 <correction(char)+0x2c2>
    1d92:	bc ce       	rjmp	.-648    	; 0x1b0c <correction(char)+0x3a>
    1d94:	81 e0       	ldi	r24, 0x01	; 1
    1d96:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    1d9a:	44 97       	sbiw	r24, 0x14	; 20
    1d9c:	09 f4       	brne	.+2      	; 0x1da0 <correction(char)+0x2ce>
    1d9e:	b6 ce       	rjmp	.-660    	; 0x1b0c <correction(char)+0x3a>
    1da0:	c3 e0       	ldi	r28, 0x03	; 3
    1da2:	d0 e0       	ldi	r29, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2488
                    {
                    while(dance<3){ //try 3 or 2change
                      go(-250,-250);delay(100);
    1da4:	66 e0       	ldi	r22, 0x06	; 6
    1da6:	7f ef       	ldi	r23, 0xFF	; 255
    1da8:	86 e0       	ldi	r24, 0x06	; 6
    1daa:	9f ef       	ldi	r25, 0xFF	; 255
    1dac:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
    1db0:	64 e6       	ldi	r22, 0x64	; 100
    1db2:	70 e0       	ldi	r23, 0x00	; 0
    1db4:	80 e0       	ldi	r24, 0x00	; 0
    1db6:	90 e0       	ldi	r25, 0x00	; 0
    1db8:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2489
                      go(-250,250);delay(200);
    1dbc:	6a ef       	ldi	r22, 0xFA	; 250
    1dbe:	70 e0       	ldi	r23, 0x00	; 0
    1dc0:	86 e0       	ldi	r24, 0x06	; 6
    1dc2:	9f ef       	ldi	r25, 0xFF	; 255
    1dc4:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
    1dc8:	68 ec       	ldi	r22, 0xC8	; 200
    1dca:	70 e0       	ldi	r23, 0x00	; 0
    1dcc:	80 e0       	ldi	r24, 0x00	; 0
    1dce:	90 e0       	ldi	r25, 0x00	; 0
    1dd0:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2490
                      go(250,250);delay(100);
    1dd4:	6a ef       	ldi	r22, 0xFA	; 250
    1dd6:	70 e0       	ldi	r23, 0x00	; 0
    1dd8:	8a ef       	ldi	r24, 0xFA	; 250
    1dda:	90 e0       	ldi	r25, 0x00	; 0
    1ddc:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
    1de0:	64 e6       	ldi	r22, 0x64	; 100
    1de2:	70 e0       	ldi	r23, 0x00	; 0
    1de4:	80 e0       	ldi	r24, 0x00	; 0
    1de6:	90 e0       	ldi	r25, 0x00	; 0
    1de8:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2491
                      go(250,-250);delay(200);
    1dec:	66 e0       	ldi	r22, 0x06	; 6
    1dee:	7f ef       	ldi	r23, 0xFF	; 255
    1df0:	8a ef       	ldi	r24, 0xFA	; 250
    1df2:	90 e0       	ldi	r25, 0x00	; 0
    1df4:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
    1df8:	68 ec       	ldi	r22, 0xC8	; 200
    1dfa:	70 e0       	ldi	r23, 0x00	; 0
    1dfc:	80 e0       	ldi	r24, 0x00	; 0
    1dfe:	90 e0       	ldi	r25, 0x00	; 0
    1e00:	0e 94 24 03 	call	0x648	; 0x648 <delay>
    1e04:	21 97       	sbiw	r28, 0x01	; 1
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2487
        if(VL_Right<=100 && VL_Right!=20)//change
            {
            
            if(VL_Right<=100 && VL_Right !=20) //try 100change(120)
                    {
                    while(dance<3){ //try 3 or 2change
    1e06:	71 f6       	brne	.-100    	; 0x1da4 <correction(char)+0x2d2>
    1e08:	81 ce       	rjmp	.-766    	; 0x1b0c <correction(char)+0x3a>

00001e0a <get_out()>:
get_out():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2560

  }
}
  void get_out()
  {
    int T90 = EEPROM_read_int(T90_address);
    1e0a:	88 e9       	ldi	r24, 0x98	; 152
    1e0c:	90 e0       	ldi	r25, 0x00	; 0
    1e0e:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    1e12:	8c 01       	movw	r16, r24
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2561
    int spd = EEPROM_read_int(spd_address);
    1e14:	86 e9       	ldi	r24, 0x96	; 150
    1e16:	90 e0       	ldi	r25, 0x00	; 0
    1e18:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    1e1c:	6c 01       	movw	r12, r24
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2562
    int arm_normal = EEPROM_read_int(arm_normal_address);
    1e1e:	88 ea       	ldi	r24, 0xA8	; 168
    1e20:	90 e0       	ldi	r25, 0x00	; 0
    1e22:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    1e26:	ec 01       	movw	r28, r24
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2564
    int ev_s_ball = EEPROM_read_int(DW_address);
    EEPROM_write_int(basket_up_address, basket_up);
    1e28:	60 91 73 09 	lds	r22, 0x0973	; 0x800973 <basket_up>
    1e2c:	70 91 74 09 	lds	r23, 0x0974	; 0x800974 <basket_up+0x1>
    1e30:	84 ea       	ldi	r24, 0xA4	; 164
    1e32:	90 e0       	ldi	r25, 0x00	; 0
    1e34:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2565
  EEPROM_write_int(basket_normal_address, basket_normal);
    1e38:	60 91 9f 09 	lds	r22, 0x099F	; 0x80099f <basket_normal>
    1e3c:	70 91 a0 09 	lds	r23, 0x09A0	; 0x8009a0 <basket_normal+0x1>
    1e40:	86 ea       	ldi	r24, 0xA6	; 166
    1e42:	90 e0       	ldi	r25, 0x00	; 0
    1e44:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2566
  EEPROM_write_int(arm_normal_address, arm_normal);
    1e48:	be 01       	movw	r22, r28
    1e4a:	88 ea       	ldi	r24, 0xA8	; 168
    1e4c:	90 e0       	ldi	r25, 0x00	; 0
    1e4e:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2567
  EEPROM_write_int(arm_down_address, arm_down);
    1e52:	60 91 9d 09 	lds	r22, 0x099D	; 0x80099d <arm_down>
    1e56:	70 91 9e 09 	lds	r23, 0x099E	; 0x80099e <arm_down+0x1>
    1e5a:	8a ea       	ldi	r24, 0xAA	; 170
    1e5c:	90 e0       	ldi	r25, 0x00	; 0
    1e5e:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2568
  EEPROM_write_int(arm_dropping_address, arm_dropping);
    1e62:	60 91 6f 09 	lds	r22, 0x096F	; 0x80096f <arm_dropping>
    1e66:	70 91 70 09 	lds	r23, 0x0970	; 0x800970 <arm_dropping+0x1>
    1e6a:	8c ea       	ldi	r24, 0xAC	; 172
    1e6c:	90 e0       	ldi	r25, 0x00	; 0
    1e6e:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2569
  EEPROM_write_int(gripper_close_address, gripper_close);
    1e72:	60 91 6d 09 	lds	r22, 0x096D	; 0x80096d <gripper_close>
    1e76:	70 91 6e 09 	lds	r23, 0x096E	; 0x80096e <gripper_close+0x1>
    1e7a:	8e ea       	ldi	r24, 0xAE	; 174
    1e7c:	90 e0       	ldi	r25, 0x00	; 0
    1e7e:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2570
  EEPROM_write_int(gripper_open_address, gripper_open);
    1e82:	60 91 6b 09 	lds	r22, 0x096B	; 0x80096b <gripper_open>
    1e86:	70 91 6c 09 	lds	r23, 0x096C	; 0x80096c <gripper_open+0x1>
    1e8a:	80 eb       	ldi	r24, 0xB0	; 176
    1e8c:	90 e0       	ldi	r25, 0x00	; 0
    1e8e:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2573
    int dance=0;
    int i=0,time=0,x=0;
    lcd.clear();
    1e92:	0e 94 c4 05 	call	0xb88	; 0xb88 <LiquidCrystal::clear() [clone .constprop.32]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2574
    lcd.print("exit");
    1e96:	84 e8       	ldi	r24, 0x84	; 132
    1e98:	93 e0       	ldi	r25, 0x03	; 3
    1e9a:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2644
                delay(50);
            */
                
        
        }
          else if(obs){move(Back,50);move(Right,T90/2);}
    1e9e:	e8 01       	movw	r28, r16
    1ea0:	17 fd       	sbrc	r17, 7
    1ea2:	21 96       	adiw	r28, 0x01	; 1
    1ea4:	d5 95       	asr	r29
    1ea6:	c7 95       	ror	r28
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2572
  EEPROM_write_int(arm_down_address, arm_down);
  EEPROM_write_int(arm_dropping_address, arm_dropping);
  EEPROM_write_int(gripper_close_address, gripper_close);
  EEPROM_write_int(gripper_open_address, gripper_open);
    int dance=0;
    int i=0,time=0,x=0;
    1ea8:	f1 2c       	mov	r15, r1
    1eaa:	e1 2c       	mov	r14, r1
    1eac:	48 01       	movw	r8, r16
    1eae:	01 2e       	mov	r0, r17
    1eb0:	00 0c       	add	r0, r0
    1eb2:	aa 08       	sbc	r10, r10
    1eb4:	bb 08       	sbc	r11, r11
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2580
    //ev_ball=1;x_ball=0;//temporary
    
        //move(Back,100);
        //move(Left,T90);
        while(1){
          go(spd,spd);
    1eb6:	b6 01       	movw	r22, r12
    1eb8:	c6 01       	movw	r24, r12
    1eba:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2581
          i++;
    1ebe:	8f ef       	ldi	r24, 0xFF	; 255
    1ec0:	e8 1a       	sub	r14, r24
    1ec2:	f8 0a       	sbc	r15, r24
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2582
          if(SFL||SFR)
    1ec4:	40 e0       	ldi	r20, 0x00	; 0
    1ec6:	62 e0       	ldi	r22, 0x02	; 2
    1ec8:	84 e0       	ldi	r24, 0x04	; 4
    1eca:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    1ece:	89 2b       	or	r24, r25
    1ed0:	59 f1       	breq	.+86     	; 0x1f28 <get_out()+0x11e>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2586
          {
            
            
            if(i<150)//250?300?
    1ed2:	86 e9       	ldi	r24, 0x96	; 150
    1ed4:	e8 16       	cp	r14, r24
    1ed6:	f1 04       	cpc	r15, r1
    1ed8:	0c f4       	brge	.+2      	; 0x1edc <get_out()+0xd2>
    1eda:	4a c0       	rjmp	.+148    	; 0x1f70 <get_out()+0x166>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2595
              move(Back,50);
              move(Left,T90*0.9,250);//T90/2?

            }
            else {
              correction(forward);
    1edc:	8a e0       	ldi	r24, 0x0A	; 10
    1ede:	0e 94 69 0d 	call	0x1ad2	; 0x1ad2 <correction(char)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2601
              //go(-30,0);
              //delay(100);
              //move(Back,30);
              //go(0,-30);
              //delay(100)
              delay(10);
    1ee2:	6a e0       	ldi	r22, 0x0A	; 10
    1ee4:	70 e0       	ldi	r23, 0x00	; 0
    1ee6:	80 e0       	ldi	r24, 0x00	; 0
    1ee8:	90 e0       	ldi	r25, 0x00	; 0
    1eea:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2602
              move(Back,80);//60?40?
    1eee:	44 eb       	ldi	r20, 0xB4	; 180
    1ef0:	50 e0       	ldi	r21, 0x00	; 0
    1ef2:	60 e5       	ldi	r22, 0x50	; 80
    1ef4:	70 e0       	ldi	r23, 0x00	; 0
    1ef6:	8d e0       	ldi	r24, 0x0D	; 13
    1ef8:	90 e0       	ldi	r25, 0x00	; 0
    1efa:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2603
              move(Left,T90*0.8,250);
    1efe:	c5 01       	movw	r24, r10
    1f00:	b4 01       	movw	r22, r8
    1f02:	0e 94 ac 45 	call	0x8b58	; 0x8b58 <__floatsisf>
    1f06:	2d ec       	ldi	r18, 0xCD	; 205
    1f08:	3c ec       	ldi	r19, 0xCC	; 204
    1f0a:	4c e4       	ldi	r20, 0x4C	; 76
    1f0c:	5f e3       	ldi	r21, 0x3F	; 63
    1f0e:	0e 94 5c 46 	call	0x8cb8	; 0x8cb8 <__mulsf3>
    1f12:	0e 94 74 45 	call	0x8ae8	; 0x8ae8 <__fixsfsi>
    1f16:	4a ef       	ldi	r20, 0xFA	; 250
    1f18:	50 e0       	ldi	r21, 0x00	; 0
    1f1a:	8b e0       	ldi	r24, 0x0B	; 11
    1f1c:	90 e0       	ldi	r25, 0x00	; 0
    1f1e:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2604
              i=0;
    1f22:	f1 2c       	mov	r15, r1
    1f24:	e1 2c       	mov	r14, r1
    1f26:	c7 cf       	rjmp	.-114    	; 0x1eb6 <get_out()+0xac>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2582
        //move(Back,100);
        //move(Left,T90);
        while(1){
          go(spd,spd);
          i++;
          if(SFL||SFR)
    1f28:	40 e0       	ldi	r20, 0x00	; 0
    1f2a:	63 e0       	ldi	r22, 0x03	; 3
    1f2c:	84 e0       	ldi	r24, 0x04	; 4
    1f2e:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    1f32:	89 2b       	or	r24, r25
    1f34:	71 f6       	brne	.-100    	; 0x1ed2 <get_out()+0xc8>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2610
              }
            
          
          
          }
          else if(VSR10<=silver_voltage_R||VSL10<=silver_voltage_L)
    1f36:	41 e0       	ldi	r20, 0x01	; 1
    1f38:	63 e0       	ldi	r22, 0x03	; 3
    1f3a:	82 e0       	ldi	r24, 0x02	; 2
    1f3c:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    1f40:	04 97       	sbiw	r24, 0x04	; 4
    1f42:	d4 f5       	brge	.+116    	; 0x1fb8 <get_out()+0x1ae>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2612
          {
            move(Back,50);
    1f44:	44 eb       	ldi	r20, 0xB4	; 180
    1f46:	50 e0       	ldi	r21, 0x00	; 0
    1f48:	62 e3       	ldi	r22, 0x32	; 50
    1f4a:	70 e0       	ldi	r23, 0x00	; 0
    1f4c:	8d e0       	ldi	r24, 0x0D	; 13
    1f4e:	90 e0       	ldi	r25, 0x00	; 0
    1f50:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2613
            move(Left,T90);
    1f54:	44 eb       	ldi	r20, 0xB4	; 180
    1f56:	50 e0       	ldi	r21, 0x00	; 0
    1f58:	b8 01       	movw	r22, r16
    1f5a:	8b e0       	ldi	r24, 0x0B	; 11
    1f5c:	90 e0       	ldi	r25, 0x00	; 0
    1f5e:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2614
            move(forward,100);
    1f62:	44 eb       	ldi	r20, 0xB4	; 180
    1f64:	50 e0       	ldi	r21, 0x00	; 0
    1f66:	64 e6       	ldi	r22, 0x64	; 100
    1f68:	70 e0       	ldi	r23, 0x00	; 0
    1f6a:	8a e0       	ldi	r24, 0x0A	; 10
    1f6c:	90 e0       	ldi	r25, 0x00	; 0
    1f6e:	21 c0       	rjmp	.+66     	; 0x1fb2 <get_out()+0x1a8>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2588
          {
            
            
            if(i<150)//250?300?
            {
              correction(forward);
    1f70:	8a e0       	ldi	r24, 0x0A	; 10
    1f72:	0e 94 69 0d 	call	0x1ad2	; 0x1ad2 <correction(char)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2589
              delay(10);
    1f76:	6a e0       	ldi	r22, 0x0A	; 10
    1f78:	70 e0       	ldi	r23, 0x00	; 0
    1f7a:	80 e0       	ldi	r24, 0x00	; 0
    1f7c:	90 e0       	ldi	r25, 0x00	; 0
    1f7e:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2590
              move(Back,50);
    1f82:	44 eb       	ldi	r20, 0xB4	; 180
    1f84:	50 e0       	ldi	r21, 0x00	; 0
    1f86:	62 e3       	ldi	r22, 0x32	; 50
    1f88:	70 e0       	ldi	r23, 0x00	; 0
    1f8a:	8d e0       	ldi	r24, 0x0D	; 13
    1f8c:	90 e0       	ldi	r25, 0x00	; 0
    1f8e:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2591
              move(Left,T90*0.9,250);//T90/2?
    1f92:	c5 01       	movw	r24, r10
    1f94:	b4 01       	movw	r22, r8
    1f96:	0e 94 ac 45 	call	0x8b58	; 0x8b58 <__floatsisf>
    1f9a:	26 e6       	ldi	r18, 0x66	; 102
    1f9c:	36 e6       	ldi	r19, 0x66	; 102
    1f9e:	46 e6       	ldi	r20, 0x66	; 102
    1fa0:	5f e3       	ldi	r21, 0x3F	; 63
    1fa2:	0e 94 5c 46 	call	0x8cb8	; 0x8cb8 <__mulsf3>
    1fa6:	0e 94 74 45 	call	0x8ae8	; 0x8ae8 <__fixsfsi>
    1faa:	4a ef       	ldi	r20, 0xFA	; 250
    1fac:	50 e0       	ldi	r21, 0x00	; 0
    1fae:	8b e0       	ldi	r24, 0x0B	; 11
    1fb0:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2644
                delay(50);
            */
                
        
        }
          else if(obs){move(Back,50);move(Right,T90/2);}
    1fb2:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
    1fb6:	7f cf       	rjmp	.-258    	; 0x1eb6 <get_out()+0xac>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2610
              }
            
          
          
          }
          else if(VSR10<=silver_voltage_R||VSL10<=silver_voltage_L)
    1fb8:	41 e0       	ldi	r20, 0x01	; 1
    1fba:	62 e0       	ldi	r22, 0x02	; 2
    1fbc:	82 e0       	ldi	r24, 0x02	; 2
    1fbe:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    1fc2:	04 97       	sbiw	r24, 0x04	; 4
    1fc4:	0c f4       	brge	.+2      	; 0x1fc8 <get_out()+0x1be>
    1fc6:	be cf       	rjmp	.-132    	; 0x1f44 <get_out()+0x13a>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2617
            move(Back,50);
            move(Left,T90);
            move(forward,100);
            }

          else if(SM||SR1||SL1||SR2){
    1fc8:	40 e0       	ldi	r20, 0x00	; 0
    1fca:	60 e0       	ldi	r22, 0x00	; 0
    1fcc:	80 e0       	ldi	r24, 0x00	; 0
    1fce:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    1fd2:	89 2b       	or	r24, r25
    1fd4:	09 f4       	brne	.+2      	; 0x1fd8 <get_out()+0x1ce>
    1fd6:	8e c0       	rjmp	.+284    	; 0x20f4 <get_out()+0x2ea>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2618
            move(Back,T90/2);
    1fd8:	44 eb       	ldi	r20, 0xB4	; 180
    1fda:	50 e0       	ldi	r21, 0x00	; 0
    1fdc:	be 01       	movw	r22, r28
    1fde:	8d e0       	ldi	r24, 0x0D	; 13
    1fe0:	90 e0       	ldi	r25, 0x00	; 0
    1fe2:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
superteam():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2520
        break;
        }
    }
  }
void superteam(){
  EEPROM_write_int(basket_up_address, basket_up);
    1fe6:	60 91 73 09 	lds	r22, 0x0973	; 0x800973 <basket_up>
    1fea:	70 91 74 09 	lds	r23, 0x0974	; 0x800974 <basket_up+0x1>
    1fee:	84 ea       	ldi	r24, 0xA4	; 164
    1ff0:	90 e0       	ldi	r25, 0x00	; 0
    1ff2:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2521
  EEPROM_write_int(basket_normal_address, basket_normal);
    1ff6:	60 91 9f 09 	lds	r22, 0x099F	; 0x80099f <basket_normal>
    1ffa:	70 91 a0 09 	lds	r23, 0x09A0	; 0x8009a0 <basket_normal+0x1>
    1ffe:	86 ea       	ldi	r24, 0xA6	; 166
    2000:	90 e0       	ldi	r25, 0x00	; 0
    2002:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2522
  EEPROM_write_int(arm_normal_address, arm_normal);
    2006:	60 91 71 09 	lds	r22, 0x0971	; 0x800971 <arm_normal>
    200a:	70 91 72 09 	lds	r23, 0x0972	; 0x800972 <arm_normal+0x1>
    200e:	88 ea       	ldi	r24, 0xA8	; 168
    2010:	90 e0       	ldi	r25, 0x00	; 0
    2012:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2523
  EEPROM_write_int(arm_down_address, arm_down);
    2016:	60 91 9d 09 	lds	r22, 0x099D	; 0x80099d <arm_down>
    201a:	70 91 9e 09 	lds	r23, 0x099E	; 0x80099e <arm_down+0x1>
    201e:	8a ea       	ldi	r24, 0xAA	; 170
    2020:	90 e0       	ldi	r25, 0x00	; 0
    2022:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2524
  EEPROM_write_int(arm_dropping_address, arm_dropping);
    2026:	60 91 6f 09 	lds	r22, 0x096F	; 0x80096f <arm_dropping>
    202a:	70 91 70 09 	lds	r23, 0x0970	; 0x800970 <arm_dropping+0x1>
    202e:	8c ea       	ldi	r24, 0xAC	; 172
    2030:	90 e0       	ldi	r25, 0x00	; 0
    2032:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2525
  EEPROM_write_int(gripper_close_address, gripper_close);
    2036:	60 91 6d 09 	lds	r22, 0x096D	; 0x80096d <gripper_close>
    203a:	70 91 6e 09 	lds	r23, 0x096E	; 0x80096e <gripper_close+0x1>
    203e:	8e ea       	ldi	r24, 0xAE	; 174
    2040:	90 e0       	ldi	r25, 0x00	; 0
    2042:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2526
  EEPROM_write_int(gripper_open_address, gripper_open);
    2046:	60 91 6b 09 	lds	r22, 0x096B	; 0x80096b <gripper_open>
    204a:	70 91 6c 09 	lds	r23, 0x096C	; 0x80096c <gripper_open+0x1>
    204e:	80 eb       	ldi	r24, 0xB0	; 176
    2050:	90 e0       	ldi	r25, 0x00	; 0
    2052:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2529
int T90 = EEPROM_read_int(T90_address);
int touch_time=0;
go(0,0);
    2056:	70 e0       	ldi	r23, 0x00	; 0
    2058:	60 e0       	ldi	r22, 0x00	; 0
    205a:	90 e0       	ldi	r25, 0x00	; 0
    205c:	80 e0       	ldi	r24, 0x00	; 0
    205e:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2530
while(!SFL||!SFR);
    2062:	40 e0       	ldi	r20, 0x00	; 0
    2064:	62 e0       	ldi	r22, 0x02	; 2
    2066:	84 e0       	ldi	r24, 0x04	; 4
    2068:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    206c:	89 2b       	or	r24, r25
    206e:	c9 f3       	breq	.-14     	; 0x2062 <get_out()+0x258>
    2070:	40 e0       	ldi	r20, 0x00	; 0
    2072:	63 e0       	ldi	r22, 0x03	; 3
    2074:	84 e0       	ldi	r24, 0x04	; 4
    2076:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    207a:	89 2b       	or	r24, r25
    207c:	91 f3       	breq	.-28     	; 0x2062 <get_out()+0x258>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2531
touch_count++;
    207e:	80 91 7f 09 	lds	r24, 0x097F	; 0x80097f <touch_count>
    2082:	90 91 80 09 	lds	r25, 0x0980	; 0x800980 <touch_count+0x1>
    2086:	01 96       	adiw	r24, 0x01	; 1
    2088:	90 93 80 09 	sts	0x0980, r25	; 0x800980 <touch_count+0x1>
    208c:	80 93 7f 09 	sts	0x097F, r24	; 0x80097f <touch_count>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2533
while(touch_time<1000){
  delay(10);
    2090:	6a e0       	ldi	r22, 0x0A	; 10
    2092:	70 e0       	ldi	r23, 0x00	; 0
    2094:	80 e0       	ldi	r24, 0x00	; 0
    2096:	90 e0       	ldi	r25, 0x00	; 0
    2098:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2534
  if(SFL||SFR){while(SFL||SFR);touch_count++;delay(500);}
    209c:	40 e0       	ldi	r20, 0x00	; 0
    209e:	62 e0       	ldi	r22, 0x02	; 2
    20a0:	84 e0       	ldi	r24, 0x04	; 4
    20a2:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    20a6:	89 2b       	or	r24, r25
    20a8:	39 f4       	brne	.+14     	; 0x20b8 <get_out()+0x2ae>
    20aa:	40 e0       	ldi	r20, 0x00	; 0
    20ac:	63 e0       	ldi	r22, 0x03	; 3
    20ae:	84 e0       	ldi	r24, 0x04	; 4
    20b0:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    20b4:	89 2b       	or	r24, r25
    20b6:	61 f3       	breq	.-40     	; 0x2090 <get_out()+0x286>
    20b8:	40 e0       	ldi	r20, 0x00	; 0
    20ba:	62 e0       	ldi	r22, 0x02	; 2
    20bc:	84 e0       	ldi	r24, 0x04	; 4
    20be:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    20c2:	89 2b       	or	r24, r25
    20c4:	c9 f7       	brne	.-14     	; 0x20b8 <get_out()+0x2ae>
    20c6:	40 e0       	ldi	r20, 0x00	; 0
    20c8:	63 e0       	ldi	r22, 0x03	; 3
    20ca:	84 e0       	ldi	r24, 0x04	; 4
    20cc:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    20d0:	89 2b       	or	r24, r25
    20d2:	91 f7       	brne	.-28     	; 0x20b8 <get_out()+0x2ae>
    20d4:	80 91 7f 09 	lds	r24, 0x097F	; 0x80097f <touch_count>
    20d8:	90 91 80 09 	lds	r25, 0x0980	; 0x800980 <touch_count+0x1>
    20dc:	01 96       	adiw	r24, 0x01	; 1
    20de:	90 93 80 09 	sts	0x0980, r25	; 0x800980 <touch_count+0x1>
    20e2:	80 93 7f 09 	sts	0x097F, r24	; 0x80097f <touch_count>
    20e6:	64 ef       	ldi	r22, 0xF4	; 244
    20e8:	71 e0       	ldi	r23, 0x01	; 1
    20ea:	80 e0       	ldi	r24, 0x00	; 0
    20ec:	90 e0       	ldi	r25, 0x00	; 0
    20ee:	0e 94 24 03 	call	0x648	; 0x648 <delay>
    20f2:	ce cf       	rjmp	.-100    	; 0x2090 <get_out()+0x286>
get_out():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2617
            move(Back,50);
            move(Left,T90);
            move(forward,100);
            }

          else if(SM||SR1||SL1||SR2){
    20f4:	40 e0       	ldi	r20, 0x00	; 0
    20f6:	61 e0       	ldi	r22, 0x01	; 1
    20f8:	81 e0       	ldi	r24, 0x01	; 1
    20fa:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    20fe:	89 2b       	or	r24, r25
    2100:	09 f0       	breq	.+2      	; 0x2104 <get_out()+0x2fa>
    2102:	6a cf       	rjmp	.-300    	; 0x1fd8 <get_out()+0x1ce>
    2104:	40 e0       	ldi	r20, 0x00	; 0
    2106:	60 e0       	ldi	r22, 0x00	; 0
    2108:	81 e0       	ldi	r24, 0x01	; 1
    210a:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    210e:	89 2b       	or	r24, r25
    2110:	09 f0       	breq	.+2      	; 0x2114 <get_out()+0x30a>
    2112:	62 cf       	rjmp	.-316    	; 0x1fd8 <get_out()+0x1ce>
    2114:	40 e0       	ldi	r20, 0x00	; 0
    2116:	61 e0       	ldi	r22, 0x01	; 1
    2118:	82 e0       	ldi	r24, 0x02	; 2
    211a:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    211e:	89 2b       	or	r24, r25
    2120:	09 f0       	breq	.+2      	; 0x2124 <get_out()+0x31a>
    2122:	5a cf       	rjmp	.-332    	; 0x1fd8 <get_out()+0x1ce>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2644
                delay(50);
            */
                
        
        }
          else if(obs){move(Back,50);move(Right,T90/2);}
    2124:	40 e0       	ldi	r20, 0x00	; 0
    2126:	62 e0       	ldi	r22, 0x02	; 2
    2128:	86 e0       	ldi	r24, 0x06	; 6
    212a:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    212e:	89 2b       	or	r24, r25
    2130:	09 f4       	brne	.+2      	; 0x2134 <get_out()+0x32a>
    2132:	c1 ce       	rjmp	.-638    	; 0x1eb6 <get_out()+0xac>
    2134:	44 eb       	ldi	r20, 0xB4	; 180
    2136:	50 e0       	ldi	r21, 0x00	; 0
    2138:	62 e3       	ldi	r22, 0x32	; 50
    213a:	70 e0       	ldi	r23, 0x00	; 0
    213c:	8d e0       	ldi	r24, 0x0D	; 13
    213e:	90 e0       	ldi	r25, 0x00	; 0
    2140:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
    2144:	44 eb       	ldi	r20, 0xB4	; 180
    2146:	50 e0       	ldi	r21, 0x00	; 0
    2148:	be 01       	movw	r22, r28
    214a:	8c e0       	ldi	r24, 0x0C	; 12
    214c:	90 e0       	ldi	r25, 0x00	; 0
    214e:	31 cf       	rjmp	.-414    	; 0x1fb2 <get_out()+0x1a8>

00002150 <color(char)>:
color():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:293
    delay(1000);
  }
  delay(500);
}

char color(char select) {
    2150:	af 92       	push	r10
    2152:	bf 92       	push	r11
    2154:	cf 92       	push	r12
    2156:	df 92       	push	r13
    2158:	ef 92       	push	r14
    215a:	ff 92       	push	r15
    215c:	0f 93       	push	r16
    215e:	1f 93       	push	r17
    2160:	cf 93       	push	r28
    2162:	df 93       	push	r29
    2164:	f8 2e       	mov	r15, r24
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:295
  unsigned char low_byte, high_byte;
  if (select == 1)  // left
    2166:	81 e0       	ldi	r24, 0x01	; 1
    2168:	f8 12       	cpse	r15, r24
    216a:	e6 c0       	rjmp	.+460    	; 0x2338 <color(char)+0x1e8>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:297
  {
    digitalWrite(MUX_C, LOW);
    216c:	60 e0       	ldi	r22, 0x00	; 0
    216e:	8a e2       	ldi	r24, 0x2A	; 42
    2170:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:298
    digitalWrite(MUX_B, LOW);
    2174:	60 e0       	ldi	r22, 0x00	; 0
    2176:	8b e2       	ldi	r24, 0x2B	; 43
    2178:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:299
    digitalWrite(MUX_A, LOW);
    217c:	60 e0       	ldi	r22, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:305
    //  Serial.print("left color:  ");
  } else if (select==2) // right
  {
    digitalWrite(MUX_C, LOW);
    digitalWrite(MUX_B, LOW);
    digitalWrite(MUX_A, HIGH);
    217e:	8c e2       	ldi	r24, 0x2C	; 44
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:311
    //  Serial.print("right color:  ");
  }
  else{
    digitalWrite(MUX_A, HIGH);//front
    digitalWrite(MUX_B, HIGH);
    digitalWrite(MUX_C, LOW);
    2180:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:313
  }
  delayMicroseconds(10);
    2184:	8a e0       	ldi	r24, 0x0A	; 10
    2186:	90 e0       	ldi	r25, 0x00	; 0
    2188:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <delayMicroseconds>
beginTransmission():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:208
  txBufferLength = 0;
}

void TwoWire::beginTransmission(int address)
{
  beginTransmission((uint8_t)address);
    218c:	89 e3       	ldi	r24, 0x39	; 57
    218e:	0e 94 a1 01 	call	0x342	; 0x342 <TwoWire::beginTransmission(unsigned char) [clone .constprop.11]>
color():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:316

  Wire.beginTransmission(57);  // transmit to device #57 (0x39)
  Wire.write(byte(0x80));
    2192:	60 e8       	ldi	r22, 0x80	; 128
    2194:	81 e7       	ldi	r24, 0x71	; 113
    2196:	9b e0       	ldi	r25, 0x0B	; 11
    2198:	0e 94 ed 04 	call	0x9da	; 0x9da <TwoWire::write(unsigned char)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:317
  Wire.write(byte(3));  // power
    219c:	63 e0       	ldi	r22, 0x03	; 3
    219e:	81 e7       	ldi	r24, 0x71	; 113
    21a0:	9b e0       	ldi	r25, 0x0B	; 11
    21a2:	0e 94 ed 04 	call	0x9da	; 0x9da <TwoWire::write(unsigned char)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:318
  Wire.endTransmission();
    21a6:	0e 94 ab 01 	call	0x356	; 0x356 <TwoWire::endTransmission() [clone .constprop.7]>
beginTransmission():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:208
    21aa:	89 e3       	ldi	r24, 0x39	; 57
    21ac:	0e 94 a1 01 	call	0x342	; 0x342 <TwoWire::beginTransmission(unsigned char) [clone .constprop.11]>
color():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:321

  Wire.beginTransmission(57);  // transmit to device #57 (0x39)
  Wire.write(byte(0x8F));
    21b0:	6f e8       	ldi	r22, 0x8F	; 143
    21b2:	81 e7       	ldi	r24, 0x71	; 113
    21b4:	9b e0       	ldi	r25, 0x0B	; 11
    21b6:	0e 94 ed 04 	call	0x9da	; 0x9da <TwoWire::write(unsigned char)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:322
  Wire.write(byte(1));  // gain
    21ba:	61 e0       	ldi	r22, 0x01	; 1
    21bc:	81 e7       	ldi	r24, 0x71	; 113
    21be:	9b e0       	ldi	r25, 0x0B	; 11
    21c0:	0e 94 ed 04 	call	0x9da	; 0x9da <TwoWire::write(unsigned char)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:323
  Wire.endTransmission();
    21c4:	0e 94 ab 01 	call	0x356	; 0x356 <TwoWire::endTransmission() [clone .constprop.7]>
beginTransmission():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:208
    21c8:	89 e3       	ldi	r24, 0x39	; 57
    21ca:	0e 94 a1 01 	call	0x342	; 0x342 <TwoWire::beginTransmission(unsigned char) [clone .constprop.11]>
color():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:326

  Wire.beginTransmission(57);  // transmit to device #57 (0x39)
  Wire.write(byte(0x94));      // address of first data
    21ce:	64 e9       	ldi	r22, 0x94	; 148
    21d0:	81 e7       	ldi	r24, 0x71	; 113
    21d2:	9b e0       	ldi	r25, 0x0B	; 11
    21d4:	0e 94 ed 04 	call	0x9da	; 0x9da <TwoWire::write(unsigned char)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:327
  Wire.endTransmission();
    21d8:	0e 94 ab 01 	call	0x356	; 0x356 <TwoWire::endTransmission() [clone .constprop.7]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:329

  Wire.requestFrom(57, 8);
    21dc:	68 e0       	ldi	r22, 0x08	; 8
    21de:	70 e0       	ldi	r23, 0x00	; 0
    21e0:	89 e3       	ldi	r24, 0x39	; 57
    21e2:	90 e0       	ldi	r25, 0x00	; 0
    21e4:	0e 94 fa 08 	call	0x11f4	; 0x11f4 <TwoWire::requestFrom(int, int) [clone .constprop.8]>
available():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:292
// must be called in:
// slave rx event callback
// or after requestFrom(address, numBytes)
int TwoWire::available(void)
{
  return rxBufferLength - rxBufferIndex;
    21e8:	80 91 f9 09 	lds	r24, 0x09F9	; 0x8009f9 <TwoWire::rxBufferLength>
    21ec:	90 91 fa 09 	lds	r25, 0x09FA	; 0x8009fa <TwoWire::rxBufferIndex>
    21f0:	89 1b       	sub	r24, r25
    21f2:	99 0b       	sbc	r25, r25
color():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:330
  if (8 <= Wire.available())  // if 8 bytes were received
    21f4:	08 97       	sbiw	r24, 0x08	; 8
    21f6:	d4 f1       	brlt	.+116    	; 0x226c <color(char)+0x11c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:332
  {
    low_byte = Wire.read();
    21f8:	0e 94 36 01 	call	0x26c	; 0x26c <TwoWire::read() [clone .constprop.16]>
    21fc:	ec 01       	movw	r28, r24
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:333
    high_byte = Wire.read();
    21fe:	0e 94 36 01 	call	0x26c	; 0x26c <TwoWire::read() [clone .constprop.16]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:334
    clear = high_byte * 255 + low_byte;
    2202:	1f ef       	ldi	r17, 0xFF	; 255
    2204:	dd 27       	eor	r29, r29
    2206:	81 9f       	mul	r24, r17
    2208:	c0 0d       	add	r28, r0
    220a:	d1 1d       	adc	r29, r1
    220c:	11 24       	eor	r1, r1
    220e:	d0 93 1f 09 	sts	0x091F, r29	; 0x80091f <clear+0x1>
    2212:	c0 93 1e 09 	sts	0x091E, r28	; 0x80091e <clear>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:336

    low_byte = Wire.read();
    2216:	0e 94 36 01 	call	0x26c	; 0x26c <TwoWire::read() [clone .constprop.16]>
    221a:	ec 01       	movw	r28, r24
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:337
    high_byte = Wire.read();
    221c:	0e 94 36 01 	call	0x26c	; 0x26c <TwoWire::read() [clone .constprop.16]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:338
    red = high_byte * 255 + low_byte;
    2220:	dd 27       	eor	r29, r29
    2222:	81 9f       	mul	r24, r17
    2224:	c0 0d       	add	r28, r0
    2226:	d1 1d       	adc	r29, r1
    2228:	11 24       	eor	r1, r1
    222a:	d0 93 19 09 	sts	0x0919, r29	; 0x800919 <red+0x1>
    222e:	c0 93 18 09 	sts	0x0918, r28	; 0x800918 <red>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:340

    low_byte = Wire.read();
    2232:	0e 94 36 01 	call	0x26c	; 0x26c <TwoWire::read() [clone .constprop.16]>
    2236:	ec 01       	movw	r28, r24
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:341
    high_byte = Wire.read();
    2238:	0e 94 36 01 	call	0x26c	; 0x26c <TwoWire::read() [clone .constprop.16]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:342
    green = high_byte * 255 + low_byte;
    223c:	dd 27       	eor	r29, r29
    223e:	81 9f       	mul	r24, r17
    2240:	c0 0d       	add	r28, r0
    2242:	d1 1d       	adc	r29, r1
    2244:	11 24       	eor	r1, r1
    2246:	d0 93 1b 09 	sts	0x091B, r29	; 0x80091b <green+0x1>
    224a:	c0 93 1a 09 	sts	0x091A, r28	; 0x80091a <green>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:344

    low_byte = Wire.read();
    224e:	0e 94 36 01 	call	0x26c	; 0x26c <TwoWire::read() [clone .constprop.16]>
    2252:	ec 01       	movw	r28, r24
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:345
    high_byte = Wire.read();
    2254:	0e 94 36 01 	call	0x26c	; 0x26c <TwoWire::read() [clone .constprop.16]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:346
    blue = (high_byte * 255 + low_byte) - 10;
    2258:	dd 27       	eor	r29, r29
    225a:	81 9f       	mul	r24, r17
    225c:	c0 0d       	add	r28, r0
    225e:	d1 1d       	adc	r29, r1
    2260:	11 24       	eor	r1, r1
    2262:	2a 97       	sbiw	r28, 0x0a	; 10
    2264:	d0 93 1d 09 	sts	0x091D, r29	; 0x80091d <blue+0x1>
    2268:	c0 93 1c 09 	sts	0x091C, r28	; 0x80091c <blue>
    226c:	00 91 18 09 	lds	r16, 0x0918	; 0x800918 <red>
    2270:	10 91 19 09 	lds	r17, 0x0919	; 0x800919 <red+0x1>
    2274:	c0 91 1a 09 	lds	r28, 0x091A	; 0x80091a <green>
    2278:	d0 91 1b 09 	lds	r29, 0x091B	; 0x80091b <green+0x1>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:349
  }

  if (select == 1)  // left
    227c:	81 e0       	ldi	r24, 0x01	; 1
    227e:	f8 12       	cpse	r15, r24
    2280:	7b c1       	rjmp	.+758    	; 0x2578 <color(char)+0x428>
    2282:	c0 90 1c 09 	lds	r12, 0x091C	; 0x80091c <blue>
    2286:	d0 90 1d 09 	lds	r13, 0x091D	; 0x80091d <blue+0x1>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:351
  {
    if (red > green && red > blue && red < EEPROM_read_int(red_left_r) + range && red > EEPROM_read_int(red_left_r) - range && green < EEPROM_read_int(red_left_g) + range && green > EEPROM_read_int(red_left_g) - range && blue < EEPROM_read_int(red_left_b) + range && blue > EEPROM_read_int(red_left_b) - range && clear < EEPROM_read_int(red_left_c) + range && clear > EEPROM_read_int(red_left_c) - range)
    228a:	c0 17       	cp	r28, r16
    228c:	d1 07       	cpc	r29, r17
    228e:	0c f0       	brlt	.+2      	; 0x2292 <color(char)+0x142>
    2290:	6b c0       	rjmp	.+214    	; 0x2368 <color(char)+0x218>
    2292:	c0 16       	cp	r12, r16
    2294:	d1 06       	cpc	r13, r17
    2296:	0c f0       	brlt	.+2      	; 0x229a <color(char)+0x14a>
    2298:	67 c0       	rjmp	.+206    	; 0x2368 <color(char)+0x218>
    229a:	84 e1       	ldi	r24, 0x14	; 20
    229c:	90 e0       	ldi	r25, 0x00	; 0
    229e:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    22a2:	5c 01       	movw	r10, r24
    22a4:	8a e9       	ldi	r24, 0x9A	; 154
    22a6:	90 e0       	ldi	r25, 0x00	; 0
    22a8:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    22ac:	7c 01       	movw	r14, r24
    22ae:	c5 01       	movw	r24, r10
    22b0:	8e 0d       	add	r24, r14
    22b2:	9f 1d       	adc	r25, r15
    22b4:	08 17       	cp	r16, r24
    22b6:	19 07       	cpc	r17, r25
    22b8:	0c f0       	brlt	.+2      	; 0x22bc <color(char)+0x16c>
    22ba:	56 c0       	rjmp	.+172    	; 0x2368 <color(char)+0x218>
    22bc:	ae 18       	sub	r10, r14
    22be:	bf 08       	sbc	r11, r15
    22c0:	a0 16       	cp	r10, r16
    22c2:	b1 06       	cpc	r11, r17
    22c4:	0c f0       	brlt	.+2      	; 0x22c8 <color(char)+0x178>
    22c6:	50 c0       	rjmp	.+160    	; 0x2368 <color(char)+0x218>
    22c8:	86 e1       	ldi	r24, 0x16	; 22
    22ca:	90 e0       	ldi	r25, 0x00	; 0
    22cc:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    22d0:	97 01       	movw	r18, r14
    22d2:	28 0f       	add	r18, r24
    22d4:	39 1f       	adc	r19, r25
    22d6:	c2 17       	cp	r28, r18
    22d8:	d3 07       	cpc	r29, r19
    22da:	0c f0       	brlt	.+2      	; 0x22de <color(char)+0x18e>
    22dc:	45 c0       	rjmp	.+138    	; 0x2368 <color(char)+0x218>
    22de:	8e 19       	sub	r24, r14
    22e0:	9f 09       	sbc	r25, r15
    22e2:	8c 17       	cp	r24, r28
    22e4:	9d 07       	cpc	r25, r29
    22e6:	0c f0       	brlt	.+2      	; 0x22ea <color(char)+0x19a>
    22e8:	3f c0       	rjmp	.+126    	; 0x2368 <color(char)+0x218>
    22ea:	88 e1       	ldi	r24, 0x18	; 24
    22ec:	90 e0       	ldi	r25, 0x00	; 0
    22ee:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    22f2:	97 01       	movw	r18, r14
    22f4:	28 0f       	add	r18, r24
    22f6:	39 1f       	adc	r19, r25
    22f8:	c2 16       	cp	r12, r18
    22fa:	d3 06       	cpc	r13, r19
    22fc:	ac f5       	brge	.+106    	; 0x2368 <color(char)+0x218>
    22fe:	8e 19       	sub	r24, r14
    2300:	9f 09       	sbc	r25, r15
    2302:	8c 15       	cp	r24, r12
    2304:	9d 05       	cpc	r25, r13
    2306:	84 f5       	brge	.+96     	; 0x2368 <color(char)+0x218>
    2308:	8a e1       	ldi	r24, 0x1A	; 26
    230a:	90 e0       	ldi	r25, 0x00	; 0
    230c:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    2310:	20 91 1e 09 	lds	r18, 0x091E	; 0x80091e <clear>
    2314:	30 91 1f 09 	lds	r19, 0x091F	; 0x80091f <clear+0x1>
    2318:	a7 01       	movw	r20, r14
    231a:	48 0f       	add	r20, r24
    231c:	59 1f       	adc	r21, r25
    231e:	24 17       	cp	r18, r20
    2320:	35 07       	cpc	r19, r21
    2322:	14 f5       	brge	.+68     	; 0x2368 <color(char)+0x218>
    2324:	8e 19       	sub	r24, r14
    2326:	9f 09       	sbc	r25, r15
    2328:	82 17       	cp	r24, r18
    232a:	93 07       	cpc	r25, r19
    232c:	ec f4       	brge	.+58     	; 0x2368 <color(char)+0x218>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:399

    return color_out;
  }else if (select == 3)  // front
  {
    if (red > green && red > blue && red < EEPROM_read_int(red_front_r) + range && red > EEPROM_read_int(red_front_r) - range && green < EEPROM_read_int(red_front_g) + range && green > EEPROM_read_int(red_front_g) - range && blue < EEPROM_read_int(red_front_b) + range && blue > EEPROM_read_int(red_front_b) - range && clear < EEPROM_read_int(red_front_c) + range && clear > EEPROM_read_int(red_front_c) - range)
      color_out = RED;
    232e:	10 92 17 09 	sts	0x0917, r1	; 0x800917 <color_out+0x1>
    2332:	10 92 16 09 	sts	0x0916, r1	; 0x800916 <color_out>
    2336:	36 c0       	rjmp	.+108    	; 0x23a4 <color(char)+0x254>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:301
  {
    digitalWrite(MUX_C, LOW);
    digitalWrite(MUX_B, LOW);
    digitalWrite(MUX_A, LOW);
    //  Serial.print("left color:  ");
  } else if (select==2) // right
    2338:	82 e0       	ldi	r24, 0x02	; 2
    233a:	f8 12       	cpse	r15, r24
    233c:	0a c0       	rjmp	.+20     	; 0x2352 <color(char)+0x202>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:303
  {
    digitalWrite(MUX_C, LOW);
    233e:	60 e0       	ldi	r22, 0x00	; 0
    2340:	8a e2       	ldi	r24, 0x2A	; 42
    2342:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:304
    digitalWrite(MUX_B, LOW);
    2346:	60 e0       	ldi	r22, 0x00	; 0
    2348:	8b e2       	ldi	r24, 0x2B	; 43
    234a:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:305
    digitalWrite(MUX_A, HIGH);
    234e:	61 e0       	ldi	r22, 0x01	; 1
    2350:	16 cf       	rjmp	.-468    	; 0x217e <color(char)+0x2e>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:309
    //  Serial.print("right color:  ");
  }
  else{
    digitalWrite(MUX_A, HIGH);//front
    2352:	61 e0       	ldi	r22, 0x01	; 1
    2354:	8c e2       	ldi	r24, 0x2C	; 44
    2356:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:310
    digitalWrite(MUX_B, HIGH);
    235a:	61 e0       	ldi	r22, 0x01	; 1
    235c:	8b e2       	ldi	r24, 0x2B	; 43
    235e:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:311
    digitalWrite(MUX_C, LOW);
    2362:	60 e0       	ldi	r22, 0x00	; 0
    2364:	8a e2       	ldi	r24, 0x2A	; 42
    2366:	0c cf       	rjmp	.-488    	; 0x2180 <color(char)+0x30>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:355
  {
    if (red > green && red > blue && red < EEPROM_read_int(red_left_r) + range && red > EEPROM_read_int(red_left_r) - range && green < EEPROM_read_int(red_left_g) + range && green > EEPROM_read_int(red_left_g) - range && blue < EEPROM_read_int(red_left_b) + range && blue > EEPROM_read_int(red_left_b) - range && clear < EEPROM_read_int(red_left_c) + range && clear > EEPROM_read_int(red_left_c) - range)
      color_out = RED;
            
    //else if (green > red && green > blue && red < EEPROM_read_int(green_left_r) + range && red > EEPROM_read_int(green_left_r) - range && green > EEPROM_read_int(green_left_g)-range/2 && green < EEPROM_read_int(green_left_g) + range && blue < EEPROM_read_int(green_left_b) + range && blue > EEPROM_read_int(green_left_b) - range /*&& clear < EEPROM_read_int(green_left_c) + range*/ && clear > EEPROM_read_int(green_left_c) - range/2)
      else if((blue<green && green-red>=9)||(blue<green+15 && green-red>20))
    2368:	cc 16       	cp	r12, r28
    236a:	dd 06       	cpc	r13, r29
    236c:	2c f4       	brge	.+10     	; 0x2378 <color(char)+0x228>
    236e:	ce 01       	movw	r24, r28
    2370:	80 1b       	sub	r24, r16
    2372:	91 0b       	sbc	r25, r17
    2374:	09 97       	sbiw	r24, 0x09	; 9
    2376:	54 f4       	brge	.+20     	; 0x238c <color(char)+0x23c>
    2378:	ce 01       	movw	r24, r28
    237a:	0e 96       	adiw	r24, 0x0e	; 14
    237c:	8c 15       	cp	r24, r12
    237e:	9d 05       	cpc	r25, r13
    2380:	f4 f0       	brlt	.+60     	; 0x23be <color(char)+0x26e>
    2382:	ce 01       	movw	r24, r28
    2384:	80 1b       	sub	r24, r16
    2386:	91 0b       	sbc	r25, r17
    2388:	45 97       	sbiw	r24, 0x15	; 21
    238a:	cc f0       	brlt	.+50     	; 0x23be <color(char)+0x26e>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:379
  {
    if (red > green && red > blue && red < EEPROM_read_int(red_right_r) + range && red > EEPROM_read_int(red_right_r) - range && green < EEPROM_read_int(red_right_g) + range && green > EEPROM_read_int(red_right_g) - range && blue < EEPROM_read_int(red_right_b) + range && blue > EEPROM_read_int(red_right_b) - range && clear < EEPROM_read_int(red_right_c) + range && clear > EEPROM_read_int(red_right_c) - range)
      color_out = RED;
    //else if (green > red && green > blue && red < EEPROM_read_int(green_right_r) + range && red > EEPROM_read_int(green_right_r) - range && green > EEPROM_read_int(green_right_g)-range/2 && green < EEPROM_read_int(green_right_g) + range && blue < EEPROM_read_int(green_right_b) + range && blue > EEPROM_read_int(green_right_b) - range /*&&  clear < EEPROM_read_int(green_right_c) + range */ && clear > EEPROM_read_int(green_right_c) - range/2)
      else if((blue<green && green-red>=13)||(green>90 && blue<=green+12 && green-red>=25 && clear>200))
      {color_out = GREEN;go(30,30);}//beep(1);}
    238c:	81 e0       	ldi	r24, 0x01	; 1
    238e:	90 e0       	ldi	r25, 0x00	; 0
    2390:	90 93 17 09 	sts	0x0917, r25	; 0x800917 <color_out+0x1>
    2394:	80 93 16 09 	sts	0x0916, r24	; 0x800916 <color_out>
    2398:	6e e1       	ldi	r22, 0x1E	; 30
    239a:	70 e0       	ldi	r23, 0x00	; 0
    239c:	8e e1       	ldi	r24, 0x1E	; 30
    239e:	90 e0       	ldi	r25, 0x00	; 0
    23a0:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:407
      color_out = GREEN;

    else
      color_out = WHITE;

    return color_out;
    23a4:	80 91 16 09 	lds	r24, 0x0916	; 0x800916 <color_out>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:410
  }
  // delay(5);
}
    23a8:	df 91       	pop	r29
    23aa:	cf 91       	pop	r28
    23ac:	1f 91       	pop	r17
    23ae:	0f 91       	pop	r16
    23b0:	ff 90       	pop	r15
    23b2:	ef 90       	pop	r14
    23b4:	df 90       	pop	r13
    23b6:	cf 90       	pop	r12
    23b8:	bf 90       	pop	r11
    23ba:	af 90       	pop	r10
    23bc:	08 95       	ret
    23be:	8a e9       	ldi	r24, 0x9A	; 154
    23c0:	90 e0       	ldi	r25, 0x00	; 0
    23c2:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    23c6:	7c 01       	movw	r14, r24
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:358
            
    //else if (green > red && green > blue && red < EEPROM_read_int(green_left_r) + range && red > EEPROM_read_int(green_left_r) - range && green > EEPROM_read_int(green_left_g)-range/2 && green < EEPROM_read_int(green_left_g) + range && blue < EEPROM_read_int(green_left_b) + range && blue > EEPROM_read_int(green_left_b) - range /*&& clear < EEPROM_read_int(green_left_c) + range*/ && clear > EEPROM_read_int(green_left_c) - range/2)
      else if((blue<green && green-red>=9)||(blue<green+15 && green-red>20))
      {color_out = GREEN;go(30,30);}//beep(1);}

    else if (blue > red && blue > green && red < EEPROM_read_int(blue_left_r) + range && red > EEPROM_read_int(blue_left_r) - range && green < EEPROM_read_int(blue_left_g) + range && green > EEPROM_read_int(blue_left_g) - range && blue < EEPROM_read_int(blue_left_b) + range && blue > EEPROM_read_int(blue_left_b) - range && clear < EEPROM_read_int(blue_left_c) + range && clear > EEPROM_read_int(blue_left_c) - range)
    23c8:	0c 15       	cp	r16, r12
    23ca:	1d 05       	cpc	r17, r13
    23cc:	0c f0       	brlt	.+2      	; 0x23d0 <color(char)+0x280>
    23ce:	45 c0       	rjmp	.+138    	; 0x245a <color(char)+0x30a>
    23d0:	cc 15       	cp	r28, r12
    23d2:	dd 05       	cpc	r29, r13
    23d4:	0c f0       	brlt	.+2      	; 0x23d8 <color(char)+0x288>
    23d6:	41 c0       	rjmp	.+130    	; 0x245a <color(char)+0x30a>
    23d8:	84 e2       	ldi	r24, 0x24	; 36
    23da:	90 e0       	ldi	r25, 0x00	; 0
    23dc:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    23e0:	97 01       	movw	r18, r14
    23e2:	28 0f       	add	r18, r24
    23e4:	39 1f       	adc	r19, r25
    23e6:	02 17       	cp	r16, r18
    23e8:	13 07       	cpc	r17, r19
    23ea:	bc f5       	brge	.+110    	; 0x245a <color(char)+0x30a>
    23ec:	8e 19       	sub	r24, r14
    23ee:	9f 09       	sbc	r25, r15
    23f0:	80 17       	cp	r24, r16
    23f2:	91 07       	cpc	r25, r17
    23f4:	94 f5       	brge	.+100    	; 0x245a <color(char)+0x30a>
    23f6:	86 e2       	ldi	r24, 0x26	; 38
    23f8:	90 e0       	ldi	r25, 0x00	; 0
    23fa:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    23fe:	97 01       	movw	r18, r14
    2400:	28 0f       	add	r18, r24
    2402:	39 1f       	adc	r19, r25
    2404:	c2 17       	cp	r28, r18
    2406:	d3 07       	cpc	r29, r19
    2408:	44 f5       	brge	.+80     	; 0x245a <color(char)+0x30a>
    240a:	8e 19       	sub	r24, r14
    240c:	9f 09       	sbc	r25, r15
    240e:	8c 17       	cp	r24, r28
    2410:	9d 07       	cpc	r25, r29
    2412:	1c f5       	brge	.+70     	; 0x245a <color(char)+0x30a>
    2414:	88 e2       	ldi	r24, 0x28	; 40
    2416:	90 e0       	ldi	r25, 0x00	; 0
    2418:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    241c:	97 01       	movw	r18, r14
    241e:	28 0f       	add	r18, r24
    2420:	39 1f       	adc	r19, r25
    2422:	c2 16       	cp	r12, r18
    2424:	d3 06       	cpc	r13, r19
    2426:	cc f4       	brge	.+50     	; 0x245a <color(char)+0x30a>
    2428:	8e 19       	sub	r24, r14
    242a:	9f 09       	sbc	r25, r15
    242c:	8c 15       	cp	r24, r12
    242e:	9d 05       	cpc	r25, r13
    2430:	a4 f4       	brge	.+40     	; 0x245a <color(char)+0x30a>
    2432:	8a e2       	ldi	r24, 0x2A	; 42
    2434:	90 e0       	ldi	r25, 0x00	; 0
    2436:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    243a:	20 91 1e 09 	lds	r18, 0x091E	; 0x80091e <clear>
    243e:	30 91 1f 09 	lds	r19, 0x091F	; 0x80091f <clear+0x1>
    2442:	a7 01       	movw	r20, r14
    2444:	48 0f       	add	r20, r24
    2446:	59 1f       	adc	r21, r25
    2448:	24 17       	cp	r18, r20
    244a:	35 07       	cpc	r19, r21
    244c:	34 f4       	brge	.+12     	; 0x245a <color(char)+0x30a>
    244e:	8e 19       	sub	r24, r14
    2450:	9f 09       	sbc	r25, r15
    2452:	82 17       	cp	r24, r18
    2454:	93 07       	cpc	r25, r19
    2456:	0c f4       	brge	.+2      	; 0x245a <color(char)+0x30a>
    2458:	94 c1       	rjmp	.+808    	; 0x2782 <color(char)+0x632>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:361
      color_out = BLUE;

    else if (red < EEPROM_read_int(yellow_left_r) + range && red > EEPROM_read_int(yellow_left_r) - range && green < EEPROM_read_int(yellow_left_g) + range && green > EEPROM_read_int(yellow_left_g) - range && blue < EEPROM_read_int(yellow_left_b) + range && blue > EEPROM_read_int(yellow_left_b) - range && clear < EEPROM_read_int(yellow_left_c) + range && clear > EEPROM_read_int(yellow_left_c) - range)
    245a:	8c e2       	ldi	r24, 0x2C	; 44
    245c:	90 e0       	ldi	r25, 0x00	; 0
    245e:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    2462:	97 01       	movw	r18, r14
    2464:	28 0f       	add	r18, r24
    2466:	39 1f       	adc	r19, r25
    2468:	02 17       	cp	r16, r18
    246a:	13 07       	cpc	r17, r19
    246c:	0c f4       	brge	.+2      	; 0x2470 <color(char)+0x320>
    246e:	44 c0       	rjmp	.+136    	; 0x24f8 <color(char)+0x3a8>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:365
      color_out = YELLOW;

    else if (
      red <= (EEPROM_read_int(silver_left_r) + range) && red >= (EEPROM_read_int(silver_left_r) - range) && green >= (EEPROM_read_int(silver_left_g) - range) && green <= (EEPROM_read_int(silver_left_g) + range) && blue >= (EEPROM_read_int(silver_left_b) - range) && blue <= (EEPROM_read_int(silver_left_b) + range) && clear <= (EEPROM_read_int(silver_left_c) + range) && clear >= (EEPROM_read_int(silver_left_c) - range)) {
    2470:	84 e3       	ldi	r24, 0x34	; 52
    2472:	90 e0       	ldi	r25, 0x00	; 0
    2474:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    2478:	97 01       	movw	r18, r14
    247a:	28 0f       	add	r18, r24
    247c:	39 1f       	adc	r19, r25
    247e:	20 17       	cp	r18, r16
    2480:	31 07       	cpc	r19, r17
    2482:	bc f1       	brlt	.+110    	; 0x24f2 <color(char)+0x3a2>
    2484:	8e 19       	sub	r24, r14
    2486:	9f 09       	sbc	r25, r15
    2488:	08 17       	cp	r16, r24
    248a:	19 07       	cpc	r17, r25
    248c:	94 f1       	brlt	.+100    	; 0x24f2 <color(char)+0x3a2>
    248e:	86 e3       	ldi	r24, 0x36	; 54
    2490:	90 e0       	ldi	r25, 0x00	; 0
    2492:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    2496:	9c 01       	movw	r18, r24
    2498:	2e 19       	sub	r18, r14
    249a:	3f 09       	sbc	r19, r15
    249c:	c2 17       	cp	r28, r18
    249e:	d3 07       	cpc	r29, r19
    24a0:	44 f1       	brlt	.+80     	; 0x24f2 <color(char)+0x3a2>
    24a2:	8e 0d       	add	r24, r14
    24a4:	9f 1d       	adc	r25, r15
    24a6:	8c 17       	cp	r24, r28
    24a8:	9d 07       	cpc	r25, r29
    24aa:	1c f1       	brlt	.+70     	; 0x24f2 <color(char)+0x3a2>
    24ac:	88 e3       	ldi	r24, 0x38	; 56
    24ae:	90 e0       	ldi	r25, 0x00	; 0
    24b0:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    24b4:	9c 01       	movw	r18, r24
    24b6:	2e 19       	sub	r18, r14
    24b8:	3f 09       	sbc	r19, r15
    24ba:	c2 16       	cp	r12, r18
    24bc:	d3 06       	cpc	r13, r19
    24be:	cc f0       	brlt	.+50     	; 0x24f2 <color(char)+0x3a2>
    24c0:	8e 0d       	add	r24, r14
    24c2:	9f 1d       	adc	r25, r15
    24c4:	8c 15       	cp	r24, r12
    24c6:	9d 05       	cpc	r25, r13
    24c8:	a4 f0       	brlt	.+40     	; 0x24f2 <color(char)+0x3a2>
    24ca:	8a e3       	ldi	r24, 0x3A	; 58
    24cc:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:388

    else if (red < EEPROM_read_int(yellow_right_r) + range && red > EEPROM_read_int(yellow_right_r) - range && green < EEPROM_read_int(yellow_right_g) + range && green > EEPROM_read_int(yellow_right_g) - range && blue < EEPROM_read_int(yellow_right_b) + range && blue > EEPROM_read_int(yellow_right_b) - range && clear < EEPROM_read_int(yellow_right_c) + range && clear > EEPROM_read_int(yellow_right_c) - range)
      color_out = YELLOW;

    else if (
      red <= (EEPROM_read_int(silver_right_r) + range) && red >= (EEPROM_read_int(silver_right_r) - range) && green >= (EEPROM_read_int(silver_right_g) - range) && green <= (EEPROM_read_int(silver_right_g) + range) && blue >= (EEPROM_read_int(silver_right_b) - range) && blue <= (EEPROM_read_int(silver_right_b) + range) && clear <= (EEPROM_read_int(silver_right_c) + range) && clear >= (EEPROM_read_int(silver_right_c) - range)) {
    24ce:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    24d2:	20 91 1e 09 	lds	r18, 0x091E	; 0x80091e <clear>
    24d6:	30 91 1f 09 	lds	r19, 0x091F	; 0x80091f <clear+0x1>
    24da:	a7 01       	movw	r20, r14
    24dc:	48 0f       	add	r20, r24
    24de:	59 1f       	adc	r21, r25
    24e0:	42 17       	cp	r20, r18
    24e2:	53 07       	cpc	r21, r19
    24e4:	34 f0       	brlt	.+12     	; 0x24f2 <color(char)+0x3a2>
    24e6:	8e 19       	sub	r24, r14
    24e8:	9f 09       	sbc	r25, r15
    24ea:	28 17       	cp	r18, r24
    24ec:	39 07       	cpc	r19, r25
    24ee:	0c f0       	brlt	.+2      	; 0x24f2 <color(char)+0x3a2>
    24f0:	8d c1       	rjmp	.+794    	; 0x280c <color(char)+0x6bc>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:405

    else if (green > red && green > blue && red < EEPROM_read_int(green_front_r) + range && red > EEPROM_read_int(green_front_r) - range && green < EEPROM_read_int(green_front_g) + range && green > EEPROM_read_int(green_front_g) - range && blue < EEPROM_read_int(green_front_b) + range && blue > EEPROM_read_int(green_front_b) - range && clear < EEPROM_read_int(green_front_c) + range && clear > EEPROM_read_int(green_front_c) - range)
      color_out = GREEN;

    else
      color_out = WHITE;
    24f2:	87 e0       	ldi	r24, 0x07	; 7
    24f4:	90 e0       	ldi	r25, 0x00	; 0
    24f6:	47 c1       	rjmp	.+654    	; 0x2786 <color(char)+0x636>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:361
      {color_out = GREEN;go(30,30);}//beep(1);}

    else if (blue > red && blue > green && red < EEPROM_read_int(blue_left_r) + range && red > EEPROM_read_int(blue_left_r) - range && green < EEPROM_read_int(blue_left_g) + range && green > EEPROM_read_int(blue_left_g) - range && blue < EEPROM_read_int(blue_left_b) + range && blue > EEPROM_read_int(blue_left_b) - range && clear < EEPROM_read_int(blue_left_c) + range && clear > EEPROM_read_int(blue_left_c) - range)
      color_out = BLUE;

    else if (red < EEPROM_read_int(yellow_left_r) + range && red > EEPROM_read_int(yellow_left_r) - range && green < EEPROM_read_int(yellow_left_g) + range && green > EEPROM_read_int(yellow_left_g) - range && blue < EEPROM_read_int(yellow_left_b) + range && blue > EEPROM_read_int(yellow_left_b) - range && clear < EEPROM_read_int(yellow_left_c) + range && clear > EEPROM_read_int(yellow_left_c) - range)
    24f8:	8e 19       	sub	r24, r14
    24fa:	9f 09       	sbc	r25, r15
    24fc:	80 17       	cp	r24, r16
    24fe:	91 07       	cpc	r25, r17
    2500:	0c f0       	brlt	.+2      	; 0x2504 <color(char)+0x3b4>
    2502:	b6 cf       	rjmp	.-148    	; 0x2470 <color(char)+0x320>
    2504:	8e e2       	ldi	r24, 0x2E	; 46
    2506:	90 e0       	ldi	r25, 0x00	; 0
    2508:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    250c:	97 01       	movw	r18, r14
    250e:	28 0f       	add	r18, r24
    2510:	39 1f       	adc	r19, r25
    2512:	c2 17       	cp	r28, r18
    2514:	d3 07       	cpc	r29, r19
    2516:	0c f0       	brlt	.+2      	; 0x251a <color(char)+0x3ca>
    2518:	ab cf       	rjmp	.-170    	; 0x2470 <color(char)+0x320>
    251a:	8e 19       	sub	r24, r14
    251c:	9f 09       	sbc	r25, r15
    251e:	8c 17       	cp	r24, r28
    2520:	9d 07       	cpc	r25, r29
    2522:	0c f0       	brlt	.+2      	; 0x2526 <color(char)+0x3d6>
    2524:	a5 cf       	rjmp	.-182    	; 0x2470 <color(char)+0x320>
    2526:	80 e3       	ldi	r24, 0x30	; 48
    2528:	90 e0       	ldi	r25, 0x00	; 0
    252a:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    252e:	97 01       	movw	r18, r14
    2530:	28 0f       	add	r18, r24
    2532:	39 1f       	adc	r19, r25
    2534:	c2 16       	cp	r12, r18
    2536:	d3 06       	cpc	r13, r19
    2538:	0c f0       	brlt	.+2      	; 0x253c <color(char)+0x3ec>
    253a:	9a cf       	rjmp	.-204    	; 0x2470 <color(char)+0x320>
    253c:	8e 19       	sub	r24, r14
    253e:	9f 09       	sbc	r25, r15
    2540:	8c 15       	cp	r24, r12
    2542:	9d 05       	cpc	r25, r13
    2544:	0c f0       	brlt	.+2      	; 0x2548 <color(char)+0x3f8>
    2546:	94 cf       	rjmp	.-216    	; 0x2470 <color(char)+0x320>
    2548:	82 e3       	ldi	r24, 0x32	; 50
    254a:	90 e0       	ldi	r25, 0x00	; 0
    254c:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    2550:	20 91 1e 09 	lds	r18, 0x091E	; 0x80091e <clear>
    2554:	30 91 1f 09 	lds	r19, 0x091F	; 0x80091f <clear+0x1>
    2558:	a7 01       	movw	r20, r14
    255a:	48 0f       	add	r20, r24
    255c:	59 1f       	adc	r21, r25
    255e:	24 17       	cp	r18, r20
    2560:	35 07       	cpc	r19, r21
    2562:	0c f0       	brlt	.+2      	; 0x2566 <color(char)+0x416>
    2564:	85 cf       	rjmp	.-246    	; 0x2470 <color(char)+0x320>
    2566:	8e 19       	sub	r24, r14
    2568:	9f 09       	sbc	r25, r15
    256a:	82 17       	cp	r24, r18
    256c:	93 07       	cpc	r25, r19
    256e:	0c f0       	brlt	.+2      	; 0x2572 <color(char)+0x422>
    2570:	7f cf       	rjmp	.-258    	; 0x2470 <color(char)+0x320>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:385

    else if (blue > red && blue > green && red < EEPROM_read_int(blue_right_r) + range && red > EEPROM_read_int(blue_right_r) - range && green < EEPROM_read_int(blue_right_g) + range && green > EEPROM_read_int(blue_right_g) - range && blue < EEPROM_read_int(blue_right_b) + range && blue > EEPROM_read_int(blue_right_b) - range && clear < EEPROM_read_int(blue_right_c) + range && clear > EEPROM_read_int(blue_right_c) - range)
      color_out = BLUE;

    else if (red < EEPROM_read_int(yellow_right_r) + range && red > EEPROM_read_int(yellow_right_r) - range && green < EEPROM_read_int(yellow_right_g) + range && green > EEPROM_read_int(yellow_right_g) - range && blue < EEPROM_read_int(yellow_right_b) + range && blue > EEPROM_read_int(yellow_right_b) - range && clear < EEPROM_read_int(yellow_right_c) + range && clear > EEPROM_read_int(yellow_right_c) - range)
      color_out = YELLOW;
    2572:	84 e0       	ldi	r24, 0x04	; 4
    2574:	90 e0       	ldi	r25, 0x00	; 0
    2576:	07 c1       	rjmp	.+526    	; 0x2786 <color(char)+0x636>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:373

    else
      color_out = WHITE;

    return color_out;
  } else if (select == 2)  // right
    2578:	82 e0       	ldi	r24, 0x02	; 2
    257a:	f8 12       	cpse	r15, r24
    257c:	4a c1       	rjmp	.+660    	; 0x2812 <color(char)+0x6c2>
    257e:	c0 90 1c 09 	lds	r12, 0x091C	; 0x80091c <blue>
    2582:	d0 90 1d 09 	lds	r13, 0x091D	; 0x80091d <blue+0x1>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:375
  {
    if (red > green && red > blue && red < EEPROM_read_int(red_right_r) + range && red > EEPROM_read_int(red_right_r) - range && green < EEPROM_read_int(red_right_g) + range && green > EEPROM_read_int(red_right_g) - range && blue < EEPROM_read_int(red_right_b) + range && blue > EEPROM_read_int(red_right_b) - range && clear < EEPROM_read_int(red_right_c) + range && clear > EEPROM_read_int(red_right_c) - range)
    2586:	c0 17       	cp	r28, r16
    2588:	d1 07       	cpc	r29, r17
    258a:	0c f0       	brlt	.+2      	; 0x258e <color(char)+0x43e>
    258c:	4b c0       	rjmp	.+150    	; 0x2624 <color(char)+0x4d4>
    258e:	c0 16       	cp	r12, r16
    2590:	d1 06       	cpc	r13, r17
    2592:	0c f0       	brlt	.+2      	; 0x2596 <color(char)+0x446>
    2594:	47 c0       	rjmp	.+142    	; 0x2624 <color(char)+0x4d4>
    2596:	8c e3       	ldi	r24, 0x3C	; 60
    2598:	90 e0       	ldi	r25, 0x00	; 0
    259a:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    259e:	5c 01       	movw	r10, r24
    25a0:	8a e9       	ldi	r24, 0x9A	; 154
    25a2:	90 e0       	ldi	r25, 0x00	; 0
    25a4:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    25a8:	7c 01       	movw	r14, r24
    25aa:	c5 01       	movw	r24, r10
    25ac:	8e 0d       	add	r24, r14
    25ae:	9f 1d       	adc	r25, r15
    25b0:	08 17       	cp	r16, r24
    25b2:	19 07       	cpc	r17, r25
    25b4:	bc f5       	brge	.+110    	; 0x2624 <color(char)+0x4d4>
    25b6:	ae 18       	sub	r10, r14
    25b8:	bf 08       	sbc	r11, r15
    25ba:	a0 16       	cp	r10, r16
    25bc:	b1 06       	cpc	r11, r17
    25be:	94 f5       	brge	.+100    	; 0x2624 <color(char)+0x4d4>
    25c0:	8e e3       	ldi	r24, 0x3E	; 62
    25c2:	90 e0       	ldi	r25, 0x00	; 0
    25c4:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    25c8:	97 01       	movw	r18, r14
    25ca:	28 0f       	add	r18, r24
    25cc:	39 1f       	adc	r19, r25
    25ce:	c2 17       	cp	r28, r18
    25d0:	d3 07       	cpc	r29, r19
    25d2:	44 f5       	brge	.+80     	; 0x2624 <color(char)+0x4d4>
    25d4:	8e 19       	sub	r24, r14
    25d6:	9f 09       	sbc	r25, r15
    25d8:	8c 17       	cp	r24, r28
    25da:	9d 07       	cpc	r25, r29
    25dc:	1c f5       	brge	.+70     	; 0x2624 <color(char)+0x4d4>
    25de:	80 e4       	ldi	r24, 0x40	; 64
    25e0:	90 e0       	ldi	r25, 0x00	; 0
    25e2:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    25e6:	97 01       	movw	r18, r14
    25e8:	28 0f       	add	r18, r24
    25ea:	39 1f       	adc	r19, r25
    25ec:	c2 16       	cp	r12, r18
    25ee:	d3 06       	cpc	r13, r19
    25f0:	cc f4       	brge	.+50     	; 0x2624 <color(char)+0x4d4>
    25f2:	8e 19       	sub	r24, r14
    25f4:	9f 09       	sbc	r25, r15
    25f6:	8c 15       	cp	r24, r12
    25f8:	9d 05       	cpc	r25, r13
    25fa:	a4 f4       	brge	.+40     	; 0x2624 <color(char)+0x4d4>
    25fc:	82 e4       	ldi	r24, 0x42	; 66
    25fe:	90 e0       	ldi	r25, 0x00	; 0
    2600:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    2604:	20 91 1e 09 	lds	r18, 0x091E	; 0x80091e <clear>
    2608:	30 91 1f 09 	lds	r19, 0x091F	; 0x80091f <clear+0x1>
    260c:	a7 01       	movw	r20, r14
    260e:	48 0f       	add	r20, r24
    2610:	59 1f       	adc	r21, r25
    2612:	24 17       	cp	r18, r20
    2614:	35 07       	cpc	r19, r21
    2616:	34 f4       	brge	.+12     	; 0x2624 <color(char)+0x4d4>
    2618:	8e 19       	sub	r24, r14
    261a:	9f 09       	sbc	r25, r15
    261c:	82 17       	cp	r24, r18
    261e:	93 07       	cpc	r25, r19
    2620:	0c f4       	brge	.+2      	; 0x2624 <color(char)+0x4d4>
    2622:	85 ce       	rjmp	.-758    	; 0x232e <color(char)+0x1de>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:378
      color_out = RED;
    //else if (green > red && green > blue && red < EEPROM_read_int(green_right_r) + range && red > EEPROM_read_int(green_right_r) - range && green > EEPROM_read_int(green_right_g)-range/2 && green < EEPROM_read_int(green_right_g) + range && blue < EEPROM_read_int(green_right_b) + range && blue > EEPROM_read_int(green_right_b) - range /*&&  clear < EEPROM_read_int(green_right_c) + range */ && clear > EEPROM_read_int(green_right_c) - range/2)
      else if((blue<green && green-red>=13)||(green>90 && blue<=green+12 && green-red>=25 && clear>200))
    2624:	cc 16       	cp	r12, r28
    2626:	dd 06       	cpc	r13, r29
    2628:	0c f4       	brge	.+2      	; 0x262c <color(char)+0x4dc>
    262a:	a4 c0       	rjmp	.+328    	; 0x2774 <color(char)+0x624>
    262c:	cb 35       	cpi	r28, 0x5B	; 91
    262e:	d1 05       	cpc	r29, r1
    2630:	94 f0       	brlt	.+36     	; 0x2656 <color(char)+0x506>
    2632:	ce 01       	movw	r24, r28
    2634:	0c 96       	adiw	r24, 0x0c	; 12
    2636:	8c 15       	cp	r24, r12
    2638:	9d 05       	cpc	r25, r13
    263a:	6c f0       	brlt	.+26     	; 0x2656 <color(char)+0x506>
    263c:	ce 01       	movw	r24, r28
    263e:	80 1b       	sub	r24, r16
    2640:	91 0b       	sbc	r25, r17
    2642:	49 97       	sbiw	r24, 0x19	; 25
    2644:	44 f0       	brlt	.+16     	; 0x2656 <color(char)+0x506>
    2646:	80 91 1e 09 	lds	r24, 0x091E	; 0x80091e <clear>
    264a:	90 91 1f 09 	lds	r25, 0x091F	; 0x80091f <clear+0x1>
    264e:	89 3c       	cpi	r24, 0xC9	; 201
    2650:	91 05       	cpc	r25, r1
    2652:	0c f0       	brlt	.+2      	; 0x2656 <color(char)+0x506>
    2654:	9b ce       	rjmp	.-714    	; 0x238c <color(char)+0x23c>
    2656:	8a e9       	ldi	r24, 0x9A	; 154
    2658:	90 e0       	ldi	r25, 0x00	; 0
    265a:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    265e:	7c 01       	movw	r14, r24
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:381
      {color_out = GREEN;go(30,30);}//beep(1);}

    else if (blue > red && blue > green && red < EEPROM_read_int(blue_right_r) + range && red > EEPROM_read_int(blue_right_r) - range && green < EEPROM_read_int(blue_right_g) + range && green > EEPROM_read_int(blue_right_g) - range && blue < EEPROM_read_int(blue_right_b) + range && blue > EEPROM_read_int(blue_right_b) - range && clear < EEPROM_read_int(blue_right_c) + range && clear > EEPROM_read_int(blue_right_c) - range)
    2660:	0c 15       	cp	r16, r12
    2662:	1d 05       	cpc	r17, r13
    2664:	0c f0       	brlt	.+2      	; 0x2668 <color(char)+0x518>
    2666:	45 c0       	rjmp	.+138    	; 0x26f2 <color(char)+0x5a2>
    2668:	cc 15       	cp	r28, r12
    266a:	dd 05       	cpc	r29, r13
    266c:	0c f0       	brlt	.+2      	; 0x2670 <color(char)+0x520>
    266e:	41 c0       	rjmp	.+130    	; 0x26f2 <color(char)+0x5a2>
    2670:	8c e4       	ldi	r24, 0x4C	; 76
    2672:	90 e0       	ldi	r25, 0x00	; 0
    2674:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    2678:	97 01       	movw	r18, r14
    267a:	28 0f       	add	r18, r24
    267c:	39 1f       	adc	r19, r25
    267e:	02 17       	cp	r16, r18
    2680:	13 07       	cpc	r17, r19
    2682:	bc f5       	brge	.+110    	; 0x26f2 <color(char)+0x5a2>
    2684:	8e 19       	sub	r24, r14
    2686:	9f 09       	sbc	r25, r15
    2688:	80 17       	cp	r24, r16
    268a:	91 07       	cpc	r25, r17
    268c:	94 f5       	brge	.+100    	; 0x26f2 <color(char)+0x5a2>
    268e:	8e e4       	ldi	r24, 0x4E	; 78
    2690:	90 e0       	ldi	r25, 0x00	; 0
    2692:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    2696:	97 01       	movw	r18, r14
    2698:	28 0f       	add	r18, r24
    269a:	39 1f       	adc	r19, r25
    269c:	c2 17       	cp	r28, r18
    269e:	d3 07       	cpc	r29, r19
    26a0:	44 f5       	brge	.+80     	; 0x26f2 <color(char)+0x5a2>
    26a2:	8e 19       	sub	r24, r14
    26a4:	9f 09       	sbc	r25, r15
    26a6:	8c 17       	cp	r24, r28
    26a8:	9d 07       	cpc	r25, r29
    26aa:	1c f5       	brge	.+70     	; 0x26f2 <color(char)+0x5a2>
    26ac:	80 e5       	ldi	r24, 0x50	; 80
    26ae:	90 e0       	ldi	r25, 0x00	; 0
    26b0:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    26b4:	97 01       	movw	r18, r14
    26b6:	28 0f       	add	r18, r24
    26b8:	39 1f       	adc	r19, r25
    26ba:	c2 16       	cp	r12, r18
    26bc:	d3 06       	cpc	r13, r19
    26be:	cc f4       	brge	.+50     	; 0x26f2 <color(char)+0x5a2>
    26c0:	8e 19       	sub	r24, r14
    26c2:	9f 09       	sbc	r25, r15
    26c4:	8c 15       	cp	r24, r12
    26c6:	9d 05       	cpc	r25, r13
    26c8:	a4 f4       	brge	.+40     	; 0x26f2 <color(char)+0x5a2>
    26ca:	82 e5       	ldi	r24, 0x52	; 82
    26cc:	90 e0       	ldi	r25, 0x00	; 0
    26ce:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    26d2:	20 91 1e 09 	lds	r18, 0x091E	; 0x80091e <clear>
    26d6:	30 91 1f 09 	lds	r19, 0x091F	; 0x80091f <clear+0x1>
    26da:	a7 01       	movw	r20, r14
    26dc:	48 0f       	add	r20, r24
    26de:	59 1f       	adc	r21, r25
    26e0:	24 17       	cp	r18, r20
    26e2:	35 07       	cpc	r19, r21
    26e4:	34 f4       	brge	.+12     	; 0x26f2 <color(char)+0x5a2>
    26e6:	8e 19       	sub	r24, r14
    26e8:	9f 09       	sbc	r25, r15
    26ea:	82 17       	cp	r24, r18
    26ec:	93 07       	cpc	r25, r19
    26ee:	0c f4       	brge	.+2      	; 0x26f2 <color(char)+0x5a2>
    26f0:	48 c0       	rjmp	.+144    	; 0x2782 <color(char)+0x632>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:384
      color_out = BLUE;

    else if (red < EEPROM_read_int(yellow_right_r) + range && red > EEPROM_read_int(yellow_right_r) - range && green < EEPROM_read_int(yellow_right_g) + range && green > EEPROM_read_int(yellow_right_g) - range && blue < EEPROM_read_int(yellow_right_b) + range && blue > EEPROM_read_int(yellow_right_b) - range && clear < EEPROM_read_int(yellow_right_c) + range && clear > EEPROM_read_int(yellow_right_c) - range)
    26f2:	84 e5       	ldi	r24, 0x54	; 84
    26f4:	90 e0       	ldi	r25, 0x00	; 0
    26f6:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    26fa:	97 01       	movw	r18, r14
    26fc:	28 0f       	add	r18, r24
    26fe:	39 1f       	adc	r19, r25
    2700:	02 17       	cp	r16, r18
    2702:	13 07       	cpc	r17, r19
    2704:	0c f4       	brge	.+2      	; 0x2708 <color(char)+0x5b8>
    2706:	44 c0       	rjmp	.+136    	; 0x2790 <color(char)+0x640>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:388
      color_out = YELLOW;

    else if (
      red <= (EEPROM_read_int(silver_right_r) + range) && red >= (EEPROM_read_int(silver_right_r) - range) && green >= (EEPROM_read_int(silver_right_g) - range) && green <= (EEPROM_read_int(silver_right_g) + range) && blue >= (EEPROM_read_int(silver_right_b) - range) && blue <= (EEPROM_read_int(silver_right_b) + range) && clear <= (EEPROM_read_int(silver_right_c) + range) && clear >= (EEPROM_read_int(silver_right_c) - range)) {
    2708:	8c e5       	ldi	r24, 0x5C	; 92
    270a:	90 e0       	ldi	r25, 0x00	; 0
    270c:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    2710:	97 01       	movw	r18, r14
    2712:	28 0f       	add	r18, r24
    2714:	39 1f       	adc	r19, r25
    2716:	20 17       	cp	r18, r16
    2718:	31 07       	cpc	r19, r17
    271a:	0c f4       	brge	.+2      	; 0x271e <color(char)+0x5ce>
    271c:	ea ce       	rjmp	.-556    	; 0x24f2 <color(char)+0x3a2>
    271e:	8e 19       	sub	r24, r14
    2720:	9f 09       	sbc	r25, r15
    2722:	08 17       	cp	r16, r24
    2724:	19 07       	cpc	r17, r25
    2726:	0c f4       	brge	.+2      	; 0x272a <color(char)+0x5da>
    2728:	e4 ce       	rjmp	.-568    	; 0x24f2 <color(char)+0x3a2>
    272a:	8e e5       	ldi	r24, 0x5E	; 94
    272c:	90 e0       	ldi	r25, 0x00	; 0
    272e:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    2732:	9c 01       	movw	r18, r24
    2734:	2e 19       	sub	r18, r14
    2736:	3f 09       	sbc	r19, r15
    2738:	c2 17       	cp	r28, r18
    273a:	d3 07       	cpc	r29, r19
    273c:	0c f4       	brge	.+2      	; 0x2740 <color(char)+0x5f0>
    273e:	d9 ce       	rjmp	.-590    	; 0x24f2 <color(char)+0x3a2>
    2740:	8e 0d       	add	r24, r14
    2742:	9f 1d       	adc	r25, r15
    2744:	8c 17       	cp	r24, r28
    2746:	9d 07       	cpc	r25, r29
    2748:	0c f4       	brge	.+2      	; 0x274c <color(char)+0x5fc>
    274a:	d3 ce       	rjmp	.-602    	; 0x24f2 <color(char)+0x3a2>
    274c:	80 e6       	ldi	r24, 0x60	; 96
    274e:	90 e0       	ldi	r25, 0x00	; 0
    2750:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    2754:	9c 01       	movw	r18, r24
    2756:	2e 19       	sub	r18, r14
    2758:	3f 09       	sbc	r19, r15
    275a:	c2 16       	cp	r12, r18
    275c:	d3 06       	cpc	r13, r19
    275e:	0c f4       	brge	.+2      	; 0x2762 <color(char)+0x612>
    2760:	c8 ce       	rjmp	.-624    	; 0x24f2 <color(char)+0x3a2>
    2762:	8e 0d       	add	r24, r14
    2764:	9f 1d       	adc	r25, r15
    2766:	8c 15       	cp	r24, r12
    2768:	9d 05       	cpc	r25, r13
    276a:	0c f4       	brge	.+2      	; 0x276e <color(char)+0x61e>
    276c:	c2 ce       	rjmp	.-636    	; 0x24f2 <color(char)+0x3a2>
    276e:	82 e6       	ldi	r24, 0x62	; 98
    2770:	90 e0       	ldi	r25, 0x00	; 0
    2772:	ad ce       	rjmp	.-678    	; 0x24ce <color(char)+0x37e>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:378
  } else if (select == 2)  // right
  {
    if (red > green && red > blue && red < EEPROM_read_int(red_right_r) + range && red > EEPROM_read_int(red_right_r) - range && green < EEPROM_read_int(red_right_g) + range && green > EEPROM_read_int(red_right_g) - range && blue < EEPROM_read_int(red_right_b) + range && blue > EEPROM_read_int(red_right_b) - range && clear < EEPROM_read_int(red_right_c) + range && clear > EEPROM_read_int(red_right_c) - range)
      color_out = RED;
    //else if (green > red && green > blue && red < EEPROM_read_int(green_right_r) + range && red > EEPROM_read_int(green_right_r) - range && green > EEPROM_read_int(green_right_g)-range/2 && green < EEPROM_read_int(green_right_g) + range && blue < EEPROM_read_int(green_right_b) + range && blue > EEPROM_read_int(green_right_b) - range /*&&  clear < EEPROM_read_int(green_right_c) + range */ && clear > EEPROM_read_int(green_right_c) - range/2)
      else if((blue<green && green-red>=13)||(green>90 && blue<=green+12 && green-red>=25 && clear>200))
    2774:	ce 01       	movw	r24, r28
    2776:	80 1b       	sub	r24, r16
    2778:	91 0b       	sbc	r25, r17
    277a:	0d 97       	sbiw	r24, 0x0d	; 13
    277c:	0c f0       	brlt	.+2      	; 0x2780 <color(char)+0x630>
    277e:	06 ce       	rjmp	.-1012   	; 0x238c <color(char)+0x23c>
    2780:	55 cf       	rjmp	.-342    	; 0x262c <color(char)+0x4dc>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:382
      {color_out = GREEN;go(30,30);}//beep(1);}

    else if (blue > red && blue > green && red < EEPROM_read_int(blue_right_r) + range && red > EEPROM_read_int(blue_right_r) - range && green < EEPROM_read_int(blue_right_g) + range && green > EEPROM_read_int(blue_right_g) - range && blue < EEPROM_read_int(blue_right_b) + range && blue > EEPROM_read_int(blue_right_b) - range && clear < EEPROM_read_int(blue_right_c) + range && clear > EEPROM_read_int(blue_right_c) - range)
      color_out = BLUE;
    2782:	82 e0       	ldi	r24, 0x02	; 2
    2784:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:402
  {
    if (red > green && red > blue && red < EEPROM_read_int(red_front_r) + range && red > EEPROM_read_int(red_front_r) - range && green < EEPROM_read_int(red_front_g) + range && green > EEPROM_read_int(red_front_g) - range && blue < EEPROM_read_int(red_front_b) + range && blue > EEPROM_read_int(red_front_b) - range && clear < EEPROM_read_int(red_front_c) + range && clear > EEPROM_read_int(red_front_c) - range)
      color_out = RED;

    else if (green > red && green > blue && red < EEPROM_read_int(green_front_r) + range && red > EEPROM_read_int(green_front_r) - range && green < EEPROM_read_int(green_front_g) + range && green > EEPROM_read_int(green_front_g) - range && blue < EEPROM_read_int(green_front_b) + range && blue > EEPROM_read_int(green_front_b) - range && clear < EEPROM_read_int(green_front_c) + range && clear > EEPROM_read_int(green_front_c) - range)
      color_out = GREEN;
    2786:	90 93 17 09 	sts	0x0917, r25	; 0x800917 <color_out+0x1>
    278a:	80 93 16 09 	sts	0x0916, r24	; 0x800916 <color_out>
    278e:	0a ce       	rjmp	.-1004   	; 0x23a4 <color(char)+0x254>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:384
      {color_out = GREEN;go(30,30);}//beep(1);}

    else if (blue > red && blue > green && red < EEPROM_read_int(blue_right_r) + range && red > EEPROM_read_int(blue_right_r) - range && green < EEPROM_read_int(blue_right_g) + range && green > EEPROM_read_int(blue_right_g) - range && blue < EEPROM_read_int(blue_right_b) + range && blue > EEPROM_read_int(blue_right_b) - range && clear < EEPROM_read_int(blue_right_c) + range && clear > EEPROM_read_int(blue_right_c) - range)
      color_out = BLUE;

    else if (red < EEPROM_read_int(yellow_right_r) + range && red > EEPROM_read_int(yellow_right_r) - range && green < EEPROM_read_int(yellow_right_g) + range && green > EEPROM_read_int(yellow_right_g) - range && blue < EEPROM_read_int(yellow_right_b) + range && blue > EEPROM_read_int(yellow_right_b) - range && clear < EEPROM_read_int(yellow_right_c) + range && clear > EEPROM_read_int(yellow_right_c) - range)
    2790:	8e 19       	sub	r24, r14
    2792:	9f 09       	sbc	r25, r15
    2794:	80 17       	cp	r24, r16
    2796:	91 07       	cpc	r25, r17
    2798:	0c f0       	brlt	.+2      	; 0x279c <color(char)+0x64c>
    279a:	b6 cf       	rjmp	.-148    	; 0x2708 <color(char)+0x5b8>
    279c:	86 e5       	ldi	r24, 0x56	; 86
    279e:	90 e0       	ldi	r25, 0x00	; 0
    27a0:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    27a4:	97 01       	movw	r18, r14
    27a6:	28 0f       	add	r18, r24
    27a8:	39 1f       	adc	r19, r25
    27aa:	c2 17       	cp	r28, r18
    27ac:	d3 07       	cpc	r29, r19
    27ae:	0c f0       	brlt	.+2      	; 0x27b2 <color(char)+0x662>
    27b0:	ab cf       	rjmp	.-170    	; 0x2708 <color(char)+0x5b8>
    27b2:	8e 19       	sub	r24, r14
    27b4:	9f 09       	sbc	r25, r15
    27b6:	8c 17       	cp	r24, r28
    27b8:	9d 07       	cpc	r25, r29
    27ba:	0c f0       	brlt	.+2      	; 0x27be <color(char)+0x66e>
    27bc:	a5 cf       	rjmp	.-182    	; 0x2708 <color(char)+0x5b8>
    27be:	88 e5       	ldi	r24, 0x58	; 88
    27c0:	90 e0       	ldi	r25, 0x00	; 0
    27c2:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    27c6:	97 01       	movw	r18, r14
    27c8:	28 0f       	add	r18, r24
    27ca:	39 1f       	adc	r19, r25
    27cc:	c2 16       	cp	r12, r18
    27ce:	d3 06       	cpc	r13, r19
    27d0:	0c f0       	brlt	.+2      	; 0x27d4 <color(char)+0x684>
    27d2:	9a cf       	rjmp	.-204    	; 0x2708 <color(char)+0x5b8>
    27d4:	8e 19       	sub	r24, r14
    27d6:	9f 09       	sbc	r25, r15
    27d8:	8c 15       	cp	r24, r12
    27da:	9d 05       	cpc	r25, r13
    27dc:	0c f0       	brlt	.+2      	; 0x27e0 <color(char)+0x690>
    27de:	94 cf       	rjmp	.-216    	; 0x2708 <color(char)+0x5b8>
    27e0:	8a e5       	ldi	r24, 0x5A	; 90
    27e2:	90 e0       	ldi	r25, 0x00	; 0
    27e4:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    27e8:	20 91 1e 09 	lds	r18, 0x091E	; 0x80091e <clear>
    27ec:	30 91 1f 09 	lds	r19, 0x091F	; 0x80091f <clear+0x1>
    27f0:	a7 01       	movw	r20, r14
    27f2:	48 0f       	add	r20, r24
    27f4:	59 1f       	adc	r21, r25
    27f6:	24 17       	cp	r18, r20
    27f8:	35 07       	cpc	r19, r21
    27fa:	0c f0       	brlt	.+2      	; 0x27fe <color(char)+0x6ae>
    27fc:	85 cf       	rjmp	.-246    	; 0x2708 <color(char)+0x5b8>
    27fe:	8e 19       	sub	r24, r14
    2800:	9f 09       	sbc	r25, r15
    2802:	82 17       	cp	r24, r18
    2804:	93 07       	cpc	r25, r19
    2806:	0c f4       	brge	.+2      	; 0x280a <color(char)+0x6ba>
    2808:	b4 ce       	rjmp	.-664    	; 0x2572 <color(char)+0x422>
    280a:	7e cf       	rjmp	.-260    	; 0x2708 <color(char)+0x5b8>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:389
      color_out = YELLOW;

    else if (
      red <= (EEPROM_read_int(silver_right_r) + range) && red >= (EEPROM_read_int(silver_right_r) - range) && green >= (EEPROM_read_int(silver_right_g) - range) && green <= (EEPROM_read_int(silver_right_g) + range) && blue >= (EEPROM_read_int(silver_right_b) - range) && blue <= (EEPROM_read_int(silver_right_b) + range) && clear <= (EEPROM_read_int(silver_right_c) + range) && clear >= (EEPROM_read_int(silver_right_c) - range)) {
      color_out = SILVER;
    280c:	85 e0       	ldi	r24, 0x05	; 5
    280e:	90 e0       	ldi	r25, 0x00	; 0
    2810:	ba cf       	rjmp	.-140    	; 0x2786 <color(char)+0x636>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:398
      color_out = WHITE;

    return color_out;
  }else if (select == 3)  // front
  {
    if (red > green && red > blue && red < EEPROM_read_int(red_front_r) + range && red > EEPROM_read_int(red_front_r) - range && green < EEPROM_read_int(red_front_g) + range && green > EEPROM_read_int(red_front_g) - range && blue < EEPROM_read_int(red_front_b) + range && blue > EEPROM_read_int(red_front_b) - range && clear < EEPROM_read_int(red_front_c) + range && clear > EEPROM_read_int(red_front_c) - range)
    2812:	c0 17       	cp	r28, r16
    2814:	d1 07       	cpc	r29, r17
    2816:	0c f0       	brlt	.+2      	; 0x281a <color(char)+0x6ca>
    2818:	57 c0       	rjmp	.+174    	; 0x28c8 <color(char)+0x778>
    281a:	c0 90 1c 09 	lds	r12, 0x091C	; 0x80091c <blue>
    281e:	d0 90 1d 09 	lds	r13, 0x091D	; 0x80091d <blue+0x1>
    2822:	c0 16       	cp	r12, r16
    2824:	d1 06       	cpc	r13, r17
    2826:	0c f0       	brlt	.+2      	; 0x282a <color(char)+0x6da>
    2828:	64 ce       	rjmp	.-824    	; 0x24f2 <color(char)+0x3a2>
    282a:	84 e6       	ldi	r24, 0x64	; 100
    282c:	90 e0       	ldi	r25, 0x00	; 0
    282e:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    2832:	5c 01       	movw	r10, r24
    2834:	8a e9       	ldi	r24, 0x9A	; 154
    2836:	90 e0       	ldi	r25, 0x00	; 0
    2838:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    283c:	7c 01       	movw	r14, r24
    283e:	c5 01       	movw	r24, r10
    2840:	8e 0d       	add	r24, r14
    2842:	9f 1d       	adc	r25, r15
    2844:	08 17       	cp	r16, r24
    2846:	19 07       	cpc	r17, r25
    2848:	0c f0       	brlt	.+2      	; 0x284c <color(char)+0x6fc>
    284a:	53 ce       	rjmp	.-858    	; 0x24f2 <color(char)+0x3a2>
    284c:	ae 18       	sub	r10, r14
    284e:	bf 08       	sbc	r11, r15
    2850:	a0 16       	cp	r10, r16
    2852:	b1 06       	cpc	r11, r17
    2854:	0c f0       	brlt	.+2      	; 0x2858 <color(char)+0x708>
    2856:	4d ce       	rjmp	.-870    	; 0x24f2 <color(char)+0x3a2>
    2858:	86 e6       	ldi	r24, 0x66	; 102
    285a:	90 e0       	ldi	r25, 0x00	; 0
    285c:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    2860:	97 01       	movw	r18, r14
    2862:	28 0f       	add	r18, r24
    2864:	39 1f       	adc	r19, r25
    2866:	c2 17       	cp	r28, r18
    2868:	d3 07       	cpc	r29, r19
    286a:	0c f0       	brlt	.+2      	; 0x286e <color(char)+0x71e>
    286c:	42 ce       	rjmp	.-892    	; 0x24f2 <color(char)+0x3a2>
    286e:	8e 19       	sub	r24, r14
    2870:	9f 09       	sbc	r25, r15
    2872:	8c 17       	cp	r24, r28
    2874:	9d 07       	cpc	r25, r29
    2876:	0c f0       	brlt	.+2      	; 0x287a <color(char)+0x72a>
    2878:	3c ce       	rjmp	.-904    	; 0x24f2 <color(char)+0x3a2>
    287a:	88 e6       	ldi	r24, 0x68	; 104
    287c:	90 e0       	ldi	r25, 0x00	; 0
    287e:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    2882:	97 01       	movw	r18, r14
    2884:	28 0f       	add	r18, r24
    2886:	39 1f       	adc	r19, r25
    2888:	c2 16       	cp	r12, r18
    288a:	d3 06       	cpc	r13, r19
    288c:	0c f0       	brlt	.+2      	; 0x2890 <color(char)+0x740>
    288e:	31 ce       	rjmp	.-926    	; 0x24f2 <color(char)+0x3a2>
    2890:	8e 19       	sub	r24, r14
    2892:	9f 09       	sbc	r25, r15
    2894:	8c 15       	cp	r24, r12
    2896:	9d 05       	cpc	r25, r13
    2898:	0c f0       	brlt	.+2      	; 0x289c <color(char)+0x74c>
    289a:	2b ce       	rjmp	.-938    	; 0x24f2 <color(char)+0x3a2>
    289c:	8a e6       	ldi	r24, 0x6A	; 106
    289e:	90 e0       	ldi	r25, 0x00	; 0
    28a0:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    28a4:	20 91 1e 09 	lds	r18, 0x091E	; 0x80091e <clear>
    28a8:	30 91 1f 09 	lds	r19, 0x091F	; 0x80091f <clear+0x1>
    28ac:	a7 01       	movw	r20, r14
    28ae:	48 0f       	add	r20, r24
    28b0:	59 1f       	adc	r21, r25
    28b2:	24 17       	cp	r18, r20
    28b4:	35 07       	cpc	r19, r21
    28b6:	0c f0       	brlt	.+2      	; 0x28ba <color(char)+0x76a>
    28b8:	1c ce       	rjmp	.-968    	; 0x24f2 <color(char)+0x3a2>
    28ba:	8e 19       	sub	r24, r14
    28bc:	9f 09       	sbc	r25, r15
    28be:	82 17       	cp	r24, r18
    28c0:	93 07       	cpc	r25, r19
    28c2:	0c f4       	brge	.+2      	; 0x28c6 <color(char)+0x776>
    28c4:	34 cd       	rjmp	.-1432   	; 0x232e <color(char)+0x1de>
    28c6:	15 ce       	rjmp	.-982    	; 0x24f2 <color(char)+0x3a2>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:401
      color_out = RED;

    else if (green > red && green > blue && red < EEPROM_read_int(green_front_r) + range && red > EEPROM_read_int(green_front_r) - range && green < EEPROM_read_int(green_front_g) + range && green > EEPROM_read_int(green_front_g) - range && blue < EEPROM_read_int(green_front_b) + range && blue > EEPROM_read_int(green_front_b) - range && clear < EEPROM_read_int(green_front_c) + range && clear > EEPROM_read_int(green_front_c) - range)
    28c8:	0c 17       	cp	r16, r28
    28ca:	1d 07       	cpc	r17, r29
    28cc:	0c f0       	brlt	.+2      	; 0x28d0 <color(char)+0x780>
    28ce:	11 ce       	rjmp	.-990    	; 0x24f2 <color(char)+0x3a2>
    28d0:	c0 90 1c 09 	lds	r12, 0x091C	; 0x80091c <blue>
    28d4:	d0 90 1d 09 	lds	r13, 0x091D	; 0x80091d <blue+0x1>
    28d8:	cc 16       	cp	r12, r28
    28da:	dd 06       	cpc	r13, r29
    28dc:	0c f0       	brlt	.+2      	; 0x28e0 <color(char)+0x790>
    28de:	09 ce       	rjmp	.-1006   	; 0x24f2 <color(char)+0x3a2>
    28e0:	8c e6       	ldi	r24, 0x6C	; 108
    28e2:	90 e0       	ldi	r25, 0x00	; 0
    28e4:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    28e8:	5c 01       	movw	r10, r24
    28ea:	8a e9       	ldi	r24, 0x9A	; 154
    28ec:	90 e0       	ldi	r25, 0x00	; 0
    28ee:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    28f2:	7c 01       	movw	r14, r24
    28f4:	c5 01       	movw	r24, r10
    28f6:	8e 0d       	add	r24, r14
    28f8:	9f 1d       	adc	r25, r15
    28fa:	08 17       	cp	r16, r24
    28fc:	19 07       	cpc	r17, r25
    28fe:	0c f0       	brlt	.+2      	; 0x2902 <color(char)+0x7b2>
    2900:	f8 cd       	rjmp	.-1040   	; 0x24f2 <color(char)+0x3a2>
    2902:	ae 18       	sub	r10, r14
    2904:	bf 08       	sbc	r11, r15
    2906:	a0 16       	cp	r10, r16
    2908:	b1 06       	cpc	r11, r17
    290a:	0c f0       	brlt	.+2      	; 0x290e <color(char)+0x7be>
    290c:	f2 cd       	rjmp	.-1052   	; 0x24f2 <color(char)+0x3a2>
    290e:	8e e6       	ldi	r24, 0x6E	; 110
    2910:	90 e0       	ldi	r25, 0x00	; 0
    2912:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    2916:	97 01       	movw	r18, r14
    2918:	28 0f       	add	r18, r24
    291a:	39 1f       	adc	r19, r25
    291c:	c2 17       	cp	r28, r18
    291e:	d3 07       	cpc	r29, r19
    2920:	0c f0       	brlt	.+2      	; 0x2924 <color(char)+0x7d4>
    2922:	e7 cd       	rjmp	.-1074   	; 0x24f2 <color(char)+0x3a2>
    2924:	8e 19       	sub	r24, r14
    2926:	9f 09       	sbc	r25, r15
    2928:	8c 17       	cp	r24, r28
    292a:	9d 07       	cpc	r25, r29
    292c:	0c f0       	brlt	.+2      	; 0x2930 <color(char)+0x7e0>
    292e:	e1 cd       	rjmp	.-1086   	; 0x24f2 <color(char)+0x3a2>
    2930:	80 e7       	ldi	r24, 0x70	; 112
    2932:	90 e0       	ldi	r25, 0x00	; 0
    2934:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    2938:	97 01       	movw	r18, r14
    293a:	28 0f       	add	r18, r24
    293c:	39 1f       	adc	r19, r25
    293e:	c2 16       	cp	r12, r18
    2940:	d3 06       	cpc	r13, r19
    2942:	0c f0       	brlt	.+2      	; 0x2946 <color(char)+0x7f6>
    2944:	d6 cd       	rjmp	.-1108   	; 0x24f2 <color(char)+0x3a2>
    2946:	8e 19       	sub	r24, r14
    2948:	9f 09       	sbc	r25, r15
    294a:	8c 15       	cp	r24, r12
    294c:	9d 05       	cpc	r25, r13
    294e:	0c f0       	brlt	.+2      	; 0x2952 <color(char)+0x802>
    2950:	d0 cd       	rjmp	.-1120   	; 0x24f2 <color(char)+0x3a2>
    2952:	82 e7       	ldi	r24, 0x72	; 114
    2954:	90 e0       	ldi	r25, 0x00	; 0
    2956:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    295a:	20 91 1e 09 	lds	r18, 0x091E	; 0x80091e <clear>
    295e:	30 91 1f 09 	lds	r19, 0x091F	; 0x80091f <clear+0x1>
    2962:	a7 01       	movw	r20, r14
    2964:	48 0f       	add	r20, r24
    2966:	59 1f       	adc	r21, r25
    2968:	24 17       	cp	r18, r20
    296a:	35 07       	cpc	r19, r21
    296c:	0c f0       	brlt	.+2      	; 0x2970 <color(char)+0x820>
    296e:	c1 cd       	rjmp	.-1150   	; 0x24f2 <color(char)+0x3a2>
    2970:	8e 19       	sub	r24, r14
    2972:	9f 09       	sbc	r25, r15
    2974:	82 17       	cp	r24, r18
    2976:	93 07       	cpc	r25, r19
    2978:	0c f0       	brlt	.+2      	; 0x297c <color(char)+0x82c>
    297a:	bb cd       	rjmp	.-1162   	; 0x24f2 <color(char)+0x3a2>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:402
      color_out = GREEN;
    297c:	81 e0       	ldi	r24, 0x01	; 1
    297e:	90 e0       	ldi	r25, 0x00	; 0
    2980:	02 cf       	rjmp	.-508    	; 0x2786 <color(char)+0x636>

00002982 <menu_sensor()>:
menu_sensor():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:814
long microsecondsToMillimeters(long microseconds) {
  return microseconds * 10 / 29 / 2;
}
void menu_sensor(void) {
  static char page = 1, last_page = 6;
  lcd.clear();
    2982:	0e 94 c4 05 	call	0xb88	; 0xb88 <LiquidCrystal::clear() [clone .constprop.32]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:944
      delay(200);
      lcd.clear();
    }else if (page == 6)  // compass
    {
      lcd.setCursor(0, 0);
      lcd.printf("deg: %d pi: %d ro: %d",deg,pitch,role);
    2986:	cd e7       	ldi	r28, 0x7D	; 125
    2988:	db e0       	ldi	r29, 0x0B	; 11
microsecondsToMillimeters():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:810
      }
    }
  }
}
long microsecondsToMillimeters(long microseconds) {
  return microseconds * 10 / 29 / 2;
    298a:	9a e3       	ldi	r25, 0x3A	; 58
    298c:	c9 2e       	mov	r12, r25
    298e:	d1 2c       	mov	r13, r1
    2990:	e1 2c       	mov	r14, r1
    2992:	f1 2c       	mov	r15, r1
menu_sensor():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:816
}
void menu_sensor(void) {
  static char page = 1, last_page = 6;
  lcd.clear();
  while (1) {
    if (next_page == 0) {
    2994:	88 e0       	ldi	r24, 0x08	; 8
    2996:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    299a:	89 2b       	or	r24, r25
    299c:	a9 f4       	brne	.+42     	; 0x29c8 <menu_sensor()+0x46>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:817
      while (next_page == 0)
    299e:	88 e0       	ldi	r24, 0x08	; 8
    29a0:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    29a4:	89 2b       	or	r24, r25
    29a6:	d9 f3       	breq	.-10     	; 0x299e <menu_sensor()+0x1c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:819
        ;
      delay(50);
    29a8:	62 e3       	ldi	r22, 0x32	; 50
    29aa:	70 e0       	ldi	r23, 0x00	; 0
    29ac:	80 e0       	ldi	r24, 0x00	; 0
    29ae:	90 e0       	ldi	r25, 0x00	; 0
    29b0:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:820
      page++;
    29b4:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <menu_sensor()::page>
    29b8:	8f 5f       	subi	r24, 0xFF	; 255
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:821
      if (page > last_page)
    29ba:	87 30       	cpi	r24, 0x07	; 7
    29bc:	0c f0       	brlt	.+2      	; 0x29c0 <menu_sensor()+0x3e>
    29be:	5d c1       	rjmp	.+698    	; 0x2c7a <menu_sensor()+0x2f8>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:822
        page = 1;
    29c0:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <menu_sensor()::page>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:823
      lcd.clear();
    29c4:	0e 94 c4 05 	call	0xb88	; 0xb88 <LiquidCrystal::clear() [clone .constprop.32]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:825
    }
    if (previuse_page == 0) {
    29c8:	89 e0       	ldi	r24, 0x09	; 9
    29ca:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    29ce:	89 2b       	or	r24, r25
    29d0:	a9 f4       	brne	.+42     	; 0x29fc <menu_sensor()+0x7a>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:826
      while (previuse_page == 0)
    29d2:	89 e0       	ldi	r24, 0x09	; 9
    29d4:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    29d8:	89 2b       	or	r24, r25
    29da:	d9 f3       	breq	.-10     	; 0x29d2 <menu_sensor()+0x50>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:828
        ;
      delay(50);
    29dc:	62 e3       	ldi	r22, 0x32	; 50
    29de:	70 e0       	ldi	r23, 0x00	; 0
    29e0:	80 e0       	ldi	r24, 0x00	; 0
    29e2:	90 e0       	ldi	r25, 0x00	; 0
    29e4:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:829
      page--;
    29e8:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <menu_sensor()::page>
    29ec:	81 50       	subi	r24, 0x01	; 1
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:830
      if (page < 1)
    29ee:	18 16       	cp	r1, r24
    29f0:	0c f0       	brlt	.+2      	; 0x29f4 <menu_sensor()+0x72>
    29f2:	45 c1       	rjmp	.+650    	; 0x2c7e <menu_sensor()+0x2fc>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:831
        page = last_page;
    29f4:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <menu_sensor()::page>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:832
      lcd.clear();
    29f8:	0e 94 c4 05 	call	0xb88	; 0xb88 <LiquidCrystal::clear() [clone .constprop.32]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:834
    }
    if (increase == 0)
    29fc:	8a e0       	ldi	r24, 0x0A	; 10
    29fe:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    2a02:	89 2b       	or	r24, r25
    2a04:	09 f0       	breq	.+2      	; 0x2a08 <menu_sensor()+0x86>
    2a06:	3d c1       	rjmp	.+634    	; 0x2c82 <menu_sensor()+0x300>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:835
      go(40, 40);
    2a08:	68 e2       	ldi	r22, 0x28	; 40
    2a0a:	70 e0       	ldi	r23, 0x00	; 0
    2a0c:	88 e2       	ldi	r24, 0x28	; 40
    2a0e:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:839
    else if (decrease == 0)
      go(-40, -40);
    else
      go(0, 0);
    2a10:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:843

    ///////////////

    if (page == 1) {
    2a14:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <menu_sensor()::page>
    2a18:	81 30       	cpi	r24, 0x01	; 1
    2a1a:	09 f0       	breq	.+2      	; 0x2a1e <menu_sensor()+0x9c>
    2a1c:	95 c1       	rjmp	.+810    	; 0x2d48 <menu_sensor()+0x3c6>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:844
      lcd.setCursor(0, 0);
    2a1e:	60 e0       	ldi	r22, 0x00	; 0
    2a20:	80 e0       	ldi	r24, 0x00	; 0
    2a22:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:845
      lcd.printf("%d       %d      %d", SL10, SM, SR10);
    2a26:	40 e0       	ldi	r20, 0x00	; 0
    2a28:	63 e0       	ldi	r22, 0x03	; 3
    2a2a:	82 e0       	ldi	r24, 0x02	; 2
    2a2c:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    2a30:	b8 2e       	mov	r11, r24
    2a32:	a9 2e       	mov	r10, r25
    2a34:	40 e0       	ldi	r20, 0x00	; 0
    2a36:	60 e0       	ldi	r22, 0x00	; 0
    2a38:	80 e0       	ldi	r24, 0x00	; 0
    2a3a:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    2a3e:	18 2f       	mov	r17, r24
    2a40:	09 2f       	mov	r16, r25
    2a42:	40 e0       	ldi	r20, 0x00	; 0
    2a44:	62 e0       	ldi	r22, 0x02	; 2
    2a46:	82 e0       	ldi	r24, 0x02	; 2
    2a48:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    2a4c:	af 92       	push	r10
    2a4e:	bf 92       	push	r11
    2a50:	0f 93       	push	r16
    2a52:	1f 93       	push	r17
    2a54:	9f 93       	push	r25
    2a56:	8f 93       	push	r24
    2a58:	82 ef       	ldi	r24, 0xF2	; 242
    2a5a:	95 e0       	ldi	r25, 0x05	; 5
    2a5c:	9f 93       	push	r25
    2a5e:	8f 93       	push	r24
    2a60:	df 93       	push	r29
    2a62:	cf 93       	push	r28
    2a64:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:847

      lcd.setCursor(0, 1);
    2a68:	61 e0       	ldi	r22, 0x01	; 1
    2a6a:	80 e0       	ldi	r24, 0x00	; 0
    2a6c:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:848
      lcd.printf("   %d%d%d    %d%d%d   ", SL3, SL2, SL1, SR1, SR2, SR3);
    2a70:	40 e0       	ldi	r20, 0x00	; 0
    2a72:	61 e0       	ldi	r22, 0x01	; 1
    2a74:	83 e0       	ldi	r24, 0x03	; 3
    2a76:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    2a7a:	58 2e       	mov	r5, r24
    2a7c:	49 2e       	mov	r4, r25
    2a7e:	40 e0       	ldi	r20, 0x00	; 0
    2a80:	61 e0       	ldi	r22, 0x01	; 1
    2a82:	82 e0       	ldi	r24, 0x02	; 2
    2a84:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    2a88:	78 2e       	mov	r7, r24
    2a8a:	69 2e       	mov	r6, r25
    2a8c:	40 e0       	ldi	r20, 0x00	; 0
    2a8e:	61 e0       	ldi	r22, 0x01	; 1
    2a90:	81 e0       	ldi	r24, 0x01	; 1
    2a92:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    2a96:	98 2e       	mov	r9, r24
    2a98:	89 2e       	mov	r8, r25
    2a9a:	40 e0       	ldi	r20, 0x00	; 0
    2a9c:	60 e0       	ldi	r22, 0x00	; 0
    2a9e:	81 e0       	ldi	r24, 0x01	; 1
    2aa0:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    2aa4:	b8 2e       	mov	r11, r24
    2aa6:	a9 2e       	mov	r10, r25
    2aa8:	40 e0       	ldi	r20, 0x00	; 0
    2aaa:	60 e0       	ldi	r22, 0x00	; 0
    2aac:	82 e0       	ldi	r24, 0x02	; 2
    2aae:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    2ab2:	18 2f       	mov	r17, r24
    2ab4:	09 2f       	mov	r16, r25
    2ab6:	40 e0       	ldi	r20, 0x00	; 0
    2ab8:	60 e0       	ldi	r22, 0x00	; 0
    2aba:	83 e0       	ldi	r24, 0x03	; 3
    2abc:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    2ac0:	4f 92       	push	r4
    2ac2:	5f 92       	push	r5
    2ac4:	6f 92       	push	r6
    2ac6:	7f 92       	push	r7
    2ac8:	8f 92       	push	r8
    2aca:	9f 92       	push	r9
    2acc:	af 92       	push	r10
    2ace:	bf 92       	push	r11
    2ad0:	0f 93       	push	r16
    2ad2:	1f 93       	push	r17
    2ad4:	9f 93       	push	r25
    2ad6:	8f 93       	push	r24
    2ad8:	86 e0       	ldi	r24, 0x06	; 6
    2ada:	96 e0       	ldi	r25, 0x06	; 6
    2adc:	9f 93       	push	r25
    2ade:	8f 93       	push	r24
    2ae0:	df 93       	push	r29
    2ae2:	cf 93       	push	r28
    2ae4:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:850

      lcd.setCursor(0, 2);
    2ae8:	62 e0       	ldi	r22, 0x02	; 2
    2aea:	80 e0       	ldi	r24, 0x00	; 0
    2aec:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:851
      lcd.printf("%d%d%d  ENC=%3d %d%d%d", SL6, SL5, SL4, cnt / 100, SR4, SR5, SR6);
    2af0:	40 e0       	ldi	r20, 0x00	; 0
    2af2:	61 e0       	ldi	r22, 0x01	; 1
    2af4:	86 e0       	ldi	r24, 0x06	; 6
    2af6:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    2afa:	38 2e       	mov	r3, r24
    2afc:	29 2e       	mov	r2, r25
    2afe:	40 e0       	ldi	r20, 0x00	; 0
    2b00:	61 e0       	ldi	r22, 0x01	; 1
    2b02:	85 e0       	ldi	r24, 0x05	; 5
    2b04:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    2b08:	58 2e       	mov	r5, r24
    2b0a:	49 2e       	mov	r4, r25
    2b0c:	40 e0       	ldi	r20, 0x00	; 0
    2b0e:	61 e0       	ldi	r22, 0x01	; 1
    2b10:	84 e0       	ldi	r24, 0x04	; 4
    2b12:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    2b16:	78 2e       	mov	r7, r24
    2b18:	69 2e       	mov	r6, r25
    2b1a:	ac b4       	in	r10, 0x2c	; 44
    2b1c:	bd b4       	in	r11, 0x2d	; 45
    2b1e:	40 e0       	ldi	r20, 0x00	; 0
    2b20:	60 e0       	ldi	r22, 0x00	; 0
    2b22:	84 e0       	ldi	r24, 0x04	; 4
    2b24:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    2b28:	98 2e       	mov	r9, r24
    2b2a:	89 2e       	mov	r8, r25
    2b2c:	40 e0       	ldi	r20, 0x00	; 0
    2b2e:	60 e0       	ldi	r22, 0x00	; 0
    2b30:	85 e0       	ldi	r24, 0x05	; 5
    2b32:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    2b36:	18 2f       	mov	r17, r24
    2b38:	09 2f       	mov	r16, r25
    2b3a:	40 e0       	ldi	r20, 0x00	; 0
    2b3c:	60 e0       	ldi	r22, 0x00	; 0
    2b3e:	86 e0       	ldi	r24, 0x06	; 6
    2b40:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    2b44:	9c 01       	movw	r18, r24
    2b46:	2f 92       	push	r2
    2b48:	3f 92       	push	r3
    2b4a:	4f 92       	push	r4
    2b4c:	5f 92       	push	r5
    2b4e:	6f 92       	push	r6
    2b50:	7f 92       	push	r7
    2b52:	c5 01       	movw	r24, r10
    2b54:	64 e6       	ldi	r22, 0x64	; 100
    2b56:	70 e0       	ldi	r23, 0x00	; 0
    2b58:	0e 94 c9 46 	call	0x8d92	; 0x8d92 <__udivmodhi4>
    2b5c:	7f 93       	push	r23
    2b5e:	6f 93       	push	r22
    2b60:	8f 92       	push	r8
    2b62:	9f 92       	push	r9
    2b64:	0f 93       	push	r16
    2b66:	1f 93       	push	r17
    2b68:	3f 93       	push	r19
    2b6a:	2f 93       	push	r18
    2b6c:	8d e1       	ldi	r24, 0x1D	; 29
    2b6e:	96 e0       	ldi	r25, 0x06	; 6
    2b70:	9f 93       	push	r25
    2b72:	8f 93       	push	r24
    2b74:	df 93       	push	r29
    2b76:	cf 93       	push	r28
    2b78:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:853

      lcd.setCursor(0, 3);
    2b7c:	2d b7       	in	r18, 0x3d	; 61
    2b7e:	3e b7       	in	r19, 0x3e	; 62
    2b80:	24 5d       	subi	r18, 0xD4	; 212
    2b82:	3f 4f       	sbci	r19, 0xFF	; 255
    2b84:	0f b6       	in	r0, 0x3f	; 63
    2b86:	f8 94       	cli
    2b88:	3e bf       	out	0x3e, r19	; 62
    2b8a:	0f be       	out	0x3f, r0	; 63
    2b8c:	2d bf       	out	0x3d, r18	; 61
    2b8e:	63 e0       	ldi	r22, 0x03	; 3
    2b90:	80 e0       	ldi	r24, 0x00	; 0
    2b92:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:854
      lcd.printf("%d%d%d", SL9, SL8, SL7);
    2b96:	40 e0       	ldi	r20, 0x00	; 0
    2b98:	60 e0       	ldi	r22, 0x00	; 0
    2b9a:	87 e0       	ldi	r24, 0x07	; 7
    2b9c:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    2ba0:	b8 2e       	mov	r11, r24
    2ba2:	a9 2e       	mov	r10, r25
    2ba4:	40 e0       	ldi	r20, 0x00	; 0
    2ba6:	62 e0       	ldi	r22, 0x02	; 2
    2ba8:	80 e0       	ldi	r24, 0x00	; 0
    2baa:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    2bae:	18 2f       	mov	r17, r24
    2bb0:	09 2f       	mov	r16, r25
    2bb2:	40 e0       	ldi	r20, 0x00	; 0
    2bb4:	62 e0       	ldi	r22, 0x02	; 2
    2bb6:	81 e0       	ldi	r24, 0x01	; 1
    2bb8:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    2bbc:	af 92       	push	r10
    2bbe:	bf 92       	push	r11
    2bc0:	0f 93       	push	r16
    2bc2:	1f 93       	push	r17
    2bc4:	9f 93       	push	r25
    2bc6:	8f 93       	push	r24
    2bc8:	0d e2       	ldi	r16, 0x2D	; 45
    2bca:	16 e0       	ldi	r17, 0x06	; 6
    2bcc:	1f 93       	push	r17
    2bce:	0f 93       	push	r16
    2bd0:	df 93       	push	r29
    2bd2:	cf 93       	push	r28
    2bd4:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:856

      lcd.setCursor(13, 3);
    2bd8:	63 e0       	ldi	r22, 0x03	; 3
    2bda:	8d e0       	ldi	r24, 0x0D	; 13
    2bdc:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:857
      lcd.printf("%d%d%d", SR7, SR8, SR9);
    2be0:	40 e0       	ldi	r20, 0x00	; 0
    2be2:	63 e0       	ldi	r22, 0x03	; 3
    2be4:	81 e0       	ldi	r24, 0x01	; 1
    2be6:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    2bea:	98 2e       	mov	r9, r24
    2bec:	89 2e       	mov	r8, r25
    2bee:	40 e0       	ldi	r20, 0x00	; 0
    2bf0:	63 e0       	ldi	r22, 0x03	; 3
    2bf2:	80 e0       	ldi	r24, 0x00	; 0
    2bf4:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    2bf8:	b8 2e       	mov	r11, r24
    2bfa:	a9 2e       	mov	r10, r25
    2bfc:	40 e0       	ldi	r20, 0x00	; 0
    2bfe:	61 e0       	ldi	r22, 0x01	; 1
    2c00:	87 e0       	ldi	r24, 0x07	; 7
    2c02:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    2c06:	8f 92       	push	r8
    2c08:	9f 92       	push	r9
    2c0a:	af 92       	push	r10
    2c0c:	bf 92       	push	r11
    2c0e:	9f 93       	push	r25
    2c10:	8f 93       	push	r24
    2c12:	1f 93       	push	r17
    2c14:	0f 93       	push	r16
    2c16:	df 93       	push	r29
    2c18:	cf 93       	push	r28
    2c1a:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:859

      lcd.setCursor(4, 3);
    2c1e:	63 e0       	ldi	r22, 0x03	; 3
    2c20:	84 e0       	ldi	r24, 0x04	; 4
    2c22:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:860
      if (color_L == RED)
    2c26:	81 e0       	ldi	r24, 0x01	; 1
    2c28:	0e 94 a8 10 	call	0x2150	; 0x2150 <color(char)>
    2c2c:	2d b7       	in	r18, 0x3d	; 61
    2c2e:	3e b7       	in	r19, 0x3e	; 62
    2c30:	2c 5e       	subi	r18, 0xEC	; 236
    2c32:	3f 4f       	sbci	r19, 0xFF	; 255
    2c34:	0f b6       	in	r0, 0x3f	; 63
    2c36:	f8 94       	cli
    2c38:	3e bf       	out	0x3e, r19	; 62
    2c3a:	0f be       	out	0x3f, r0	; 63
    2c3c:	2d bf       	out	0x3d, r18	; 61
    2c3e:	81 11       	cpse	r24, r1
    2c40:	2f c0       	rjmp	.+94     	; 0x2ca0 <menu_sensor()+0x31e>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:861
        lcd.print("RED ");
    2c42:	85 e2       	ldi	r24, 0x25	; 37
    2c44:	95 e0       	ldi	r25, 0x05	; 5
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:871
      else if (color_L == YELLOW)
        lcd.print("YEL ");
      else if (color_L == SILVER)
        lcd.print("SIL ");
      else
        lcd.print("WHT ");
    2c46:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:873

      lcd.setCursor(9, 3);
    2c4a:	63 e0       	ldi	r22, 0x03	; 3
    2c4c:	89 e0       	ldi	r24, 0x09	; 9
    2c4e:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:874
      if (color_R == RED)
    2c52:	82 e0       	ldi	r24, 0x02	; 2
    2c54:	0e 94 a8 10 	call	0x2150	; 0x2150 <color(char)>
    2c58:	81 11       	cpse	r24, r1
    2c5a:	45 c0       	rjmp	.+138    	; 0x2ce6 <menu_sensor()+0x364>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:875
        lcd.print("RED");
    2c5c:	89 e3       	ldi	r24, 0x39	; 57
    2c5e:	96 e0       	ldi	r25, 0x06	; 6
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:885
      else if (color_R == YELLOW)
        lcd.print("YEL");
      else if (VSR6 < 0.9)
        lcd.print("SIL");
      else
        lcd.print("WHT");
    2c60:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:887

      if (start == 0) {
    2c64:	86 e0       	ldi	r24, 0x06	; 6
    2c66:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    2c6a:	89 2b       	or	r24, r25
    2c6c:	09 f0       	breq	.+2      	; 0x2c70 <menu_sensor()+0x2ee>
    2c6e:	92 ce       	rjmp	.-732    	; 0x2994 <menu_sensor()+0x12>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:888
        TCNT1 = 0;
    2c70:	1d bc       	out	0x2d, r1	; 45
    2c72:	1c bc       	out	0x2c, r1	; 44
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:889
        cnt = 0;
    2c74:	1d bc       	out	0x2d, r1	; 45
    2c76:	1c bc       	out	0x2c, r1	; 44
    2c78:	8d ce       	rjmp	.-742    	; 0x2994 <menu_sensor()+0x12>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:822
      while (next_page == 0)
        ;
      delay(50);
      page++;
      if (page > last_page)
        page = 1;
    2c7a:	81 e0       	ldi	r24, 0x01	; 1
    2c7c:	a1 ce       	rjmp	.-702    	; 0x29c0 <menu_sensor()+0x3e>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:831
      while (previuse_page == 0)
        ;
      delay(50);
      page--;
      if (page < 1)
        page = last_page;
    2c7e:	86 e0       	ldi	r24, 0x06	; 6
    2c80:	b9 ce       	rjmp	.-654    	; 0x29f4 <menu_sensor()+0x72>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:836
      lcd.clear();
    }
    if (increase == 0)
      go(40, 40);
    else if (decrease == 0)
    2c82:	8b e0       	ldi	r24, 0x0B	; 11
    2c84:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    2c88:	89 2b       	or	r24, r25
    2c8a:	29 f4       	brne	.+10     	; 0x2c96 <menu_sensor()+0x314>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:837
      go(-40, -40);
    2c8c:	68 ed       	ldi	r22, 0xD8	; 216
    2c8e:	7f ef       	ldi	r23, 0xFF	; 255
    2c90:	88 ed       	ldi	r24, 0xD8	; 216
    2c92:	9f ef       	ldi	r25, 0xFF	; 255
    2c94:	bd ce       	rjmp	.-646    	; 0x2a10 <menu_sensor()+0x8e>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:839
    else
      go(0, 0);
    2c96:	70 e0       	ldi	r23, 0x00	; 0
    2c98:	60 e0       	ldi	r22, 0x00	; 0
    2c9a:	90 e0       	ldi	r25, 0x00	; 0
    2c9c:	80 e0       	ldi	r24, 0x00	; 0
    2c9e:	b8 ce       	rjmp	.-656    	; 0x2a10 <menu_sensor()+0x8e>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:862
      lcd.printf("%d%d%d", SR7, SR8, SR9);

      lcd.setCursor(4, 3);
      if (color_L == RED)
        lcd.print("RED ");
      else if (color_L == GREEN)
    2ca0:	81 e0       	ldi	r24, 0x01	; 1
    2ca2:	0e 94 a8 10 	call	0x2150	; 0x2150 <color(char)>
    2ca6:	81 30       	cpi	r24, 0x01	; 1
    2ca8:	19 f4       	brne	.+6      	; 0x2cb0 <menu_sensor()+0x32e>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:863
        lcd.print("GRN ");
    2caa:	8c e3       	ldi	r24, 0x3C	; 60
    2cac:	95 e0       	ldi	r25, 0x05	; 5
    2cae:	cb cf       	rjmp	.-106    	; 0x2c46 <menu_sensor()+0x2c4>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:864
      else if (color_L == BLUE)
    2cb0:	81 e0       	ldi	r24, 0x01	; 1
    2cb2:	0e 94 a8 10 	call	0x2150	; 0x2150 <color(char)>
    2cb6:	82 30       	cpi	r24, 0x02	; 2
    2cb8:	19 f4       	brne	.+6      	; 0x2cc0 <menu_sensor()+0x33e>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:865
        lcd.print("BLU ");
    2cba:	80 e2       	ldi	r24, 0x20	; 32
    2cbc:	95 e0       	ldi	r25, 0x05	; 5
    2cbe:	c3 cf       	rjmp	.-122    	; 0x2c46 <menu_sensor()+0x2c4>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:866
      else if (color_L == YELLOW)
    2cc0:	81 e0       	ldi	r24, 0x01	; 1
    2cc2:	0e 94 a8 10 	call	0x2150	; 0x2150 <color(char)>
    2cc6:	84 30       	cpi	r24, 0x04	; 4
    2cc8:	19 f4       	brne	.+6      	; 0x2cd0 <menu_sensor()+0x34e>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:867
        lcd.print("YEL ");
    2cca:	84 e3       	ldi	r24, 0x34	; 52
    2ccc:	96 e0       	ldi	r25, 0x06	; 6
    2cce:	bb cf       	rjmp	.-138    	; 0x2c46 <menu_sensor()+0x2c4>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:868
      else if (color_L == SILVER)
    2cd0:	81 e0       	ldi	r24, 0x01	; 1
    2cd2:	0e 94 a8 10 	call	0x2150	; 0x2150 <color(char)>
    2cd6:	85 30       	cpi	r24, 0x05	; 5
    2cd8:	19 f4       	brne	.+6      	; 0x2ce0 <menu_sensor()+0x35e>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:869
        lcd.print("SIL ");
    2cda:	84 e5       	ldi	r24, 0x54	; 84
    2cdc:	95 e0       	ldi	r25, 0x05	; 5
    2cde:	b3 cf       	rjmp	.-154    	; 0x2c46 <menu_sensor()+0x2c4>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:871
      else
        lcd.print("WHT ");
    2ce0:	89 e5       	ldi	r24, 0x59	; 89
    2ce2:	95 e0       	ldi	r25, 0x05	; 5
    2ce4:	b0 cf       	rjmp	.-160    	; 0x2c46 <menu_sensor()+0x2c4>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:876

      lcd.setCursor(9, 3);
      if (color_R == RED)
        lcd.print("RED");
      else if (color_R == GREEN)
    2ce6:	82 e0       	ldi	r24, 0x02	; 2
    2ce8:	0e 94 a8 10 	call	0x2150	; 0x2150 <color(char)>
    2cec:	81 30       	cpi	r24, 0x01	; 1
    2cee:	19 f4       	brne	.+6      	; 0x2cf6 <menu_sensor()+0x374>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:877
        lcd.print("GRN");
    2cf0:	8d e3       	ldi	r24, 0x3D	; 61
    2cf2:	96 e0       	ldi	r25, 0x06	; 6
    2cf4:	b5 cf       	rjmp	.-150    	; 0x2c60 <menu_sensor()+0x2de>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:878
      else if (color_R == BLUE)
    2cf6:	82 e0       	ldi	r24, 0x02	; 2
    2cf8:	0e 94 a8 10 	call	0x2150	; 0x2150 <color(char)>
    2cfc:	82 30       	cpi	r24, 0x02	; 2
    2cfe:	19 f4       	brne	.+6      	; 0x2d06 <menu_sensor()+0x384>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:879
        lcd.print("BLU");
    2d00:	81 e4       	ldi	r24, 0x41	; 65
    2d02:	96 e0       	ldi	r25, 0x06	; 6
    2d04:	ad cf       	rjmp	.-166    	; 0x2c60 <menu_sensor()+0x2de>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:880
      else if (color_R == YELLOW)
    2d06:	82 e0       	ldi	r24, 0x02	; 2
    2d08:	0e 94 a8 10 	call	0x2150	; 0x2150 <color(char)>
    2d0c:	84 30       	cpi	r24, 0x04	; 4
    2d0e:	19 f4       	brne	.+6      	; 0x2d16 <menu_sensor()+0x394>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:881
        lcd.print("YEL");
    2d10:	85 e4       	ldi	r24, 0x45	; 69
    2d12:	96 e0       	ldi	r25, 0x06	; 6
    2d14:	a5 cf       	rjmp	.-182    	; 0x2c60 <menu_sensor()+0x2de>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:882
      else if (VSR6 < 0.9)
    2d16:	41 e0       	ldi	r20, 0x01	; 1
    2d18:	61 e0       	ldi	r22, 0x01	; 1
    2d1a:	86 e0       	ldi	r24, 0x06	; 6
    2d1c:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    2d20:	bc 01       	movw	r22, r24
    2d22:	99 0f       	add	r25, r25
    2d24:	88 0b       	sbc	r24, r24
    2d26:	99 0b       	sbc	r25, r25
    2d28:	0e 94 ac 45 	call	0x8b58	; 0x8b58 <__floatsisf>
    2d2c:	26 e6       	ldi	r18, 0x66	; 102
    2d2e:	36 e6       	ldi	r19, 0x66	; 102
    2d30:	46 e6       	ldi	r20, 0x66	; 102
    2d32:	5f e3       	ldi	r21, 0x3F	; 63
    2d34:	0e 94 fd 44 	call	0x89fa	; 0x89fa <__cmpsf2>
    2d38:	87 ff       	sbrs	r24, 7
    2d3a:	03 c0       	rjmp	.+6      	; 0x2d42 <menu_sensor()+0x3c0>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:883
        lcd.print("SIL");
    2d3c:	89 e4       	ldi	r24, 0x49	; 73
    2d3e:	96 e0       	ldi	r25, 0x06	; 6
    2d40:	8f cf       	rjmp	.-226    	; 0x2c60 <menu_sensor()+0x2de>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:885
      else
        lcd.print("WHT");
    2d42:	8d e4       	ldi	r24, 0x4D	; 77
    2d44:	96 e0       	ldi	r25, 0x06	; 6
    2d46:	8c cf       	rjmp	.-232    	; 0x2c60 <menu_sensor()+0x2de>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:892
      if (start == 0) {
        TCNT1 = 0;
        cnt = 0;
        //puls_cnt = 0;
      }
    } else if (page == 2)  // V left
    2d48:	82 30       	cpi	r24, 0x02	; 2
    2d4a:	09 f0       	breq	.+2      	; 0x2d4e <menu_sensor()+0x3cc>
    2d4c:	92 c0       	rjmp	.+292    	; 0x2e72 <menu_sensor()+0x4f0>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:894
    {
      lcd.setCursor(0, 0);
    2d4e:	60 e0       	ldi	r22, 0x00	; 0
    2d50:	80 e0       	ldi	r24, 0x00	; 0
    2d52:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:895
      lcd.printf("L10=%02d        %02d", VSL10, VSM);
    2d56:	41 e0       	ldi	r20, 0x01	; 1
    2d58:	60 e0       	ldi	r22, 0x00	; 0
    2d5a:	80 e0       	ldi	r24, 0x00	; 0
    2d5c:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    2d60:	18 2f       	mov	r17, r24
    2d62:	09 2f       	mov	r16, r25
    2d64:	41 e0       	ldi	r20, 0x01	; 1
    2d66:	62 e0       	ldi	r22, 0x02	; 2
    2d68:	82 e0       	ldi	r24, 0x02	; 2
    2d6a:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    2d6e:	0f 93       	push	r16
    2d70:	1f 93       	push	r17
    2d72:	9f 93       	push	r25
    2d74:	8f 93       	push	r24
    2d76:	81 e5       	ldi	r24, 0x51	; 81
    2d78:	96 e0       	ldi	r25, 0x06	; 6
    2d7a:	9f 93       	push	r25
    2d7c:	8f 93       	push	r24
    2d7e:	df 93       	push	r29
    2d80:	cf 93       	push	r28
    2d82:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:897

      lcd.setCursor(5, 1);
    2d86:	61 e0       	ldi	r22, 0x01	; 1
    2d88:	85 e0       	ldi	r24, 0x05	; 5
    2d8a:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:898
      lcd.printf("%02d  %02d  %02d", VSL3, VSL2, VSL1);
    2d8e:	41 e0       	ldi	r20, 0x01	; 1
    2d90:	60 e0       	ldi	r22, 0x00	; 0
    2d92:	81 e0       	ldi	r24, 0x01	; 1
    2d94:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    2d98:	b8 2e       	mov	r11, r24
    2d9a:	a9 2e       	mov	r10, r25
    2d9c:	41 e0       	ldi	r20, 0x01	; 1
    2d9e:	60 e0       	ldi	r22, 0x00	; 0
    2da0:	82 e0       	ldi	r24, 0x02	; 2
    2da2:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    2da6:	18 2f       	mov	r17, r24
    2da8:	09 2f       	mov	r16, r25
    2daa:	41 e0       	ldi	r20, 0x01	; 1
    2dac:	60 e0       	ldi	r22, 0x00	; 0
    2dae:	83 e0       	ldi	r24, 0x03	; 3
    2db0:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    2db4:	af 92       	push	r10
    2db6:	bf 92       	push	r11
    2db8:	0f 93       	push	r16
    2dba:	1f 93       	push	r17
    2dbc:	9f 93       	push	r25
    2dbe:	8f 93       	push	r24
    2dc0:	86 e6       	ldi	r24, 0x66	; 102
    2dc2:	96 e0       	ldi	r25, 0x06	; 6
    2dc4:	9f 93       	push	r25
    2dc6:	8f 93       	push	r24
    2dc8:	df 93       	push	r29
    2dca:	cf 93       	push	r28
    2dcc:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:900

      lcd.setCursor(2, 2);
    2dd0:	62 e0       	ldi	r22, 0x02	; 2
    2dd2:	82 e0       	ldi	r24, 0x02	; 2
    2dd4:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:901
      lcd.printf("%02d  %02d  %02d ", VSL6, VSL5, VSL4);
    2dd8:	41 e0       	ldi	r20, 0x01	; 1
    2dda:	60 e0       	ldi	r22, 0x00	; 0
    2ddc:	84 e0       	ldi	r24, 0x04	; 4
    2dde:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    2de2:	b8 2e       	mov	r11, r24
    2de4:	a9 2e       	mov	r10, r25
    2de6:	41 e0       	ldi	r20, 0x01	; 1
    2de8:	60 e0       	ldi	r22, 0x00	; 0
    2dea:	85 e0       	ldi	r24, 0x05	; 5
    2dec:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    2df0:	18 2f       	mov	r17, r24
    2df2:	09 2f       	mov	r16, r25
    2df4:	41 e0       	ldi	r20, 0x01	; 1
    2df6:	60 e0       	ldi	r22, 0x00	; 0
    2df8:	86 e0       	ldi	r24, 0x06	; 6
    2dfa:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    2dfe:	af 92       	push	r10
    2e00:	bf 92       	push	r11
    2e02:	0f 93       	push	r16
    2e04:	1f 93       	push	r17
    2e06:	9f 93       	push	r25
    2e08:	8f 93       	push	r24
    2e0a:	07 e7       	ldi	r16, 0x77	; 119
    2e0c:	16 e0       	ldi	r17, 0x06	; 6
    2e0e:	1f 93       	push	r17
    2e10:	0f 93       	push	r16
    2e12:	df 93       	push	r29
    2e14:	cf 93       	push	r28
    2e16:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:903

      lcd.setCursor(0, 3);
    2e1a:	63 e0       	ldi	r22, 0x03	; 3
    2e1c:	80 e0       	ldi	r24, 0x00	; 0
    2e1e:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:904
      lcd.printf("%02d  %02d  %02d ", VSL9, VSL8, VSL7);
    2e22:	41 e0       	ldi	r20, 0x01	; 1
    2e24:	60 e0       	ldi	r22, 0x00	; 0
    2e26:	87 e0       	ldi	r24, 0x07	; 7
    2e28:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    2e2c:	98 2e       	mov	r9, r24
    2e2e:	89 2e       	mov	r8, r25
    2e30:	41 e0       	ldi	r20, 0x01	; 1
    2e32:	62 e0       	ldi	r22, 0x02	; 2
    2e34:	80 e0       	ldi	r24, 0x00	; 0
    2e36:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    2e3a:	b8 2e       	mov	r11, r24
    2e3c:	a9 2e       	mov	r10, r25
    2e3e:	41 e0       	ldi	r20, 0x01	; 1
    2e40:	62 e0       	ldi	r22, 0x02	; 2
    2e42:	81 e0       	ldi	r24, 0x01	; 1
    2e44:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    2e48:	8f 92       	push	r8
    2e4a:	9f 92       	push	r9
    2e4c:	af 92       	push	r10
    2e4e:	bf 92       	push	r11
    2e50:	9f 93       	push	r25
    2e52:	8f 93       	push	r24
    2e54:	1f 93       	push	r17
    2e56:	0f 93       	push	r16
    2e58:	df 93       	push	r29
    2e5a:	cf 93       	push	r28
    2e5c:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
    2e60:	ed b7       	in	r30, 0x3d	; 61
    2e62:	fe b7       	in	r31, 0x3e	; 62
    2e64:	b6 96       	adiw	r30, 0x26	; 38
    2e66:	0f b6       	in	r0, 0x3f	; 63
    2e68:	f8 94       	cli
    2e6a:	fe bf       	out	0x3e, r31	; 62
    2e6c:	0f be       	out	0x3f, r0	; 63
    2e6e:	ed bf       	out	0x3d, r30	; 61
    2e70:	91 cd       	rjmp	.-1246   	; 0x2994 <menu_sensor()+0x12>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:905
    } else if (page == 3)  // V right
    2e72:	83 30       	cpi	r24, 0x03	; 3
    2e74:	09 f0       	breq	.+2      	; 0x2e78 <menu_sensor()+0x4f6>
    2e76:	91 c0       	rjmp	.+290    	; 0x2f9a <menu_sensor()+0x618>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:907
    {
      lcd.setCursor(0, 0);
    2e78:	60 e0       	ldi	r22, 0x00	; 0
    2e7a:	80 e0       	ldi	r24, 0x00	; 0
    2e7c:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:908
      lcd.printf("%02d        R10=%02d", VSM, VSR10);
    2e80:	41 e0       	ldi	r20, 0x01	; 1
    2e82:	63 e0       	ldi	r22, 0x03	; 3
    2e84:	82 e0       	ldi	r24, 0x02	; 2
    2e86:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    2e8a:	18 2f       	mov	r17, r24
    2e8c:	09 2f       	mov	r16, r25
    2e8e:	41 e0       	ldi	r20, 0x01	; 1
    2e90:	60 e0       	ldi	r22, 0x00	; 0
    2e92:	80 e0       	ldi	r24, 0x00	; 0
    2e94:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    2e98:	0f 93       	push	r16
    2e9a:	1f 93       	push	r17
    2e9c:	9f 93       	push	r25
    2e9e:	8f 93       	push	r24
    2ea0:	29 e8       	ldi	r18, 0x89	; 137
    2ea2:	36 e0       	ldi	r19, 0x06	; 6
    2ea4:	3f 93       	push	r19
    2ea6:	2f 93       	push	r18
    2ea8:	df 93       	push	r29
    2eaa:	cf 93       	push	r28
    2eac:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:910

      lcd.setCursor(2, 1);
    2eb0:	61 e0       	ldi	r22, 0x01	; 1
    2eb2:	82 e0       	ldi	r24, 0x02	; 2
    2eb4:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:911
      lcd.printf("%02d  %02d  %02d ", VSR1, VSR2, VSR3);
    2eb8:	41 e0       	ldi	r20, 0x01	; 1
    2eba:	61 e0       	ldi	r22, 0x01	; 1
    2ebc:	83 e0       	ldi	r24, 0x03	; 3
    2ebe:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    2ec2:	b8 2e       	mov	r11, r24
    2ec4:	a9 2e       	mov	r10, r25
    2ec6:	41 e0       	ldi	r20, 0x01	; 1
    2ec8:	61 e0       	ldi	r22, 0x01	; 1
    2eca:	82 e0       	ldi	r24, 0x02	; 2
    2ecc:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    2ed0:	18 2f       	mov	r17, r24
    2ed2:	09 2f       	mov	r16, r25
    2ed4:	41 e0       	ldi	r20, 0x01	; 1
    2ed6:	61 e0       	ldi	r22, 0x01	; 1
    2ed8:	81 e0       	ldi	r24, 0x01	; 1
    2eda:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    2ede:	af 92       	push	r10
    2ee0:	bf 92       	push	r11
    2ee2:	0f 93       	push	r16
    2ee4:	1f 93       	push	r17
    2ee6:	9f 93       	push	r25
    2ee8:	8f 93       	push	r24
    2eea:	07 e7       	ldi	r16, 0x77	; 119
    2eec:	16 e0       	ldi	r17, 0x06	; 6
    2eee:	1f 93       	push	r17
    2ef0:	0f 93       	push	r16
    2ef2:	df 93       	push	r29
    2ef4:	cf 93       	push	r28
    2ef6:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:913

      lcd.setCursor(4, 2);
    2efa:	62 e0       	ldi	r22, 0x02	; 2
    2efc:	84 e0       	ldi	r24, 0x04	; 4
    2efe:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:914
      lcd.printf("%02d  %02d  %02d ", VSR4, VSR5, VSR6);
    2f02:	41 e0       	ldi	r20, 0x01	; 1
    2f04:	61 e0       	ldi	r22, 0x01	; 1
    2f06:	86 e0       	ldi	r24, 0x06	; 6
    2f08:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    2f0c:	98 2e       	mov	r9, r24
    2f0e:	89 2e       	mov	r8, r25
    2f10:	41 e0       	ldi	r20, 0x01	; 1
    2f12:	61 e0       	ldi	r22, 0x01	; 1
    2f14:	85 e0       	ldi	r24, 0x05	; 5
    2f16:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    2f1a:	b8 2e       	mov	r11, r24
    2f1c:	a9 2e       	mov	r10, r25
    2f1e:	41 e0       	ldi	r20, 0x01	; 1
    2f20:	61 e0       	ldi	r22, 0x01	; 1
    2f22:	84 e0       	ldi	r24, 0x04	; 4
    2f24:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    2f28:	8f 92       	push	r8
    2f2a:	9f 92       	push	r9
    2f2c:	af 92       	push	r10
    2f2e:	bf 92       	push	r11
    2f30:	9f 93       	push	r25
    2f32:	8f 93       	push	r24
    2f34:	1f 93       	push	r17
    2f36:	0f 93       	push	r16
    2f38:	df 93       	push	r29
    2f3a:	cf 93       	push	r28
    2f3c:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:916

      lcd.setCursor(6, 3);
    2f40:	63 e0       	ldi	r22, 0x03	; 3
    2f42:	86 e0       	ldi	r24, 0x06	; 6
    2f44:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:917
      lcd.printf("%02d  %02d  %02d ", VSR7, VSR8, VSR9);
    2f48:	41 e0       	ldi	r20, 0x01	; 1
    2f4a:	63 e0       	ldi	r22, 0x03	; 3
    2f4c:	81 e0       	ldi	r24, 0x01	; 1
    2f4e:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    2f52:	98 2e       	mov	r9, r24
    2f54:	89 2e       	mov	r8, r25
    2f56:	41 e0       	ldi	r20, 0x01	; 1
    2f58:	63 e0       	ldi	r22, 0x03	; 3
    2f5a:	80 e0       	ldi	r24, 0x00	; 0
    2f5c:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    2f60:	b8 2e       	mov	r11, r24
    2f62:	a9 2e       	mov	r10, r25
    2f64:	41 e0       	ldi	r20, 0x01	; 1
    2f66:	61 e0       	ldi	r22, 0x01	; 1
    2f68:	87 e0       	ldi	r24, 0x07	; 7
    2f6a:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    2f6e:	8f 92       	push	r8
    2f70:	9f 92       	push	r9
    2f72:	af 92       	push	r10
    2f74:	bf 92       	push	r11
    2f76:	9f 93       	push	r25
    2f78:	8f 93       	push	r24
    2f7a:	1f 93       	push	r17
    2f7c:	0f 93       	push	r16
    2f7e:	df 93       	push	r29
    2f80:	cf 93       	push	r28
    2f82:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
    2f86:	2d b7       	in	r18, 0x3d	; 61
    2f88:	3e b7       	in	r19, 0x3e	; 62
    2f8a:	2a 5d       	subi	r18, 0xDA	; 218
    2f8c:	3f 4f       	sbci	r19, 0xFF	; 255
    2f8e:	0f b6       	in	r0, 0x3f	; 63
    2f90:	f8 94       	cli
    2f92:	3e bf       	out	0x3e, r19	; 62
    2f94:	0f be       	out	0x3f, r0	; 63
    2f96:	2d bf       	out	0x3d, r18	; 61
    2f98:	fd cc       	rjmp	.-1542   	; 0x2994 <menu_sensor()+0x12>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:918
    } else if (page == 4)  // switches
    2f9a:	84 30       	cpi	r24, 0x04	; 4
    2f9c:	09 f0       	breq	.+2      	; 0x2fa0 <menu_sensor()+0x61e>
    2f9e:	7e c0       	rjmp	.+252    	; 0x309c <menu_sensor()+0x71a>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:920
    {
      lcd.setCursor(0, 0);
    2fa0:	60 e0       	ldi	r22, 0x00	; 0
    2fa2:	80 e0       	ldi	r24, 0x00	; 0
    2fa4:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:921
      lcd.printf("SL=%d con=%d SR=%d", SFL, con, SFR);
    2fa8:	40 e0       	ldi	r20, 0x00	; 0
    2faa:	63 e0       	ldi	r22, 0x03	; 3
    2fac:	84 e0       	ldi	r24, 0x04	; 4
    2fae:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    2fb2:	b8 2e       	mov	r11, r24
    2fb4:	a9 2e       	mov	r10, r25
    2fb6:	40 e0       	ldi	r20, 0x00	; 0
    2fb8:	63 e0       	ldi	r22, 0x03	; 3
    2fba:	83 e0       	ldi	r24, 0x03	; 3
    2fbc:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    2fc0:	18 2f       	mov	r17, r24
    2fc2:	09 2f       	mov	r16, r25
    2fc4:	40 e0       	ldi	r20, 0x00	; 0
    2fc6:	62 e0       	ldi	r22, 0x02	; 2
    2fc8:	84 e0       	ldi	r24, 0x04	; 4
    2fca:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    2fce:	af 92       	push	r10
    2fd0:	bf 92       	push	r11
    2fd2:	0f 93       	push	r16
    2fd4:	1f 93       	push	r17
    2fd6:	9f 93       	push	r25
    2fd8:	8f 93       	push	r24
    2fda:	8e e9       	ldi	r24, 0x9E	; 158
    2fdc:	96 e0       	ldi	r25, 0x06	; 6
    2fde:	9f 93       	push	r25
    2fe0:	8f 93       	push	r24
    2fe2:	df 93       	push	r29
    2fe4:	cf 93       	push	r28
    2fe6:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:923

      lcd.setCursor(0, 1);
    2fea:	61 e0       	ldi	r22, 0x01	; 1
    2fec:	80 e0       	ldi	r24, 0x00	; 0
    2fee:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:924
      lcd.printf("obs = %d = %02d ", obs, Vobs);
    2ff2:	41 e0       	ldi	r20, 0x01	; 1
    2ff4:	62 e0       	ldi	r22, 0x02	; 2
    2ff6:	86 e0       	ldi	r24, 0x06	; 6
    2ff8:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    2ffc:	18 2f       	mov	r17, r24
    2ffe:	09 2f       	mov	r16, r25
    3000:	40 e0       	ldi	r20, 0x00	; 0
    3002:	62 e0       	ldi	r22, 0x02	; 2
    3004:	86 e0       	ldi	r24, 0x06	; 6
    3006:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    300a:	0f 93       	push	r16
    300c:	1f 93       	push	r17
    300e:	9f 93       	push	r25
    3010:	8f 93       	push	r24
    3012:	81 eb       	ldi	r24, 0xB1	; 177
    3014:	96 e0       	ldi	r25, 0x06	; 6
    3016:	9f 93       	push	r25
    3018:	8f 93       	push	r24
    301a:	df 93       	push	r29
    301c:	cf 93       	push	r28
    301e:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:926

      lcd.setCursor(0, 2);
    3022:	62 e0       	ldi	r22, 0x02	; 2
    3024:	80 e0       	ldi	r24, 0x00	; 0
    3026:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:927
      lcd.printf("ball=%d = %02d ", ball, Vball);
    302a:	41 e0       	ldi	r20, 0x01	; 1
    302c:	62 e0       	ldi	r22, 0x02	; 2
    302e:	85 e0       	ldi	r24, 0x05	; 5
    3030:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    3034:	18 2f       	mov	r17, r24
    3036:	09 2f       	mov	r16, r25
    3038:	40 e0       	ldi	r20, 0x00	; 0
    303a:	62 e0       	ldi	r22, 0x02	; 2
    303c:	85 e0       	ldi	r24, 0x05	; 5
    303e:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    3042:	0f 93       	push	r16
    3044:	1f 93       	push	r17
    3046:	9f 93       	push	r25
    3048:	8f 93       	push	r24
    304a:	82 ec       	ldi	r24, 0xC2	; 194
    304c:	96 e0       	ldi	r25, 0x06	; 6
    304e:	9f 93       	push	r25
    3050:	8f 93       	push	r24
    3052:	df 93       	push	r29
    3054:	cf 93       	push	r28
    3056:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:929

      lcd.setCursor(0, 3);
    305a:	63 e0       	ldi	r22, 0x03	; 3
    305c:	80 e0       	ldi	r24, 0x00	; 0
    305e:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:930
      lcd.printf("SBL=%d  SBR=%d  ", SBL, SBR);
    3062:	86 e2       	ldi	r24, 0x26	; 38
    3064:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    3068:	18 2f       	mov	r17, r24
    306a:	09 2f       	mov	r16, r25
    306c:	85 e2       	ldi	r24, 0x25	; 37
    306e:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    3072:	0f 93       	push	r16
    3074:	1f 93       	push	r17
    3076:	9f 93       	push	r25
    3078:	8f 93       	push	r24
    307a:	82 ed       	ldi	r24, 0xD2	; 210
    307c:	96 e0       	ldi	r25, 0x06	; 6
    307e:	9f 93       	push	r25
    3080:	8f 93       	push	r24
    3082:	df 93       	push	r29
    3084:	cf 93       	push	r28
    3086:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
    308a:	8d b7       	in	r24, 0x3d	; 61
    308c:	9e b7       	in	r25, 0x3e	; 62
    308e:	82 96       	adiw	r24, 0x22	; 34
    3090:	0f b6       	in	r0, 0x3f	; 63
    3092:	f8 94       	cli
    3094:	9e bf       	out	0x3e, r25	; 62
    3096:	0f be       	out	0x3f, r0	; 63
    3098:	8d bf       	out	0x3d, r24	; 61
    309a:	7c cc       	rjmp	.-1800   	; 0x2994 <menu_sensor()+0x12>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:931
    } else if (page == 5)  // distance
    309c:	85 30       	cpi	r24, 0x05	; 5
    309e:	09 f0       	breq	.+2      	; 0x30a2 <menu_sensor()+0x720>
    30a0:	8e c0       	rjmp	.+284    	; 0x31be <menu_sensor()+0x83c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:933
    {
      lcd.setCursor(0, 0);
    30a2:	60 e0       	ldi	r22, 0x00	; 0
    30a4:	80 e0       	ldi	r24, 0x00	; 0
    30a6:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
ultrasonic():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2150
    inter_detected = false;
    deadend_detected = false;
  }
}
int ultrasonic(){
    pinMode(pingPin, OUTPUT);
    30aa:	61 e0       	ldi	r22, 0x01	; 1
    30ac:	89 e1       	ldi	r24, 0x19	; 25
    30ae:	0e 94 3a 02 	call	0x474	; 0x474 <pinMode>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2151
    digitalWrite(pingPin, LOW);
    30b2:	60 e0       	ldi	r22, 0x00	; 0
    30b4:	89 e1       	ldi	r24, 0x19	; 25
    30b6:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2152
    delayMicroseconds(2);
    30ba:	82 e0       	ldi	r24, 0x02	; 2
    30bc:	90 e0       	ldi	r25, 0x00	; 0
    30be:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <delayMicroseconds>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2153
    digitalWrite(pingPin, HIGH);
    30c2:	61 e0       	ldi	r22, 0x01	; 1
    30c4:	89 e1       	ldi	r24, 0x19	; 25
    30c6:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2154
    delayMicroseconds(10);
    30ca:	8a e0       	ldi	r24, 0x0A	; 10
    30cc:	90 e0       	ldi	r25, 0x00	; 0
    30ce:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <delayMicroseconds>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2155
    digitalWrite(pingPin, LOW);
    30d2:	60 e0       	ldi	r22, 0x00	; 0
    30d4:	89 e1       	ldi	r24, 0x19	; 25
    30d6:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2156
    pinMode(echoPin, INPUT);
    30da:	60 e0       	ldi	r22, 0x00	; 0
    30dc:	80 e1       	ldi	r24, 0x10	; 16
    30de:	0e 94 3a 02 	call	0x474	; 0x474 <pinMode>
pulseIn():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.c:38
unsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout)
{
  // cache the port and bit of the pin in order to speed up the
  // pulse width measuring loop and achieve finer resolution.  calling
  // digitalRead() instead yields much coarser resolution.
  uint8_t bit = digitalPinToBitMask(pin);
    30e2:	e1 e0       	ldi	r30, 0x01	; 1
    30e4:	f1 e0       	ldi	r31, 0x01	; 1
    30e6:	64 91       	lpm	r22, Z
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.c:39
  uint8_t port = digitalPinToPort(pin);
    30e8:	ec ec       	ldi	r30, 0xCC	; 204
    30ea:	f0 e0       	ldi	r31, 0x00	; 0
    30ec:	84 91       	lpm	r24, Z
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.c:46

  // convert the timeout from microseconds to a number of times through
  // the initial loop; it takes approximately 16 clock cycles per iteration
  unsigned long maxloops = microsecondsToClockCycles(timeout)/16;

  unsigned long width = countPulseASM(portInputRegister(port), bit, stateMask, maxloops);
    30ee:	e8 2f       	mov	r30, r24
    30f0:	f0 e0       	ldi	r31, 0x00	; 0
    30f2:	ee 0f       	add	r30, r30
    30f4:	ff 1f       	adc	r31, r31
    30f6:	e4 55       	subi	r30, 0x54	; 84
    30f8:	ff 4f       	sbci	r31, 0xFF	; 255
    30fa:	85 91       	lpm	r24, Z+
    30fc:	94 91       	lpm	r25, Z
    30fe:	00 e4       	ldi	r16, 0x40	; 64
    3100:	12 e4       	ldi	r17, 0x42	; 66
    3102:	2f e0       	ldi	r18, 0x0F	; 15
    3104:	30 e0       	ldi	r19, 0x00	; 0
    3106:	46 2f       	mov	r20, r22
    3108:	0e 94 47 1b 	call	0x368e	; 0x368e <countPulseASM>
    310c:	9b 01       	movw	r18, r22
    310e:	ac 01       	movw	r20, r24
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.c:49

  // prevent clockCyclesToMicroseconds to return bogus values if countPulseASM timed out
  if (width)
    3110:	21 15       	cp	r18, r1
    3112:	31 05       	cpc	r19, r1
    3114:	41 05       	cpc	r20, r1
    3116:	51 05       	cpc	r21, r1
    3118:	29 f0       	breq	.+10     	; 0x3124 <menu_sensor()+0x7a2>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.c:50
    return clockCyclesToMicroseconds(width * 16 + 16);
    311a:	2f 5f       	subi	r18, 0xFF	; 255
    311c:	3f 4f       	sbci	r19, 0xFF	; 255
    311e:	4f 4f       	sbci	r20, 0xFF	; 255
    3120:	5f 4f       	sbci	r21, 0xFF	; 255
    3122:	5f 70       	andi	r21, 0x0F	; 15
microsecondsToMillimeters():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:810
      }
    }
  }
}
long microsecondsToMillimeters(long microseconds) {
  return microseconds * 10 / 29 / 2;
    3124:	aa e0       	ldi	r26, 0x0A	; 10
    3126:	b0 e0       	ldi	r27, 0x00	; 0
    3128:	0e 94 19 47 	call	0x8e32	; 0x8e32 <__muluhisi3>
    312c:	a7 01       	movw	r20, r14
    312e:	96 01       	movw	r18, r12
    3130:	0e 94 f1 46 	call	0x8de2	; 0x8de2 <__divmodsi4>
menu_sensor():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:934
      lcd.setCursor(0, 3);
      lcd.printf("SBL=%d  SBR=%d  ", SBL, SBR);
    } else if (page == 5)  // distance
    {
      lcd.setCursor(0, 0);
      lcd.printf("Front: %d", Front_distance);
    3134:	3f 93       	push	r19
    3136:	2f 93       	push	r18
    3138:	23 ee       	ldi	r18, 0xE3	; 227
    313a:	36 e0       	ldi	r19, 0x06	; 6
    313c:	3f 93       	push	r19
    313e:	2f 93       	push	r18
    3140:	df 93       	push	r29
    3142:	cf 93       	push	r28
    3144:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:935
      lcd.setCursor(0, 1);
    3148:	61 e0       	ldi	r22, 0x01	; 1
    314a:	80 e0       	ldi	r24, 0x00	; 0
    314c:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:936
      lcd.printf("     VL_F=%d  ", VL_Front);
    3150:	83 e0       	ldi	r24, 0x03	; 3
    3152:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    3156:	9f 93       	push	r25
    3158:	8f 93       	push	r24
    315a:	2d ee       	ldi	r18, 0xED	; 237
    315c:	36 e0       	ldi	r19, 0x06	; 6
    315e:	3f 93       	push	r19
    3160:	2f 93       	push	r18
    3162:	df 93       	push	r29
    3164:	cf 93       	push	r28
    3166:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:937
      lcd.setCursor(0, 2);
    316a:	62 e0       	ldi	r22, 0x02	; 2
    316c:	80 e0       	ldi	r24, 0x00	; 0
    316e:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:938
      lcd.printf("VL_L=%d VL_R=%d ", VL_Left, VL_Right);
    3172:	81 e0       	ldi	r24, 0x01	; 1
    3174:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    3178:	18 2f       	mov	r17, r24
    317a:	09 2f       	mov	r16, r25
    317c:	82 e0       	ldi	r24, 0x02	; 2
    317e:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    3182:	0f 93       	push	r16
    3184:	1f 93       	push	r17
    3186:	9f 93       	push	r25
    3188:	8f 93       	push	r24
    318a:	2c ef       	ldi	r18, 0xFC	; 252
    318c:	36 e0       	ldi	r19, 0x06	; 6
    318e:	3f 93       	push	r19
    3190:	2f 93       	push	r18
    3192:	df 93       	push	r29
    3194:	cf 93       	push	r28
    3196:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:939
      delay(200);
    319a:	68 ec       	ldi	r22, 0xC8	; 200
    319c:	70 e0       	ldi	r23, 0x00	; 0
    319e:	80 e0       	ldi	r24, 0x00	; 0
    31a0:	90 e0       	ldi	r25, 0x00	; 0
    31a2:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:940
      lcd.clear();
    31a6:	0e 94 c4 05 	call	0xb88	; 0xb88 <LiquidCrystal::clear() [clone .constprop.32]>
    31aa:	2d b7       	in	r18, 0x3d	; 61
    31ac:	3e b7       	in	r19, 0x3e	; 62
    31ae:	2c 5e       	subi	r18, 0xEC	; 236
    31b0:	3f 4f       	sbci	r19, 0xFF	; 255
    31b2:	0f b6       	in	r0, 0x3f	; 63
    31b4:	f8 94       	cli
    31b6:	3e bf       	out	0x3e, r19	; 62
    31b8:	0f be       	out	0x3f, r0	; 63
    31ba:	2d bf       	out	0x3d, r18	; 61
    31bc:	eb cb       	rjmp	.-2090   	; 0x2994 <menu_sensor()+0x12>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:941
    }else if (page == 6)  // compass
    31be:	86 30       	cpi	r24, 0x06	; 6
    31c0:	09 f0       	breq	.+2      	; 0x31c4 <menu_sensor()+0x842>
    31c2:	e8 cb       	rjmp	.-2096   	; 0x2994 <menu_sensor()+0x12>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:943
    {
      lcd.setCursor(0, 0);
    31c4:	60 e0       	ldi	r22, 0x00	; 0
    31c6:	80 e0       	ldi	r24, 0x00	; 0
    31c8:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:944
      lcd.printf("deg: %d pi: %d ro: %d",deg,pitch,role);
    31cc:	83 e0       	ldi	r24, 0x03	; 3
    31ce:	90 e0       	ldi	r25, 0x00	; 0
    31d0:	0e 94 91 1b 	call	0x3722	; 0x3722 <cmps(int)>
    31d4:	b8 2e       	mov	r11, r24
    31d6:	a9 2e       	mov	r10, r25
    31d8:	82 e0       	ldi	r24, 0x02	; 2
    31da:	90 e0       	ldi	r25, 0x00	; 0
    31dc:	0e 94 91 1b 	call	0x3722	; 0x3722 <cmps(int)>
    31e0:	18 2f       	mov	r17, r24
    31e2:	09 2f       	mov	r16, r25
    31e4:	81 e0       	ldi	r24, 0x01	; 1
    31e6:	90 e0       	ldi	r25, 0x00	; 0
    31e8:	0e 94 91 1b 	call	0x3722	; 0x3722 <cmps(int)>
    31ec:	af 92       	push	r10
    31ee:	bf 92       	push	r11
    31f0:	0f 93       	push	r16
    31f2:	1f 93       	push	r17
    31f4:	9f 93       	push	r25
    31f6:	8f 93       	push	r24
    31f8:	8d e0       	ldi	r24, 0x0D	; 13
    31fa:	97 e0       	ldi	r25, 0x07	; 7
    31fc:	9f 93       	push	r25
    31fe:	8f 93       	push	r24
    3200:	df 93       	push	r29
    3202:	cf 93       	push	r28
    3204:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
    3208:	8d b7       	in	r24, 0x3d	; 61
    320a:	9e b7       	in	r25, 0x3e	; 62
    320c:	0a 96       	adiw	r24, 0x0a	; 10
    320e:	0f b6       	in	r0, 0x3f	; 63
    3210:	f8 94       	cli
    3212:	9e bf       	out	0x3e, r25	; 62
    3214:	0f be       	out	0x3f, r0	; 63
    3216:	8d bf       	out	0x3d, r24	; 61
    3218:	bd cb       	rjmp	.-2182   	; 0x2994 <menu_sensor()+0x12>

0000321a <__vector_16>:
__vector_16():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:159
#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)
ISR(TIM0_OVF_vect)
#else
ISR(TIMER0_OVF_vect)
#endif
{
    321a:	1f 92       	push	r1
    321c:	0f 92       	push	r0
    321e:	0f b6       	in	r0, 0x3f	; 63
    3220:	0f 92       	push	r0
    3222:	11 24       	eor	r1, r1
    3224:	2f 93       	push	r18
    3226:	3f 93       	push	r19
    3228:	8f 93       	push	r24
    322a:	9f 93       	push	r25
    322c:	af 93       	push	r26
    322e:	bf 93       	push	r27
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:167
  static unsigned char timer0_exact = 0;
#endif

  // copy these to local variables so they can be stored in registers
  // (volatile variables must be read from memory on every access, so this saves time)
  unsigned long m = timer0_millis;
    3230:	80 91 a4 09 	lds	r24, 0x09A4	; 0x8009a4 <timer0_millis>
    3234:	90 91 a5 09 	lds	r25, 0x09A5	; 0x8009a5 <timer0_millis+0x1>
    3238:	a0 91 a6 09 	lds	r26, 0x09A6	; 0x8009a6 <timer0_millis+0x2>
    323c:	b0 91 a7 09 	lds	r27, 0x09A7	; 0x8009a7 <timer0_millis+0x3>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:168
  unsigned char f = timer0_fract;
    3240:	30 91 a3 09 	lds	r19, 0x09A3	; 0x8009a3 <timer0_fract>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:170

  f += FRACT_INC FRACT_INC_PLUS;
    3244:	23 e0       	ldi	r18, 0x03	; 3
    3246:	23 0f       	add	r18, r19
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:200
    ++f;
  }
#endif
#endif // CORRECT_EXACT_MILLIS

  if (f >= FRACT_MAX) {
    3248:	2d 37       	cpi	r18, 0x7D	; 125
    324a:	68 f1       	brcs	.+90     	; 0x32a6 <__vector_16+0x8c>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:201
    f -= FRACT_MAX;
    324c:	26 e8       	ldi	r18, 0x86	; 134
    324e:	23 0f       	add	r18, r19
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:202
    m += MILLIS_INC + 1;
    3250:	02 96       	adiw	r24, 0x02	; 2
    3252:	a1 1d       	adc	r26, r1
    3254:	b1 1d       	adc	r27, r1
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:208
  }
  else {
    m += MILLIS_INC;
  }

  timer0_fract = f;
    3256:	20 93 a3 09 	sts	0x09A3, r18	; 0x8009a3 <timer0_fract>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:209
  timer0_millis = m;
    325a:	80 93 a4 09 	sts	0x09A4, r24	; 0x8009a4 <timer0_millis>
    325e:	90 93 a5 09 	sts	0x09A5, r25	; 0x8009a5 <timer0_millis+0x1>
    3262:	a0 93 a6 09 	sts	0x09A6, r26	; 0x8009a6 <timer0_millis+0x2>
    3266:	b0 93 a7 09 	sts	0x09A7, r27	; 0x8009a7 <timer0_millis+0x3>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:211
#ifndef CORRECT_EXACT_MICROS
  timer0_overflow_count++;
    326a:	80 91 a8 09 	lds	r24, 0x09A8	; 0x8009a8 <timer0_overflow_count>
    326e:	90 91 a9 09 	lds	r25, 0x09A9	; 0x8009a9 <timer0_overflow_count+0x1>
    3272:	a0 91 aa 09 	lds	r26, 0x09AA	; 0x8009aa <timer0_overflow_count+0x2>
    3276:	b0 91 ab 09 	lds	r27, 0x09AB	; 0x8009ab <timer0_overflow_count+0x3>
    327a:	01 96       	adiw	r24, 0x01	; 1
    327c:	a1 1d       	adc	r26, r1
    327e:	b1 1d       	adc	r27, r1
    3280:	80 93 a8 09 	sts	0x09A8, r24	; 0x8009a8 <timer0_overflow_count>
    3284:	90 93 a9 09 	sts	0x09A9, r25	; 0x8009a9 <timer0_overflow_count+0x1>
    3288:	a0 93 aa 09 	sts	0x09AA, r26	; 0x8009aa <timer0_overflow_count+0x2>
    328c:	b0 93 ab 09 	sts	0x09AB, r27	; 0x8009ab <timer0_overflow_count+0x3>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:213
#endif
}
    3290:	bf 91       	pop	r27
    3292:	af 91       	pop	r26
    3294:	9f 91       	pop	r25
    3296:	8f 91       	pop	r24
    3298:	3f 91       	pop	r19
    329a:	2f 91       	pop	r18
    329c:	0f 90       	pop	r0
    329e:	0f be       	out	0x3f, r0	; 63
    32a0:	0f 90       	pop	r0
    32a2:	1f 90       	pop	r1
    32a4:	18 95       	reti
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:205
  if (f >= FRACT_MAX) {
    f -= FRACT_MAX;
    m += MILLIS_INC + 1;
  }
  else {
    m += MILLIS_INC;
    32a6:	01 96       	adiw	r24, 0x01	; 1
    32a8:	a1 1d       	adc	r26, r1
    32aa:	b1 1d       	adc	r27, r1
    32ac:	d4 cf       	rjmp	.-88     	; 0x3256 <__vector_16+0x3c>

000032ae <__vector_31>:
__vector_31():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial1.cpp:59
#elif defined(USART1_UDRE_vect)
ISR(USART1_UDRE_vect)
#else
#error "Don't know what the Data Register Empty vector is called for Serial1"
#endif
{
    32ae:	1f 92       	push	r1
    32b0:	0f 92       	push	r0
    32b2:	0f b6       	in	r0, 0x3f	; 63
    32b4:	0f 92       	push	r0
    32b6:	11 24       	eor	r1, r1
    32b8:	0b b6       	in	r0, 0x3b	; 59
    32ba:	0f 92       	push	r0
    32bc:	2f 93       	push	r18
    32be:	3f 93       	push	r19
    32c0:	4f 93       	push	r20
    32c2:	5f 93       	push	r21
    32c4:	6f 93       	push	r22
    32c6:	7f 93       	push	r23
    32c8:	8f 93       	push	r24
    32ca:	9f 93       	push	r25
    32cc:	af 93       	push	r26
    32ce:	bf 93       	push	r27
    32d0:	ef 93       	push	r30
    32d2:	ff 93       	push	r31
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial1.cpp:60
  Serial1._tx_udr_empty_irq();
    32d4:	87 e3       	ldi	r24, 0x37	; 55
    32d6:	9a e0       	ldi	r25, 0x0A	; 10
    32d8:	0e 94 d6 03 	call	0x7ac	; 0x7ac <HardwareSerial::_tx_udr_empty_irq()>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial1.cpp:61
}
    32dc:	ff 91       	pop	r31
    32de:	ef 91       	pop	r30
    32e0:	bf 91       	pop	r27
    32e2:	af 91       	pop	r26
    32e4:	9f 91       	pop	r25
    32e6:	8f 91       	pop	r24
    32e8:	7f 91       	pop	r23
    32ea:	6f 91       	pop	r22
    32ec:	5f 91       	pop	r21
    32ee:	4f 91       	pop	r20
    32f0:	3f 91       	pop	r19
    32f2:	2f 91       	pop	r18
    32f4:	0f 90       	pop	r0
    32f6:	0b be       	out	0x3b, r0	; 59
    32f8:	0f 90       	pop	r0
    32fa:	0f be       	out	0x3f, r0	; 63
    32fc:	0f 90       	pop	r0
    32fe:	1f 90       	pop	r1
    3300:	18 95       	reti

00003302 <__vector_30>:
__vector_30():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial1.cpp:48
#elif defined(USART1_RXC_vect)
ISR(USART1_RXC_vect)
#else
#error "Don't know what the Data Register Empty vector is called for Serial1"
#endif
{
    3302:	1f 92       	push	r1
    3304:	0f 92       	push	r0
    3306:	0f b6       	in	r0, 0x3f	; 63
    3308:	0f 92       	push	r0
    330a:	11 24       	eor	r1, r1
    330c:	0b b6       	in	r0, 0x3b	; 59
    330e:	0f 92       	push	r0
    3310:	2f 93       	push	r18
    3312:	8f 93       	push	r24
    3314:	9f 93       	push	r25
    3316:	ef 93       	push	r30
    3318:	ff 93       	push	r31
_rx_complete_irq():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial_private.h:100

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_rx_complete_irq(void)
{
  if (bit_is_clear(*_ucsra, UPE0)) {
    331a:	e0 91 47 0a 	lds	r30, 0x0A47	; 0x800a47 <Serial1+0x10>
    331e:	f0 91 48 0a 	lds	r31, 0x0A48	; 0x800a48 <Serial1+0x11>
    3322:	80 81       	ld	r24, Z
    3324:	e0 91 4d 0a 	lds	r30, 0x0A4D	; 0x800a4d <Serial1+0x16>
    3328:	f0 91 4e 0a 	lds	r31, 0x0A4E	; 0x800a4e <Serial1+0x17>
    332c:	82 fd       	sbrc	r24, 2
    332e:	1d c0       	rjmp	.+58     	; 0x336a <__vector_30+0x68>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial_private.h:103
    // No Parity error, read byte and store it in the buffer if there is
    // room
    unsigned char c = *_udr;
    3330:	90 81       	ld	r25, Z
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial_private.h:104
    rx_buffer_index_t i = (unsigned int)(_rx_buffer_head + 1) % SERIAL_RX_BUFFER_SIZE;
    3332:	80 91 50 0a 	lds	r24, 0x0A50	; 0x800a50 <Serial1+0x19>
    3336:	8f 5f       	subi	r24, 0xFF	; 255
    3338:	8f 73       	andi	r24, 0x3F	; 63
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial_private.h:110

    // if we should be storing the received character into the location
    // just before the tail (meaning that the head would advance to the
    // current location of the tail), we're about to overflow the buffer
    // and so we don't write the character or advance the head.
    if (i != _rx_buffer_tail) {
    333a:	20 91 51 0a 	lds	r18, 0x0A51	; 0x800a51 <Serial1+0x1a>
    333e:	82 17       	cp	r24, r18
    3340:	41 f0       	breq	.+16     	; 0x3352 <__vector_30+0x50>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial_private.h:111
      _rx_buffer[_rx_buffer_head] = c;
    3342:	e0 91 50 0a 	lds	r30, 0x0A50	; 0x800a50 <Serial1+0x19>
    3346:	f0 e0       	ldi	r31, 0x00	; 0
    3348:	e9 5c       	subi	r30, 0xC9	; 201
    334a:	f5 4f       	sbci	r31, 0xF5	; 245
    334c:	95 8f       	std	Z+29, r25	; 0x1d
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial_private.h:112
      _rx_buffer_head = i;
    334e:	80 93 50 0a 	sts	0x0A50, r24	; 0x800a50 <Serial1+0x19>
__vector_30():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial1.cpp:50
  Serial1._rx_complete_irq();
}
    3352:	ff 91       	pop	r31
    3354:	ef 91       	pop	r30
    3356:	9f 91       	pop	r25
    3358:	8f 91       	pop	r24
    335a:	2f 91       	pop	r18
    335c:	0f 90       	pop	r0
    335e:	0b be       	out	0x3b, r0	; 59
    3360:	0f 90       	pop	r0
    3362:	0f be       	out	0x3f, r0	; 63
    3364:	0f 90       	pop	r0
    3366:	1f 90       	pop	r1
    3368:	18 95       	reti
_rx_complete_irq():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial_private.h:116
    }
  } else {
    // Parity error, read byte but discard it
    *_udr;
    336a:	80 81       	ld	r24, Z
    336c:	f2 cf       	rjmp	.-28     	; 0x3352 <__vector_30+0x50>

0000336e <__vector_19>:
__vector_19():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial0.cpp:63
#elif defined(USART0_UDRE_vect)
ISR(USART0_UDRE_vect)
#else
  #error "Don't know what the Data Register Empty vector is called for Serial"
#endif
{
    336e:	1f 92       	push	r1
    3370:	0f 92       	push	r0
    3372:	0f b6       	in	r0, 0x3f	; 63
    3374:	0f 92       	push	r0
    3376:	11 24       	eor	r1, r1
    3378:	0b b6       	in	r0, 0x3b	; 59
    337a:	0f 92       	push	r0
    337c:	2f 93       	push	r18
    337e:	3f 93       	push	r19
    3380:	4f 93       	push	r20
    3382:	5f 93       	push	r21
    3384:	6f 93       	push	r22
    3386:	7f 93       	push	r23
    3388:	8f 93       	push	r24
    338a:	9f 93       	push	r25
    338c:	af 93       	push	r26
    338e:	bf 93       	push	r27
    3390:	ef 93       	push	r30
    3392:	ff 93       	push	r31
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial0.cpp:64
  Serial._tx_udr_empty_irq();
    3394:	84 ed       	ldi	r24, 0xD4	; 212
    3396:	9a e0       	ldi	r25, 0x0A	; 10
    3398:	0e 94 d6 03 	call	0x7ac	; 0x7ac <HardwareSerial::_tx_udr_empty_irq()>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial0.cpp:65
}
    339c:	ff 91       	pop	r31
    339e:	ef 91       	pop	r30
    33a0:	bf 91       	pop	r27
    33a2:	af 91       	pop	r26
    33a4:	9f 91       	pop	r25
    33a6:	8f 91       	pop	r24
    33a8:	7f 91       	pop	r23
    33aa:	6f 91       	pop	r22
    33ac:	5f 91       	pop	r21
    33ae:	4f 91       	pop	r20
    33b0:	3f 91       	pop	r19
    33b2:	2f 91       	pop	r18
    33b4:	0f 90       	pop	r0
    33b6:	0b be       	out	0x3b, r0	; 59
    33b8:	0f 90       	pop	r0
    33ba:	0f be       	out	0x3f, r0	; 63
    33bc:	0f 90       	pop	r0
    33be:	1f 90       	pop	r1
    33c0:	18 95       	reti

000033c2 <__vector_18>:
__vector_18():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial0.cpp:50
#elif defined(USART_RX_vect)
  ISR(USART_RX_vect)
#else
  #error "Don't know what the Data Received vector is called for Serial"
#endif
  {
    33c2:	1f 92       	push	r1
    33c4:	0f 92       	push	r0
    33c6:	0f b6       	in	r0, 0x3f	; 63
    33c8:	0f 92       	push	r0
    33ca:	11 24       	eor	r1, r1
    33cc:	0b b6       	in	r0, 0x3b	; 59
    33ce:	0f 92       	push	r0
    33d0:	2f 93       	push	r18
    33d2:	8f 93       	push	r24
    33d4:	9f 93       	push	r25
    33d6:	ef 93       	push	r30
    33d8:	ff 93       	push	r31
_rx_complete_irq():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial_private.h:100

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_rx_complete_irq(void)
{
  if (bit_is_clear(*_ucsra, UPE0)) {
    33da:	e0 91 e4 0a 	lds	r30, 0x0AE4	; 0x800ae4 <Serial+0x10>
    33de:	f0 91 e5 0a 	lds	r31, 0x0AE5	; 0x800ae5 <Serial+0x11>
    33e2:	80 81       	ld	r24, Z
    33e4:	e0 91 ea 0a 	lds	r30, 0x0AEA	; 0x800aea <Serial+0x16>
    33e8:	f0 91 eb 0a 	lds	r31, 0x0AEB	; 0x800aeb <Serial+0x17>
    33ec:	82 fd       	sbrc	r24, 2
    33ee:	1d c0       	rjmp	.+58     	; 0x342a <__vector_18+0x68>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial_private.h:103
    // No Parity error, read byte and store it in the buffer if there is
    // room
    unsigned char c = *_udr;
    33f0:	90 81       	ld	r25, Z
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial_private.h:104
    rx_buffer_index_t i = (unsigned int)(_rx_buffer_head + 1) % SERIAL_RX_BUFFER_SIZE;
    33f2:	80 91 ed 0a 	lds	r24, 0x0AED	; 0x800aed <Serial+0x19>
    33f6:	8f 5f       	subi	r24, 0xFF	; 255
    33f8:	8f 73       	andi	r24, 0x3F	; 63
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial_private.h:110

    // if we should be storing the received character into the location
    // just before the tail (meaning that the head would advance to the
    // current location of the tail), we're about to overflow the buffer
    // and so we don't write the character or advance the head.
    if (i != _rx_buffer_tail) {
    33fa:	20 91 ee 0a 	lds	r18, 0x0AEE	; 0x800aee <Serial+0x1a>
    33fe:	82 17       	cp	r24, r18
    3400:	41 f0       	breq	.+16     	; 0x3412 <__vector_18+0x50>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial_private.h:111
      _rx_buffer[_rx_buffer_head] = c;
    3402:	e0 91 ed 0a 	lds	r30, 0x0AED	; 0x800aed <Serial+0x19>
    3406:	f0 e0       	ldi	r31, 0x00	; 0
    3408:	ec 52       	subi	r30, 0x2C	; 44
    340a:	f5 4f       	sbci	r31, 0xF5	; 245
    340c:	95 8f       	std	Z+29, r25	; 0x1d
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial_private.h:112
      _rx_buffer_head = i;
    340e:	80 93 ed 0a 	sts	0x0AED, r24	; 0x800aed <Serial+0x19>
__vector_18():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial0.cpp:52
    Serial._rx_complete_irq();
  }
    3412:	ff 91       	pop	r31
    3414:	ef 91       	pop	r30
    3416:	9f 91       	pop	r25
    3418:	8f 91       	pop	r24
    341a:	2f 91       	pop	r18
    341c:	0f 90       	pop	r0
    341e:	0b be       	out	0x3b, r0	; 59
    3420:	0f 90       	pop	r0
    3422:	0f be       	out	0x3f, r0	; 63
    3424:	0f 90       	pop	r0
    3426:	1f 90       	pop	r1
    3428:	18 95       	reti
_rx_complete_irq():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial_private.h:116
    }
  } else {
    // Parity error, read byte but discard it
    *_udr;
    342a:	80 81       	ld	r24, Z
    342c:	f2 cf       	rjmp	.-28     	; 0x3412 <__vector_18+0x50>

0000342e <__vector_33>:
__vector_33():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:528
  }
  return(flag);
}

ISR(TWI_vect)
{
    342e:	1f 92       	push	r1
    3430:	0f 92       	push	r0
    3432:	0f b6       	in	r0, 0x3f	; 63
    3434:	0f 92       	push	r0
    3436:	11 24       	eor	r1, r1
    3438:	0b b6       	in	r0, 0x3b	; 59
    343a:	0f 92       	push	r0
    343c:	2f 93       	push	r18
    343e:	3f 93       	push	r19
    3440:	4f 93       	push	r20
    3442:	5f 93       	push	r21
    3444:	6f 93       	push	r22
    3446:	7f 93       	push	r23
    3448:	8f 93       	push	r24
    344a:	9f 93       	push	r25
    344c:	af 93       	push	r26
    344e:	bf 93       	push	r27
    3450:	ef 93       	push	r30
    3452:	ff 93       	push	r31
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:529
  switch(TW_STATUS){
    3454:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
    3458:	88 7f       	andi	r24, 0xF8	; 248
    345a:	80 36       	cpi	r24, 0x60	; 96
    345c:	09 f4       	brne	.+2      	; 0x3460 <__vector_33+0x32>
    345e:	4d c0       	rjmp	.+154    	; 0x34fa <__vector_33+0xcc>
    3460:	08 f0       	brcs	.+2      	; 0x3464 <__vector_33+0x36>
    3462:	40 c0       	rjmp	.+128    	; 0x34e4 <__vector_33+0xb6>
    3464:	88 32       	cpi	r24, 0x28	; 40
    3466:	09 f4       	brne	.+2      	; 0x346a <__vector_33+0x3c>
    3468:	a9 c0       	rjmp	.+338    	; 0x35bc <__vector_33+0x18e>
    346a:	28 f5       	brcc	.+74     	; 0x34b6 <__vector_33+0x88>
    346c:	80 31       	cpi	r24, 0x10	; 16
    346e:	09 f4       	brne	.+2      	; 0x3472 <__vector_33+0x44>
    3470:	9d c0       	rjmp	.+314    	; 0x35ac <__vector_33+0x17e>
    3472:	c8 f4       	brcc	.+50     	; 0x34a6 <__vector_33+0x78>
    3474:	88 23       	and	r24, r24
    3476:	09 f4       	brne	.+2      	; 0x347a <__vector_33+0x4c>
    3478:	07 c1       	rjmp	.+526    	; 0x3688 <__vector_33+0x25a>
    347a:	88 30       	cpi	r24, 0x08	; 8
    347c:	09 f4       	brne	.+2      	; 0x3480 <__vector_33+0x52>
    347e:	96 c0       	rjmp	.+300    	; 0x35ac <__vector_33+0x17e>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:690
    case TW_BUS_ERROR: // bus error, illegal stop/start
      twi_error = TW_BUS_ERROR;
      twi_stop();
      break;
  }
}
    3480:	ff 91       	pop	r31
    3482:	ef 91       	pop	r30
    3484:	bf 91       	pop	r27
    3486:	af 91       	pop	r26
    3488:	9f 91       	pop	r25
    348a:	8f 91       	pop	r24
    348c:	7f 91       	pop	r23
    348e:	6f 91       	pop	r22
    3490:	5f 91       	pop	r21
    3492:	4f 91       	pop	r20
    3494:	3f 91       	pop	r19
    3496:	2f 91       	pop	r18
    3498:	0f 90       	pop	r0
    349a:	0b be       	out	0x3b, r0	; 59
    349c:	0f 90       	pop	r0
    349e:	0f be       	out	0x3f, r0	; 63
    34a0:	0f 90       	pop	r0
    34a2:	1f 90       	pop	r1
    34a4:	18 95       	reti
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:529
  return(flag);
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
    34a6:	88 31       	cpi	r24, 0x18	; 24
    34a8:	09 f4       	brne	.+2      	; 0x34ac <__vector_33+0x7e>
    34aa:	88 c0       	rjmp	.+272    	; 0x35bc <__vector_33+0x18e>
    34ac:	80 32       	cpi	r24, 0x20	; 32
    34ae:	41 f7       	brne	.-48     	; 0x3480 <__vector_33+0x52>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:564
    case TW_MT_SLA_NACK:  // address sent, nack received
      twi_error = TW_MT_SLA_NACK;
      twi_stop();
      break;
    case TW_MT_DATA_NACK: // data sent, nack received
      twi_error = TW_MT_DATA_NACK;
    34b0:	80 93 b2 09 	sts	0x09B2, r24	; 0x8009b2 <twi_error>
    34b4:	14 c0       	rjmp	.+40     	; 0x34de <__vector_33+0xb0>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:529
  return(flag);
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
    34b6:	80 34       	cpi	r24, 0x40	; 64
    34b8:	09 f4       	brne	.+2      	; 0x34bc <__vector_33+0x8e>
    34ba:	a5 c0       	rjmp	.+330    	; 0x3606 <__vector_33+0x1d8>
    34bc:	40 f4       	brcc	.+16     	; 0x34ce <__vector_33+0xa0>
    34be:	80 33       	cpi	r24, 0x30	; 48
    34c0:	b9 f3       	breq	.-18     	; 0x34b0 <__vector_33+0x82>
    34c2:	88 33       	cpi	r24, 0x38	; 56
    34c4:	e9 f6       	brne	.-70     	; 0x3480 <__vector_33+0x52>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:568
    case TW_MT_DATA_NACK: // data sent, nack received
      twi_error = TW_MT_DATA_NACK;
      twi_stop();
      break;
    case TW_MT_ARB_LOST: // lost bus arbitration
      twi_error = TW_MT_ARB_LOST;
    34c6:	80 93 b2 09 	sts	0x09B2, r24	; 0x8009b2 <twi_error>
twi_reply():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:415
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
    34ca:	85 ec       	ldi	r24, 0xC5	; 197
    34cc:	bc c0       	rjmp	.+376    	; 0x3646 <__vector_33+0x218>
__vector_33():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:529
  return(flag);
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
    34ce:	80 35       	cpi	r24, 0x50	; 80
    34d0:	09 f4       	brne	.+2      	; 0x34d4 <__vector_33+0xa6>
    34d2:	89 c0       	rjmp	.+274    	; 0x35e6 <__vector_33+0x1b8>
    34d4:	88 35       	cpi	r24, 0x58	; 88
    34d6:	09 f4       	brne	.+2      	; 0x34da <__vector_33+0xac>
    34d8:	9e c0       	rjmp	.+316    	; 0x3616 <__vector_33+0x1e8>
    34da:	88 34       	cpi	r24, 0x48	; 72
    34dc:	89 f6       	brne	.-94     	; 0x3480 <__vector_33+0x52>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:687
    // All
    case TW_NO_INFO:   // no state information
      break;
    case TW_BUS_ERROR: // bus error, illegal stop/start
      twi_error = TW_BUS_ERROR;
      twi_stop();
    34de:	0e 94 78 04 	call	0x8f0	; 0x8f0 <twi_stop>
    34e2:	ce cf       	rjmp	.-100    	; 0x3480 <__vector_33+0x52>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:529
  return(flag);
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
    34e4:	88 39       	cpi	r24, 0x98	; 152
    34e6:	09 f4       	brne	.+2      	; 0x34ea <__vector_33+0xbc>
    34e8:	94 c0       	rjmp	.+296    	; 0x3612 <__vector_33+0x1e4>
    34ea:	38 f5       	brcc	.+78     	; 0x353a <__vector_33+0x10c>
    34ec:	88 37       	cpi	r24, 0x78	; 120
    34ee:	29 f0       	breq	.+10     	; 0x34fa <__vector_33+0xcc>
    34f0:	50 f4       	brcc	.+20     	; 0x3506 <__vector_33+0xd8>
    34f2:	88 36       	cpi	r24, 0x68	; 104
    34f4:	11 f0       	breq	.+4      	; 0x34fa <__vector_33+0xcc>
    34f6:	80 37       	cpi	r24, 0x70	; 112
    34f8:	19 f6       	brne	.-122    	; 0x3480 <__vector_33+0x52>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:610
    case TW_SR_SLA_ACK:   // addressed, returned ack
    case TW_SR_GCALL_ACK: // addressed generally, returned ack
    case TW_SR_ARB_LOST_SLA_ACK:   // lost arbitration, returned ack
    case TW_SR_ARB_LOST_GCALL_ACK: // lost arbitration, returned ack
      // enter slave receiver mode
      twi_state = TWI_SRX;
    34fa:	83 e0       	ldi	r24, 0x03	; 3
    34fc:	80 93 b4 09 	sts	0x09B4, r24	; 0x8009b4 <twi_state>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:612
      // indicate that rx buffer can be overwritten and ack
      twi_rxBufferIndex = 0;
    3500:	10 92 66 09 	sts	0x0966, r1	; 0x800966 <twi_rxBufferIndex>
    3504:	57 c0       	rjmp	.+174    	; 0x35b4 <__vector_33+0x186>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:529
  return(flag);
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
    3506:	88 38       	cpi	r24, 0x88	; 136
    3508:	09 f4       	brne	.+2      	; 0x350c <__vector_33+0xde>
    350a:	83 c0       	rjmp	.+262    	; 0x3612 <__vector_33+0x1e4>
    350c:	80 39       	cpi	r24, 0x90	; 144
    350e:	19 f0       	breq	.+6      	; 0x3516 <__vector_33+0xe8>
    3510:	80 38       	cpi	r24, 0x80	; 128
    3512:	09 f0       	breq	.+2      	; 0x3516 <__vector_33+0xe8>
    3514:	b5 cf       	rjmp	.-150    	; 0x3480 <__vector_33+0x52>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:618
      twi_reply(1);
      break;
    case TW_SR_DATA_ACK:       // data received, returned ack
    case TW_SR_GCALL_DATA_ACK: // data received generally, returned ack
      // if there is still room in the rx buffer
      if(twi_rxBufferIndex < TWI_BUFFER_SIZE){
    3516:	80 91 66 09 	lds	r24, 0x0966	; 0x800966 <twi_rxBufferIndex>
    351a:	80 32       	cpi	r24, 0x20	; 32
    351c:	08 f0       	brcs	.+2      	; 0x3520 <__vector_33+0xf2>
    351e:	79 c0       	rjmp	.+242    	; 0x3612 <__vector_33+0x1e4>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:620
        // put byte in buffer and ack
        twi_rxBuffer[twi_rxBufferIndex++] = TWDR;
    3520:	e0 91 66 09 	lds	r30, 0x0966	; 0x800966 <twi_rxBufferIndex>
    3524:	81 e0       	ldi	r24, 0x01	; 1
    3526:	8e 0f       	add	r24, r30
    3528:	80 93 66 09 	sts	0x0966, r24	; 0x800966 <twi_rxBufferIndex>
    352c:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
    3530:	f0 e0       	ldi	r31, 0x00	; 0
    3532:	ea 5b       	subi	r30, 0xBA	; 186
    3534:	f6 4f       	sbci	r31, 0xF6	; 246
    3536:	80 83       	st	Z, r24
    3538:	3d c0       	rjmp	.+122    	; 0x35b4 <__vector_33+0x186>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:529
  return(flag);
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
    353a:	80 3b       	cpi	r24, 0xB0	; 176
    353c:	39 f0       	breq	.+14     	; 0x354c <__vector_33+0x11e>
    353e:	e0 f4       	brcc	.+56     	; 0x3578 <__vector_33+0x14a>
    3540:	80 3a       	cpi	r24, 0xA0	; 160
    3542:	09 f4       	brne	.+2      	; 0x3546 <__vector_33+0x118>
    3544:	85 c0       	rjmp	.+266    	; 0x3650 <__vector_33+0x222>
    3546:	88 3a       	cpi	r24, 0xA8	; 168
    3548:	09 f0       	breq	.+2      	; 0x354c <__vector_33+0x11e>
    354a:	9a cf       	rjmp	.-204    	; 0x3480 <__vector_33+0x52>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:649

    // Slave Transmitter
    case TW_ST_SLA_ACK:          // addressed, returned ack
    case TW_ST_ARB_LOST_SLA_ACK: // arbitration lost, returned ack
      // enter slave transmitter mode
      twi_state = TWI_STX;
    354c:	84 e0       	ldi	r24, 0x04	; 4
    354e:	80 93 b4 09 	sts	0x09B4, r24	; 0x8009b4 <twi_state>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:651
      // ready the tx buffer index for iteration
      twi_txBufferIndex = 0;
    3552:	10 92 45 09 	sts	0x0945, r1	; 0x800945 <twi_txBufferIndex>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:653
      // set tx buffer length to be zero, to verify if user changes it
      twi_txBufferLength = 0;
    3556:	10 92 44 09 	sts	0x0944, r1	; 0x800944 <twi_txBufferLength>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:656
      // request for txBuffer to be filled and length to be set
      // note: user must call twi_transmit(bytes, length) to do this
      twi_onSlaveTransmit();
    355a:	e0 91 69 09 	lds	r30, 0x0969	; 0x800969 <twi_onSlaveTransmit>
    355e:	f0 91 6a 09 	lds	r31, 0x096A	; 0x80096a <twi_onSlaveTransmit+0x1>
    3562:	09 95       	icall
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:658
      // if they didn't change buffer & length, initialize it
      if(0 == twi_txBufferLength){
    3564:	80 91 44 09 	lds	r24, 0x0944	; 0x800944 <twi_txBufferLength>
    3568:	81 11       	cpse	r24, r1
    356a:	0f c0       	rjmp	.+30     	; 0x358a <__vector_33+0x15c>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:659
        twi_txBufferLength = 1;
    356c:	81 e0       	ldi	r24, 0x01	; 1
    356e:	80 93 44 09 	sts	0x0944, r24	; 0x800944 <twi_txBufferLength>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:660
        twi_txBuffer[0] = 0x00;
    3572:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <twi_txBuffer>
    3576:	09 c0       	rjmp	.+18     	; 0x358a <__vector_33+0x15c>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:529
  return(flag);
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
    3578:	80 3c       	cpi	r24, 0xC0	; 192
    357a:	09 f4       	brne	.+2      	; 0x357e <__vector_33+0x150>
    357c:	a6 cf       	rjmp	.-180    	; 0x34ca <__vector_33+0x9c>
    357e:	88 3c       	cpi	r24, 0xC8	; 200
    3580:	09 f4       	brne	.+2      	; 0x3584 <__vector_33+0x156>
    3582:	a3 cf       	rjmp	.-186    	; 0x34ca <__vector_33+0x9c>
    3584:	88 3b       	cpi	r24, 0xB8	; 184
    3586:	09 f0       	breq	.+2      	; 0x358a <__vector_33+0x15c>
    3588:	7b cf       	rjmp	.-266    	; 0x3480 <__vector_33+0x52>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:666
      }
      // transmit first byte from buffer, fall
      /* fall through */
    case TW_ST_DATA_ACK: // byte sent, ack returned
      // copy data to output register
      TWDR = twi_txBuffer[twi_txBufferIndex++];
    358a:	e0 91 45 09 	lds	r30, 0x0945	; 0x800945 <twi_txBufferIndex>
    358e:	81 e0       	ldi	r24, 0x01	; 1
    3590:	8e 0f       	add	r24, r30
    3592:	80 93 45 09 	sts	0x0945, r24	; 0x800945 <twi_txBufferIndex>
    3596:	f0 e0       	ldi	r31, 0x00	; 0
    3598:	ec 5d       	subi	r30, 0xDC	; 220
    359a:	f6 4f       	sbci	r31, 0xF6	; 246
    359c:	80 81       	ld	r24, Z
    359e:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:668
      // if there is more to send, ack, otherwise nack
      if(twi_txBufferIndex < twi_txBufferLength){
    35a2:	90 91 45 09 	lds	r25, 0x0945	; 0x800945 <twi_txBufferIndex>
    35a6:	80 91 44 09 	lds	r24, 0x0944	; 0x800944 <twi_txBufferLength>
    35aa:	31 c0       	rjmp	.+98     	; 0x360e <__vector_33+0x1e0>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:534
  switch(TW_STATUS){
    // All Master
    case TW_START:     // sent start condition
    case TW_REP_START: // sent repeated start condition
      // copy device address and r/w bit to output register and ack
      TWDR = twi_slarw;
    35ac:	80 91 ad 09 	lds	r24, 0x09AD	; 0x8009ad <twi_slarw>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:544
    case TW_MT_SLA_ACK:  // slave receiver acked address
    case TW_MT_DATA_ACK: // slave receiver acked data
      // if there is data to send, send it, otherwise stop
      if(twi_masterBufferIndex < twi_masterBufferLength){
        // copy data to output register and ack
        TWDR = twi_masterBuffer[twi_masterBufferIndex++];
    35b0:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
twi_reply():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:415
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
    35b4:	85 ec       	ldi	r24, 0xC5	; 197
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:417
  }else{
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT);
    35b6:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    35ba:	62 cf       	rjmp	.-316    	; 0x3480 <__vector_33+0x52>
__vector_33():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:542

    // Master Transmitter
    case TW_MT_SLA_ACK:  // slave receiver acked address
    case TW_MT_DATA_ACK: // slave receiver acked data
      // if there is data to send, send it, otherwise stop
      if(twi_masterBufferIndex < twi_masterBufferLength){
    35bc:	90 91 af 09 	lds	r25, 0x09AF	; 0x8009af <twi_masterBufferIndex>
    35c0:	80 91 ae 09 	lds	r24, 0x09AE	; 0x8009ae <twi_masterBufferLength>
    35c4:	98 17       	cp	r25, r24
    35c6:	b8 f5       	brcc	.+110    	; 0x3636 <__vector_33+0x208>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:544
        // copy data to output register and ack
        TWDR = twi_masterBuffer[twi_masterBufferIndex++];
    35c8:	80 91 b0 09 	lds	r24, 0x09B0	; 0x8009b0 <twi_masterBuffer>
    35cc:	90 91 b1 09 	lds	r25, 0x09B1	; 0x8009b1 <twi_masterBuffer+0x1>
    35d0:	e0 91 af 09 	lds	r30, 0x09AF	; 0x8009af <twi_masterBufferIndex>
    35d4:	21 e0       	ldi	r18, 0x01	; 1
    35d6:	2e 0f       	add	r18, r30
    35d8:	20 93 af 09 	sts	0x09AF, r18	; 0x8009af <twi_masterBufferIndex>
    35dc:	e8 0f       	add	r30, r24
    35de:	f9 2f       	mov	r31, r25
    35e0:	f1 1d       	adc	r31, r1
    35e2:	80 81       	ld	r24, Z
    35e4:	e5 cf       	rjmp	.-54     	; 0x35b0 <__vector_33+0x182>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:575
      break;

    // Master Receiver
    case TW_MR_DATA_ACK: // data received, ack sent
      // put byte into buffer
      twi_masterBuffer[twi_masterBufferIndex++] = TWDR;
    35e6:	20 91 b0 09 	lds	r18, 0x09B0	; 0x8009b0 <twi_masterBuffer>
    35ea:	30 91 b1 09 	lds	r19, 0x09B1	; 0x8009b1 <twi_masterBuffer+0x1>
    35ee:	e0 91 af 09 	lds	r30, 0x09AF	; 0x8009af <twi_masterBufferIndex>
    35f2:	81 e0       	ldi	r24, 0x01	; 1
    35f4:	8e 0f       	add	r24, r30
    35f6:	80 93 af 09 	sts	0x09AF, r24	; 0x8009af <twi_masterBufferIndex>
    35fa:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
    35fe:	e2 0f       	add	r30, r18
    3600:	f3 2f       	mov	r31, r19
    3602:	f1 1d       	adc	r31, r1
    3604:	80 83       	st	Z, r24
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:579
      /* fall through */
    case TW_MR_SLA_ACK:  // address sent, ack received
      // ack if more bytes are expected, otherwise nack
      if(twi_masterBufferIndex < twi_masterBufferLength){
    3606:	90 91 af 09 	lds	r25, 0x09AF	; 0x8009af <twi_masterBufferIndex>
    360a:	80 91 ae 09 	lds	r24, 0x09AE	; 0x8009ae <twi_masterBufferLength>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:668
      /* fall through */
    case TW_ST_DATA_ACK: // byte sent, ack returned
      // copy data to output register
      TWDR = twi_txBuffer[twi_txBufferIndex++];
      // if there is more to send, ack, otherwise nack
      if(twi_txBufferIndex < twi_txBufferLength){
    360e:	98 17       	cp	r25, r24
    3610:	88 f2       	brcs	.-94     	; 0x35b4 <__vector_33+0x186>
twi_reply():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:417
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
  }else{
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT);
    3612:	85 e8       	ldi	r24, 0x85	; 133
    3614:	d0 cf       	rjmp	.-96     	; 0x35b6 <__vector_33+0x188>
__vector_33():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:587
        twi_reply(0);
      }
      break;
    case TW_MR_DATA_NACK: // data received, nack sent
      // put final byte into buffer
      twi_masterBuffer[twi_masterBufferIndex++] = TWDR;
    3616:	20 91 b0 09 	lds	r18, 0x09B0	; 0x8009b0 <twi_masterBuffer>
    361a:	30 91 b1 09 	lds	r19, 0x09B1	; 0x8009b1 <twi_masterBuffer+0x1>
    361e:	e0 91 af 09 	lds	r30, 0x09AF	; 0x8009af <twi_masterBufferIndex>
    3622:	81 e0       	ldi	r24, 0x01	; 1
    3624:	8e 0f       	add	r24, r30
    3626:	80 93 af 09 	sts	0x09AF, r24	; 0x8009af <twi_masterBufferIndex>
    362a:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
    362e:	e2 0f       	add	r30, r18
    3630:	f3 2f       	mov	r31, r19
    3632:	f1 1d       	adc	r31, r1
    3634:	80 83       	st	Z, r24
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:588
  if (twi_sendStop)
    3636:	80 91 b3 09 	lds	r24, 0x09B3	; 0x8009b3 <twi_sendStop>
    363a:	81 11       	cpse	r24, r1
    363c:	50 cf       	rjmp	.-352    	; 0x34de <__vector_33+0xb0>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:591
          twi_stop();
  else {
    twi_inRepStart = true;  // we're going to send the START
    363e:	81 e0       	ldi	r24, 0x01	; 1
    3640:	80 93 ac 09 	sts	0x09AC, r24	; 0x8009ac <twi_inRepStart>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:595
    // don't enable the interrupt. We'll generate the start, but we
    // avoid handling the interrupt until we're in the next transaction,
    // at the point where we would normally issue the start.
    TWCR = _BV(TWINT) | _BV(TWSTA)| _BV(TWEN) ;
    3644:	84 ea       	ldi	r24, 0xA4	; 164
twi_reply():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:415
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
    3646:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
__vector_33():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:679
    case TW_ST_DATA_NACK: // received nack, we are done
    case TW_ST_LAST_DATA: // received ack, but we are done already!
      // ack future responses
      twi_reply(1);
      // leave slave receiver state
      twi_state = TWI_READY;
    364a:	10 92 b4 09 	sts	0x09B4, r1	; 0x8009b4 <twi_state>
    364e:	18 cf       	rjmp	.-464    	; 0x3480 <__vector_33+0x52>
twi_releaseBus():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:468
 * Output   none
 */
void twi_releaseBus(void)
{
  // release bus
  TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWEA) | _BV(TWINT);
    3650:	85 ec       	ldi	r24, 0xC5	; 197
    3652:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:471

  // update twi state
  twi_state = TWI_READY;
    3656:	10 92 b4 09 	sts	0x09B4, r1	; 0x8009b4 <twi_state>
__vector_33():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:631
      break;
    case TW_SR_STOP: // stop or repeated start condition received
      // ack future responses and leave slave receiver state
      twi_releaseBus();
      // put a null char after data if there's room
      if(twi_rxBufferIndex < TWI_BUFFER_SIZE){
    365a:	80 91 66 09 	lds	r24, 0x0966	; 0x800966 <twi_rxBufferIndex>
    365e:	80 32       	cpi	r24, 0x20	; 32
    3660:	30 f4       	brcc	.+12     	; 0x366e <__vector_33+0x240>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:632
        twi_rxBuffer[twi_rxBufferIndex] = '\0';
    3662:	e0 91 66 09 	lds	r30, 0x0966	; 0x800966 <twi_rxBufferIndex>
    3666:	f0 e0       	ldi	r31, 0x00	; 0
    3668:	ea 5b       	subi	r30, 0xBA	; 186
    366a:	f6 4f       	sbci	r31, 0xF6	; 246
    366c:	10 82       	st	Z, r1
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:635
      }
      // callback to user defined callback
      twi_onSlaveReceive(twi_rxBuffer, twi_rxBufferIndex);
    366e:	60 91 66 09 	lds	r22, 0x0966	; 0x800966 <twi_rxBufferIndex>
    3672:	70 e0       	ldi	r23, 0x00	; 0
    3674:	e0 91 67 09 	lds	r30, 0x0967	; 0x800967 <twi_onSlaveReceive>
    3678:	f0 91 68 09 	lds	r31, 0x0968	; 0x800968 <twi_onSlaveReceive+0x1>
    367c:	86 e4       	ldi	r24, 0x46	; 70
    367e:	99 e0       	ldi	r25, 0x09	; 9
    3680:	09 95       	icall
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:637
      // since we submit rx buffer to "wire" library, we can reset it
      twi_rxBufferIndex = 0;
    3682:	10 92 66 09 	sts	0x0966, r1	; 0x800966 <twi_rxBufferIndex>
    3686:	fc ce       	rjmp	.-520    	; 0x3480 <__vector_33+0x52>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:686

    // All
    case TW_NO_INFO:   // no state information
      break;
    case TW_BUS_ERROR: // bus error, illegal stop/start
      twi_error = TW_BUS_ERROR;
    3688:	10 92 b2 09 	sts	0x09B2, r1	; 0x8009b2 <twi_error>
    368c:	28 cf       	rjmp	.-432    	; 0x34de <__vector_33+0xb0>

0000368e <countPulseASM>:
countPulseASM():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:62

countPulseASM:

.LM0:
.LFBB1:
    push r12   ;   ;  130 pushqi1/1 [length = 1]
    368e:	cf 92       	push	r12
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:63
    push r13   ;   ;  131 pushqi1/1 [length = 1]
    3690:	df 92       	push	r13
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:64
    push r14   ;   ;  132 pushqi1/1 [length = 1]
    3692:	ef 92       	push	r14
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:65
    push r15   ;   ;  133 pushqi1/1 [length = 1]
    3694:	ff 92       	push	r15
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:66
    push r16   ;   ;  134 pushqi1/1 [length = 1]
    3696:	0f 93       	push	r16
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:67
    push r17   ;   ;  135 pushqi1/1 [length = 1]
    3698:	1f 93       	push	r17
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:72
/* prologue: function */
/* frame size = 0 */
/* stack size = 6 */
.L__stack_usage = 6
    mov r30,r24  ;  port, port   ;  2 *movhi/1  [length = 2]
    369a:	e8 2f       	mov	r30, r24
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:73
    mov r31,r25  ;  port, port
    369c:	f9 2f       	mov	r31, r25
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:79
/*     unsigned long width = 0;
***     // wait for any previous pulse to end
***     while ((*port & bit) == stateMask)
*/
.LM1:
    rjmp .L2   ;   ;  181 jump  [length = 1]
    369e:	05 c0       	rjmp	.+10     	; 0x36aa <countPulseASM+0x1c>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:83
.L4:
/*         if (--maxloops == 0) */
.LM2:
    subi r16,1   ;  maxloops,  ;  17  addsi3/2  [length = 4]
    36a0:	01 50       	subi	r16, 0x01	; 1
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:84
    sbc r17, r1   ;  maxloops
    36a2:	11 09       	sbc	r17, r1
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:85
    sbc r18, r1   ;  maxloops
    36a4:	21 09       	sbc	r18, r1
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:86
    sbc r19, r1   ;  maxloops
    36a6:	31 09       	sbc	r19, r1
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:87
    breq .L13  ; ,   ;  19  branch  [length = 1]
    36a8:	61 f1       	breq	.+88     	; 0x3702 <countPulseASM+0x74>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:91
.L2:
/*         if (--maxloops == 0) */
.LM3:
    ld r25,Z   ;  D.1554, *port_7(D)   ;  22  movqi_insn/4  [length = 1]
    36aa:	90 81       	ld	r25, Z
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:92
    and r25,r22  ;  D.1554, bit  ;  24  andqi3/1  [length = 1]
    36ac:	96 23       	and	r25, r22
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:93
    cp r25,r20   ;  D.1554, stateMask  ;  25  *cmpqi/2  [length = 1]
    36ae:	94 17       	cp	r25, r20
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:94
    breq .L4   ; ,   ;  26  branch  [length = 1]
    36b0:	b9 f3       	breq	.-18     	; 0x36a0 <countPulseASM+0x12>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:95
    rjmp .L6   ;   ;  184 jump  [length = 1]
    36b2:	05 c0       	rjmp	.+10     	; 0x36be <countPulseASM+0x30>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:104
***     // wait for the pulse to start
***     while ((*port & bit) != stateMask)
***         if (--maxloops == 0)
*/
.LM4:
    subi r16,1   ;  maxloops,  ;  31  addsi3/2  [length = 4]
    36b4:	01 50       	subi	r16, 0x01	; 1
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:105
    sbc r17, r1   ;  maxloops
    36b6:	11 09       	sbc	r17, r1
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:106
    sbc r18, r1   ;  maxloops
    36b8:	21 09       	sbc	r18, r1
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:107
    sbc r19, r1   ;  maxloops
    36ba:	31 09       	sbc	r19, r1
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:108
    breq .L13  ; ,   ;  33  branch  [length = 1]
    36bc:	11 f1       	breq	.+68     	; 0x3702 <countPulseASM+0x74>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:112
.L6:
/*         if (--maxloops == 0) */
.LM5:
    ld r25,Z   ;  D.1554, *port_7(D)   ;  41  movqi_insn/4  [length = 1]
    36be:	90 81       	ld	r25, Z
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:113
    and r25,r22  ;  D.1554, bit  ;  43  andqi3/1  [length = 1]
    36c0:	96 23       	and	r25, r22
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:114
    cpse r25,r20   ;  D.1554, stateMask  ;  44  enable_interrupt-3  [length = 1]
    36c2:	94 13       	cpse	r25, r20
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:115
    rjmp .L7   ;
    36c4:	f7 cf       	rjmp	.-18     	; 0x36b4 <countPulseASM+0x26>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:116
    mov r12, r1   ;  width  ;  7 *movsi/2  [length = 4]
    36c6:	c1 2c       	mov	r12, r1
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:117
    mov r13, r1   ;  width
    36c8:	d1 2c       	mov	r13, r1
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:118
    mov r14, r1   ;  width
    36ca:	e1 2c       	mov	r14, r1
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:119
    mov r15, r1   ;  width
    36cc:	f1 2c       	mov	r15, r1
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:120
    rjmp .L9   ;   ;  186 jump  [length = 1]
    36ce:	0a c0       	rjmp	.+20     	; 0x36e4 <countPulseASM+0x56>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:129
***     // wait for the pulse to stop
***     while ((*port & bit) == stateMask) {
***         if (++width == maxloops)
*/
.LM6:
    ldi r24,-1   ; ,   ;  50  addsi3/3  [length = 5]
    36d0:	8f ef       	ldi	r24, 0xFF	; 255
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:130
    sub r12,r24  ;  width,
    36d2:	c8 1a       	sub	r12, r24
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:131
    sbc r13,r24  ;  width,
    36d4:	d8 0a       	sbc	r13, r24
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:132
    sbc r14,r24  ;  width,
    36d6:	e8 0a       	sbc	r14, r24
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:133
    sbc r15,r24  ;  width,
    36d8:	f8 0a       	sbc	r15, r24
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:134
    cp r16,r12   ;  maxloops, width  ;  51  *cmpsi/2  [length = 4]
    36da:	0c 15       	cp	r16, r12
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:135
    cpc r17,r13  ;  maxloops, width
    36dc:	1d 05       	cpc	r17, r13
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:136
    cpc r18,r14  ;  maxloops, width
    36de:	2e 05       	cpc	r18, r14
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:137
    cpc r19,r15  ;  maxloops, width
    36e0:	3f 05       	cpc	r19, r15
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:138
    breq .L13  ; ,   ;  52  branch  [length = 1]
    36e2:	79 f0       	breq	.+30     	; 0x3702 <countPulseASM+0x74>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:142
.L9:
/*         if (++width == maxloops) */
.LM7:
    ld r24,Z   ;  D.1554, *port_7(D)   ;  60  movqi_insn/4  [length = 1]
    36e4:	80 81       	ld	r24, Z
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:143
    and r24,r22  ;  D.1554, bit  ;  62  andqi3/1  [length = 1]
    36e6:	86 23       	and	r24, r22
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:144
    cp r24,r20   ;  D.1554, stateMask  ;  63  *cmpqi/2  [length = 1]
    36e8:	84 17       	cp	r24, r20
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:145
    breq .L10  ; ,   ;  64  branch  [length = 1]
    36ea:	91 f3       	breq	.-28     	; 0x36d0 <countPulseASM+0x42>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:151
/*             return 0;
***     }
***     return width;
*/
.LM8:
    mov r22,r12  ;  D.1553, width  ;  108 movqi_insn/1  [length = 1]
    36ec:	6c 2d       	mov	r22, r12
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:152
    mov r23,r13  ;  D.1553, width  ;  109 movqi_insn/1  [length = 1]
    36ee:	7d 2d       	mov	r23, r13
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:153
    mov r24,r14  ;  D.1553, width  ;  110 movqi_insn/1  [length = 1]
    36f0:	8e 2d       	mov	r24, r14
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:154
    mov r25,r15  ;  D.1553, width  ;  111 movqi_insn/1  [length = 1]
    36f2:	9f 2d       	mov	r25, r15
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:157
/* epilogue start */
.LM9:
    pop r17  ;   ;  171 popqi [length = 1]
    36f4:	1f 91       	pop	r17
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:158
    pop r16  ;   ;  172 popqi [length = 1]
    36f6:	0f 91       	pop	r16
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:159
    pop r15  ;   ;  173 popqi [length = 1]
    36f8:	ff 90       	pop	r15
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:160
    pop r14  ;   ;  174 popqi [length = 1]
    36fa:	ef 90       	pop	r14
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:161
    pop r13  ;   ;  175 popqi [length = 1]
    36fc:	df 90       	pop	r13
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:162
    pop r12  ;   ;  176 popqi [length = 1]
    36fe:	cf 90       	pop	r12
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:163
    ret  ;  177 return_from_epilogue  [length = 1]
    3700:	08 95       	ret
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:166
.L13:
.LM10:
    ldi r22,0  ;  D.1553   ;  120 movqi_insn/1  [length = 1]
    3702:	60 e0       	ldi	r22, 0x00	; 0
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:167
    ldi r23,0  ;  D.1553   ;  121 movqi_insn/1  [length = 1]
    3704:	70 e0       	ldi	r23, 0x00	; 0
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:168
    ldi r24,0  ;  D.1553   ;  122 movqi_insn/1  [length = 1]
    3706:	80 e0       	ldi	r24, 0x00	; 0
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:169
    ldi r25,0  ;  D.1553   ;  123 movqi_insn/1  [length = 1]
    3708:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:172
/* epilogue start */
.LM11:
    pop r17  ;   ;  138 popqi [length = 1]
    370a:	1f 91       	pop	r17
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:173
    pop r16  ;   ;  139 popqi [length = 1]
    370c:	0f 91       	pop	r16
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:174
    pop r15  ;   ;  140 popqi [length = 1]
    370e:	ff 90       	pop	r15
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:175
    pop r14  ;   ;  141 popqi [length = 1]
    3710:	ef 90       	pop	r14
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:176
    pop r13  ;   ;  142 popqi [length = 1]
    3712:	df 90       	pop	r13
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:177
    pop r12  ;   ;  143 popqi [length = 1]
    3714:	cf 90       	pop	r12
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring_pulse.S:178
    ret  ;  144 return_from_epilogue  [length = 1]
    3716:	08 95       	ret

00003718 <move_basket(int, int)>:
move_basket():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2244
           }
       }
    else go(spd,spd);
    }

void move_basket(int pos,int speed){
    3718:	ab 01       	movw	r20, r22
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2245
  AX(10,pos,speed);
    371a:	bc 01       	movw	r22, r24
    371c:	8a e0       	ldi	r24, 0x0A	; 10
    371e:	0c 94 cd 07 	jmp	0xf9a	; 0xf9a <AX(char, int, int)>

00003722 <cmps(int)>:
cmps():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1565
      break;
    }
  }
}

int cmps(int select) {
    3722:	bf 92       	push	r11
    3724:	cf 92       	push	r12
    3726:	df 92       	push	r13
    3728:	ef 92       	push	r14
    372a:	ff 92       	push	r15
    372c:	0f 93       	push	r16
    372e:	1f 93       	push	r17
    3730:	cf 93       	push	r28
    3732:	df 93       	push	r29
    3734:	8c 01       	movw	r16, r24
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1568
  int degree, pi, rol;

    digitalWrite(MUX_A, HIGH);//switching the multiplaxer
    3736:	61 e0       	ldi	r22, 0x01	; 1
    3738:	8c e2       	ldi	r24, 0x2C	; 44
    373a:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1569
    digitalWrite(MUX_B, HIGH);
    373e:	61 e0       	ldi	r22, 0x01	; 1
    3740:	8b e2       	ldi	r24, 0x2B	; 43
    3742:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1570
    digitalWrite(MUX_C, LOW);
    3746:	60 e0       	ldi	r22, 0x00	; 0
    3748:	8a e2       	ldi	r24, 0x2A	; 42
    374a:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
beginTransmission():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:208
  txBufferLength = 0;
}

void TwoWire::beginTransmission(int address)
{
  beginTransmission((uint8_t)address);
    374e:	80 e6       	ldi	r24, 0x60	; 96
    3750:	0e 94 a1 01 	call	0x342	; 0x342 <TwoWire::beginTransmission(unsigned char) [clone .constprop.11]>
cmps():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1573

  Wire.beginTransmission(cmps_address);
  Wire.write(0x02); // Register address for desired data (adjust as needed)
    3754:	82 e0       	ldi	r24, 0x02	; 2
    3756:	90 e0       	ldi	r25, 0x00	; 0
    3758:	0e 94 1c 05 	call	0xa38	; 0xa38 <TwoWire::write(int) [clone .constprop.23]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1574
  Wire.endTransmission();
    375c:	0e 94 ab 01 	call	0x356	; 0x356 <TwoWire::endTransmission() [clone .constprop.7]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1576

  Wire.requestFrom(cmps_address, 4); // Request 4 bytes of data
    3760:	64 e0       	ldi	r22, 0x04	; 4
    3762:	70 e0       	ldi	r23, 0x00	; 0
    3764:	80 e6       	ldi	r24, 0x60	; 96
    3766:	90 e0       	ldi	r25, 0x00	; 0
    3768:	0e 94 fa 08 	call	0x11f4	; 0x11f4 <TwoWire::requestFrom(int, int) [clone .constprop.8]>
available():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:292
// must be called in:
// slave rx event callback
// or after requestFrom(address, numBytes)
int TwoWire::available(void)
{
  return rxBufferLength - rxBufferIndex;
    376c:	80 91 f9 09 	lds	r24, 0x09F9	; 0x8009f9 <TwoWire::rxBufferLength>
    3770:	90 91 fa 09 	lds	r25, 0x09FA	; 0x8009fa <TwoWire::rxBufferIndex>
    3774:	89 1b       	sub	r24, r25
    3776:	99 0b       	sbc	r25, r25
cmps():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1578

  if (Wire.available() >= 4) {
    3778:	04 97       	sbiw	r24, 0x04	; 4
    377a:	94 f1       	brlt	.+100    	; 0x37e0 <cmps(int)+0xbe>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1579
    degree = Wire.read();
    377c:	0e 94 36 01 	call	0x26c	; 0x26c <TwoWire::read() [clone .constprop.16]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1580
    degree = (degree << 8) | Wire.read();
    3780:	d8 2f       	mov	r29, r24
    3782:	20 e0       	ldi	r18, 0x00	; 0
    3784:	c2 2f       	mov	r28, r18
    3786:	0e 94 36 01 	call	0x26c	; 0x26c <TwoWire::read() [clone .constprop.16]>
    378a:	8c 2b       	or	r24, r28
    378c:	9d 2b       	or	r25, r29
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1581
    degree /= 10; // Adjust scaling if needed
    378e:	6a e0       	ldi	r22, 0x0A	; 10
    3790:	70 e0       	ldi	r23, 0x00	; 0
    3792:	0e 94 dd 46 	call	0x8dba	; 0x8dba <__divmodhi4>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1582
    degree -= DN; // Replace DN with your offset value (if applicable)
    3796:	80 91 79 09 	lds	r24, 0x0979	; 0x800979 <DN>
    379a:	90 91 7a 09 	lds	r25, 0x097A	; 0x80097a <DN+0x1>
    379e:	eb 01       	movw	r28, r22
    37a0:	c8 1b       	sub	r28, r24
    37a2:	d9 0b       	sbc	r29, r25
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1584

    pi = Wire.read();
    37a4:	0e 94 36 01 	call	0x26c	; 0x26c <TwoWire::read() [clone .constprop.16]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1585
    pi = pi * 180 / 255;
    37a8:	24 eb       	ldi	r18, 0xB4	; 180
    37aa:	d2 2e       	mov	r13, r18
    37ac:	9c 01       	movw	r18, r24
    37ae:	d2 9e       	mul	r13, r18
    37b0:	c0 01       	movw	r24, r0
    37b2:	d3 9e       	mul	r13, r19
    37b4:	90 0d       	add	r25, r0
    37b6:	11 24       	eor	r1, r1
    37b8:	ee 24       	eor	r14, r14
    37ba:	ea 94       	dec	r14
    37bc:	f1 2c       	mov	r15, r1
    37be:	b7 01       	movw	r22, r14
    37c0:	0e 94 dd 46 	call	0x8dba	; 0x8dba <__divmodhi4>
    37c4:	b6 2e       	mov	r11, r22
    37c6:	c7 2e       	mov	r12, r23
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1587

    rol = Wire.read();
    37c8:	0e 94 36 01 	call	0x26c	; 0x26c <TwoWire::read() [clone .constprop.16]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1588
    rol = rol * 180 / 255;
    37cc:	9c 01       	movw	r18, r24
    37ce:	d2 9e       	mul	r13, r18
    37d0:	c0 01       	movw	r24, r0
    37d2:	d3 9e       	mul	r13, r19
    37d4:	90 0d       	add	r25, r0
    37d6:	11 24       	eor	r1, r1
    37d8:	b7 01       	movw	r22, r14
    37da:	0e 94 dd 46 	call	0x8dba	; 0x8dba <__divmodhi4>
    37de:	7b 01       	movw	r14, r22
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1591
  }

  if (degree < 0) {
    37e0:	d7 ff       	sbrs	r29, 7
    37e2:	02 c0       	rjmp	.+4      	; 0x37e8 <cmps(int)+0xc6>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1592
    degree += 360;
    37e4:	c8 59       	subi	r28, 0x98	; 152
    37e6:	de 4f       	sbci	r29, 0xFE	; 254
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1596
  }


  if (select == 1) {
    37e8:	01 30       	cpi	r16, 0x01	; 1
    37ea:	11 05       	cpc	r17, r1
    37ec:	29 f0       	breq	.+10     	; 0x37f8 <cmps(int)+0xd6>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1598
    return degree;
  } else if (select == 2) {
    37ee:	02 30       	cpi	r16, 0x02	; 2
    37f0:	11 05       	cpc	r17, r1
    37f2:	69 f0       	breq	.+26     	; 0x380e <cmps(int)+0xec>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1601
    return pi;
  } else {
    return rol;
    37f4:	ce 2d       	mov	r28, r14
    37f6:	df 2d       	mov	r29, r15
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1603
  }
}
    37f8:	ce 01       	movw	r24, r28
    37fa:	df 91       	pop	r29
    37fc:	cf 91       	pop	r28
    37fe:	1f 91       	pop	r17
    3800:	0f 91       	pop	r16
    3802:	ff 90       	pop	r15
    3804:	ef 90       	pop	r14
    3806:	df 90       	pop	r13
    3808:	cf 90       	pop	r12
    380a:	bf 90       	pop	r11
    380c:	08 95       	ret
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1599


  if (select == 1) {
    return degree;
  } else if (select == 2) {
    return pi;
    380e:	cb 2d       	mov	r28, r11
    3810:	dc 2d       	mov	r29, r12
    3812:	f2 cf       	rjmp	.-28     	; 0x37f8 <cmps(int)+0xd6>

00003814 <menu_motor()>:
menu_motor():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:952
}

void menu_motor(void) {
  static char page = 1, last_page = 8;
  signed int spd = 0;
  lcd.clear();
    3814:	0e 94 c4 05 	call	0xb88	; 0xb88 <LiquidCrystal::clear() [clone .constprop.32]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:953
  int basket_up = EEPROM_read_int(basket_up_address);
    3818:	84 ea       	ldi	r24, 0xA4	; 164
    381a:	90 e0       	ldi	r25, 0x00	; 0
    381c:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    3820:	5c 01       	movw	r10, r24
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:954
  int basket_normal = EEPROM_read_int(basket_normal_address);
    3822:	86 ea       	ldi	r24, 0xA6	; 166
    3824:	90 e0       	ldi	r25, 0x00	; 0
    3826:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    382a:	6c 01       	movw	r12, r24
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:955
  int arm_normal = EEPROM_read_int(arm_normal_address);
    382c:	88 ea       	ldi	r24, 0xA8	; 168
    382e:	90 e0       	ldi	r25, 0x00	; 0
    3830:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    3834:	4c 01       	movw	r8, r24
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:956
  int arm_down = EEPROM_read_int(arm_down_address);
    3836:	8a ea       	ldi	r24, 0xAA	; 170
    3838:	90 e0       	ldi	r25, 0x00	; 0
    383a:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    383e:	3c 01       	movw	r6, r24
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:957
  int arm_dropping = EEPROM_read_int(arm_dropping_address);
    3840:	8c ea       	ldi	r24, 0xAC	; 172
    3842:	90 e0       	ldi	r25, 0x00	; 0
    3844:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    3848:	2c 01       	movw	r4, r24
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:958
  int gripper_close = EEPROM_read_int(gripper_close_address);
    384a:	8e ea       	ldi	r24, 0xAE	; 174
    384c:	90 e0       	ldi	r25, 0x00	; 0
    384e:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    3852:	7c 01       	movw	r14, r24
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:959
  int gripper_open = EEPROM_read_int(gripper_open_address);
    3854:	80 eb       	ldi	r24, 0xB0	; 176
    3856:	90 e0       	ldi	r25, 0x00	; 0
    3858:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    385c:	8c 01       	movw	r16, r24
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:951
  }
}

void menu_motor(void) {
  static char page = 1, last_page = 8;
  signed int spd = 0;
    385e:	d0 e0       	ldi	r29, 0x00	; 0
    3860:	c0 e0       	ldi	r28, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1120
          gripper_close -= 5;
      } 
    }else if (page == 8)  // XL Gripper open 30 and 31
    {
      lcd.setCursor(0, 0);
      lcd.printf("gripper_open %d %4d", 10, gripper_open);
    3862:	8d e7       	ldi	r24, 0x7D	; 125
    3864:	28 2e       	mov	r2, r24
    3866:	8b e0       	ldi	r24, 0x0B	; 11
    3868:	38 2e       	mov	r3, r24
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:962
  int arm_dropping = EEPROM_read_int(arm_dropping_address);
  int gripper_close = EEPROM_read_int(gripper_close_address);
  int gripper_open = EEPROM_read_int(gripper_open_address);

  while (1) {
    if (next_page == 0) {
    386a:	88 e0       	ldi	r24, 0x08	; 8
    386c:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    3870:	89 2b       	or	r24, r25
    3872:	a9 f4       	brne	.+42     	; 0x389e <menu_motor()+0x8a>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:963
      while (next_page == 0)
    3874:	88 e0       	ldi	r24, 0x08	; 8
    3876:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    387a:	89 2b       	or	r24, r25
    387c:	d9 f3       	breq	.-10     	; 0x3874 <menu_motor()+0x60>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:965
        ;
      delay(50);
    387e:	62 e3       	ldi	r22, 0x32	; 50
    3880:	70 e0       	ldi	r23, 0x00	; 0
    3882:	80 e0       	ldi	r24, 0x00	; 0
    3884:	90 e0       	ldi	r25, 0x00	; 0
    3886:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:966
      page++;
    388a:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <menu_motor()::page>
    388e:	8f 5f       	subi	r24, 0xFF	; 255
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:967
      if (page > last_page)
    3890:	89 30       	cpi	r24, 0x09	; 9
    3892:	0c f0       	brlt	.+2      	; 0x3896 <menu_motor()+0x82>
    3894:	59 c0       	rjmp	.+178    	; 0x3948 <menu_motor()+0x134>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:968
        page = 1;
    3896:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <menu_motor()::page>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:969
      lcd.clear();
    389a:	0e 94 c4 05 	call	0xb88	; 0xb88 <LiquidCrystal::clear() [clone .constprop.32]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:972
    }

    if (previuse_page == 0) {
    389e:	89 e0       	ldi	r24, 0x09	; 9
    38a0:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    38a4:	89 2b       	or	r24, r25
    38a6:	a9 f4       	brne	.+42     	; 0x38d2 <menu_motor()+0xbe>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:973
      while (previuse_page == 0)
    38a8:	89 e0       	ldi	r24, 0x09	; 9
    38aa:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    38ae:	89 2b       	or	r24, r25
    38b0:	d9 f3       	breq	.-10     	; 0x38a8 <menu_motor()+0x94>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:975
        ;
      delay(50);
    38b2:	62 e3       	ldi	r22, 0x32	; 50
    38b4:	70 e0       	ldi	r23, 0x00	; 0
    38b6:	80 e0       	ldi	r24, 0x00	; 0
    38b8:	90 e0       	ldi	r25, 0x00	; 0
    38ba:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:976
      page--;
    38be:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <menu_motor()::page>
    38c2:	81 50       	subi	r24, 0x01	; 1
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:977
      if (page < 1)
    38c4:	18 16       	cp	r1, r24
    38c6:	0c f0       	brlt	.+2      	; 0x38ca <menu_motor()+0xb6>
    38c8:	41 c0       	rjmp	.+130    	; 0x394c <menu_motor()+0x138>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:978
        page = last_page;
    38ca:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <menu_motor()::page>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:979
      lcd.clear();
    38ce:	0e 94 c4 05 	call	0xb88	; 0xb88 <LiquidCrystal::clear() [clone .constprop.32]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:982
    }

    if (page == 1)  // go
    38d2:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <menu_motor()::page>
    38d6:	81 30       	cpi	r24, 0x01	; 1
    38d8:	09 f0       	breq	.+2      	; 0x38dc <menu_motor()+0xc8>
    38da:	44 c0       	rjmp	.+136    	; 0x3964 <menu_motor()+0x150>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:984
    {
      lcd.setCursor(0, 0);
    38dc:	60 e0       	ldi	r22, 0x00	; 0
    38de:	80 e0       	ldi	r24, 0x00	; 0
    38e0:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:985
      lcd.printf("go(%4d,%4d) ", spd, spd);
    38e4:	df 93       	push	r29
    38e6:	cf 93       	push	r28
    38e8:	df 93       	push	r29
    38ea:	cf 93       	push	r28
    38ec:	89 e8       	ldi	r24, 0x89	; 137
    38ee:	93 e0       	ldi	r25, 0x03	; 3
    38f0:	9f 93       	push	r25
    38f2:	8f 93       	push	r24
    38f4:	3f 92       	push	r3
    38f6:	2f 92       	push	r2
    38f8:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:986
      if (increase == 0) {
    38fc:	8a e0       	ldi	r24, 0x0A	; 10
    38fe:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    3902:	2d b7       	in	r18, 0x3d	; 61
    3904:	3e b7       	in	r19, 0x3e	; 62
    3906:	28 5f       	subi	r18, 0xF8	; 248
    3908:	3f 4f       	sbci	r19, 0xFF	; 255
    390a:	0f b6       	in	r0, 0x3f	; 63
    390c:	f8 94       	cli
    390e:	3e bf       	out	0x3e, r19	; 62
    3910:	0f be       	out	0x3f, r0	; 63
    3912:	2d bf       	out	0x3d, r18	; 61
    3914:	89 2b       	or	r24, r25
    3916:	e1 f4       	brne	.+56     	; 0x3950 <menu_motor()+0x13c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:987
        spd += 50;
    3918:	e2 96       	adiw	r28, 0x32	; 50
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:991
        delay(400);
      } else if (decrease == 0) {
        spd -= 50;
        delay(400);
    391a:	60 e9       	ldi	r22, 0x90	; 144
    391c:	71 e0       	ldi	r23, 0x01	; 1
    391e:	80 e0       	ldi	r24, 0x00	; 0
    3920:	90 e0       	ldi	r25, 0x00	; 0
    3922:	0e 94 24 03 	call	0x648	; 0x648 <delay>
    3926:	c1 30       	cpi	r28, 0x01	; 1
    3928:	3f ef       	ldi	r19, 0xFF	; 255
    392a:	d3 07       	cpc	r29, r19
    392c:	14 f4       	brge	.+4      	; 0x3932 <menu_motor()+0x11e>
    392e:	c1 e0       	ldi	r28, 0x01	; 1
    3930:	df ef       	ldi	r29, 0xFF	; 255
    3932:	cf 3f       	cpi	r28, 0xFF	; 255
    3934:	d1 05       	cpc	r29, r1
    3936:	19 f0       	breq	.+6      	; 0x393e <menu_motor()+0x12a>
    3938:	14 f0       	brlt	.+4      	; 0x393e <menu_motor()+0x12a>
    393a:	cf ef       	ldi	r28, 0xFF	; 255
    393c:	d0 e0       	ldi	r29, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1000
      if (spd > 255)
        spd = 255;
      if (spd < -255)
        spd = -255;

      go(spd, spd);
    393e:	be 01       	movw	r22, r28
    3940:	ce 01       	movw	r24, r28
    3942:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
    3946:	91 cf       	rjmp	.-222    	; 0x386a <menu_motor()+0x56>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:968
      while (next_page == 0)
        ;
      delay(50);
      page++;
      if (page > last_page)
        page = 1;
    3948:	81 e0       	ldi	r24, 0x01	; 1
    394a:	a5 cf       	rjmp	.-182    	; 0x3896 <menu_motor()+0x82>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:978
      while (previuse_page == 0)
        ;
      delay(50);
      page--;
      if (page < 1)
        page = last_page;
    394c:	88 e0       	ldi	r24, 0x08	; 8
    394e:	bd cf       	rjmp	.-134    	; 0x38ca <menu_motor()+0xb6>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:989
      lcd.setCursor(0, 0);
      lcd.printf("go(%4d,%4d) ", spd, spd);
      if (increase == 0) {
        spd += 50;
        delay(400);
      } else if (decrease == 0) {
    3950:	8b e0       	ldi	r24, 0x0B	; 11
    3952:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    3956:	89 2b       	or	r24, r25
    3958:	11 f4       	brne	.+4      	; 0x395e <menu_motor()+0x14a>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:990
        spd -= 50;
    395a:	e2 97       	sbiw	r28, 0x32	; 50
    395c:	de cf       	rjmp	.-68     	; 0x391a <menu_motor()+0x106>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:993
        delay(400);
      } else
        spd = 0;
    395e:	d0 e0       	ldi	r29, 0x00	; 0
    3960:	c0 e0       	ldi	r28, 0x00	; 0
    3962:	ed cf       	rjmp	.-38     	; 0x393e <menu_motor()+0x12a>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1002
      if (spd < -255)
        spd = -255;

      go(spd, spd);
    } 
    else if (page == 2)  // AX Basket ID=10
    3964:	82 30       	cpi	r24, 0x02	; 2
    3966:	09 f0       	breq	.+2      	; 0x396a <menu_motor()+0x156>
    3968:	55 c0       	rjmp	.+170    	; 0x3a14 <menu_motor()+0x200>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1004
    {
      lcd.setCursor(0, 0);
    396a:	60 e0       	ldi	r22, 0x00	; 0
    396c:	80 e0       	ldi	r24, 0x00	; 0
    396e:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1005
      lcd.printf("Basket up %d %4d", 10, basket_up);
    3972:	bf 92       	push	r11
    3974:	af 92       	push	r10
    3976:	1f 92       	push	r1
    3978:	8a e0       	ldi	r24, 0x0A	; 10
    397a:	8f 93       	push	r24
    397c:	86 e9       	ldi	r24, 0x96	; 150
    397e:	93 e0       	ldi	r25, 0x03	; 3
    3980:	9f 93       	push	r25
    3982:	8f 93       	push	r24
    3984:	3f 92       	push	r3
    3986:	2f 92       	push	r2
    3988:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1006
      if (start == 0) {
    398c:	86 e0       	ldi	r24, 0x06	; 6
    398e:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    3992:	2d b7       	in	r18, 0x3d	; 61
    3994:	3e b7       	in	r19, 0x3e	; 62
    3996:	28 5f       	subi	r18, 0xF8	; 248
    3998:	3f 4f       	sbci	r19, 0xFF	; 255
    399a:	0f b6       	in	r0, 0x3f	; 63
    399c:	f8 94       	cli
    399e:	3e bf       	out	0x3e, r19	; 62
    39a0:	0f be       	out	0x3f, r0	; 63
    39a2:	2d bf       	out	0x3d, r18	; 61
    39a4:	89 2b       	or	r24, r25
    39a6:	61 f4       	brne	.+24     	; 0x39c0 <menu_motor()+0x1ac>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1007
        EEPROM_write_int(basket_up_address, basket_up);
    39a8:	b5 01       	movw	r22, r10
    39aa:	84 ea       	ldi	r24, 0xA4	; 164
    39ac:	90 e0       	ldi	r25, 0x00	; 0
    39ae:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1008
        AX(10, basket_up, 150);
    39b2:	46 e9       	ldi	r20, 0x96	; 150
    39b4:	50 e0       	ldi	r21, 0x00	; 0
    39b6:	b5 01       	movw	r22, r10
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1028
    {
      lcd.setCursor(0, 0);
      lcd.printf("Basket normal %d %4d", 10, basket_normal);
      if (start == 0) {
        EEPROM_write_int(basket_normal_address, basket_normal);
        AX(10, basket_normal, 150);
    39b8:	8a e0       	ldi	r24, 0x0A	; 10
    39ba:	0e 94 cd 07 	call	0xf9a	; 0xf9a <AX(char, int, int)>
    39be:	55 cf       	rjmp	.-342    	; 0x386a <menu_motor()+0x56>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1011
      if (start == 0) {
        EEPROM_write_int(basket_up_address, basket_up);
        AX(10, basket_up, 150);
        
      }
      else if (increase == 0) {
    39c0:	8a e0       	ldi	r24, 0x0A	; 10
    39c2:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    39c6:	89 2b       	or	r24, r25
    39c8:	81 f4       	brne	.+32     	; 0x39ea <menu_motor()+0x1d6>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1012
        delay(50);
    39ca:	62 e3       	ldi	r22, 0x32	; 50
    39cc:	70 e0       	ldi	r23, 0x00	; 0
    39ce:	80 e0       	ldi	r24, 0x00	; 0
    39d0:	90 e0       	ldi	r25, 0x00	; 0
    39d2:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1013
        if (basket_up < 520)
    39d6:	38 e0       	ldi	r19, 0x08	; 8
    39d8:	a3 16       	cp	r10, r19
    39da:	32 e0       	ldi	r19, 0x02	; 2
    39dc:	b3 06       	cpc	r11, r19
    39de:	0c f0       	brlt	.+2      	; 0x39e2 <menu_motor()+0x1ce>
    39e0:	44 cf       	rjmp	.-376    	; 0x386a <menu_motor()+0x56>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1014
          basket_up += 5;
    39e2:	85 e0       	ldi	r24, 0x05	; 5
    39e4:	a8 0e       	add	r10, r24
    39e6:	b1 1c       	adc	r11, r1
    39e8:	40 cf       	rjmp	.-384    	; 0x386a <menu_motor()+0x56>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1015
      } else if (decrease == 0) {
    39ea:	8b e0       	ldi	r24, 0x0B	; 11
    39ec:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    39f0:	89 2b       	or	r24, r25
    39f2:	09 f0       	breq	.+2      	; 0x39f6 <menu_motor()+0x1e2>
    39f4:	3a cf       	rjmp	.-396    	; 0x386a <menu_motor()+0x56>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1016
        delay(50);
    39f6:	62 e3       	ldi	r22, 0x32	; 50
    39f8:	70 e0       	ldi	r23, 0x00	; 0
    39fa:	80 e0       	ldi	r24, 0x00	; 0
    39fc:	90 e0       	ldi	r25, 0x00	; 0
    39fe:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1018

        if (basket_up > 250)
    3a02:	9b ef       	ldi	r25, 0xFB	; 251
    3a04:	a9 16       	cp	r10, r25
    3a06:	b1 04       	cpc	r11, r1
    3a08:	0c f4       	brge	.+2      	; 0x3a0c <menu_motor()+0x1f8>
    3a0a:	2f cf       	rjmp	.-418    	; 0x386a <menu_motor()+0x56>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1019
          basket_up -= 5;
    3a0c:	25 e0       	ldi	r18, 0x05	; 5
    3a0e:	a2 1a       	sub	r10, r18
    3a10:	b1 08       	sbc	r11, r1
    3a12:	2b cf       	rjmp	.-426    	; 0x386a <menu_motor()+0x56>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1022
      } 

    } else if (page == 3)  // AX Basket Normal ID=10
    3a14:	83 30       	cpi	r24, 0x03	; 3
    3a16:	09 f0       	breq	.+2      	; 0x3a1a <menu_motor()+0x206>
    3a18:	52 c0       	rjmp	.+164    	; 0x3abe <menu_motor()+0x2aa>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1024
    {
      lcd.setCursor(0, 0);
    3a1a:	60 e0       	ldi	r22, 0x00	; 0
    3a1c:	80 e0       	ldi	r24, 0x00	; 0
    3a1e:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1025
      lcd.printf("Basket normal %d %4d", 10, basket_normal);
    3a22:	df 92       	push	r13
    3a24:	cf 92       	push	r12
    3a26:	1f 92       	push	r1
    3a28:	8a e0       	ldi	r24, 0x0A	; 10
    3a2a:	8f 93       	push	r24
    3a2c:	87 ea       	ldi	r24, 0xA7	; 167
    3a2e:	93 e0       	ldi	r25, 0x03	; 3
    3a30:	9f 93       	push	r25
    3a32:	8f 93       	push	r24
    3a34:	3f 92       	push	r3
    3a36:	2f 92       	push	r2
    3a38:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1026
      if (start == 0) {
    3a3c:	86 e0       	ldi	r24, 0x06	; 6
    3a3e:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    3a42:	2d b7       	in	r18, 0x3d	; 61
    3a44:	3e b7       	in	r19, 0x3e	; 62
    3a46:	28 5f       	subi	r18, 0xF8	; 248
    3a48:	3f 4f       	sbci	r19, 0xFF	; 255
    3a4a:	0f b6       	in	r0, 0x3f	; 63
    3a4c:	f8 94       	cli
    3a4e:	3e bf       	out	0x3e, r19	; 62
    3a50:	0f be       	out	0x3f, r0	; 63
    3a52:	2d bf       	out	0x3d, r18	; 61
    3a54:	89 2b       	or	r24, r25
    3a56:	49 f4       	brne	.+18     	; 0x3a6a <menu_motor()+0x256>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1027
        EEPROM_write_int(basket_normal_address, basket_normal);
    3a58:	b6 01       	movw	r22, r12
    3a5a:	86 ea       	ldi	r24, 0xA6	; 166
    3a5c:	90 e0       	ldi	r25, 0x00	; 0
    3a5e:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1028
        AX(10, basket_normal, 150);
    3a62:	46 e9       	ldi	r20, 0x96	; 150
    3a64:	50 e0       	ldi	r21, 0x00	; 0
    3a66:	b6 01       	movw	r22, r12
    3a68:	a7 cf       	rjmp	.-178    	; 0x39b8 <menu_motor()+0x1a4>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1030
      }
      else if (increase == 0) {
    3a6a:	8a e0       	ldi	r24, 0x0A	; 10
    3a6c:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    3a70:	89 2b       	or	r24, r25
    3a72:	81 f4       	brne	.+32     	; 0x3a94 <menu_motor()+0x280>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1031
        delay(50);
    3a74:	62 e3       	ldi	r22, 0x32	; 50
    3a76:	70 e0       	ldi	r23, 0x00	; 0
    3a78:	80 e0       	ldi	r24, 0x00	; 0
    3a7a:	90 e0       	ldi	r25, 0x00	; 0
    3a7c:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1032
        if (basket_normal < 520)
    3a80:	38 e0       	ldi	r19, 0x08	; 8
    3a82:	c3 16       	cp	r12, r19
    3a84:	32 e0       	ldi	r19, 0x02	; 2
    3a86:	d3 06       	cpc	r13, r19
    3a88:	0c f0       	brlt	.+2      	; 0x3a8c <menu_motor()+0x278>
    3a8a:	ef ce       	rjmp	.-546    	; 0x386a <menu_motor()+0x56>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1033
          basket_normal += 5;
    3a8c:	85 e0       	ldi	r24, 0x05	; 5
    3a8e:	c8 0e       	add	r12, r24
    3a90:	d1 1c       	adc	r13, r1
    3a92:	eb ce       	rjmp	.-554    	; 0x386a <menu_motor()+0x56>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1034
      } else if (decrease == 0) {
    3a94:	8b e0       	ldi	r24, 0x0B	; 11
    3a96:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    3a9a:	89 2b       	or	r24, r25
    3a9c:	09 f0       	breq	.+2      	; 0x3aa0 <menu_motor()+0x28c>
    3a9e:	e5 ce       	rjmp	.-566    	; 0x386a <menu_motor()+0x56>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1035
        delay(50);
    3aa0:	62 e3       	ldi	r22, 0x32	; 50
    3aa2:	70 e0       	ldi	r23, 0x00	; 0
    3aa4:	80 e0       	ldi	r24, 0x00	; 0
    3aa6:	90 e0       	ldi	r25, 0x00	; 0
    3aa8:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1037

        if (basket_normal > 250)
    3aac:	9b ef       	ldi	r25, 0xFB	; 251
    3aae:	c9 16       	cp	r12, r25
    3ab0:	d1 04       	cpc	r13, r1
    3ab2:	0c f4       	brge	.+2      	; 0x3ab6 <menu_motor()+0x2a2>
    3ab4:	da ce       	rjmp	.-588    	; 0x386a <menu_motor()+0x56>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1038
          basket_normal -= 5;
    3ab6:	25 e0       	ldi	r18, 0x05	; 5
    3ab8:	c2 1a       	sub	r12, r18
    3aba:	d1 08       	sbc	r13, r1
    3abc:	d6 ce       	rjmp	.-596    	; 0x386a <menu_motor()+0x56>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1041
      } 

    }else if (page == 4)  // AX Arm Normal ID=11
    3abe:	84 30       	cpi	r24, 0x04	; 4
    3ac0:	09 f0       	breq	.+2      	; 0x3ac4 <menu_motor()+0x2b0>
    3ac2:	55 c0       	rjmp	.+170    	; 0x3b6e <menu_motor()+0x35a>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1043
    {
      lcd.setCursor(0, 0);
    3ac4:	60 e0       	ldi	r22, 0x00	; 0
    3ac6:	80 e0       	ldi	r24, 0x00	; 0
    3ac8:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1044
      lcd.printf("arm normal %d %4d", 10, arm_normal);
    3acc:	9f 92       	push	r9
    3ace:	8f 92       	push	r8
    3ad0:	1f 92       	push	r1
    3ad2:	8a e0       	ldi	r24, 0x0A	; 10
    3ad4:	8f 93       	push	r24
    3ad6:	8c eb       	ldi	r24, 0xBC	; 188
    3ad8:	93 e0       	ldi	r25, 0x03	; 3
    3ada:	9f 93       	push	r25
    3adc:	8f 93       	push	r24
    3ade:	3f 92       	push	r3
    3ae0:	2f 92       	push	r2
    3ae2:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1045
      if (start == 0) {
    3ae6:	86 e0       	ldi	r24, 0x06	; 6
    3ae8:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    3aec:	2d b7       	in	r18, 0x3d	; 61
    3aee:	3e b7       	in	r19, 0x3e	; 62
    3af0:	28 5f       	subi	r18, 0xF8	; 248
    3af2:	3f 4f       	sbci	r19, 0xFF	; 255
    3af4:	0f b6       	in	r0, 0x3f	; 63
    3af6:	f8 94       	cli
    3af8:	3e bf       	out	0x3e, r19	; 62
    3afa:	0f be       	out	0x3f, r0	; 63
    3afc:	2d bf       	out	0x3d, r18	; 61
    3afe:	89 2b       	or	r24, r25
    3b00:	61 f4       	brne	.+24     	; 0x3b1a <menu_motor()+0x306>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1046
        AX(11, arm_normal, 150);
    3b02:	46 e9       	ldi	r20, 0x96	; 150
    3b04:	50 e0       	ldi	r21, 0x00	; 0
    3b06:	b4 01       	movw	r22, r8
    3b08:	8b e0       	ldi	r24, 0x0B	; 11
    3b0a:	0e 94 cd 07 	call	0xf9a	; 0xf9a <AX(char, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1047
        EEPROM_write_int(arm_normal_address, arm_normal);
    3b0e:	b4 01       	movw	r22, r8
    3b10:	88 ea       	ldi	r24, 0xA8	; 168
    3b12:	90 e0       	ldi	r25, 0x00	; 0
    3b14:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
    3b18:	a8 ce       	rjmp	.-688    	; 0x386a <menu_motor()+0x56>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1049
      }
      else if (increase == 0) {
    3b1a:	8a e0       	ldi	r24, 0x0A	; 10
    3b1c:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    3b20:	89 2b       	or	r24, r25
    3b22:	81 f4       	brne	.+32     	; 0x3b44 <menu_motor()+0x330>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1050
        delay(50);
    3b24:	62 e3       	ldi	r22, 0x32	; 50
    3b26:	70 e0       	ldi	r23, 0x00	; 0
    3b28:	80 e0       	ldi	r24, 0x00	; 0
    3b2a:	90 e0       	ldi	r25, 0x00	; 0
    3b2c:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1051
        if (arm_normal < 800)
    3b30:	30 e2       	ldi	r19, 0x20	; 32
    3b32:	83 16       	cp	r8, r19
    3b34:	33 e0       	ldi	r19, 0x03	; 3
    3b36:	93 06       	cpc	r9, r19
    3b38:	0c f0       	brlt	.+2      	; 0x3b3c <menu_motor()+0x328>
    3b3a:	97 ce       	rjmp	.-722    	; 0x386a <menu_motor()+0x56>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1052
          arm_normal += 5;
    3b3c:	85 e0       	ldi	r24, 0x05	; 5
    3b3e:	88 0e       	add	r8, r24
    3b40:	91 1c       	adc	r9, r1
    3b42:	93 ce       	rjmp	.-730    	; 0x386a <menu_motor()+0x56>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1053
      } else if (decrease == 0) {
    3b44:	8b e0       	ldi	r24, 0x0B	; 11
    3b46:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    3b4a:	89 2b       	or	r24, r25
    3b4c:	09 f0       	breq	.+2      	; 0x3b50 <menu_motor()+0x33c>
    3b4e:	8d ce       	rjmp	.-742    	; 0x386a <menu_motor()+0x56>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1054
        delay(50);
    3b50:	62 e3       	ldi	r22, 0x32	; 50
    3b52:	70 e0       	ldi	r23, 0x00	; 0
    3b54:	80 e0       	ldi	r24, 0x00	; 0
    3b56:	90 e0       	ldi	r25, 0x00	; 0
    3b58:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1056

        if (arm_normal > 150)
    3b5c:	97 e9       	ldi	r25, 0x97	; 151
    3b5e:	89 16       	cp	r8, r25
    3b60:	91 04       	cpc	r9, r1
    3b62:	0c f4       	brge	.+2      	; 0x3b66 <menu_motor()+0x352>
    3b64:	82 ce       	rjmp	.-764    	; 0x386a <menu_motor()+0x56>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1057
          arm_normal -= 5;
    3b66:	25 e0       	ldi	r18, 0x05	; 5
    3b68:	82 1a       	sub	r8, r18
    3b6a:	91 08       	sbc	r9, r1
    3b6c:	7e ce       	rjmp	.-772    	; 0x386a <menu_motor()+0x56>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1060
      } 

    }else if (page == 5)  // AX Arm down ID=11
    3b6e:	85 30       	cpi	r24, 0x05	; 5
    3b70:	09 f0       	breq	.+2      	; 0x3b74 <menu_motor()+0x360>
    3b72:	53 c0       	rjmp	.+166    	; 0x3c1a <menu_motor()+0x406>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1062
    {
      lcd.setCursor(0, 0);
    3b74:	60 e0       	ldi	r22, 0x00	; 0
    3b76:	80 e0       	ldi	r24, 0x00	; 0
    3b78:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1063
      lcd.printf("arm_down %d %4d", 10, arm_down);
    3b7c:	7f 92       	push	r7
    3b7e:	6f 92       	push	r6
    3b80:	1f 92       	push	r1
    3b82:	8a e0       	ldi	r24, 0x0A	; 10
    3b84:	8f 93       	push	r24
    3b86:	8e ec       	ldi	r24, 0xCE	; 206
    3b88:	93 e0       	ldi	r25, 0x03	; 3
    3b8a:	9f 93       	push	r25
    3b8c:	8f 93       	push	r24
    3b8e:	3f 92       	push	r3
    3b90:	2f 92       	push	r2
    3b92:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1064
      if (start == 0) {
    3b96:	86 e0       	ldi	r24, 0x06	; 6
    3b98:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    3b9c:	2d b7       	in	r18, 0x3d	; 61
    3b9e:	3e b7       	in	r19, 0x3e	; 62
    3ba0:	28 5f       	subi	r18, 0xF8	; 248
    3ba2:	3f 4f       	sbci	r19, 0xFF	; 255
    3ba4:	0f b6       	in	r0, 0x3f	; 63
    3ba6:	f8 94       	cli
    3ba8:	3e bf       	out	0x3e, r19	; 62
    3baa:	0f be       	out	0x3f, r0	; 63
    3bac:	2d bf       	out	0x3d, r18	; 61
    3bae:	89 2b       	or	r24, r25
    3bb0:	51 f4       	brne	.+20     	; 0x3bc6 <menu_motor()+0x3b2>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1065
        EEPROM_write_int(arm_down_address, arm_down);
    3bb2:	b3 01       	movw	r22, r6
    3bb4:	8a ea       	ldi	r24, 0xAA	; 170
    3bb6:	90 e0       	ldi	r25, 0x00	; 0
    3bb8:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1066
        AX(11, arm_down, 150);
    3bbc:	46 e9       	ldi	r20, 0x96	; 150
    3bbe:	50 e0       	ldi	r21, 0x00	; 0
    3bc0:	b3 01       	movw	r22, r6
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1085
    {
      lcd.setCursor(0, 0);
      lcd.printf("arm_dropping %d %4d", 10, arm_dropping);
      if (start == 0) {
        EEPROM_write_int(arm_dropping_address, arm_dropping);
        AX(11, arm_dropping, 150);
    3bc2:	8b e0       	ldi	r24, 0x0B	; 11
    3bc4:	fa ce       	rjmp	.-524    	; 0x39ba <menu_motor()+0x1a6>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1068
      lcd.printf("arm_down %d %4d", 10, arm_down);
      if (start == 0) {
        EEPROM_write_int(arm_down_address, arm_down);
        AX(11, arm_down, 150);
      }
      else if (increase == 0) {
    3bc6:	8a e0       	ldi	r24, 0x0A	; 10
    3bc8:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    3bcc:	89 2b       	or	r24, r25
    3bce:	81 f4       	brne	.+32     	; 0x3bf0 <menu_motor()+0x3dc>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1069
        delay(50);
    3bd0:	62 e3       	ldi	r22, 0x32	; 50
    3bd2:	70 e0       	ldi	r23, 0x00	; 0
    3bd4:	80 e0       	ldi	r24, 0x00	; 0
    3bd6:	90 e0       	ldi	r25, 0x00	; 0
    3bd8:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1070
        if (arm_down < 800)
    3bdc:	30 e2       	ldi	r19, 0x20	; 32
    3bde:	63 16       	cp	r6, r19
    3be0:	33 e0       	ldi	r19, 0x03	; 3
    3be2:	73 06       	cpc	r7, r19
    3be4:	0c f0       	brlt	.+2      	; 0x3be8 <menu_motor()+0x3d4>
    3be6:	41 ce       	rjmp	.-894    	; 0x386a <menu_motor()+0x56>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1071
          arm_down += 5;
    3be8:	85 e0       	ldi	r24, 0x05	; 5
    3bea:	68 0e       	add	r6, r24
    3bec:	71 1c       	adc	r7, r1
    3bee:	3d ce       	rjmp	.-902    	; 0x386a <menu_motor()+0x56>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1072
      } else if (decrease == 0) {
    3bf0:	8b e0       	ldi	r24, 0x0B	; 11
    3bf2:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    3bf6:	89 2b       	or	r24, r25
    3bf8:	09 f0       	breq	.+2      	; 0x3bfc <menu_motor()+0x3e8>
    3bfa:	37 ce       	rjmp	.-914    	; 0x386a <menu_motor()+0x56>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1073
        delay(50);
    3bfc:	62 e3       	ldi	r22, 0x32	; 50
    3bfe:	70 e0       	ldi	r23, 0x00	; 0
    3c00:	80 e0       	ldi	r24, 0x00	; 0
    3c02:	90 e0       	ldi	r25, 0x00	; 0
    3c04:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1075

        if (arm_down > 150)
    3c08:	97 e9       	ldi	r25, 0x97	; 151
    3c0a:	69 16       	cp	r6, r25
    3c0c:	71 04       	cpc	r7, r1
    3c0e:	0c f4       	brge	.+2      	; 0x3c12 <menu_motor()+0x3fe>
    3c10:	2c ce       	rjmp	.-936    	; 0x386a <menu_motor()+0x56>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1076
          arm_down -= 5;
    3c12:	25 e0       	ldi	r18, 0x05	; 5
    3c14:	62 1a       	sub	r6, r18
    3c16:	71 08       	sbc	r7, r1
    3c18:	28 ce       	rjmp	.-944    	; 0x386a <menu_motor()+0x56>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1079
      } 

    }else if (page == 6)  // AX Arm dropping ID=11
    3c1a:	86 30       	cpi	r24, 0x06	; 6
    3c1c:	09 f0       	breq	.+2      	; 0x3c20 <menu_motor()+0x40c>
    3c1e:	52 c0       	rjmp	.+164    	; 0x3cc4 <menu_motor()+0x4b0>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1081
    {
      lcd.setCursor(0, 0);
    3c20:	60 e0       	ldi	r22, 0x00	; 0
    3c22:	80 e0       	ldi	r24, 0x00	; 0
    3c24:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1082
      lcd.printf("arm_dropping %d %4d", 10, arm_dropping);
    3c28:	5f 92       	push	r5
    3c2a:	4f 92       	push	r4
    3c2c:	1f 92       	push	r1
    3c2e:	8a e0       	ldi	r24, 0x0A	; 10
    3c30:	8f 93       	push	r24
    3c32:	8e ed       	ldi	r24, 0xDE	; 222
    3c34:	93 e0       	ldi	r25, 0x03	; 3
    3c36:	9f 93       	push	r25
    3c38:	8f 93       	push	r24
    3c3a:	3f 92       	push	r3
    3c3c:	2f 92       	push	r2
    3c3e:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1083
      if (start == 0) {
    3c42:	86 e0       	ldi	r24, 0x06	; 6
    3c44:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    3c48:	2d b7       	in	r18, 0x3d	; 61
    3c4a:	3e b7       	in	r19, 0x3e	; 62
    3c4c:	28 5f       	subi	r18, 0xF8	; 248
    3c4e:	3f 4f       	sbci	r19, 0xFF	; 255
    3c50:	0f b6       	in	r0, 0x3f	; 63
    3c52:	f8 94       	cli
    3c54:	3e bf       	out	0x3e, r19	; 62
    3c56:	0f be       	out	0x3f, r0	; 63
    3c58:	2d bf       	out	0x3d, r18	; 61
    3c5a:	89 2b       	or	r24, r25
    3c5c:	49 f4       	brne	.+18     	; 0x3c70 <menu_motor()+0x45c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1084
        EEPROM_write_int(arm_dropping_address, arm_dropping);
    3c5e:	b2 01       	movw	r22, r4
    3c60:	8c ea       	ldi	r24, 0xAC	; 172
    3c62:	90 e0       	ldi	r25, 0x00	; 0
    3c64:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1085
        AX(11, arm_dropping, 150);
    3c68:	46 e9       	ldi	r20, 0x96	; 150
    3c6a:	50 e0       	ldi	r21, 0x00	; 0
    3c6c:	b2 01       	movw	r22, r4
    3c6e:	a9 cf       	rjmp	.-174    	; 0x3bc2 <menu_motor()+0x3ae>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1087
      }
      else if (increase == 0) {
    3c70:	8a e0       	ldi	r24, 0x0A	; 10
    3c72:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    3c76:	89 2b       	or	r24, r25
    3c78:	81 f4       	brne	.+32     	; 0x3c9a <menu_motor()+0x486>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1088
        delay(50);
    3c7a:	62 e3       	ldi	r22, 0x32	; 50
    3c7c:	70 e0       	ldi	r23, 0x00	; 0
    3c7e:	80 e0       	ldi	r24, 0x00	; 0
    3c80:	90 e0       	ldi	r25, 0x00	; 0
    3c82:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1089
        if (arm_dropping < 800)
    3c86:	30 e2       	ldi	r19, 0x20	; 32
    3c88:	43 16       	cp	r4, r19
    3c8a:	33 e0       	ldi	r19, 0x03	; 3
    3c8c:	53 06       	cpc	r5, r19
    3c8e:	0c f0       	brlt	.+2      	; 0x3c92 <menu_motor()+0x47e>
    3c90:	ec cd       	rjmp	.-1064   	; 0x386a <menu_motor()+0x56>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1090
          arm_dropping += 5;
    3c92:	85 e0       	ldi	r24, 0x05	; 5
    3c94:	48 0e       	add	r4, r24
    3c96:	51 1c       	adc	r5, r1
    3c98:	e8 cd       	rjmp	.-1072   	; 0x386a <menu_motor()+0x56>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1091
      } else if (decrease == 0) {
    3c9a:	8b e0       	ldi	r24, 0x0B	; 11
    3c9c:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    3ca0:	89 2b       	or	r24, r25
    3ca2:	09 f0       	breq	.+2      	; 0x3ca6 <menu_motor()+0x492>
    3ca4:	e2 cd       	rjmp	.-1084   	; 0x386a <menu_motor()+0x56>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1092
        delay(50);
    3ca6:	62 e3       	ldi	r22, 0x32	; 50
    3ca8:	70 e0       	ldi	r23, 0x00	; 0
    3caa:	80 e0       	ldi	r24, 0x00	; 0
    3cac:	90 e0       	ldi	r25, 0x00	; 0
    3cae:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1094

        if (arm_dropping > 150)
    3cb2:	97 e9       	ldi	r25, 0x97	; 151
    3cb4:	49 16       	cp	r4, r25
    3cb6:	51 04       	cpc	r5, r1
    3cb8:	0c f4       	brge	.+2      	; 0x3cbc <menu_motor()+0x4a8>
    3cba:	d7 cd       	rjmp	.-1106   	; 0x386a <menu_motor()+0x56>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1095
          arm_dropping -= 5;
    3cbc:	25 e0       	ldi	r18, 0x05	; 5
    3cbe:	42 1a       	sub	r4, r18
    3cc0:	51 08       	sbc	r5, r1
    3cc2:	d3 cd       	rjmp	.-1114   	; 0x386a <menu_motor()+0x56>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1098
      } 

    }else if (page == 7)  // XL Gripper close 30 and 31
    3cc4:	87 30       	cpi	r24, 0x07	; 7
    3cc6:	09 f0       	breq	.+2      	; 0x3cca <menu_motor()+0x4b6>
    3cc8:	65 c0       	rjmp	.+202    	; 0x3d94 <menu_motor()+0x580>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1100
    {
      lcd.setCursor(0, 0);
    3cca:	60 e0       	ldi	r22, 0x00	; 0
    3ccc:	80 e0       	ldi	r24, 0x00	; 0
    3cce:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1101
      lcd.printf("gripper_close %d %4d", 10, gripper_close);
    3cd2:	ff 92       	push	r15
    3cd4:	ef 92       	push	r14
    3cd6:	1f 92       	push	r1
    3cd8:	8a e0       	ldi	r24, 0x0A	; 10
    3cda:	8f 93       	push	r24
    3cdc:	82 ef       	ldi	r24, 0xF2	; 242
    3cde:	93 e0       	ldi	r25, 0x03	; 3
    3ce0:	9f 93       	push	r25
    3ce2:	8f 93       	push	r24
    3ce4:	3f 92       	push	r3
    3ce6:	2f 92       	push	r2
    3ce8:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1102
      if (start == 0) {
    3cec:	86 e0       	ldi	r24, 0x06	; 6
    3cee:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    3cf2:	2d b7       	in	r18, 0x3d	; 61
    3cf4:	3e b7       	in	r19, 0x3e	; 62
    3cf6:	28 5f       	subi	r18, 0xF8	; 248
    3cf8:	3f 4f       	sbci	r19, 0xFF	; 255
    3cfa:	0f b6       	in	r0, 0x3f	; 63
    3cfc:	f8 94       	cli
    3cfe:	3e bf       	out	0x3e, r19	; 62
    3d00:	0f be       	out	0x3f, r0	; 63
    3d02:	2d bf       	out	0x3d, r18	; 61
    3d04:	89 2b       	or	r24, r25
    3d06:	d9 f4       	brne	.+54     	; 0x3d3e <menu_motor()+0x52a>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1103
        EEPROM_write_int(gripper_close_address, gripper_close);
    3d08:	b7 01       	movw	r22, r14
    3d0a:	8e ea       	ldi	r24, 0xAE	; 174
    3d0c:	90 e0       	ldi	r25, 0x00	; 0
    3d0e:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1104
        XL_Gripper(30, gripper_close, 100);delay(50);
    3d12:	44 e6       	ldi	r20, 0x64	; 100
    3d14:	50 e0       	ldi	r21, 0x00	; 0
    3d16:	b7 01       	movw	r22, r14
    3d18:	8e e1       	ldi	r24, 0x1E	; 30
    3d1a:	0e 94 44 08 	call	0x1088	; 0x1088 <XL_Gripper(char, int, int)>
    3d1e:	62 e3       	ldi	r22, 0x32	; 50
    3d20:	70 e0       	ldi	r23, 0x00	; 0
    3d22:	80 e0       	ldi	r24, 0x00	; 0
    3d24:	90 e0       	ldi	r25, 0x00	; 0
    3d26:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1105
        XL_Gripper(31, 1023 - gripper_close+xl_error, 100);
    3d2a:	44 e6       	ldi	r20, 0x64	; 100
    3d2c:	50 e0       	ldi	r21, 0x00	; 0
    3d2e:	65 e4       	ldi	r22, 0x45	; 69
    3d30:	74 e0       	ldi	r23, 0x04	; 4
    3d32:	6e 19       	sub	r22, r14
    3d34:	7f 09       	sbc	r23, r15
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1124
      lcd.setCursor(0, 0);
      lcd.printf("gripper_open %d %4d", 10, gripper_open);
      if (start == 0) {
        EEPROM_write_int(gripper_open_address, gripper_open);
        XL_Gripper(30, gripper_open, 100);delay(50);
        XL_Gripper(31, 1023 - gripper_open+xl_error, 100);
    3d36:	8f e1       	ldi	r24, 0x1F	; 31
    3d38:	0e 94 44 08 	call	0x1088	; 0x1088 <XL_Gripper(char, int, int)>
    3d3c:	96 cd       	rjmp	.-1236   	; 0x386a <menu_motor()+0x56>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1107
      if (start == 0) {
        EEPROM_write_int(gripper_close_address, gripper_close);
        XL_Gripper(30, gripper_close, 100);delay(50);
        XL_Gripper(31, 1023 - gripper_close+xl_error, 100);
      }
      else if (increase == 0) {
    3d3e:	8a e0       	ldi	r24, 0x0A	; 10
    3d40:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    3d44:	89 2b       	or	r24, r25
    3d46:	81 f4       	brne	.+32     	; 0x3d68 <menu_motor()+0x554>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1108
        delay(50);
    3d48:	62 e3       	ldi	r22, 0x32	; 50
    3d4a:	70 e0       	ldi	r23, 0x00	; 0
    3d4c:	80 e0       	ldi	r24, 0x00	; 0
    3d4e:	90 e0       	ldi	r25, 0x00	; 0
    3d50:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1109
        if (gripper_close < 890)
    3d54:	3a e7       	ldi	r19, 0x7A	; 122
    3d56:	e3 16       	cp	r14, r19
    3d58:	33 e0       	ldi	r19, 0x03	; 3
    3d5a:	f3 06       	cpc	r15, r19
    3d5c:	0c f0       	brlt	.+2      	; 0x3d60 <menu_motor()+0x54c>
    3d5e:	85 cd       	rjmp	.-1270   	; 0x386a <menu_motor()+0x56>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1110
          gripper_close += 5;
    3d60:	85 e0       	ldi	r24, 0x05	; 5
    3d62:	e8 0e       	add	r14, r24
    3d64:	f1 1c       	adc	r15, r1
    3d66:	81 cd       	rjmp	.-1278   	; 0x386a <menu_motor()+0x56>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1111
      } else if (decrease == 0) {
    3d68:	8b e0       	ldi	r24, 0x0B	; 11
    3d6a:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    3d6e:	89 2b       	or	r24, r25
    3d70:	09 f0       	breq	.+2      	; 0x3d74 <menu_motor()+0x560>
    3d72:	7b cd       	rjmp	.-1290   	; 0x386a <menu_motor()+0x56>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1112
        delay(50);
    3d74:	62 e3       	ldi	r22, 0x32	; 50
    3d76:	70 e0       	ldi	r23, 0x00	; 0
    3d78:	80 e0       	ldi	r24, 0x00	; 0
    3d7a:	90 e0       	ldi	r25, 0x00	; 0
    3d7c:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1114

        if (gripper_close > 570)
    3d80:	9b e3       	ldi	r25, 0x3B	; 59
    3d82:	e9 16       	cp	r14, r25
    3d84:	92 e0       	ldi	r25, 0x02	; 2
    3d86:	f9 06       	cpc	r15, r25
    3d88:	0c f4       	brge	.+2      	; 0x3d8c <menu_motor()+0x578>
    3d8a:	6f cd       	rjmp	.-1314   	; 0x386a <menu_motor()+0x56>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1115
          gripper_close -= 5;
    3d8c:	25 e0       	ldi	r18, 0x05	; 5
    3d8e:	e2 1a       	sub	r14, r18
    3d90:	f1 08       	sbc	r15, r1
    3d92:	6b cd       	rjmp	.-1322   	; 0x386a <menu_motor()+0x56>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1117
      } 
    }else if (page == 8)  // XL Gripper open 30 and 31
    3d94:	88 30       	cpi	r24, 0x08	; 8
    3d96:	09 f0       	breq	.+2      	; 0x3d9a <menu_motor()+0x586>
    3d98:	68 cd       	rjmp	.-1328   	; 0x386a <menu_motor()+0x56>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1119
    {
      lcd.setCursor(0, 0);
    3d9a:	60 e0       	ldi	r22, 0x00	; 0
    3d9c:	80 e0       	ldi	r24, 0x00	; 0
    3d9e:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1120
      lcd.printf("gripper_open %d %4d", 10, gripper_open);
    3da2:	1f 93       	push	r17
    3da4:	0f 93       	push	r16
    3da6:	1f 92       	push	r1
    3da8:	8a e0       	ldi	r24, 0x0A	; 10
    3daa:	8f 93       	push	r24
    3dac:	87 e0       	ldi	r24, 0x07	; 7
    3dae:	94 e0       	ldi	r25, 0x04	; 4
    3db0:	9f 93       	push	r25
    3db2:	8f 93       	push	r24
    3db4:	3f 92       	push	r3
    3db6:	2f 92       	push	r2
    3db8:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1121
      if (start == 0) {
    3dbc:	86 e0       	ldi	r24, 0x06	; 6
    3dbe:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    3dc2:	2d b7       	in	r18, 0x3d	; 61
    3dc4:	3e b7       	in	r19, 0x3e	; 62
    3dc6:	28 5f       	subi	r18, 0xF8	; 248
    3dc8:	3f 4f       	sbci	r19, 0xFF	; 255
    3dca:	0f b6       	in	r0, 0x3f	; 63
    3dcc:	f8 94       	cli
    3dce:	3e bf       	out	0x3e, r19	; 62
    3dd0:	0f be       	out	0x3f, r0	; 63
    3dd2:	2d bf       	out	0x3d, r18	; 61
    3dd4:	89 2b       	or	r24, r25
    3dd6:	c1 f4       	brne	.+48     	; 0x3e08 <menu_motor()+0x5f4>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1122
        EEPROM_write_int(gripper_open_address, gripper_open);
    3dd8:	b8 01       	movw	r22, r16
    3dda:	80 eb       	ldi	r24, 0xB0	; 176
    3ddc:	90 e0       	ldi	r25, 0x00	; 0
    3dde:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1123
        XL_Gripper(30, gripper_open, 100);delay(50);
    3de2:	44 e6       	ldi	r20, 0x64	; 100
    3de4:	50 e0       	ldi	r21, 0x00	; 0
    3de6:	b8 01       	movw	r22, r16
    3de8:	8e e1       	ldi	r24, 0x1E	; 30
    3dea:	0e 94 44 08 	call	0x1088	; 0x1088 <XL_Gripper(char, int, int)>
    3dee:	62 e3       	ldi	r22, 0x32	; 50
    3df0:	70 e0       	ldi	r23, 0x00	; 0
    3df2:	80 e0       	ldi	r24, 0x00	; 0
    3df4:	90 e0       	ldi	r25, 0x00	; 0
    3df6:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1124
        XL_Gripper(31, 1023 - gripper_open+xl_error, 100);
    3dfa:	44 e6       	ldi	r20, 0x64	; 100
    3dfc:	50 e0       	ldi	r21, 0x00	; 0
    3dfe:	65 e4       	ldi	r22, 0x45	; 69
    3e00:	74 e0       	ldi	r23, 0x04	; 4
    3e02:	60 1b       	sub	r22, r16
    3e04:	71 0b       	sbc	r23, r17
    3e06:	97 cf       	rjmp	.-210    	; 0x3d36 <menu_motor()+0x522>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1126
      }
      else if (increase == 0) {
    3e08:	8a e0       	ldi	r24, 0x0A	; 10
    3e0a:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    3e0e:	89 2b       	or	r24, r25
    3e10:	71 f4       	brne	.+28     	; 0x3e2e <menu_motor()+0x61a>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1127
        delay(50);
    3e12:	62 e3       	ldi	r22, 0x32	; 50
    3e14:	70 e0       	ldi	r23, 0x00	; 0
    3e16:	80 e0       	ldi	r24, 0x00	; 0
    3e18:	90 e0       	ldi	r25, 0x00	; 0
    3e1a:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1128
        if (gripper_open < 890)
    3e1e:	0a 37       	cpi	r16, 0x7A	; 122
    3e20:	33 e0       	ldi	r19, 0x03	; 3
    3e22:	13 07       	cpc	r17, r19
    3e24:	0c f0       	brlt	.+2      	; 0x3e28 <menu_motor()+0x614>
    3e26:	21 cd       	rjmp	.-1470   	; 0x386a <menu_motor()+0x56>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1129
          gripper_open += 5;
    3e28:	0b 5f       	subi	r16, 0xFB	; 251
    3e2a:	1f 4f       	sbci	r17, 0xFF	; 255
    3e2c:	1e cd       	rjmp	.-1476   	; 0x386a <menu_motor()+0x56>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1130
      } else if (decrease == 0) {
    3e2e:	8b e0       	ldi	r24, 0x0B	; 11
    3e30:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    3e34:	89 2b       	or	r24, r25
    3e36:	09 f0       	breq	.+2      	; 0x3e3a <menu_motor()+0x626>
    3e38:	18 cd       	rjmp	.-1488   	; 0x386a <menu_motor()+0x56>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1131
        delay(50);
    3e3a:	62 e3       	ldi	r22, 0x32	; 50
    3e3c:	70 e0       	ldi	r23, 0x00	; 0
    3e3e:	80 e0       	ldi	r24, 0x00	; 0
    3e40:	90 e0       	ldi	r25, 0x00	; 0
    3e42:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1133

        if (gripper_open > 570)
    3e46:	0b 33       	cpi	r16, 0x3B	; 59
    3e48:	82 e0       	ldi	r24, 0x02	; 2
    3e4a:	18 07       	cpc	r17, r24
    3e4c:	0c f4       	brge	.+2      	; 0x3e50 <menu_motor()+0x63c>
    3e4e:	0d cd       	rjmp	.-1510   	; 0x386a <menu_motor()+0x56>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1134
          gripper_open -= 5;
    3e50:	05 50       	subi	r16, 0x05	; 5
    3e52:	11 09       	sbc	r17, r1
    3e54:	0a cd       	rjmp	.-1516   	; 0x386a <menu_motor()+0x56>

00003e56 <check_while()>:
check_while():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2651
        }
    

  }
void check_while(void)
{
    3e56:	2f 92       	push	r2
    3e58:	3f 92       	push	r3
    3e5a:	4f 92       	push	r4
    3e5c:	5f 92       	push	r5
    3e5e:	6f 92       	push	r6
    3e60:	7f 92       	push	r7
    3e62:	8f 92       	push	r8
    3e64:	9f 92       	push	r9
    3e66:	af 92       	push	r10
    3e68:	bf 92       	push	r11
    3e6a:	cf 92       	push	r12
    3e6c:	df 92       	push	r13
    3e6e:	ef 92       	push	r14
    3e70:	ff 92       	push	r15
    3e72:	0f 93       	push	r16
    3e74:	1f 93       	push	r17
    3e76:	cf 93       	push	r28
    3e78:	df 93       	push	r29
    3e7a:	cd b7       	in	r28, 0x3d	; 61
    3e7c:	de b7       	in	r29, 0x3e	; 62
    3e7e:	2b 97       	sbiw	r28, 0x0b	; 11
    3e80:	0f b6       	in	r0, 0x3f	; 63
    3e82:	f8 94       	cli
    3e84:	de bf       	out	0x3e, r29	; 62
    3e86:	0f be       	out	0x3f, r0	; 63
    3e88:	cd bf       	out	0x3d, r28	; 61
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2653
    int save_ENC,x;
    int basket_up = EEPROM_read_int(basket_up_address);
    3e8a:	84 ea       	ldi	r24, 0xA4	; 164
    3e8c:	90 e0       	ldi	r25, 0x00	; 0
    3e8e:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    3e92:	5c 01       	movw	r10, r24
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2654
    int basket_normal = EEPROM_read_int(basket_normal_address);
    3e94:	86 ea       	ldi	r24, 0xA6	; 166
    3e96:	90 e0       	ldi	r25, 0x00	; 0
    3e98:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    3e9c:	4c 01       	movw	r8, r24
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2656
    int arm_normal = EEPROM_read_int(arm_normal_address);
    int arm_down = EEPROM_read_int(arm_down_address);
    3e9e:	8a ea       	ldi	r24, 0xAA	; 170
    3ea0:	90 e0       	ldi	r25, 0x00	; 0
    3ea2:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    3ea6:	2c 01       	movw	r4, r24
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2659
    int arm_dropping = EEPROM_read_int(arm_dropping_address);
    int gripper_close = EEPROM_read_int(gripper_close_address);
    int gripper_open = EEPROM_read_int(gripper_open_address);
    3ea8:	80 eb       	ldi	r24, 0xB0	; 176
    3eaa:	90 e0       	ldi	r25, 0x00	; 0
    3eac:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    3eb0:	3c 01       	movw	r6, r24
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2660
    int T90 = EEPROM_read_int(T90_address);
    3eb2:	88 e9       	ldi	r24, 0x98	; 152
    3eb4:	90 e0       	ldi	r25, 0x00	; 0
    3eb6:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    3eba:	9b 87       	std	Y+11, r25	; 0x0b
    3ebc:	8a 87       	std	Y+10, r24	; 0x0a
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2661
    int spd = EEPROM_read_int(spd_address);
    3ebe:	86 e9       	ldi	r24, 0x96	; 150
    3ec0:	90 e0       	ldi	r25, 0x00	; 0
    3ec2:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    3ec6:	7c 01       	movw	r14, r24
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2662
    int ev_s_ball = EEPROM_read_int(DW_address);
    3ec8:	82 ea       	ldi	r24, 0xA2	; 162
    3eca:	90 e0       	ldi	r25, 0x00	; 0
    3ecc:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    3ed0:	8c 01       	movw	r16, r24
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2663
    check_while_finished=0;
    3ed2:	10 92 92 09 	sts	0x0992, r1	; 0x800992 <check_while_finished+0x1>
    3ed6:	10 92 91 09 	sts	0x0991, r1	; 0x800991 <check_while_finished>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2664
    lcd.clear();
    3eda:	0e 94 c4 05 	call	0xb88	; 0xb88 <LiquidCrystal::clear() [clone .constprop.32]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2665
    lcd.print("check while");
    3ede:	8b e1       	ldi	r24, 0x1B	; 27
    3ee0:	94 e0       	ldi	r25, 0x04	; 4
    3ee2:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2667

    cnt=0;
    3ee6:	1d bc       	out	0x2d, r1	; 45
    3ee8:	1c bc       	out	0x2c, r1	; 44
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2668
    go(100,100);
    3eea:	64 e6       	ldi	r22, 0x64	; 100
    3eec:	70 e0       	ldi	r23, 0x00	; 0
    3eee:	84 e6       	ldi	r24, 0x64	; 100
    3ef0:	90 e0       	ldi	r25, 0x00	; 0
    3ef2:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2673
    while(cnt/100<=85)//80change
        {
            if(ball==1 && fifth==0)
            {
                save_ENC=cnt/100;
    3ef6:	54 e6       	ldi	r21, 0x64	; 100
    3ef8:	25 2e       	mov	r2, r21
    3efa:	31 2c       	mov	r3, r1
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2676
                victim();
                go(spd,spd);
                move(forward,T90/1.5);
    3efc:	8a 85       	ldd	r24, Y+10	; 0x0a
    3efe:	9b 85       	ldd	r25, Y+11	; 0x0b
    3f00:	09 2e       	mov	r0, r25
    3f02:	00 0c       	add	r0, r0
    3f04:	aa 0b       	sbc	r26, r26
    3f06:	bb 0b       	sbc	r27, r27
    3f08:	89 83       	std	Y+1, r24	; 0x01
    3f0a:	9a 83       	std	Y+2, r25	; 0x02
    3f0c:	ab 83       	std	Y+3, r26	; 0x03
    3f0e:	bc 83       	std	Y+4, r27	; 0x04
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2669
    lcd.clear();
    lcd.print("check while");

    cnt=0;
    go(100,100);
    while(cnt/100<=85)//80change
    3f10:	8c b5       	in	r24, 0x2c	; 44
    3f12:	9d b5       	in	r25, 0x2d	; 45
    3f14:	88 39       	cpi	r24, 0x98	; 152
    3f16:	91 42       	sbci	r25, 0x21	; 33
    3f18:	08 f0       	brcs	.+2      	; 0x3f1c <check_while()+0xc6>
    3f1a:	42 c0       	rjmp	.+132    	; 0x3fa0 <check_while()+0x14a>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2671
        {
            if(ball==1 && fifth==0)
    3f1c:	40 e0       	ldi	r20, 0x00	; 0
    3f1e:	62 e0       	ldi	r22, 0x02	; 2
    3f20:	85 e0       	ldi	r24, 0x05	; 5
    3f22:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    3f26:	01 97       	sbiw	r24, 0x01	; 1
    3f28:	41 f5       	brne	.+80     	; 0x3f7a <check_while()+0x124>
    3f2a:	80 91 83 09 	lds	r24, 0x0983	; 0x800983 <fifth>
    3f2e:	90 91 84 09 	lds	r25, 0x0984	; 0x800984 <fifth+0x1>
    3f32:	89 2b       	or	r24, r25
    3f34:	11 f5       	brne	.+68     	; 0x3f7a <check_while()+0x124>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2673
            {
                save_ENC=cnt/100;
    3f36:	8c b5       	in	r24, 0x2c	; 44
    3f38:	9d b5       	in	r25, 0x2d	; 45
    3f3a:	b1 01       	movw	r22, r2
    3f3c:	0e 94 c9 46 	call	0x8d92	; 0x8d92 <__udivmodhi4>
    3f40:	6b 01       	movw	r12, r22
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2674
                victim();
    3f42:	0e 94 3c 0b 	call	0x1678	; 0x1678 <victim()>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2675
                go(spd,spd);
    3f46:	b7 01       	movw	r22, r14
    3f48:	c7 01       	movw	r24, r14
    3f4a:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2676
                move(forward,T90/1.5);
    3f4e:	69 81       	ldd	r22, Y+1	; 0x01
    3f50:	7a 81       	ldd	r23, Y+2	; 0x02
    3f52:	8b 81       	ldd	r24, Y+3	; 0x03
    3f54:	9c 81       	ldd	r25, Y+4	; 0x04
    3f56:	0e 94 ac 45 	call	0x8b58	; 0x8b58 <__floatsisf>
    3f5a:	20 e0       	ldi	r18, 0x00	; 0
    3f5c:	30 e0       	ldi	r19, 0x00	; 0
    3f5e:	40 ec       	ldi	r20, 0xC0	; 192
    3f60:	5f e3       	ldi	r21, 0x3F	; 63
    3f62:	0e 94 02 45 	call	0x8a04	; 0x8a04 <__divsf3>
    3f66:	0e 94 74 45 	call	0x8ae8	; 0x8ae8 <__fixsfsi>
    3f6a:	44 eb       	ldi	r20, 0xB4	; 180
    3f6c:	50 e0       	ldi	r21, 0x00	; 0
    3f6e:	8a e0       	ldi	r24, 0x0A	; 10
    3f70:	90 e0       	ldi	r25, 0x00	; 0
    3f72:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2677
                cnt=save_ENC;
    3f76:	dd bc       	out	0x2d, r13	; 45
    3f78:	cc bc       	out	0x2c, r12	; 44
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2679
            }
            if(obs)
    3f7a:	40 e0       	ldi	r20, 0x00	; 0
    3f7c:	62 e0       	ldi	r22, 0x02	; 2
    3f7e:	86 e0       	ldi	r24, 0x06	; 6
    3f80:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    3f84:	89 2b       	or	r24, r25
    3f86:	29 f1       	breq	.+74     	; 0x3fd2 <check_while()+0x17c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2681
            {
                move(Back,25,100);
    3f88:	44 e6       	ldi	r20, 0x64	; 100
    3f8a:	50 e0       	ldi	r21, 0x00	; 0
    3f8c:	69 e1       	ldi	r22, 0x19	; 25
    3f8e:	70 e0       	ldi	r23, 0x00	; 0
    3f90:	8d e0       	ldi	r24, 0x0D	; 13
    3f92:	90 e0       	ldi	r25, 0x00	; 0
    3f94:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2683

                check_while_finished=0;
    3f98:	10 92 92 09 	sts	0x0992, r1	; 0x800992 <check_while_finished+0x1>
    3f9c:	10 92 91 09 	sts	0x0991, r1	; 0x800991 <check_while_finished>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2978
                }
            else check_while_finished=0;
        
        }

}
    3fa0:	2b 96       	adiw	r28, 0x0b	; 11
    3fa2:	0f b6       	in	r0, 0x3f	; 63
    3fa4:	f8 94       	cli
    3fa6:	de bf       	out	0x3e, r29	; 62
    3fa8:	0f be       	out	0x3f, r0	; 63
    3faa:	cd bf       	out	0x3d, r28	; 61
    3fac:	df 91       	pop	r29
    3fae:	cf 91       	pop	r28
    3fb0:	1f 91       	pop	r17
    3fb2:	0f 91       	pop	r16
    3fb4:	ff 90       	pop	r15
    3fb6:	ef 90       	pop	r14
    3fb8:	df 90       	pop	r13
    3fba:	cf 90       	pop	r12
    3fbc:	bf 90       	pop	r11
    3fbe:	af 90       	pop	r10
    3fc0:	9f 90       	pop	r9
    3fc2:	8f 90       	pop	r8
    3fc4:	7f 90       	pop	r7
    3fc6:	6f 90       	pop	r6
    3fc8:	5f 90       	pop	r5
    3fca:	4f 90       	pop	r4
    3fcc:	3f 90       	pop	r3
    3fce:	2f 90       	pop	r2
    3fd0:	08 95       	ret
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2686
                move(Back,25,100);

                check_while_finished=0;
                break;
            }
            else if(SFL==1||SFR==1)
    3fd2:	40 e0       	ldi	r20, 0x00	; 0
    3fd4:	62 e0       	ldi	r22, 0x02	; 2
    3fd6:	84 e0       	ldi	r24, 0x04	; 4
    3fd8:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    3fdc:	01 97       	sbiw	r24, 0x01	; 1
    3fde:	b9 f1       	breq	.+110    	; 0x404e <check_while()+0x1f8>
    3fe0:	40 e0       	ldi	r20, 0x00	; 0
    3fe2:	63 e0       	ldi	r22, 0x03	; 3
    3fe4:	84 e0       	ldi	r24, 0x04	; 4
    3fe6:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    3fea:	01 97       	sbiw	r24, 0x01	; 1
    3fec:	81 f1       	breq	.+96     	; 0x404e <check_while()+0x1f8>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2966
                            }
                        }
            
                break;
            }
            if(VSR10<=silver_voltage_R||VSL10<=silver_voltage_L||SM)
    3fee:	41 e0       	ldi	r20, 0x01	; 1
    3ff0:	63 e0       	ldi	r22, 0x03	; 3
    3ff2:	82 e0       	ldi	r24, 0x02	; 2
    3ff4:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    3ff8:	04 97       	sbiw	r24, 0x04	; 4
    3ffa:	0c f0       	brlt	.+2      	; 0x3ffe <check_while()+0x1a8>
    3ffc:	2b c4       	rjmp	.+2134   	; 0x4854 <check_while()+0x9fe>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2968
                {
                    move(Back,75);
    3ffe:	44 eb       	ldi	r20, 0xB4	; 180
    4000:	50 e0       	ldi	r21, 0x00	; 0
    4002:	6b e4       	ldi	r22, 0x4B	; 75
    4004:	70 e0       	ldi	r23, 0x00	; 0
    4006:	8d e0       	ldi	r24, 0x0D	; 13
    4008:	90 e0       	ldi	r25, 0x00	; 0
    400a:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2969
                    if(redroom_dir==Right){if(VL_Right>170)move(Right,T90*2);else{move(Left,T90*2);redroom_dir=Left;}}
    400e:	80 91 9b 09 	lds	r24, 0x099B	; 0x80099b <redroom_dir>
    4012:	90 91 9c 09 	lds	r25, 0x099C	; 0x80099c <redroom_dir+0x1>
    4016:	8c 30       	cpi	r24, 0x0C	; 12
    4018:	91 05       	cpc	r25, r1
    401a:	09 f0       	breq	.+2      	; 0x401e <check_while()+0x1c8>
    401c:	3b c4       	rjmp	.+2166   	; 0x4894 <check_while()+0xa3e>
    401e:	81 e0       	ldi	r24, 0x01	; 1
    4020:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    4024:	6a 85       	ldd	r22, Y+10	; 0x0a
    4026:	7b 85       	ldd	r23, Y+11	; 0x0b
    4028:	66 0f       	add	r22, r22
    402a:	77 1f       	adc	r23, r23
    402c:	44 eb       	ldi	r20, 0xB4	; 180
    402e:	50 e0       	ldi	r21, 0x00	; 0
    4030:	8b 3a       	cpi	r24, 0xAB	; 171
    4032:	91 05       	cpc	r25, r1
    4034:	08 f4       	brcc	.+2      	; 0x4038 <check_while()+0x1e2>
    4036:	23 c4       	rjmp	.+2118   	; 0x487e <check_while()+0xa28>
    4038:	8c e0       	ldi	r24, 0x0C	; 12
    403a:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2970
                    else if(redroom_dir==Left){if(VL_Left>170)move(Left,T90*2);else {move(Right,T90*2);redroom_dir=Right;}}
    403c:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2971
                    check_while_finished=1;
    4040:	81 e0       	ldi	r24, 0x01	; 1
    4042:	90 e0       	ldi	r25, 0x00	; 0
    4044:	90 93 92 09 	sts	0x0992, r25	; 0x800992 <check_while_finished+0x1>
    4048:	80 93 91 09 	sts	0x0991, r24	; 0x800991 <check_while_finished>
    404c:	a9 cf       	rjmp	.-174    	; 0x3fa0 <check_while()+0x14a>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2688
                check_while_finished=0;
                break;
            }
            else if(SFL==1||SFR==1)
            {
                correction(forward);go(0,0);lcd.setCursor(0,1);lcd.printf("dis= %5d   ",VL_Front);delay(150);
    404e:	8a e0       	ldi	r24, 0x0A	; 10
    4050:	0e 94 69 0d 	call	0x1ad2	; 0x1ad2 <correction(char)>
    4054:	70 e0       	ldi	r23, 0x00	; 0
    4056:	60 e0       	ldi	r22, 0x00	; 0
    4058:	90 e0       	ldi	r25, 0x00	; 0
    405a:	80 e0       	ldi	r24, 0x00	; 0
    405c:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
    4060:	61 e0       	ldi	r22, 0x01	; 1
    4062:	80 e0       	ldi	r24, 0x00	; 0
    4064:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
    4068:	83 e0       	ldi	r24, 0x03	; 3
    406a:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    406e:	9f 93       	push	r25
    4070:	8f 93       	push	r24
    4072:	87 e2       	ldi	r24, 0x27	; 39
    4074:	94 e0       	ldi	r25, 0x04	; 4
    4076:	9f 93       	push	r25
    4078:	8f 93       	push	r24
    407a:	4d e7       	ldi	r20, 0x7D	; 125
    407c:	c4 2e       	mov	r12, r20
    407e:	4b e0       	ldi	r20, 0x0B	; 11
    4080:	d4 2e       	mov	r13, r20
    4082:	df 92       	push	r13
    4084:	cf 92       	push	r12
    4086:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
    408a:	66 e9       	ldi	r22, 0x96	; 150
    408c:	70 e0       	ldi	r23, 0x00	; 0
    408e:	80 e0       	ldi	r24, 0x00	; 0
    4090:	90 e0       	ldi	r25, 0x00	; 0
    4092:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2689
                if(correct==1)
    4096:	0f 90       	pop	r0
    4098:	0f 90       	pop	r0
    409a:	0f 90       	pop	r0
    409c:	0f 90       	pop	r0
    409e:	0f 90       	pop	r0
    40a0:	0f 90       	pop	r0
    40a2:	80 91 8d 09 	lds	r24, 0x098D	; 0x80098d <correct>
    40a6:	90 91 8e 09 	lds	r25, 0x098E	; 0x80098e <correct+0x1>
    40aa:	01 97       	sbiw	r24, 0x01	; 1
    40ac:	09 f0       	breq	.+2      	; 0x40b0 <check_while()+0x25a>
    40ae:	b4 c3       	rjmp	.+1896   	; 0x4818 <check_while()+0x9c2>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2691
                    {
                        if(VL_Front>102 && VL_Front!=500) //ev_point
    40b0:	83 e0       	ldi	r24, 0x03	; 3
    40b2:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    40b6:	87 36       	cpi	r24, 0x67	; 103
    40b8:	91 05       	cpc	r25, r1
    40ba:	08 f0       	brcs	.+2      	; 0x40be <check_while()+0x268>
    40bc:	60 c0       	rjmp	.+192    	; 0x417e <check_while()+0x328>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2897
                            }

                            }
                        else//wall
                        {
                          lcd.clear();
    40be:	0e 94 c4 05 	call	0xb88	; 0xb88 <LiquidCrystal::clear() [clone .constprop.32]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2898
                          lcd.print("wall 3");
    40c2:	83 e3       	ldi	r24, 0x33	; 51
    40c4:	94 e0       	ldi	r25, 0x04	; 4
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2933

                    }
                else
                    {
                          lcd.clear();
                          lcd.print("wall 4");
    40c6:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2934
                            check_while_finished=1;
    40ca:	81 e0       	ldi	r24, 0x01	; 1
    40cc:	90 e0       	ldi	r25, 0x00	; 0
    40ce:	90 93 92 09 	sts	0x0992, r25	; 0x800992 <check_while_finished+0x1>
    40d2:	80 93 91 09 	sts	0x0991, r24	; 0x800991 <check_while_finished>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2935
                            correction(sides);
    40d6:	83 e0       	ldi	r24, 0x03	; 3
    40d8:	0e 94 69 0d 	call	0x1ad2	; 0x1ad2 <correction(char)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2936
                            move(Back,25);
    40dc:	44 eb       	ldi	r20, 0xB4	; 180
    40de:	50 e0       	ldi	r21, 0x00	; 0
    40e0:	69 e1       	ldi	r22, 0x19	; 25
    40e2:	70 e0       	ldi	r23, 0x00	; 0
    40e4:	8d e0       	ldi	r24, 0x0D	; 13
    40e6:	90 e0       	ldi	r25, 0x00	; 0
    40e8:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2937
                            if(redroom_dir==Right)
    40ec:	80 91 9b 09 	lds	r24, 0x099B	; 0x80099b <redroom_dir>
    40f0:	90 91 9c 09 	lds	r25, 0x099C	; 0x80099c <redroom_dir+0x1>
    40f4:	8c 30       	cpi	r24, 0x0C	; 12
    40f6:	91 05       	cpc	r25, r1
    40f8:	09 f0       	breq	.+2      	; 0x40fc <check_while()+0x2a6>
    40fa:	93 c3       	rjmp	.+1830   	; 0x4822 <check_while()+0x9cc>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2939
                                {
                                move(Right,T90);
    40fc:	44 eb       	ldi	r20, 0xB4	; 180
    40fe:	50 e0       	ldi	r21, 0x00	; 0
    4100:	6a 85       	ldd	r22, Y+10	; 0x0a
    4102:	7b 85       	ldd	r23, Y+11	; 0x0b
    4104:	8c e0       	ldi	r24, 0x0C	; 12
    4106:	90 e0       	ldi	r25, 0x00	; 0
    4108:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2940
                                move(Back,10);//redroom_dir=left;
    410c:	44 eb       	ldi	r20, 0xB4	; 180
    410e:	50 e0       	ldi	r21, 0x00	; 0
    4110:	6a e0       	ldi	r22, 0x0A	; 10
    4112:	70 e0       	ldi	r23, 0x00	; 0
    4114:	8d e0       	ldi	r24, 0x0D	; 13
    4116:	90 e0       	ldi	r25, 0x00	; 0
    4118:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2941
                                go(-spd,spd);
    411c:	b7 01       	movw	r22, r14
    411e:	88 27       	eor	r24, r24
    4120:	99 27       	eor	r25, r25
    4122:	8e 19       	sub	r24, r14
    4124:	9f 09       	sbc	r25, r15
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2952
                                }
                            else if(redroom_dir==Left)
                            {
                            move(Left,T90);
                            move(Back,10);//redroom_dir=right;
                            go(spd,-spd);
    4126:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2953
                            delay(210);
    412a:	62 ed       	ldi	r22, 0xD2	; 210
    412c:	70 e0       	ldi	r23, 0x00	; 0
    412e:	80 e0       	ldi	r24, 0x00	; 0
    4130:	90 e0       	ldi	r25, 0x00	; 0
    4132:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2954
                            go(0,0);
    4136:	70 e0       	ldi	r23, 0x00	; 0
    4138:	60 e0       	ldi	r22, 0x00	; 0
    413a:	90 e0       	ldi	r25, 0x00	; 0
    413c:	80 e0       	ldi	r24, 0x00	; 0
    413e:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2955
                            delay(100);
    4142:	64 e6       	ldi	r22, 0x64	; 100
    4144:	70 e0       	ldi	r23, 0x00	; 0
    4146:	80 e0       	ldi	r24, 0x00	; 0
    4148:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2978
                }
            else check_while_finished=0;
        
        }

}
    414a:	2b 96       	adiw	r28, 0x0b	; 11
    414c:	0f b6       	in	r0, 0x3f	; 63
    414e:	f8 94       	cli
    4150:	de bf       	out	0x3e, r29	; 62
    4152:	0f be       	out	0x3f, r0	; 63
    4154:	cd bf       	out	0x3d, r28	; 61
    4156:	df 91       	pop	r29
    4158:	cf 91       	pop	r28
    415a:	1f 91       	pop	r17
    415c:	0f 91       	pop	r16
    415e:	ff 90       	pop	r15
    4160:	ef 90       	pop	r14
    4162:	df 90       	pop	r13
    4164:	cf 90       	pop	r12
    4166:	bf 90       	pop	r11
    4168:	af 90       	pop	r10
    416a:	9f 90       	pop	r9
    416c:	8f 90       	pop	r8
    416e:	7f 90       	pop	r7
    4170:	6f 90       	pop	r6
    4172:	5f 90       	pop	r5
    4174:	4f 90       	pop	r4
    4176:	3f 90       	pop	r3
    4178:	2f 90       	pop	r2
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2955
                            move(Left,T90);
                            move(Back,10);//redroom_dir=right;
                            go(spd,-spd);
                            delay(210);
                            go(0,0);
                            delay(100);
    417a:	0c 94 24 03 	jmp	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2691
            else if(SFL==1||SFR==1)
            {
                correction(forward);go(0,0);lcd.setCursor(0,1);lcd.printf("dis= %5d   ",VL_Front);delay(150);
                if(correct==1)
                    {
                        if(VL_Front>102 && VL_Front!=500) //ev_point
    417e:	83 e0       	ldi	r24, 0x03	; 3
    4180:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    4184:	84 3f       	cpi	r24, 0xF4	; 244
    4186:	91 40       	sbci	r25, 0x01	; 1
    4188:	09 f4       	brne	.+2      	; 0x418c <check_while()+0x336>
    418a:	99 cf       	rjmp	.-206    	; 0x40be <check_while()+0x268>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2693
                        {
                            lcd.clear();
    418c:	0e 94 c4 05 	call	0xb88	; 0xb88 <LiquidCrystal::clear() [clone .constprop.32]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2694
                            lcd.setCursor(0,0);
    4190:	60 e0       	ldi	r22, 0x00	; 0
    4192:	80 e0       	ldi	r24, 0x00	; 0
    4194:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2695
                            lcd.printf("dis=%4d;sb:%d;evs:%d",VL_Front,s_ball,ev_s_ball);
    4198:	f0 90 8b 09 	lds	r15, 0x098B	; 0x80098b <s_ball>
    419c:	e0 90 8c 09 	lds	r14, 0x098C	; 0x80098c <s_ball+0x1>
    41a0:	83 e0       	ldi	r24, 0x03	; 3
    41a2:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    41a6:	1f 93       	push	r17
    41a8:	0f 93       	push	r16
    41aa:	ef 92       	push	r14
    41ac:	ff 92       	push	r15
    41ae:	9f 93       	push	r25
    41b0:	8f 93       	push	r24
    41b2:	8a e3       	ldi	r24, 0x3A	; 58
    41b4:	94 e0       	ldi	r25, 0x04	; 4
    41b6:	9f 93       	push	r25
    41b8:	8f 93       	push	r24
    41ba:	df 92       	push	r13
    41bc:	cf 92       	push	r12
    41be:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2696
                            lcd.setCursor(0,1);
    41c2:	61 e0       	ldi	r22, 0x01	; 1
    41c4:	80 e0       	ldi	r24, 0x00	; 0
    41c6:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2697
                            lcd.printf("bb=%d;evb:%d;bn:%d",b_ball,ev_b_ball,ball_num);
    41ca:	80 91 a2 09 	lds	r24, 0x09A2	; 0x8009a2 <ball_num+0x1>
    41ce:	8f 93       	push	r24
    41d0:	80 91 a1 09 	lds	r24, 0x09A1	; 0x8009a1 <ball_num>
    41d4:	8f 93       	push	r24
    41d6:	80 91 8a 09 	lds	r24, 0x098A	; 0x80098a <ev_b_ball+0x1>
    41da:	8f 93       	push	r24
    41dc:	80 91 89 09 	lds	r24, 0x0989	; 0x800989 <ev_b_ball>
    41e0:	8f 93       	push	r24
    41e2:	80 91 94 09 	lds	r24, 0x0994	; 0x800994 <b_ball+0x1>
    41e6:	8f 93       	push	r24
    41e8:	80 91 93 09 	lds	r24, 0x0993	; 0x800993 <b_ball>
    41ec:	8f 93       	push	r24
    41ee:	8f e4       	ldi	r24, 0x4F	; 79
    41f0:	94 e0       	ldi	r25, 0x04	; 4
    41f2:	9f 93       	push	r25
    41f4:	8f 93       	push	r24
    41f6:	df 92       	push	r13
    41f8:	cf 92       	push	r12
    41fa:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2698
                            lcd.setCursor(0,2);
    41fe:	62 e0       	ldi	r22, 0x02	; 2
    4200:	80 e0       	ldi	r24, 0x00	; 0
    4202:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2699
                            lcd.printf("clr=%4d;1:%d;2:%d;3:%d;4:%d",color_F,barband[0],barband[1],barband[2],barband[3]);
    4206:	e0 91 88 09 	lds	r30, 0x0988	; 0x800988 <barband+0x3>
    420a:	e9 83       	std	Y+1, r30	; 0x01
    420c:	ee 2e       	mov	r14, r30
    420e:	ee 0f       	add	r30, r30
    4210:	ff 08       	sbc	r15, r15
    4212:	e0 90 87 09 	lds	r14, 0x0987	; 0x800987 <barband+0x2>
    4216:	2e 2c       	mov	r2, r14
    4218:	0e 2c       	mov	r0, r14
    421a:	00 0c       	add	r0, r0
    421c:	33 08       	sbc	r3, r3
    421e:	20 90 86 09 	lds	r2, 0x0986	; 0x800986 <barband+0x1>
    4222:	82 2d       	mov	r24, r2
    4224:	02 2c       	mov	r0, r2
    4226:	00 0c       	add	r0, r0
    4228:	99 0b       	sbc	r25, r25
    422a:	9f 83       	std	Y+7, r25	; 0x07
    422c:	8e 83       	std	Y+6, r24	; 0x06
    422e:	90 91 85 09 	lds	r25, 0x0985	; 0x800985 <barband>
    4232:	9d 83       	std	Y+5, r25	; 0x05
    4234:	a9 2f       	mov	r26, r25
    4236:	0a 2e       	mov	r0, r26
    4238:	00 0c       	add	r0, r0
    423a:	bb 0b       	sbc	r27, r27
    423c:	b9 87       	std	Y+9, r27	; 0x09
    423e:	a8 87       	std	Y+8, r26	; 0x08
    4240:	83 e0       	ldi	r24, 0x03	; 3
    4242:	0e 94 a8 10 	call	0x2150	; 0x2150 <color(char)>
    4246:	ff 92       	push	r15
    4248:	b9 81       	ldd	r27, Y+1	; 0x01
    424a:	bf 93       	push	r27
    424c:	3f 92       	push	r3
    424e:	ef 92       	push	r14
    4250:	ef 81       	ldd	r30, Y+7	; 0x07
    4252:	ef 93       	push	r30
    4254:	2f 92       	push	r2
    4256:	f9 85       	ldd	r31, Y+9	; 0x09
    4258:	ff 93       	push	r31
    425a:	2d 81       	ldd	r18, Y+5	; 0x05
    425c:	2f 93       	push	r18
    425e:	28 2f       	mov	r18, r24
    4260:	08 2e       	mov	r0, r24
    4262:	00 0c       	add	r0, r0
    4264:	33 0b       	sbc	r19, r19
    4266:	3f 93       	push	r19
    4268:	8f 93       	push	r24
    426a:	82 e6       	ldi	r24, 0x62	; 98
    426c:	94 e0       	ldi	r25, 0x04	; 4
    426e:	9f 93       	push	r25
    4270:	8f 93       	push	r24
    4272:	df 92       	push	r13
    4274:	cf 92       	push	r12
    4276:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2700
                            if((VL_Front>102) && color_F==GREEN && s_ball>0)
    427a:	0f b6       	in	r0, 0x3f	; 63
    427c:	f8 94       	cli
    427e:	de bf       	out	0x3e, r29	; 62
    4280:	0f be       	out	0x3f, r0	; 63
    4282:	cd bf       	out	0x3d, r28	; 61
    4284:	83 e0       	ldi	r24, 0x03	; 3
    4286:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    428a:	87 36       	cpi	r24, 0x67	; 103
    428c:	91 05       	cpc	r25, r1
    428e:	68 f0       	brcs	.+26     	; 0x42aa <check_while()+0x454>
    4290:	83 e0       	ldi	r24, 0x03	; 3
    4292:	0e 94 a8 10 	call	0x2150	; 0x2150 <color(char)>
    4296:	81 30       	cpi	r24, 0x01	; 1
    4298:	41 f4       	brne	.+16     	; 0x42aa <check_while()+0x454>
    429a:	80 91 8b 09 	lds	r24, 0x098B	; 0x80098b <s_ball>
    429e:	90 91 8c 09 	lds	r25, 0x098C	; 0x80098c <s_ball+0x1>
    42a2:	18 16       	cp	r1, r24
    42a4:	19 06       	cpc	r1, r25
    42a6:	0c f4       	brge	.+2      	; 0x42aa <check_while()+0x454>
    42a8:	5c c0       	rjmp	.+184    	; 0x4362 <check_while()+0x50c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2743
                                    {move(Right,T90);redroom_dir=Right;}
                                else
                                    {move(Left,T90); /*pich_sakoo=1; */ redroom_dir=Left;}
                                no_side=1;
                            }
                            else if((VL_Front>102) && color_F==RED && b_ball>0 && ev_s_ball>1)
    42aa:	83 e0       	ldi	r24, 0x03	; 3
    42ac:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    42b0:	87 36       	cpi	r24, 0x67	; 103
    42b2:	91 05       	cpc	r25, r1
    42b4:	80 f0       	brcs	.+32     	; 0x42d6 <check_while()+0x480>
    42b6:	83 e0       	ldi	r24, 0x03	; 3
    42b8:	0e 94 a8 10 	call	0x2150	; 0x2150 <color(char)>
    42bc:	81 11       	cpse	r24, r1
    42be:	0b c0       	rjmp	.+22     	; 0x42d6 <check_while()+0x480>
    42c0:	80 91 93 09 	lds	r24, 0x0993	; 0x800993 <b_ball>
    42c4:	90 91 94 09 	lds	r25, 0x0994	; 0x800994 <b_ball+0x1>
    42c8:	18 16       	cp	r1, r24
    42ca:	19 06       	cpc	r1, r25
    42cc:	24 f4       	brge	.+8      	; 0x42d6 <check_while()+0x480>
    42ce:	02 30       	cpi	r16, 0x02	; 2
    42d0:	11 05       	cpc	r17, r1
    42d2:	0c f0       	brlt	.+2      	; 0x42d6 <check_while()+0x480>
    42d4:	fe c0       	rjmp	.+508    	; 0x44d2 <check_while()+0x67c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2786
                                    {move(Left,T90); /*pich_sakoo=1; */ redroom_dir=Left;}
                                no_side=1;
                            }
                            else
                            {
                                if(ball_num>0||s_ball>0||b_ball>0)
    42d6:	80 91 a1 09 	lds	r24, 0x09A1	; 0x8009a1 <ball_num>
    42da:	90 91 a2 09 	lds	r25, 0x09A2	; 0x8009a2 <ball_num+0x1>
    42de:	18 16       	cp	r1, r24
    42e0:	19 06       	cpc	r1, r25
    42e2:	0c f0       	brlt	.+2      	; 0x42e6 <check_while()+0x490>
    42e4:	45 c1       	rjmp	.+650    	; 0x4570 <check_while()+0x71a>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2788
                                    {
                                        delay(20);
    42e6:	64 e1       	ldi	r22, 0x14	; 20
    42e8:	70 e0       	ldi	r23, 0x00	; 0
    42ea:	80 e0       	ldi	r24, 0x00	; 0
    42ec:	90 e0       	ldi	r25, 0x00	; 0
    42ee:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2789
                                        if((VL_Front>102) && color_F==GREEN && s_ball>0)
    42f2:	83 e0       	ldi	r24, 0x03	; 3
    42f4:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    42f8:	87 36       	cpi	r24, 0x67	; 103
    42fa:	91 05       	cpc	r25, r1
    42fc:	68 f0       	brcs	.+26     	; 0x4318 <check_while()+0x4c2>
    42fe:	83 e0       	ldi	r24, 0x03	; 3
    4300:	0e 94 a8 10 	call	0x2150	; 0x2150 <color(char)>
    4304:	81 30       	cpi	r24, 0x01	; 1
    4306:	41 f4       	brne	.+16     	; 0x4318 <check_while()+0x4c2>
    4308:	80 91 8b 09 	lds	r24, 0x098B	; 0x80098b <s_ball>
    430c:	90 91 8c 09 	lds	r25, 0x098C	; 0x80098c <s_ball+0x1>
    4310:	18 16       	cp	r1, r24
    4312:	19 06       	cpc	r1, r25
    4314:	0c f4       	brge	.+2      	; 0x4318 <check_while()+0x4c2>
    4316:	5a c1       	rjmp	.+692    	; 0x45cc <check_while()+0x776>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2832
                                                {move(Right,T90);redroom_dir=Right;}
                                            else
                                                {move(Left,T90); /*pich_sakoo=1; */ redroom_dir=Left;}
                                            no_side=1;
                                        }
                                        else if((VL_Front>102) && color_F==RED && b_ball>0 && ev_s_ball>1)
    4318:	83 e0       	ldi	r24, 0x03	; 3
    431a:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    431e:	87 36       	cpi	r24, 0x67	; 103
    4320:	91 05       	cpc	r25, r1
    4322:	08 f0       	brcs	.+2      	; 0x4326 <check_while()+0x4d0>
    4324:	16 c2       	rjmp	.+1068   	; 0x4752 <check_while()+0x8fc>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2875
                                            else
                                                {move(Left,T90); /*pich_sakoo=1; */ redroom_dir=Left;}
                                            no_side=1;
                                        }
                                       else{
                                          move(Back,25);
    4326:	44 eb       	ldi	r20, 0xB4	; 180
    4328:	50 e0       	ldi	r21, 0x00	; 0
    432a:	69 e1       	ldi	r22, 0x19	; 25
    432c:	70 e0       	ldi	r23, 0x00	; 0
    432e:	8d e0       	ldi	r24, 0x0D	; 13
    4330:	90 e0       	ldi	r25, 0x00	; 0
    4332:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2876
                                          if(first_touched==Left)
    4336:	80 91 8f 09 	lds	r24, 0x098F	; 0x80098f <first_touched>
    433a:	90 91 90 09 	lds	r25, 0x0990	; 0x800990 <first_touched+0x1>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2879
                                              {move(Right,T90);redroom_dir=Right;}
                                          else
                                              {move(Left,T90); /*pich_sakoo=1; */ redroom_dir=Left;}
    433e:	44 eb       	ldi	r20, 0xB4	; 180
    4340:	50 e0       	ldi	r21, 0x00	; 0
    4342:	6a 85       	ldd	r22, Y+10	; 0x0a
    4344:	7b 85       	ldd	r23, Y+11	; 0x0b
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2876
                                                {move(Left,T90); /*pich_sakoo=1; */ redroom_dir=Left;}
                                            no_side=1;
                                        }
                                       else{
                                          move(Back,25);
                                          if(first_touched==Left)
    4346:	0b 97       	sbiw	r24, 0x0b	; 11
    4348:	09 f0       	breq	.+2      	; 0x434c <check_while()+0x4f6>
    434a:	35 c1       	rjmp	.+618    	; 0x45b6 <check_while()+0x760>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2877
                                              {move(Right,T90);redroom_dir=Right;}
    434c:	44 eb       	ldi	r20, 0xB4	; 180
    434e:	50 e0       	ldi	r21, 0x00	; 0
    4350:	6a 85       	ldd	r22, Y+10	; 0x0a
    4352:	7b 85       	ldd	r23, Y+11	; 0x0b
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2887
                                    }
                            
                                  else{
                                          move(Back,25);
                                          if(first_touched==Left)
                                            {move(Right,T90);redroom_dir=Right;}
    4354:	8c e0       	ldi	r24, 0x0C	; 12
    4356:	90 e0       	ldi	r25, 0x00	; 0
    4358:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
    435c:	8c e0       	ldi	r24, 0x0C	; 12
    435e:	90 e0       	ldi	r25, 0x00	; 0
    4360:	30 c1       	rjmp	.+608    	; 0x45c2 <check_while()+0x76c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2704
                            lcd.printf("clr=%4d;1:%d;2:%d;3:%d;4:%d",color_F,barband[0],barband[1],barband[2],barband[3]);
                            if((VL_Front>102) && color_F==GREEN && s_ball>0)
                            {
                                while(1)
                                    {
                                    if(fifth==1)
    4362:	80 91 83 09 	lds	r24, 0x0983	; 0x800983 <fifth>
    4366:	90 91 84 09 	lds	r25, 0x0984	; 0x800984 <fifth+0x1>
    436a:	01 97       	sbiw	r24, 0x01	; 1
    436c:	09 f0       	breq	.+2      	; 0x4370 <check_while()+0x51a>
    436e:	66 c0       	rjmp	.+204    	; 0x443c <check_while()+0x5e6>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2708
                                    {
                                        if(conductive==1)
                                            {
                                            ev_s_ball++;s_ball--;
    4370:	0f 5f       	subi	r16, 0xFF	; 255
    4372:	1f 4f       	sbci	r17, 0xFF	; 255
    4374:	80 91 8b 09 	lds	r24, 0x098B	; 0x80098b <s_ball>
    4378:	90 91 8c 09 	lds	r25, 0x098C	; 0x80098c <s_ball+0x1>
    437c:	01 97       	sbiw	r24, 0x01	; 1
    437e:	90 93 8c 09 	sts	0x098C, r25	; 0x80098c <s_ball+0x1>
    4382:	80 93 8b 09 	sts	0x098B, r24	; 0x80098b <s_ball>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2709
                                            EEPROM_write_int(DW_address, ev_s_ball);
    4386:	b8 01       	movw	r22, r16
    4388:	82 ea       	ldi	r24, 0xA2	; 162
    438a:	90 e0       	ldi	r25, 0x00	; 0
    438c:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2710
                                            ball_num--;
    4390:	80 91 a1 09 	lds	r24, 0x09A1	; 0x8009a1 <ball_num>
    4394:	90 91 a2 09 	lds	r25, 0x09A2	; 0x8009a2 <ball_num+0x1>
    4398:	01 97       	sbiw	r24, 0x01	; 1
    439a:	90 93 a2 09 	sts	0x09A2, r25	; 0x8009a2 <ball_num+0x1>
    439e:	80 93 a1 09 	sts	0x09A1, r24	; 0x8009a1 <ball_num>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2711
                                            move(Back,30);
    43a2:	44 eb       	ldi	r20, 0xB4	; 180
    43a4:	50 e0       	ldi	r21, 0x00	; 0
    43a6:	6e e1       	ldi	r22, 0x1E	; 30
    43a8:	70 e0       	ldi	r23, 0x00	; 0
    43aa:	8d e0       	ldi	r24, 0x0D	; 13
    43ac:	90 e0       	ldi	r25, 0x00	; 0
    43ae:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2712
                                            move_arm(500,600);delay(300);
    43b2:	68 e5       	ldi	r22, 0x58	; 88
    43b4:	72 e0       	ldi	r23, 0x02	; 2
    43b6:	84 ef       	ldi	r24, 0xF4	; 244
    43b8:	91 e0       	ldi	r25, 0x01	; 1
    43ba:	0e 94 3f 08 	call	0x107e	; 0x107e <move_arm(int, int)>
    43be:	6c e2       	ldi	r22, 0x2C	; 44
    43c0:	71 e0       	ldi	r23, 0x01	; 1
    43c2:	80 e0       	ldi	r24, 0x00	; 0
    43c4:	90 e0       	ldi	r25, 0x00	; 0
    43c6:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2713
                                            move(forward,50);
    43ca:	44 eb       	ldi	r20, 0xB4	; 180
    43cc:	50 e0       	ldi	r21, 0x00	; 0
    43ce:	62 e3       	ldi	r22, 0x32	; 50
    43d0:	70 e0       	ldi	r23, 0x00	; 0
    43d2:	8a e0       	ldi	r24, 0x0A	; 10
    43d4:	90 e0       	ldi	r25, 0x00	; 0
    43d6:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2714
                                            move_gripper(gripper_open,700);delay(500);
    43da:	6c eb       	ldi	r22, 0xBC	; 188
    43dc:	72 e0       	ldi	r23, 0x02	; 2
    43de:	c3 01       	movw	r24, r6
    43e0:	0e 94 b5 08 	call	0x116a	; 0x116a <move_gripper(int, int)>
    43e4:	64 ef       	ldi	r22, 0xF4	; 244
    43e6:	71 e0       	ldi	r23, 0x01	; 1
    43e8:	80 e0       	ldi	r24, 0x00	; 0
    43ea:	90 e0       	ldi	r25, 0x00	; 0
    43ec:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2715
                                            move(Back,70);go(0,0);
    43f0:	44 eb       	ldi	r20, 0xB4	; 180
    43f2:	50 e0       	ldi	r21, 0x00	; 0
    43f4:	66 e4       	ldi	r22, 0x46	; 70
    43f6:	70 e0       	ldi	r23, 0x00	; 0
    43f8:	8d e0       	ldi	r24, 0x0D	; 13
    43fa:	90 e0       	ldi	r25, 0x00	; 0
    43fc:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
    4400:	70 e0       	ldi	r23, 0x00	; 0
    4402:	60 e0       	ldi	r22, 0x00	; 0
    4404:	90 e0       	ldi	r25, 0x00	; 0
    4406:	80 e0       	ldi	r24, 0x00	; 0
    4408:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2716
                                            move_arm(arm_down,500);delay(200);correction(forward);go(0,0);
    440c:	64 ef       	ldi	r22, 0xF4	; 244
    440e:	71 e0       	ldi	r23, 0x01	; 1
    4410:	c2 01       	movw	r24, r4
    4412:	0e 94 3f 08 	call	0x107e	; 0x107e <move_arm(int, int)>
    4416:	68 ec       	ldi	r22, 0xC8	; 200
    4418:	70 e0       	ldi	r23, 0x00	; 0
    441a:	80 e0       	ldi	r24, 0x00	; 0
    441c:	90 e0       	ldi	r25, 0x00	; 0
    441e:	0e 94 24 03 	call	0x648	; 0x648 <delay>
    4422:	8a e0       	ldi	r24, 0x0A	; 10
    4424:	0e 94 69 0d 	call	0x1ad2	; 0x1ad2 <correction(char)>
    4428:	70 e0       	ldi	r23, 0x00	; 0
    442a:	60 e0       	ldi	r22, 0x00	; 0
    442c:	90 e0       	ldi	r25, 0x00	; 0
    442e:	80 e0       	ldi	r24, 0x00	; 0
    4430:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2717
                                            fifth=0;
    4434:	10 92 84 09 	sts	0x0984, r1	; 0x800984 <fifth+0x1>
    4438:	10 92 83 09 	sts	0x0983, r1	; 0x800983 <fifth>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2721
                                            }
                                        
                                        }
                                    if(rotate(1)!=10)
    443c:	81 e0       	ldi	r24, 0x01	; 1
    443e:	90 e0       	ldi	r25, 0x00	; 0
    4440:	0e 94 0c 08 	call	0x1018	; 0x1018 <rotate(int)>
    4444:	0a 97       	sbiw	r24, 0x0a	; 10
    4446:	09 f4       	brne	.+2      	; 0x444a <check_while()+0x5f4>
    4448:	79 c1       	rjmp	.+754    	; 0x473c <check_while()+0x8e6>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2723
                                        {
                                        delay(50);
    444a:	62 e3       	ldi	r22, 0x32	; 50
    444c:	70 e0       	ldi	r23, 0x00	; 0
    444e:	80 e0       	ldi	r24, 0x00	; 0
    4450:	90 e0       	ldi	r25, 0x00	; 0
    4452:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2724
                                        ev_s_ball++;
    4456:	0f 5f       	subi	r16, 0xFF	; 255
    4458:	1f 4f       	sbci	r17, 0xFF	; 255
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2725
                                        EEPROM_write_int(DW_address, ev_s_ball);
    445a:	b8 01       	movw	r22, r16
    445c:	82 ea       	ldi	r24, 0xA2	; 162
    445e:	90 e0       	ldi	r25, 0x00	; 0
    4460:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2726
                                        s_ball--;
    4464:	80 91 8b 09 	lds	r24, 0x098B	; 0x80098b <s_ball>
    4468:	90 91 8c 09 	lds	r25, 0x098C	; 0x80098c <s_ball+0x1>
    446c:	01 97       	sbiw	r24, 0x01	; 1
    446e:	90 93 8c 09 	sts	0x098C, r25	; 0x80098c <s_ball+0x1>
    4472:	80 93 8b 09 	sts	0x098B, r24	; 0x80098b <s_ball>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2727
                                        ball_num--;
    4476:	80 91 a1 09 	lds	r24, 0x09A1	; 0x8009a1 <ball_num>
    447a:	90 91 a2 09 	lds	r25, 0x09A2	; 0x8009a2 <ball_num+0x1>
    447e:	01 97       	sbiw	r24, 0x01	; 1
    4480:	90 93 a2 09 	sts	0x09A2, r25	; 0x8009a2 <ball_num+0x1>
    4484:	80 93 a1 09 	sts	0x09A1, r24	; 0x8009a1 <ball_num>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2728
                                        barband[rotate(1)]=0; delay(700);
    4488:	81 e0       	ldi	r24, 0x01	; 1
    448a:	90 e0       	ldi	r25, 0x00	; 0
    448c:	0e 94 0c 08 	call	0x1018	; 0x1018 <rotate(int)>
    4490:	8b 57       	subi	r24, 0x7B	; 123
    4492:	96 4f       	sbci	r25, 0xF6	; 246
    4494:	dc 01       	movw	r26, r24
    4496:	1c 92       	st	X, r1
    4498:	6c eb       	ldi	r22, 0xBC	; 188
    449a:	72 e0       	ldi	r23, 0x02	; 2
    449c:	80 e0       	ldi	r24, 0x00	; 0
    449e:	90 e0       	ldi	r25, 0x00	; 0
    44a0:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2729
                                        move_basket(basket_up,500); delay(800);
    44a4:	64 ef       	ldi	r22, 0xF4	; 244
    44a6:	71 e0       	ldi	r23, 0x01	; 1
    44a8:	c5 01       	movw	r24, r10
    44aa:	0e 94 8c 1b 	call	0x3718	; 0x3718 <move_basket(int, int)>
    44ae:	60 e2       	ldi	r22, 0x20	; 32
    44b0:	73 e0       	ldi	r23, 0x03	; 3
    44b2:	80 e0       	ldi	r24, 0x00	; 0
    44b4:	90 e0       	ldi	r25, 0x00	; 0
    44b6:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2730
                                        move_basket(basket_normal,350); delay(300);
    44ba:	6e e5       	ldi	r22, 0x5E	; 94
    44bc:	71 e0       	ldi	r23, 0x01	; 1
    44be:	c4 01       	movw	r24, r8
    44c0:	0e 94 8c 1b 	call	0x3718	; 0x3718 <move_basket(int, int)>
    44c4:	6c e2       	ldi	r22, 0x2C	; 44
    44c6:	71 e0       	ldi	r23, 0x01	; 1
    44c8:	80 e0       	ldi	r24, 0x00	; 0
    44ca:	90 e0       	ldi	r25, 0x00	; 0
    44cc:	0e 94 24 03 	call	0x648	; 0x648 <delay>
    44d0:	48 cf       	rjmp	.-368    	; 0x4362 <check_while()+0x50c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2764
                                                move_arm(arm_down,500);delay(200);correction(forward);go(0,0);
                                                fifth=0;
                                            }
                                        
                                        }
                                    if(rotate(2)!=10)
    44d2:	82 e0       	ldi	r24, 0x02	; 2
    44d4:	90 e0       	ldi	r25, 0x00	; 0
    44d6:	0e 94 0c 08 	call	0x1018	; 0x1018 <rotate(int)>
    44da:	e0 90 89 09 	lds	r14, 0x0989	; 0x800989 <ev_b_ball>
    44de:	f0 90 8a 09 	lds	r15, 0x098A	; 0x80098a <ev_b_ball+0x1>
    44e2:	0a 97       	sbiw	r24, 0x0a	; 10
    44e4:	09 f4       	brne	.+2      	; 0x44e8 <check_while()+0x692>
    44e6:	95 c1       	rjmp	.+810    	; 0x4812 <check_while()+0x9bc>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2766
                                        {
                                        delay(50);
    44e8:	62 e3       	ldi	r22, 0x32	; 50
    44ea:	70 e0       	ldi	r23, 0x00	; 0
    44ec:	80 e0       	ldi	r24, 0x00	; 0
    44ee:	90 e0       	ldi	r25, 0x00	; 0
    44f0:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2767
                                        ev_b_ball++;
    44f4:	bf ef       	ldi	r27, 0xFF	; 255
    44f6:	eb 1a       	sub	r14, r27
    44f8:	fb 0a       	sbc	r15, r27
    44fa:	f0 92 8a 09 	sts	0x098A, r15	; 0x80098a <ev_b_ball+0x1>
    44fe:	e0 92 89 09 	sts	0x0989, r14	; 0x800989 <ev_b_ball>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2768
                                        b_ball--;
    4502:	80 91 93 09 	lds	r24, 0x0993	; 0x800993 <b_ball>
    4506:	90 91 94 09 	lds	r25, 0x0994	; 0x800994 <b_ball+0x1>
    450a:	01 97       	sbiw	r24, 0x01	; 1
    450c:	90 93 94 09 	sts	0x0994, r25	; 0x800994 <b_ball+0x1>
    4510:	80 93 93 09 	sts	0x0993, r24	; 0x800993 <b_ball>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2769
                                        ball_num--;
    4514:	80 91 a1 09 	lds	r24, 0x09A1	; 0x8009a1 <ball_num>
    4518:	90 91 a2 09 	lds	r25, 0x09A2	; 0x8009a2 <ball_num+0x1>
    451c:	01 97       	sbiw	r24, 0x01	; 1
    451e:	90 93 a2 09 	sts	0x09A2, r25	; 0x8009a2 <ball_num+0x1>
    4522:	80 93 a1 09 	sts	0x09A1, r24	; 0x8009a1 <ball_num>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2770
                                        barband[rotate(2)]=0; delay(700);
    4526:	82 e0       	ldi	r24, 0x02	; 2
    4528:	90 e0       	ldi	r25, 0x00	; 0
    452a:	0e 94 0c 08 	call	0x1018	; 0x1018 <rotate(int)>
    452e:	8b 57       	subi	r24, 0x7B	; 123
    4530:	96 4f       	sbci	r25, 0xF6	; 246
    4532:	fc 01       	movw	r30, r24
    4534:	10 82       	st	Z, r1
    4536:	6c eb       	ldi	r22, 0xBC	; 188
    4538:	72 e0       	ldi	r23, 0x02	; 2
    453a:	80 e0       	ldi	r24, 0x00	; 0
    453c:	90 e0       	ldi	r25, 0x00	; 0
    453e:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2771
                                        move_basket(basket_up,500); delay(800);
    4542:	64 ef       	ldi	r22, 0xF4	; 244
    4544:	71 e0       	ldi	r23, 0x01	; 1
    4546:	c5 01       	movw	r24, r10
    4548:	0e 94 8c 1b 	call	0x3718	; 0x3718 <move_basket(int, int)>
    454c:	60 e2       	ldi	r22, 0x20	; 32
    454e:	73 e0       	ldi	r23, 0x03	; 3
    4550:	80 e0       	ldi	r24, 0x00	; 0
    4552:	90 e0       	ldi	r25, 0x00	; 0
    4554:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2772
                                        move_basket(basket_normal,350); delay(300);
    4558:	6e e5       	ldi	r22, 0x5E	; 94
    455a:	71 e0       	ldi	r23, 0x01	; 1
    455c:	c4 01       	movw	r24, r8
    455e:	0e 94 8c 1b 	call	0x3718	; 0x3718 <move_basket(int, int)>
    4562:	6c e2       	ldi	r22, 0x2C	; 44
    4564:	71 e0       	ldi	r23, 0x01	; 1
    4566:	80 e0       	ldi	r24, 0x00	; 0
    4568:	90 e0       	ldi	r25, 0x00	; 0
    456a:	0e 94 24 03 	call	0x648	; 0x648 <delay>
    456e:	b1 cf       	rjmp	.-158    	; 0x44d2 <check_while()+0x67c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2786
                                    {move(Left,T90); /*pich_sakoo=1; */ redroom_dir=Left;}
                                no_side=1;
                            }
                            else
                            {
                                if(ball_num>0||s_ball>0||b_ball>0)
    4570:	80 91 8b 09 	lds	r24, 0x098B	; 0x80098b <s_ball>
    4574:	90 91 8c 09 	lds	r25, 0x098C	; 0x80098c <s_ball+0x1>
    4578:	18 16       	cp	r1, r24
    457a:	19 06       	cpc	r1, r25
    457c:	0c f4       	brge	.+2      	; 0x4580 <check_while()+0x72a>
    457e:	b3 ce       	rjmp	.-666    	; 0x42e6 <check_while()+0x490>
    4580:	80 91 93 09 	lds	r24, 0x0993	; 0x800993 <b_ball>
    4584:	90 91 94 09 	lds	r25, 0x0994	; 0x800994 <b_ball+0x1>
    4588:	18 16       	cp	r1, r24
    458a:	19 06       	cpc	r1, r25
    458c:	0c f4       	brge	.+2      	; 0x4590 <check_while()+0x73a>
    458e:	ab ce       	rjmp	.-682    	; 0x42e6 <check_while()+0x490>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2885

                                        } 
                                    }
                            
                                  else{
                                          move(Back,25);
    4590:	44 eb       	ldi	r20, 0xB4	; 180
    4592:	50 e0       	ldi	r21, 0x00	; 0
    4594:	69 e1       	ldi	r22, 0x19	; 25
    4596:	70 e0       	ldi	r23, 0x00	; 0
    4598:	8d e0       	ldi	r24, 0x0D	; 13
    459a:	90 e0       	ldi	r25, 0x00	; 0
    459c:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2886
                                          if(first_touched==Left)
    45a0:	80 91 8f 09 	lds	r24, 0x098F	; 0x80098f <first_touched>
    45a4:	90 91 90 09 	lds	r25, 0x0990	; 0x800990 <first_touched+0x1>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2887
                                            {move(Right,T90);redroom_dir=Right;}
    45a8:	44 eb       	ldi	r20, 0xB4	; 180
    45aa:	50 e0       	ldi	r21, 0x00	; 0
    45ac:	6a 85       	ldd	r22, Y+10	; 0x0a
    45ae:	7b 85       	ldd	r23, Y+11	; 0x0b
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2886
                                        } 
                                    }
                            
                                  else{
                                          move(Back,25);
                                          if(first_touched==Left)
    45b0:	0b 97       	sbiw	r24, 0x0b	; 11
    45b2:	09 f4       	brne	.+2      	; 0x45b6 <check_while()+0x760>
    45b4:	cf ce       	rjmp	.-610    	; 0x4354 <check_while()+0x4fe>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2740
                
                                move(Back,25);
                                if(first_touched==Left)
                                    {move(Right,T90);redroom_dir=Right;}
                                else
                                    {move(Left,T90); /*pich_sakoo=1; */ redroom_dir=Left;}
    45b6:	8b e0       	ldi	r24, 0x0B	; 11
    45b8:	90 e0       	ldi	r25, 0x00	; 0
    45ba:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
    45be:	8b e0       	ldi	r24, 0x0B	; 11
    45c0:	90 e0       	ldi	r25, 0x00	; 0
    45c2:	90 93 9c 09 	sts	0x099C, r25	; 0x80099c <redroom_dir+0x1>
    45c6:	80 93 9b 09 	sts	0x099B, r24	; 0x80099b <redroom_dir>
    45ca:	ea cc       	rjmp	.-1580   	; 0x3fa0 <check_while()+0x14a>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2793
                                        delay(20);
                                        if((VL_Front>102) && color_F==GREEN && s_ball>0)
                                        {
                                            while(1)
                                                {
                                                if(fifth==1)
    45cc:	80 91 83 09 	lds	r24, 0x0983	; 0x800983 <fifth>
    45d0:	90 91 84 09 	lds	r25, 0x0984	; 0x800984 <fifth+0x1>
    45d4:	01 97       	sbiw	r24, 0x01	; 1
    45d6:	09 f0       	breq	.+2      	; 0x45da <check_while()+0x784>
    45d8:	66 c0       	rjmp	.+204    	; 0x46a6 <check_while()+0x850>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2797
                                                {
                                                    if(conductive==1)
                                                        {
                                                        ev_s_ball++;s_ball--;
    45da:	0f 5f       	subi	r16, 0xFF	; 255
    45dc:	1f 4f       	sbci	r17, 0xFF	; 255
    45de:	80 91 8b 09 	lds	r24, 0x098B	; 0x80098b <s_ball>
    45e2:	90 91 8c 09 	lds	r25, 0x098C	; 0x80098c <s_ball+0x1>
    45e6:	01 97       	sbiw	r24, 0x01	; 1
    45e8:	90 93 8c 09 	sts	0x098C, r25	; 0x80098c <s_ball+0x1>
    45ec:	80 93 8b 09 	sts	0x098B, r24	; 0x80098b <s_ball>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2798
                                                        EEPROM_write_int(DW_address, ev_s_ball);
    45f0:	b8 01       	movw	r22, r16
    45f2:	82 ea       	ldi	r24, 0xA2	; 162
    45f4:	90 e0       	ldi	r25, 0x00	; 0
    45f6:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2799
                                                        ball_num--;
    45fa:	80 91 a1 09 	lds	r24, 0x09A1	; 0x8009a1 <ball_num>
    45fe:	90 91 a2 09 	lds	r25, 0x09A2	; 0x8009a2 <ball_num+0x1>
    4602:	01 97       	sbiw	r24, 0x01	; 1
    4604:	90 93 a2 09 	sts	0x09A2, r25	; 0x8009a2 <ball_num+0x1>
    4608:	80 93 a1 09 	sts	0x09A1, r24	; 0x8009a1 <ball_num>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2800
                                                        move(Back,30);
    460c:	44 eb       	ldi	r20, 0xB4	; 180
    460e:	50 e0       	ldi	r21, 0x00	; 0
    4610:	6e e1       	ldi	r22, 0x1E	; 30
    4612:	70 e0       	ldi	r23, 0x00	; 0
    4614:	8d e0       	ldi	r24, 0x0D	; 13
    4616:	90 e0       	ldi	r25, 0x00	; 0
    4618:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2801
                                                        move_arm(500,600);delay(300);
    461c:	68 e5       	ldi	r22, 0x58	; 88
    461e:	72 e0       	ldi	r23, 0x02	; 2
    4620:	84 ef       	ldi	r24, 0xF4	; 244
    4622:	91 e0       	ldi	r25, 0x01	; 1
    4624:	0e 94 3f 08 	call	0x107e	; 0x107e <move_arm(int, int)>
    4628:	6c e2       	ldi	r22, 0x2C	; 44
    462a:	71 e0       	ldi	r23, 0x01	; 1
    462c:	80 e0       	ldi	r24, 0x00	; 0
    462e:	90 e0       	ldi	r25, 0x00	; 0
    4630:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2802
                                                        move(forward,50);
    4634:	44 eb       	ldi	r20, 0xB4	; 180
    4636:	50 e0       	ldi	r21, 0x00	; 0
    4638:	62 e3       	ldi	r22, 0x32	; 50
    463a:	70 e0       	ldi	r23, 0x00	; 0
    463c:	8a e0       	ldi	r24, 0x0A	; 10
    463e:	90 e0       	ldi	r25, 0x00	; 0
    4640:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2803
                                                        move_gripper(gripper_open,700);delay(500);
    4644:	6c eb       	ldi	r22, 0xBC	; 188
    4646:	72 e0       	ldi	r23, 0x02	; 2
    4648:	c3 01       	movw	r24, r6
    464a:	0e 94 b5 08 	call	0x116a	; 0x116a <move_gripper(int, int)>
    464e:	64 ef       	ldi	r22, 0xF4	; 244
    4650:	71 e0       	ldi	r23, 0x01	; 1
    4652:	80 e0       	ldi	r24, 0x00	; 0
    4654:	90 e0       	ldi	r25, 0x00	; 0
    4656:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2804
                                                        move(Back,70);go(0,0);
    465a:	44 eb       	ldi	r20, 0xB4	; 180
    465c:	50 e0       	ldi	r21, 0x00	; 0
    465e:	66 e4       	ldi	r22, 0x46	; 70
    4660:	70 e0       	ldi	r23, 0x00	; 0
    4662:	8d e0       	ldi	r24, 0x0D	; 13
    4664:	90 e0       	ldi	r25, 0x00	; 0
    4666:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
    466a:	70 e0       	ldi	r23, 0x00	; 0
    466c:	60 e0       	ldi	r22, 0x00	; 0
    466e:	90 e0       	ldi	r25, 0x00	; 0
    4670:	80 e0       	ldi	r24, 0x00	; 0
    4672:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2805
                                                        move_arm(arm_down,500);delay(200);correction(forward);go(0,0);
    4676:	64 ef       	ldi	r22, 0xF4	; 244
    4678:	71 e0       	ldi	r23, 0x01	; 1
    467a:	c2 01       	movw	r24, r4
    467c:	0e 94 3f 08 	call	0x107e	; 0x107e <move_arm(int, int)>
    4680:	68 ec       	ldi	r22, 0xC8	; 200
    4682:	70 e0       	ldi	r23, 0x00	; 0
    4684:	80 e0       	ldi	r24, 0x00	; 0
    4686:	90 e0       	ldi	r25, 0x00	; 0
    4688:	0e 94 24 03 	call	0x648	; 0x648 <delay>
    468c:	8a e0       	ldi	r24, 0x0A	; 10
    468e:	0e 94 69 0d 	call	0x1ad2	; 0x1ad2 <correction(char)>
    4692:	70 e0       	ldi	r23, 0x00	; 0
    4694:	60 e0       	ldi	r22, 0x00	; 0
    4696:	90 e0       	ldi	r25, 0x00	; 0
    4698:	80 e0       	ldi	r24, 0x00	; 0
    469a:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2806
                                                        fifth=0;
    469e:	10 92 84 09 	sts	0x0984, r1	; 0x800984 <fifth+0x1>
    46a2:	10 92 83 09 	sts	0x0983, r1	; 0x800983 <fifth>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2811
                                                        }
                                                  
                                                    
                                                    }
                                                if(rotate(1)!=10)
    46a6:	81 e0       	ldi	r24, 0x01	; 1
    46a8:	90 e0       	ldi	r25, 0x00	; 0
    46aa:	0e 94 0c 08 	call	0x1018	; 0x1018 <rotate(int)>
    46ae:	0a 97       	sbiw	r24, 0x0a	; 10
    46b0:	09 f4       	brne	.+2      	; 0x46b4 <check_while()+0x85e>
    46b2:	44 c0       	rjmp	.+136    	; 0x473c <check_while()+0x8e6>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2813
                                                    {
                                                    delay(50);
    46b4:	62 e3       	ldi	r22, 0x32	; 50
    46b6:	70 e0       	ldi	r23, 0x00	; 0
    46b8:	80 e0       	ldi	r24, 0x00	; 0
    46ba:	90 e0       	ldi	r25, 0x00	; 0
    46bc:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2814
                                                    ev_s_ball++;
    46c0:	0f 5f       	subi	r16, 0xFF	; 255
    46c2:	1f 4f       	sbci	r17, 0xFF	; 255
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2815
                                                    EEPROM_write_int(DW_address, ev_s_ball);
    46c4:	b8 01       	movw	r22, r16
    46c6:	82 ea       	ldi	r24, 0xA2	; 162
    46c8:	90 e0       	ldi	r25, 0x00	; 0
    46ca:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2816
                                                    s_ball--;
    46ce:	80 91 8b 09 	lds	r24, 0x098B	; 0x80098b <s_ball>
    46d2:	90 91 8c 09 	lds	r25, 0x098C	; 0x80098c <s_ball+0x1>
    46d6:	01 97       	sbiw	r24, 0x01	; 1
    46d8:	90 93 8c 09 	sts	0x098C, r25	; 0x80098c <s_ball+0x1>
    46dc:	80 93 8b 09 	sts	0x098B, r24	; 0x80098b <s_ball>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2817
                                                    ball_num--;
    46e0:	80 91 a1 09 	lds	r24, 0x09A1	; 0x8009a1 <ball_num>
    46e4:	90 91 a2 09 	lds	r25, 0x09A2	; 0x8009a2 <ball_num+0x1>
    46e8:	01 97       	sbiw	r24, 0x01	; 1
    46ea:	90 93 a2 09 	sts	0x09A2, r25	; 0x8009a2 <ball_num+0x1>
    46ee:	80 93 a1 09 	sts	0x09A1, r24	; 0x8009a1 <ball_num>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2818
                                                    barband[rotate(1)]=0; delay(700);
    46f2:	81 e0       	ldi	r24, 0x01	; 1
    46f4:	90 e0       	ldi	r25, 0x00	; 0
    46f6:	0e 94 0c 08 	call	0x1018	; 0x1018 <rotate(int)>
    46fa:	8b 57       	subi	r24, 0x7B	; 123
    46fc:	96 4f       	sbci	r25, 0xF6	; 246
    46fe:	dc 01       	movw	r26, r24
    4700:	1c 92       	st	X, r1
    4702:	6c eb       	ldi	r22, 0xBC	; 188
    4704:	72 e0       	ldi	r23, 0x02	; 2
    4706:	80 e0       	ldi	r24, 0x00	; 0
    4708:	90 e0       	ldi	r25, 0x00	; 0
    470a:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2819
                                                    move_basket(basket_up,500); delay(800);
    470e:	64 ef       	ldi	r22, 0xF4	; 244
    4710:	71 e0       	ldi	r23, 0x01	; 1
    4712:	c5 01       	movw	r24, r10
    4714:	0e 94 8c 1b 	call	0x3718	; 0x3718 <move_basket(int, int)>
    4718:	60 e2       	ldi	r22, 0x20	; 32
    471a:	73 e0       	ldi	r23, 0x03	; 3
    471c:	80 e0       	ldi	r24, 0x00	; 0
    471e:	90 e0       	ldi	r25, 0x00	; 0
    4720:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2820
                                                    move_basket(basket_normal,350); delay(300);
    4724:	6e e5       	ldi	r22, 0x5E	; 94
    4726:	71 e0       	ldi	r23, 0x01	; 1
    4728:	c4 01       	movw	r24, r8
    472a:	0e 94 8c 1b 	call	0x3718	; 0x3718 <move_basket(int, int)>
    472e:	6c e2       	ldi	r22, 0x2C	; 44
    4730:	71 e0       	ldi	r23, 0x01	; 1
    4732:	80 e0       	ldi	r24, 0x00	; 0
    4734:	90 e0       	ldi	r25, 0x00	; 0
    4736:	0e 94 24 03 	call	0x648	; 0x648 <delay>
    473a:	48 cf       	rjmp	.-368    	; 0x45cc <check_while()+0x776>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2824
                                                    }
                                                else break;
                                                }
                                            ev_ball=ev_s_ball+ev_b_ball;
    473c:	80 91 89 09 	lds	r24, 0x0989	; 0x800989 <ev_b_ball>
    4740:	90 91 8a 09 	lds	r25, 0x098A	; 0x80098a <ev_b_ball+0x1>
    4744:	08 0f       	add	r16, r24
    4746:	19 1f       	adc	r17, r25
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2866
                                                    move_basket(basket_up,500); delay(800);
                                                    move_basket(basket_normal,350); delay(300);
                                                    }
                                                else break;
                                                }
                                            ev_ball=ev_s_ball+ev_b_ball;
    4748:	10 93 96 09 	sts	0x0996, r17	; 0x800996 <ev_ball+0x1>
    474c:	00 93 95 09 	sts	0x0995, r16	; 0x800995 <ev_ball>
    4750:	1f cf       	rjmp	.-450    	; 0x4590 <check_while()+0x73a>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2832
                                                {move(Right,T90);redroom_dir=Right;}
                                            else
                                                {move(Left,T90); /*pich_sakoo=1; */ redroom_dir=Left;}
                                            no_side=1;
                                        }
                                        else if((VL_Front>102) && color_F==RED && b_ball>0 && ev_s_ball>1)
    4752:	83 e0       	ldi	r24, 0x03	; 3
    4754:	0e 94 a8 10 	call	0x2150	; 0x2150 <color(char)>
    4758:	81 11       	cpse	r24, r1
    475a:	e5 cd       	rjmp	.-1078   	; 0x4326 <check_while()+0x4d0>
    475c:	80 91 93 09 	lds	r24, 0x0993	; 0x800993 <b_ball>
    4760:	90 91 94 09 	lds	r25, 0x0994	; 0x800994 <b_ball+0x1>
    4764:	18 16       	cp	r1, r24
    4766:	19 06       	cpc	r1, r25
    4768:	0c f0       	brlt	.+2      	; 0x476c <check_while()+0x916>
    476a:	dd cd       	rjmp	.-1094   	; 0x4326 <check_while()+0x4d0>
    476c:	02 30       	cpi	r16, 0x02	; 2
    476e:	11 05       	cpc	r17, r1
    4770:	0c f4       	brge	.+2      	; 0x4774 <check_while()+0x91e>
    4772:	d9 cd       	rjmp	.-1102   	; 0x4326 <check_while()+0x4d0>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2854
                                                        
                                                            fifth=0;
                                                        }
                                                    
                                                    }
                                                if(rotate(2)!=10)
    4774:	82 e0       	ldi	r24, 0x02	; 2
    4776:	90 e0       	ldi	r25, 0x00	; 0
    4778:	0e 94 0c 08 	call	0x1018	; 0x1018 <rotate(int)>
    477c:	e0 90 89 09 	lds	r14, 0x0989	; 0x800989 <ev_b_ball>
    4780:	f0 90 8a 09 	lds	r15, 0x098A	; 0x80098a <ev_b_ball+0x1>
    4784:	0a 97       	sbiw	r24, 0x0a	; 10
    4786:	09 f4       	brne	.+2      	; 0x478a <check_while()+0x934>
    4788:	44 c0       	rjmp	.+136    	; 0x4812 <check_while()+0x9bc>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2856
                                                    {
                                                    delay(50);
    478a:	62 e3       	ldi	r22, 0x32	; 50
    478c:	70 e0       	ldi	r23, 0x00	; 0
    478e:	80 e0       	ldi	r24, 0x00	; 0
    4790:	90 e0       	ldi	r25, 0x00	; 0
    4792:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2857
                                                    ev_b_ball++;
    4796:	bf ef       	ldi	r27, 0xFF	; 255
    4798:	eb 1a       	sub	r14, r27
    479a:	fb 0a       	sbc	r15, r27
    479c:	f0 92 8a 09 	sts	0x098A, r15	; 0x80098a <ev_b_ball+0x1>
    47a0:	e0 92 89 09 	sts	0x0989, r14	; 0x800989 <ev_b_ball>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2858
                                                    b_ball--;
    47a4:	80 91 93 09 	lds	r24, 0x0993	; 0x800993 <b_ball>
    47a8:	90 91 94 09 	lds	r25, 0x0994	; 0x800994 <b_ball+0x1>
    47ac:	01 97       	sbiw	r24, 0x01	; 1
    47ae:	90 93 94 09 	sts	0x0994, r25	; 0x800994 <b_ball+0x1>
    47b2:	80 93 93 09 	sts	0x0993, r24	; 0x800993 <b_ball>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2859
                                                    ball_num--;
    47b6:	80 91 a1 09 	lds	r24, 0x09A1	; 0x8009a1 <ball_num>
    47ba:	90 91 a2 09 	lds	r25, 0x09A2	; 0x8009a2 <ball_num+0x1>
    47be:	01 97       	sbiw	r24, 0x01	; 1
    47c0:	90 93 a2 09 	sts	0x09A2, r25	; 0x8009a2 <ball_num+0x1>
    47c4:	80 93 a1 09 	sts	0x09A1, r24	; 0x8009a1 <ball_num>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2860
                                                    barband[rotate(2)]=0; delay(700);
    47c8:	82 e0       	ldi	r24, 0x02	; 2
    47ca:	90 e0       	ldi	r25, 0x00	; 0
    47cc:	0e 94 0c 08 	call	0x1018	; 0x1018 <rotate(int)>
    47d0:	8b 57       	subi	r24, 0x7B	; 123
    47d2:	96 4f       	sbci	r25, 0xF6	; 246
    47d4:	fc 01       	movw	r30, r24
    47d6:	10 82       	st	Z, r1
    47d8:	6c eb       	ldi	r22, 0xBC	; 188
    47da:	72 e0       	ldi	r23, 0x02	; 2
    47dc:	80 e0       	ldi	r24, 0x00	; 0
    47de:	90 e0       	ldi	r25, 0x00	; 0
    47e0:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2861
                                                    move_basket(basket_up,500); delay(800);
    47e4:	64 ef       	ldi	r22, 0xF4	; 244
    47e6:	71 e0       	ldi	r23, 0x01	; 1
    47e8:	c5 01       	movw	r24, r10
    47ea:	0e 94 8c 1b 	call	0x3718	; 0x3718 <move_basket(int, int)>
    47ee:	60 e2       	ldi	r22, 0x20	; 32
    47f0:	73 e0       	ldi	r23, 0x03	; 3
    47f2:	80 e0       	ldi	r24, 0x00	; 0
    47f4:	90 e0       	ldi	r25, 0x00	; 0
    47f6:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2862
                                                    move_basket(basket_normal,350); delay(300);
    47fa:	6e e5       	ldi	r22, 0x5E	; 94
    47fc:	71 e0       	ldi	r23, 0x01	; 1
    47fe:	c4 01       	movw	r24, r8
    4800:	0e 94 8c 1b 	call	0x3718	; 0x3718 <move_basket(int, int)>
    4804:	6c e2       	ldi	r22, 0x2C	; 44
    4806:	71 e0       	ldi	r23, 0x01	; 1
    4808:	80 e0       	ldi	r24, 0x00	; 0
    480a:	90 e0       	ldi	r25, 0x00	; 0
    480c:	0e 94 24 03 	call	0x648	; 0x648 <delay>
    4810:	b1 cf       	rjmp	.-158    	; 0x4774 <check_while()+0x91e>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2866
                                                    }
                                                else break;
                                                }
                                            ev_ball=ev_s_ball+ev_b_ball;
    4812:	0e 0d       	add	r16, r14
    4814:	1f 1d       	adc	r17, r15
    4816:	98 cf       	rjmp	.-208    	; 0x4748 <check_while()+0x8f2>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2932
                        }

                    }
                else
                    {
                          lcd.clear();
    4818:	0e 94 c4 05 	call	0xb88	; 0xb88 <LiquidCrystal::clear() [clone .constprop.32]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2933
                          lcd.print("wall 4");
    481c:	8e e7       	ldi	r24, 0x7E	; 126
    481e:	94 e0       	ldi	r25, 0x04	; 4
    4820:	52 cc       	rjmp	.-1884   	; 0x40c6 <check_while()+0x270>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2948
                                go(0,0);
                                //correction(back);
                                delay(100);

                                }
                            else if(redroom_dir==Left)
    4822:	0b 97       	sbiw	r24, 0x0b	; 11
    4824:	09 f0       	breq	.+2      	; 0x4828 <check_while()+0x9d2>
    4826:	bc cb       	rjmp	.-2184   	; 0x3fa0 <check_while()+0x14a>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2950
                            {
                            move(Left,T90);
    4828:	44 eb       	ldi	r20, 0xB4	; 180
    482a:	50 e0       	ldi	r21, 0x00	; 0
    482c:	6a 85       	ldd	r22, Y+10	; 0x0a
    482e:	7b 85       	ldd	r23, Y+11	; 0x0b
    4830:	8b e0       	ldi	r24, 0x0B	; 11
    4832:	90 e0       	ldi	r25, 0x00	; 0
    4834:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2951
                            move(Back,10);//redroom_dir=right;
    4838:	44 eb       	ldi	r20, 0xB4	; 180
    483a:	50 e0       	ldi	r21, 0x00	; 0
    483c:	6a e0       	ldi	r22, 0x0A	; 10
    483e:	70 e0       	ldi	r23, 0x00	; 0
    4840:	8d e0       	ldi	r24, 0x0D	; 13
    4842:	90 e0       	ldi	r25, 0x00	; 0
    4844:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2952
                            go(spd,-spd);
    4848:	66 27       	eor	r22, r22
    484a:	77 27       	eor	r23, r23
    484c:	6e 19       	sub	r22, r14
    484e:	7f 09       	sbc	r23, r15
    4850:	c7 01       	movw	r24, r14
    4852:	69 cc       	rjmp	.-1838   	; 0x4126 <check_while()+0x2d0>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2966
                            }
                        }
            
                break;
            }
            if(VSR10<=silver_voltage_R||VSL10<=silver_voltage_L||SM)
    4854:	41 e0       	ldi	r20, 0x01	; 1
    4856:	62 e0       	ldi	r22, 0x02	; 2
    4858:	82 e0       	ldi	r24, 0x02	; 2
    485a:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    485e:	04 97       	sbiw	r24, 0x04	; 4
    4860:	0c f4       	brge	.+2      	; 0x4864 <check_while()+0xa0e>
    4862:	cd cb       	rjmp	.-2150   	; 0x3ffe <check_while()+0x1a8>
    4864:	40 e0       	ldi	r20, 0x00	; 0
    4866:	60 e0       	ldi	r22, 0x00	; 0
    4868:	80 e0       	ldi	r24, 0x00	; 0
    486a:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    486e:	89 2b       	or	r24, r25
    4870:	09 f0       	breq	.+2      	; 0x4874 <check_while()+0xa1e>
    4872:	c5 cb       	rjmp	.-2166   	; 0x3ffe <check_while()+0x1a8>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2974
                    if(redroom_dir==Right){if(VL_Right>170)move(Right,T90*2);else{move(Left,T90*2);redroom_dir=Left;}}
                    else if(redroom_dir==Left){if(VL_Left>170)move(Left,T90*2);else {move(Right,T90*2);redroom_dir=Right;}}
                    check_while_finished=1;
                    break;
                }
            else check_while_finished=0;
    4874:	10 92 92 09 	sts	0x0992, r1	; 0x800992 <check_while_finished+0x1>
    4878:	10 92 91 09 	sts	0x0991, r1	; 0x800991 <check_while_finished>
    487c:	49 cb       	rjmp	.-2414   	; 0x3f10 <check_while()+0xba>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2969
                break;
            }
            if(VSR10<=silver_voltage_R||VSL10<=silver_voltage_L||SM)
                {
                    move(Back,75);
                    if(redroom_dir==Right){if(VL_Right>170)move(Right,T90*2);else{move(Left,T90*2);redroom_dir=Left;}}
    487e:	8b e0       	ldi	r24, 0x0B	; 11
    4880:	90 e0       	ldi	r25, 0x00	; 0
    4882:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
    4886:	8b e0       	ldi	r24, 0x0B	; 11
    4888:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2970
                    else if(redroom_dir==Left){if(VL_Left>170)move(Left,T90*2);else {move(Right,T90*2);redroom_dir=Right;}}
    488a:	90 93 9c 09 	sts	0x099C, r25	; 0x80099c <redroom_dir+0x1>
    488e:	80 93 9b 09 	sts	0x099B, r24	; 0x80099b <redroom_dir>
    4892:	d6 cb       	rjmp	.-2132   	; 0x4040 <check_while()+0x1ea>
    4894:	0b 97       	sbiw	r24, 0x0b	; 11
    4896:	09 f0       	breq	.+2      	; 0x489a <check_while()+0xa44>
    4898:	d3 cb       	rjmp	.-2138   	; 0x4040 <check_while()+0x1ea>
    489a:	82 e0       	ldi	r24, 0x02	; 2
    489c:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    48a0:	6a 85       	ldd	r22, Y+10	; 0x0a
    48a2:	7b 85       	ldd	r23, Y+11	; 0x0b
    48a4:	66 0f       	add	r22, r22
    48a6:	77 1f       	adc	r23, r23
    48a8:	44 eb       	ldi	r20, 0xB4	; 180
    48aa:	50 e0       	ldi	r21, 0x00	; 0
    48ac:	8b 3a       	cpi	r24, 0xAB	; 171
    48ae:	91 05       	cpc	r25, r1
    48b0:	18 f0       	brcs	.+6      	; 0x48b8 <check_while()+0xa62>
    48b2:	8b e0       	ldi	r24, 0x0B	; 11
    48b4:	90 e0       	ldi	r25, 0x00	; 0
    48b6:	c2 cb       	rjmp	.-2172   	; 0x403c <check_while()+0x1e6>
    48b8:	8c e0       	ldi	r24, 0x0C	; 12
    48ba:	90 e0       	ldi	r25, 0x00	; 0
    48bc:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
    48c0:	8c e0       	ldi	r24, 0x0C	; 12
    48c2:	90 e0       	ldi	r25, 0x00	; 0
    48c4:	e2 cf       	rjmp	.-60     	; 0x488a <check_while()+0xa34>

000048c6 <menu_color()>:
menu_color():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1142
    }
}

void menu_color(void) {
  static char page = 1, last_page = 8;
  lcd.clear();
    48c6:	0e 94 c4 05 	call	0xb88	; 0xb88 <LiquidCrystal::clear() [clone .constprop.32]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1323
      lcd.print("APDS Front: ");
      lcd.setCursor(0, 1);
      lcd.print("  RED  GRN  BLU ");

      lcd.setCursor(0, 2);
      lcd.printf(" %4d %4d %4d %4d", red, green, blue, clear);
    48ca:	86 ea       	ldi	r24, 0xA6	; 166
    48cc:	88 2e       	mov	r8, r24
    48ce:	84 e0       	ldi	r24, 0x04	; 4
    48d0:	98 2e       	mov	r9, r24
    48d2:	cd e7       	ldi	r28, 0x7D	; 125
    48d4:	db e0       	ldi	r29, 0x0B	; 11
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1335
        lcd.printf("M%4d %4d %4d %4d ", EEPROM_read_int(red_front_r), EEPROM_read_int(red_front_g), EEPROM_read_int(red_front_b), EEPROM_read_int(red_front_c));
      } else if (color_F == GREEN) {
        lcd.setCursor(12, 0);
        lcd.print("GRN ");
        lcd.setCursor(0, 3);
        lcd.printf("M%4d %4d %4d %4d ", EEPROM_read_int(green_front_r), EEPROM_read_int(green_front_g), EEPROM_read_int(green_front_b), EEPROM_read_int(green_front_c));
    48d6:	9a e2       	ldi	r25, 0x2A	; 42
    48d8:	e9 2e       	mov	r14, r25
    48da:	95 e0       	ldi	r25, 0x05	; 5
    48dc:	f9 2e       	mov	r15, r25
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1298

      lcd.setCursor(0, 1);
      lcd.print("  RED  GRN  BLU ");

      lcd.setCursor(0, 2);
      lcd.printf("L%4d %4d %4d ", EEPROM_read_int(yellow_left_r), EEPROM_read_int(yellow_left_g), EEPROM_read_int(yellow_left_b));
    48de:	2c e6       	ldi	r18, 0x6C	; 108
    48e0:	c2 2e       	mov	r12, r18
    48e2:	25 e0       	ldi	r18, 0x05	; 5
    48e4:	d2 2e       	mov	r13, r18
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1301

      lcd.setCursor(0, 3);
      lcd.printf("R%4d %4d %4d ", EEPROM_read_int(yellow_right_r), EEPROM_read_int(yellow_right_g), EEPROM_read_int(yellow_right_b));
    48e6:	3a e7       	ldi	r19, 0x7A	; 122
    48e8:	a3 2e       	mov	r10, r19
    48ea:	35 e0       	ldi	r19, 0x05	; 5
    48ec:	b3 2e       	mov	r11, r19
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1243
        lcd.printf("M%4d %4d %4d ", EEPROM_read_int(yellow_right_r), EEPROM_read_int(yellow_right_g), EEPROM_read_int(yellow_right_b), EEPROM_read_int(yellow_right_c));
      } else if (color_R == SILVER) {
        lcd.setCursor(12, 0);
        lcd.print("SIL ");
        lcd.setCursor(0, 3);
        lcd.printf("M%4d %4d %4d %4d", EEPROM_read_int(silver_right_r), EEPROM_read_int(silver_right_g), EEPROM_read_int(silver_right_b), EEPROM_read_int(silver_right_c));
    48ee:	0e eb       	ldi	r16, 0xBE	; 190
    48f0:	14 e0       	ldi	r17, 0x04	; 4
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1144

void menu_color(void) {
  static char page = 1, last_page = 8;
  lcd.clear();
  while (1) {
    if (next_page == 0) {
    48f2:	88 e0       	ldi	r24, 0x08	; 8
    48f4:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    48f8:	89 2b       	or	r24, r25
    48fa:	79 f4       	brne	.+30     	; 0x491a <menu_color()+0x54>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1145
      while (next_page == 0)
    48fc:	88 e0       	ldi	r24, 0x08	; 8
    48fe:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    4902:	89 2b       	or	r24, r25
    4904:	d9 f3       	breq	.-10     	; 0x48fc <menu_color()+0x36>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1147
        ;
      page++;
    4906:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <menu_color()::page>
    490a:	8f 5f       	subi	r24, 0xFF	; 255
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1148
      if (page > last_page)
    490c:	89 30       	cpi	r24, 0x09	; 9
    490e:	0c f0       	brlt	.+2      	; 0x4912 <menu_color()+0x4c>
    4910:	a8 c0       	rjmp	.+336    	; 0x4a62 <menu_color()+0x19c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1147
  lcd.clear();
  while (1) {
    if (next_page == 0) {
      while (next_page == 0)
        ;
      page++;
    4912:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <menu_color()::page>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1150
      if (page > last_page)
        page = 1;
      lcd.clear();
    4916:	0e 94 c4 05 	call	0xb88	; 0xb88 <LiquidCrystal::clear() [clone .constprop.32]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1152
    }
    if (previuse_page == 0) {
    491a:	89 e0       	ldi	r24, 0x09	; 9
    491c:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    4920:	89 2b       	or	r24, r25
    4922:	71 f4       	brne	.+28     	; 0x4940 <menu_color()+0x7a>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1153
      while (previuse_page == 0)
    4924:	89 e0       	ldi	r24, 0x09	; 9
    4926:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    492a:	89 2b       	or	r24, r25
    492c:	d9 f3       	breq	.-10     	; 0x4924 <menu_color()+0x5e>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1155
        ;
      page--;
    492e:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <menu_color()::page>
    4932:	81 50       	subi	r24, 0x01	; 1
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1156
      if (page == 0)
    4934:	09 f4       	brne	.+2      	; 0x4938 <menu_color()+0x72>
    4936:	99 c0       	rjmp	.+306    	; 0x4a6a <menu_color()+0x1a4>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1157
        page = last_page;
    4938:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <menu_color()::page>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1158
      lcd.clear();
    493c:	0e 94 c4 05 	call	0xb88	; 0xb88 <LiquidCrystal::clear() [clone .constprop.32]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1160
    }
    if (increase == 0)
    4940:	8a e0       	ldi	r24, 0x0A	; 10
    4942:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    4946:	89 2b       	or	r24, r25
    4948:	09 f0       	breq	.+2      	; 0x494c <menu_color()+0x86>
    494a:	91 c0       	rjmp	.+290    	; 0x4a6e <menu_color()+0x1a8>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1161
      go(40, 40);
    494c:	68 e2       	ldi	r22, 0x28	; 40
    494e:	70 e0       	ldi	r23, 0x00	; 0
    4950:	88 e2       	ldi	r24, 0x28	; 40
    4952:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1165
    else if (decrease == 0)
      go(-40, -40);
    else
      go(0, 0);
    4954:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1167

    if (page == 1) {
    4958:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <menu_color()::page>
    495c:	81 30       	cpi	r24, 0x01	; 1
    495e:	09 f0       	breq	.+2      	; 0x4962 <menu_color()+0x9c>
    4960:	a8 c1       	rjmp	.+848    	; 0x4cb2 <menu_color()+0x3ec>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1168
      lcd.setCursor(0, 0);
    4962:	60 e0       	ldi	r22, 0x00	; 0
    4964:	80 e0       	ldi	r24, 0x00	; 0
    4966:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1169
      lcd.print("APDS left: ");
    496a:	85 e8       	ldi	r24, 0x85	; 133
    496c:	94 e0       	ldi	r25, 0x04	; 4
    496e:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1171

      lcd.setCursor(0, 1);
    4972:	61 e0       	ldi	r22, 0x01	; 1
    4974:	80 e0       	ldi	r24, 0x00	; 0
    4976:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1172
      lcd.print("  RED  GRN  BLU  CLR");
    497a:	81 e9       	ldi	r24, 0x91	; 145
    497c:	94 e0       	ldi	r25, 0x04	; 4
    497e:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1174

      lcd.setCursor(0, 2);
    4982:	62 e0       	ldi	r22, 0x02	; 2
    4984:	80 e0       	ldi	r24, 0x00	; 0
    4986:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1175
      lcd.printf(" %4d %4d %4d %4d", red, green, blue, clear);
    498a:	80 91 1f 09 	lds	r24, 0x091F	; 0x80091f <clear+0x1>
    498e:	8f 93       	push	r24
    4990:	80 91 1e 09 	lds	r24, 0x091E	; 0x80091e <clear>
    4994:	8f 93       	push	r24
    4996:	80 91 1d 09 	lds	r24, 0x091D	; 0x80091d <blue+0x1>
    499a:	8f 93       	push	r24
    499c:	80 91 1c 09 	lds	r24, 0x091C	; 0x80091c <blue>
    49a0:	8f 93       	push	r24
    49a2:	80 91 1b 09 	lds	r24, 0x091B	; 0x80091b <green+0x1>
    49a6:	8f 93       	push	r24
    49a8:	80 91 1a 09 	lds	r24, 0x091A	; 0x80091a <green>
    49ac:	8f 93       	push	r24
    49ae:	80 91 19 09 	lds	r24, 0x0919	; 0x800919 <red+0x1>
    49b2:	8f 93       	push	r24
    49b4:	80 91 18 09 	lds	r24, 0x0918	; 0x800918 <red>
    49b8:	8f 93       	push	r24
    49ba:	9f 92       	push	r9
    49bc:	8f 92       	push	r8
    49be:	df 93       	push	r29
    49c0:	cf 93       	push	r28
    49c2:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1176
      delay(100);
    49c6:	64 e6       	ldi	r22, 0x64	; 100
    49c8:	70 e0       	ldi	r23, 0x00	; 0
    49ca:	80 e0       	ldi	r24, 0x00	; 0
    49cc:	90 e0       	ldi	r25, 0x00	; 0
    49ce:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1177
      if (color_L == RED) {
    49d2:	81 e0       	ldi	r24, 0x01	; 1
    49d4:	0e 94 a8 10 	call	0x2150	; 0x2150 <color(char)>
    49d8:	2d b7       	in	r18, 0x3d	; 61
    49da:	3e b7       	in	r19, 0x3e	; 62
    49dc:	24 5f       	subi	r18, 0xF4	; 244
    49de:	3f 4f       	sbci	r19, 0xFF	; 255
    49e0:	0f b6       	in	r0, 0x3f	; 63
    49e2:	f8 94       	cli
    49e4:	3e bf       	out	0x3e, r19	; 62
    49e6:	0f be       	out	0x3f, r0	; 63
    49e8:	2d bf       	out	0x3d, r18	; 61
    49ea:	81 11       	cpse	r24, r1
    49ec:	4f c0       	rjmp	.+158    	; 0x4a8c <menu_color()+0x1c6>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1178
        lcd.setCursor(12, 0);
    49ee:	60 e0       	ldi	r22, 0x00	; 0
    49f0:	8c e0       	ldi	r24, 0x0C	; 12
    49f2:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1179
        lcd.print("RED   ");
    49f6:	87 eb       	ldi	r24, 0xB7	; 183
    49f8:	94 e0       	ldi	r25, 0x04	; 4
    49fa:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1180
        lcd.setCursor(0, 3);
    49fe:	63 e0       	ldi	r22, 0x03	; 3
    4a00:	80 e0       	ldi	r24, 0x00	; 0
    4a02:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1181
        lcd.printf("M%4d %4d %4d %4d", EEPROM_read_int(red_left_r), EEPROM_read_int(red_left_g), EEPROM_read_int(red_left_b), EEPROM_read_int(red_left_c));
    4a06:	8a e1       	ldi	r24, 0x1A	; 26
    4a08:	90 e0       	ldi	r25, 0x00	; 0
    4a0a:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    4a0e:	38 2e       	mov	r3, r24
    4a10:	29 2e       	mov	r2, r25
    4a12:	88 e1       	ldi	r24, 0x18	; 24
    4a14:	90 e0       	ldi	r25, 0x00	; 0
    4a16:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    4a1a:	58 2e       	mov	r5, r24
    4a1c:	49 2e       	mov	r4, r25
    4a1e:	86 e1       	ldi	r24, 0x16	; 22
    4a20:	90 e0       	ldi	r25, 0x00	; 0
    4a22:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    4a26:	78 2e       	mov	r7, r24
    4a28:	69 2e       	mov	r6, r25
    4a2a:	84 e1       	ldi	r24, 0x14	; 20
    4a2c:	90 e0       	ldi	r25, 0x00	; 0
    4a2e:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    4a32:	2f 92       	push	r2
    4a34:	3f 92       	push	r3
    4a36:	4f 92       	push	r4
    4a38:	5f 92       	push	r5
    4a3a:	6f 92       	push	r6
    4a3c:	7f 92       	push	r7
    4a3e:	9f 93       	push	r25
    4a40:	8f 93       	push	r24
    4a42:	1f 93       	push	r17
    4a44:	0f 93       	push	r16
    4a46:	df 93       	push	r29
    4a48:	cf 93       	push	r28
    4a4a:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
    4a4e:	2d b7       	in	r18, 0x3d	; 61
    4a50:	3e b7       	in	r19, 0x3e	; 62
    4a52:	24 5f       	subi	r18, 0xF4	; 244
    4a54:	3f 4f       	sbci	r19, 0xFF	; 255
    4a56:	0f b6       	in	r0, 0x3f	; 63
    4a58:	f8 94       	cli
    4a5a:	3e bf       	out	0x3e, r19	; 62
    4a5c:	0f be       	out	0x3f, r0	; 63
    4a5e:	2d bf       	out	0x3d, r18	; 61
    4a60:	48 cf       	rjmp	.-368    	; 0x48f2 <menu_color()+0x2c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1149
    if (next_page == 0) {
      while (next_page == 0)
        ;
      page++;
      if (page > last_page)
        page = 1;
    4a62:	21 e0       	ldi	r18, 0x01	; 1
    4a64:	20 93 03 01 	sts	0x0103, r18	; 0x800103 <menu_color()::page>
    4a68:	56 cf       	rjmp	.-340    	; 0x4916 <menu_color()+0x50>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1157
    if (previuse_page == 0) {
      while (previuse_page == 0)
        ;
      page--;
      if (page == 0)
        page = last_page;
    4a6a:	88 e0       	ldi	r24, 0x08	; 8
    4a6c:	65 cf       	rjmp	.-310    	; 0x4938 <menu_color()+0x72>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1162
      lcd.clear();
    }
    if (increase == 0)
      go(40, 40);
    else if (decrease == 0)
    4a6e:	8b e0       	ldi	r24, 0x0B	; 11
    4a70:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    4a74:	89 2b       	or	r24, r25
    4a76:	29 f4       	brne	.+10     	; 0x4a82 <menu_color()+0x1bc>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1163
      go(-40, -40);
    4a78:	68 ed       	ldi	r22, 0xD8	; 216
    4a7a:	7f ef       	ldi	r23, 0xFF	; 255
    4a7c:	88 ed       	ldi	r24, 0xD8	; 216
    4a7e:	9f ef       	ldi	r25, 0xFF	; 255
    4a80:	69 cf       	rjmp	.-302    	; 0x4954 <menu_color()+0x8e>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1165
    else
      go(0, 0);
    4a82:	70 e0       	ldi	r23, 0x00	; 0
    4a84:	60 e0       	ldi	r22, 0x00	; 0
    4a86:	90 e0       	ldi	r25, 0x00	; 0
    4a88:	80 e0       	ldi	r24, 0x00	; 0
    4a8a:	64 cf       	rjmp	.-312    	; 0x4954 <menu_color()+0x8e>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1182
      if (color_L == RED) {
        lcd.setCursor(12, 0);
        lcd.print("RED   ");
        lcd.setCursor(0, 3);
        lcd.printf("M%4d %4d %4d %4d", EEPROM_read_int(red_left_r), EEPROM_read_int(red_left_g), EEPROM_read_int(red_left_b), EEPROM_read_int(red_left_c));
      } else if (color_L == GREEN) {
    4a8c:	81 e0       	ldi	r24, 0x01	; 1
    4a8e:	0e 94 a8 10 	call	0x2150	; 0x2150 <color(char)>
    4a92:	81 30       	cpi	r24, 0x01	; 1
    4a94:	d1 f5       	brne	.+116    	; 0x4b0a <menu_color()+0x244>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1183
        lcd.setCursor(12, 0);
    4a96:	60 e0       	ldi	r22, 0x00	; 0
    4a98:	8c e0       	ldi	r24, 0x0C	; 12
    4a9a:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1184
        lcd.print("GREEN ");
    4a9e:	8f ec       	ldi	r24, 0xCF	; 207
    4aa0:	94 e0       	ldi	r25, 0x04	; 4
    4aa2:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1185
        lcd.setCursor(0, 3);
    4aa6:	63 e0       	ldi	r22, 0x03	; 3
    4aa8:	80 e0       	ldi	r24, 0x00	; 0
    4aaa:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1186
        lcd.printf("M%4d %4d %4d %4d", EEPROM_read_int(green_left_r), EEPROM_read_int(green_left_g), EEPROM_read_int(green_left_b), EEPROM_read_int(green_left_c));
    4aae:	82 e2       	ldi	r24, 0x22	; 34
    4ab0:	90 e0       	ldi	r25, 0x00	; 0
    4ab2:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    4ab6:	38 2e       	mov	r3, r24
    4ab8:	29 2e       	mov	r2, r25
    4aba:	80 e2       	ldi	r24, 0x20	; 32
    4abc:	90 e0       	ldi	r25, 0x00	; 0
    4abe:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    4ac2:	58 2e       	mov	r5, r24
    4ac4:	49 2e       	mov	r4, r25
    4ac6:	8e e1       	ldi	r24, 0x1E	; 30
    4ac8:	90 e0       	ldi	r25, 0x00	; 0
    4aca:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    4ace:	78 2e       	mov	r7, r24
    4ad0:	69 2e       	mov	r6, r25
    4ad2:	8c e1       	ldi	r24, 0x1C	; 28
    4ad4:	90 e0       	ldi	r25, 0x00	; 0
    4ad6:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    4ada:	2f 92       	push	r2
    4adc:	3f 92       	push	r3
    4ade:	4f 92       	push	r4
    4ae0:	5f 92       	push	r5
    4ae2:	6f 92       	push	r6
    4ae4:	7f 92       	push	r7
    4ae6:	9f 93       	push	r25
    4ae8:	8f 93       	push	r24
    4aea:	1f 93       	push	r17
    4aec:	0f 93       	push	r16
    4aee:	df 93       	push	r29
    4af0:	cf 93       	push	r28
    4af2:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
    4af6:	2d b7       	in	r18, 0x3d	; 61
    4af8:	3e b7       	in	r19, 0x3e	; 62
    4afa:	24 5f       	subi	r18, 0xF4	; 244
    4afc:	3f 4f       	sbci	r19, 0xFF	; 255
    4afe:	0f b6       	in	r0, 0x3f	; 63
    4b00:	f8 94       	cli
    4b02:	3e bf       	out	0x3e, r19	; 62
    4b04:	0f be       	out	0x3f, r0	; 63
    4b06:	2d bf       	out	0x3d, r18	; 61
    4b08:	f4 ce       	rjmp	.-536    	; 0x48f2 <menu_color()+0x2c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1187
      } else if (color_L == BLUE) {
    4b0a:	81 e0       	ldi	r24, 0x01	; 1
    4b0c:	0e 94 a8 10 	call	0x2150	; 0x2150 <color(char)>
    4b10:	82 30       	cpi	r24, 0x02	; 2
    4b12:	d1 f5       	brne	.+116    	; 0x4b88 <menu_color()+0x2c2>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1188
        lcd.setCursor(12, 0);
    4b14:	60 e0       	ldi	r22, 0x00	; 0
    4b16:	8c e0       	ldi	r24, 0x0C	; 12
    4b18:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1189
        lcd.print("BLUE  ");
    4b1c:	86 ed       	ldi	r24, 0xD6	; 214
    4b1e:	94 e0       	ldi	r25, 0x04	; 4
    4b20:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1190
        lcd.setCursor(0, 3);
    4b24:	63 e0       	ldi	r22, 0x03	; 3
    4b26:	80 e0       	ldi	r24, 0x00	; 0
    4b28:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1191
        lcd.printf("M%4d %4d %4d %4d", EEPROM_read_int(blue_left_r), EEPROM_read_int(blue_left_g), EEPROM_read_int(blue_left_b), EEPROM_read_int(blue_left_c));
    4b2c:	8a e2       	ldi	r24, 0x2A	; 42
    4b2e:	90 e0       	ldi	r25, 0x00	; 0
    4b30:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    4b34:	38 2e       	mov	r3, r24
    4b36:	29 2e       	mov	r2, r25
    4b38:	88 e2       	ldi	r24, 0x28	; 40
    4b3a:	90 e0       	ldi	r25, 0x00	; 0
    4b3c:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    4b40:	58 2e       	mov	r5, r24
    4b42:	49 2e       	mov	r4, r25
    4b44:	86 e2       	ldi	r24, 0x26	; 38
    4b46:	90 e0       	ldi	r25, 0x00	; 0
    4b48:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    4b4c:	78 2e       	mov	r7, r24
    4b4e:	69 2e       	mov	r6, r25
    4b50:	84 e2       	ldi	r24, 0x24	; 36
    4b52:	90 e0       	ldi	r25, 0x00	; 0
    4b54:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    4b58:	2f 92       	push	r2
    4b5a:	3f 92       	push	r3
    4b5c:	4f 92       	push	r4
    4b5e:	5f 92       	push	r5
    4b60:	6f 92       	push	r6
    4b62:	7f 92       	push	r7
    4b64:	9f 93       	push	r25
    4b66:	8f 93       	push	r24
    4b68:	1f 93       	push	r17
    4b6a:	0f 93       	push	r16
    4b6c:	df 93       	push	r29
    4b6e:	cf 93       	push	r28
    4b70:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
    4b74:	2d b7       	in	r18, 0x3d	; 61
    4b76:	3e b7       	in	r19, 0x3e	; 62
    4b78:	24 5f       	subi	r18, 0xF4	; 244
    4b7a:	3f 4f       	sbci	r19, 0xFF	; 255
    4b7c:	0f b6       	in	r0, 0x3f	; 63
    4b7e:	f8 94       	cli
    4b80:	3e bf       	out	0x3e, r19	; 62
    4b82:	0f be       	out	0x3f, r0	; 63
    4b84:	2d bf       	out	0x3d, r18	; 61
    4b86:	b5 ce       	rjmp	.-662    	; 0x48f2 <menu_color()+0x2c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1192
      } else if (color_L == YELLOW) {
    4b88:	81 e0       	ldi	r24, 0x01	; 1
    4b8a:	0e 94 a8 10 	call	0x2150	; 0x2150 <color(char)>
    4b8e:	84 30       	cpi	r24, 0x04	; 4
    4b90:	d1 f5       	brne	.+116    	; 0x4c06 <menu_color()+0x340>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1193
        lcd.setCursor(12, 0);
    4b92:	60 e0       	ldi	r22, 0x00	; 0
    4b94:	8c e0       	ldi	r24, 0x0C	; 12
    4b96:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1194
        lcd.print("YELLOW");
    4b9a:	8d ed       	ldi	r24, 0xDD	; 221
    4b9c:	94 e0       	ldi	r25, 0x04	; 4
    4b9e:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1195
        lcd.setCursor(0, 3);
    4ba2:	63 e0       	ldi	r22, 0x03	; 3
    4ba4:	80 e0       	ldi	r24, 0x00	; 0
    4ba6:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1196
        lcd.printf("M%4d %4d %4d %4d", EEPROM_read_int(yellow_left_r), EEPROM_read_int(yellow_left_g), EEPROM_read_int(yellow_left_b), EEPROM_read_int(yellow_left_c));
    4baa:	82 e3       	ldi	r24, 0x32	; 50
    4bac:	90 e0       	ldi	r25, 0x00	; 0
    4bae:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    4bb2:	38 2e       	mov	r3, r24
    4bb4:	29 2e       	mov	r2, r25
    4bb6:	80 e3       	ldi	r24, 0x30	; 48
    4bb8:	90 e0       	ldi	r25, 0x00	; 0
    4bba:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    4bbe:	58 2e       	mov	r5, r24
    4bc0:	49 2e       	mov	r4, r25
    4bc2:	8e e2       	ldi	r24, 0x2E	; 46
    4bc4:	90 e0       	ldi	r25, 0x00	; 0
    4bc6:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    4bca:	78 2e       	mov	r7, r24
    4bcc:	69 2e       	mov	r6, r25
    4bce:	8c e2       	ldi	r24, 0x2C	; 44
    4bd0:	90 e0       	ldi	r25, 0x00	; 0
    4bd2:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    4bd6:	2f 92       	push	r2
    4bd8:	3f 92       	push	r3
    4bda:	4f 92       	push	r4
    4bdc:	5f 92       	push	r5
    4bde:	6f 92       	push	r6
    4be0:	7f 92       	push	r7
    4be2:	9f 93       	push	r25
    4be4:	8f 93       	push	r24
    4be6:	1f 93       	push	r17
    4be8:	0f 93       	push	r16
    4bea:	df 93       	push	r29
    4bec:	cf 93       	push	r28
    4bee:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
    4bf2:	2d b7       	in	r18, 0x3d	; 61
    4bf4:	3e b7       	in	r19, 0x3e	; 62
    4bf6:	24 5f       	subi	r18, 0xF4	; 244
    4bf8:	3f 4f       	sbci	r19, 0xFF	; 255
    4bfa:	0f b6       	in	r0, 0x3f	; 63
    4bfc:	f8 94       	cli
    4bfe:	3e bf       	out	0x3e, r19	; 62
    4c00:	0f be       	out	0x3f, r0	; 63
    4c02:	2d bf       	out	0x3d, r18	; 61
    4c04:	76 ce       	rjmp	.-788    	; 0x48f2 <menu_color()+0x2c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1197
      } else if (color_L == SILVER) {
    4c06:	81 e0       	ldi	r24, 0x01	; 1
    4c08:	0e 94 a8 10 	call	0x2150	; 0x2150 <color(char)>
    4c0c:	85 30       	cpi	r24, 0x05	; 5
    4c0e:	d1 f5       	brne	.+116    	; 0x4c84 <menu_color()+0x3be>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1198
        lcd.setCursor(12, 0);
    4c10:	60 e0       	ldi	r22, 0x00	; 0
    4c12:	8c e0       	ldi	r24, 0x0C	; 12
    4c14:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1199
        lcd.print("SILVER");
    4c18:	84 ee       	ldi	r24, 0xE4	; 228
    4c1a:	94 e0       	ldi	r25, 0x04	; 4
    4c1c:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1200
        lcd.setCursor(0, 3);
    4c20:	63 e0       	ldi	r22, 0x03	; 3
    4c22:	80 e0       	ldi	r24, 0x00	; 0
    4c24:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1201
        lcd.printf("M%4d %4d %4d %4d", EEPROM_read_int(silver_left_r), EEPROM_read_int(silver_left_g), EEPROM_read_int(silver_left_b), EEPROM_read_int(silver_left_c));
    4c28:	8a e3       	ldi	r24, 0x3A	; 58
    4c2a:	90 e0       	ldi	r25, 0x00	; 0
    4c2c:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    4c30:	38 2e       	mov	r3, r24
    4c32:	29 2e       	mov	r2, r25
    4c34:	88 e3       	ldi	r24, 0x38	; 56
    4c36:	90 e0       	ldi	r25, 0x00	; 0
    4c38:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    4c3c:	58 2e       	mov	r5, r24
    4c3e:	49 2e       	mov	r4, r25
    4c40:	86 e3       	ldi	r24, 0x36	; 54
    4c42:	90 e0       	ldi	r25, 0x00	; 0
    4c44:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    4c48:	78 2e       	mov	r7, r24
    4c4a:	69 2e       	mov	r6, r25
    4c4c:	84 e3       	ldi	r24, 0x34	; 52
    4c4e:	90 e0       	ldi	r25, 0x00	; 0
    4c50:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    4c54:	2f 92       	push	r2
    4c56:	3f 92       	push	r3
    4c58:	4f 92       	push	r4
    4c5a:	5f 92       	push	r5
    4c5c:	6f 92       	push	r6
    4c5e:	7f 92       	push	r7
    4c60:	9f 93       	push	r25
    4c62:	8f 93       	push	r24
    4c64:	1f 93       	push	r17
    4c66:	0f 93       	push	r16
    4c68:	df 93       	push	r29
    4c6a:	cf 93       	push	r28
    4c6c:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
    4c70:	2d b7       	in	r18, 0x3d	; 61
    4c72:	3e b7       	in	r19, 0x3e	; 62
    4c74:	24 5f       	subi	r18, 0xF4	; 244
    4c76:	3f 4f       	sbci	r19, 0xFF	; 255
    4c78:	0f b6       	in	r0, 0x3f	; 63
    4c7a:	f8 94       	cli
    4c7c:	3e bf       	out	0x3e, r19	; 62
    4c7e:	0f be       	out	0x3f, r0	; 63
    4c80:	2d bf       	out	0x3d, r18	; 61
    4c82:	37 ce       	rjmp	.-914    	; 0x48f2 <menu_color()+0x2c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1202
      } else if (color_L == WHITE) {
    4c84:	81 e0       	ldi	r24, 0x01	; 1
    4c86:	0e 94 a8 10 	call	0x2150	; 0x2150 <color(char)>
    4c8a:	87 30       	cpi	r24, 0x07	; 7
    4c8c:	09 f0       	breq	.+2      	; 0x4c90 <menu_color()+0x3ca>
    4c8e:	31 ce       	rjmp	.-926    	; 0x48f2 <menu_color()+0x2c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1203
        lcd.setCursor(12, 0);
    4c90:	60 e0       	ldi	r22, 0x00	; 0
    4c92:	8c e0       	ldi	r24, 0x0C	; 12
    4c94:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1204
        lcd.print("WHITE ");
    4c98:	8b ee       	ldi	r24, 0xEB	; 235
    4c9a:	94 e0       	ldi	r25, 0x04	; 4
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1246
        lcd.print("SIL ");
        lcd.setCursor(0, 3);
        lcd.printf("M%4d %4d %4d %4d", EEPROM_read_int(silver_right_r), EEPROM_read_int(silver_right_g), EEPROM_read_int(silver_right_b), EEPROM_read_int(silver_right_c));
      } else if (color_R == WHITE) {
        lcd.setCursor(12, 0);
        lcd.print("WHT ");
    4c9c:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1247
        lcd.setCursor(0, 3);
    4ca0:	63 e0       	ldi	r22, 0x03	; 3
    4ca2:	80 e0       	ldi	r24, 0x00	; 0
    4ca4:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1248
        lcd.print("                    ");
    4ca8:	82 ef       	ldi	r24, 0xF2	; 242
    4caa:	94 e0       	ldi	r25, 0x04	; 4
    4cac:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
    4cb0:	20 ce       	rjmp	.-960    	; 0x48f2 <menu_color()+0x2c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1208
        lcd.setCursor(12, 0);
        lcd.print("WHITE ");
        lcd.setCursor(0, 3);
        lcd.print("                    ");
      }
    } else if (page == 2)  // APDS Right
    4cb2:	82 30       	cpi	r24, 0x02	; 2
    4cb4:	09 f0       	breq	.+2      	; 0x4cb8 <menu_color()+0x3f2>
    4cb6:	89 c1       	rjmp	.+786    	; 0x4fca <menu_color()+0x704>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1210
    {
      lcd.setCursor(0, 0);
    4cb8:	60 e0       	ldi	r22, 0x00	; 0
    4cba:	80 e0       	ldi	r24, 0x00	; 0
    4cbc:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1211
      lcd.print("APDS Right: ");
    4cc0:	87 e0       	ldi	r24, 0x07	; 7
    4cc2:	95 e0       	ldi	r25, 0x05	; 5
    4cc4:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1212
      lcd.setCursor(0, 1);
    4cc8:	61 e0       	ldi	r22, 0x01	; 1
    4cca:	80 e0       	ldi	r24, 0x00	; 0
    4ccc:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1213
      lcd.print("  RED  GRN  BLU ");
    4cd0:	84 e1       	ldi	r24, 0x14	; 20
    4cd2:	95 e0       	ldi	r25, 0x05	; 5
    4cd4:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1215

      lcd.setCursor(0, 2);
    4cd8:	62 e0       	ldi	r22, 0x02	; 2
    4cda:	80 e0       	ldi	r24, 0x00	; 0
    4cdc:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1216
      lcd.printf(" %4d %4d %4d %4d", red, green, blue, clear);
    4ce0:	80 91 1f 09 	lds	r24, 0x091F	; 0x80091f <clear+0x1>
    4ce4:	8f 93       	push	r24
    4ce6:	80 91 1e 09 	lds	r24, 0x091E	; 0x80091e <clear>
    4cea:	8f 93       	push	r24
    4cec:	80 91 1d 09 	lds	r24, 0x091D	; 0x80091d <blue+0x1>
    4cf0:	8f 93       	push	r24
    4cf2:	80 91 1c 09 	lds	r24, 0x091C	; 0x80091c <blue>
    4cf6:	8f 93       	push	r24
    4cf8:	80 91 1b 09 	lds	r24, 0x091B	; 0x80091b <green+0x1>
    4cfc:	8f 93       	push	r24
    4cfe:	80 91 1a 09 	lds	r24, 0x091A	; 0x80091a <green>
    4d02:	8f 93       	push	r24
    4d04:	80 91 19 09 	lds	r24, 0x0919	; 0x800919 <red+0x1>
    4d08:	8f 93       	push	r24
    4d0a:	80 91 18 09 	lds	r24, 0x0918	; 0x800918 <red>
    4d0e:	8f 93       	push	r24
    4d10:	9f 92       	push	r9
    4d12:	8f 92       	push	r8
    4d14:	df 93       	push	r29
    4d16:	cf 93       	push	r28
    4d18:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1218

      lcd.setCursor(12, 0);
    4d1c:	60 e0       	ldi	r22, 0x00	; 0
    4d1e:	8c e0       	ldi	r24, 0x0C	; 12
    4d20:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1219
      if (color_R == RED) {
    4d24:	82 e0       	ldi	r24, 0x02	; 2
    4d26:	0e 94 a8 10 	call	0x2150	; 0x2150 <color(char)>
    4d2a:	2d b7       	in	r18, 0x3d	; 61
    4d2c:	3e b7       	in	r19, 0x3e	; 62
    4d2e:	24 5f       	subi	r18, 0xF4	; 244
    4d30:	3f 4f       	sbci	r19, 0xFF	; 255
    4d32:	0f b6       	in	r0, 0x3f	; 63
    4d34:	f8 94       	cli
    4d36:	3e bf       	out	0x3e, r19	; 62
    4d38:	0f be       	out	0x3f, r0	; 63
    4d3a:	2d bf       	out	0x3d, r18	; 61
    4d3c:	81 11       	cpse	r24, r1
    4d3e:	3a c0       	rjmp	.+116    	; 0x4db4 <menu_color()+0x4ee>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1220
        lcd.setCursor(12, 0);
    4d40:	60 e0       	ldi	r22, 0x00	; 0
    4d42:	8c e0       	ldi	r24, 0x0C	; 12
    4d44:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1221
        lcd.print("RED ");
    4d48:	85 e2       	ldi	r24, 0x25	; 37
    4d4a:	95 e0       	ldi	r25, 0x05	; 5
    4d4c:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1222
        lcd.setCursor(0, 3);
    4d50:	63 e0       	ldi	r22, 0x03	; 3
    4d52:	80 e0       	ldi	r24, 0x00	; 0
    4d54:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1223
        lcd.printf("M%4d %4d %4d %4d ", EEPROM_read_int(red_right_r), EEPROM_read_int(red_right_g), EEPROM_read_int(red_right_b), EEPROM_read_int(red_right_c));
    4d58:	82 e4       	ldi	r24, 0x42	; 66
    4d5a:	90 e0       	ldi	r25, 0x00	; 0
    4d5c:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    4d60:	38 2e       	mov	r3, r24
    4d62:	29 2e       	mov	r2, r25
    4d64:	80 e4       	ldi	r24, 0x40	; 64
    4d66:	90 e0       	ldi	r25, 0x00	; 0
    4d68:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    4d6c:	58 2e       	mov	r5, r24
    4d6e:	49 2e       	mov	r4, r25
    4d70:	8e e3       	ldi	r24, 0x3E	; 62
    4d72:	90 e0       	ldi	r25, 0x00	; 0
    4d74:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    4d78:	78 2e       	mov	r7, r24
    4d7a:	69 2e       	mov	r6, r25
    4d7c:	8c e3       	ldi	r24, 0x3C	; 60
    4d7e:	90 e0       	ldi	r25, 0x00	; 0
    4d80:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    4d84:	2f 92       	push	r2
    4d86:	3f 92       	push	r3
    4d88:	4f 92       	push	r4
    4d8a:	5f 92       	push	r5
    4d8c:	6f 92       	push	r6
    4d8e:	7f 92       	push	r7
    4d90:	9f 93       	push	r25
    4d92:	8f 93       	push	r24
    4d94:	ff 92       	push	r15
    4d96:	ef 92       	push	r14
    4d98:	df 93       	push	r29
    4d9a:	cf 93       	push	r28
    4d9c:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
    4da0:	2d b7       	in	r18, 0x3d	; 61
    4da2:	3e b7       	in	r19, 0x3e	; 62
    4da4:	24 5f       	subi	r18, 0xF4	; 244
    4da6:	3f 4f       	sbci	r19, 0xFF	; 255
    4da8:	0f b6       	in	r0, 0x3f	; 63
    4daa:	f8 94       	cli
    4dac:	3e bf       	out	0x3e, r19	; 62
    4dae:	0f be       	out	0x3f, r0	; 63
    4db0:	2d bf       	out	0x3d, r18	; 61
    4db2:	9f cd       	rjmp	.-1218   	; 0x48f2 <menu_color()+0x2c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1224
      } else if (color_R == GREEN) {
    4db4:	82 e0       	ldi	r24, 0x02	; 2
    4db6:	0e 94 a8 10 	call	0x2150	; 0x2150 <color(char)>
    4dba:	81 30       	cpi	r24, 0x01	; 1
    4dbc:	d1 f5       	brne	.+116    	; 0x4e32 <menu_color()+0x56c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1225
        lcd.setCursor(12, 0);
    4dbe:	60 e0       	ldi	r22, 0x00	; 0
    4dc0:	8c e0       	ldi	r24, 0x0C	; 12
    4dc2:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1226
        lcd.print("GRN ");
    4dc6:	8c e3       	ldi	r24, 0x3C	; 60
    4dc8:	95 e0       	ldi	r25, 0x05	; 5
    4dca:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1227
        lcd.setCursor(0, 3);
    4dce:	63 e0       	ldi	r22, 0x03	; 3
    4dd0:	80 e0       	ldi	r24, 0x00	; 0
    4dd2:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1228
        lcd.printf("M%4d %4d %4d %4d ", EEPROM_read_int(green_right_r), EEPROM_read_int(green_right_g), EEPROM_read_int(green_right_b), EEPROM_read_int(green_right_c));
    4dd6:	8a e4       	ldi	r24, 0x4A	; 74
    4dd8:	90 e0       	ldi	r25, 0x00	; 0
    4dda:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    4dde:	38 2e       	mov	r3, r24
    4de0:	29 2e       	mov	r2, r25
    4de2:	88 e4       	ldi	r24, 0x48	; 72
    4de4:	90 e0       	ldi	r25, 0x00	; 0
    4de6:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    4dea:	58 2e       	mov	r5, r24
    4dec:	49 2e       	mov	r4, r25
    4dee:	86 e4       	ldi	r24, 0x46	; 70
    4df0:	90 e0       	ldi	r25, 0x00	; 0
    4df2:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    4df6:	78 2e       	mov	r7, r24
    4df8:	69 2e       	mov	r6, r25
    4dfa:	84 e4       	ldi	r24, 0x44	; 68
    4dfc:	90 e0       	ldi	r25, 0x00	; 0
    4dfe:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    4e02:	2f 92       	push	r2
    4e04:	3f 92       	push	r3
    4e06:	4f 92       	push	r4
    4e08:	5f 92       	push	r5
    4e0a:	6f 92       	push	r6
    4e0c:	7f 92       	push	r7
    4e0e:	9f 93       	push	r25
    4e10:	8f 93       	push	r24
    4e12:	ff 92       	push	r15
    4e14:	ef 92       	push	r14
    4e16:	df 93       	push	r29
    4e18:	cf 93       	push	r28
    4e1a:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
    4e1e:	2d b7       	in	r18, 0x3d	; 61
    4e20:	3e b7       	in	r19, 0x3e	; 62
    4e22:	24 5f       	subi	r18, 0xF4	; 244
    4e24:	3f 4f       	sbci	r19, 0xFF	; 255
    4e26:	0f b6       	in	r0, 0x3f	; 63
    4e28:	f8 94       	cli
    4e2a:	3e bf       	out	0x3e, r19	; 62
    4e2c:	0f be       	out	0x3f, r0	; 63
    4e2e:	2d bf       	out	0x3d, r18	; 61
    4e30:	60 cd       	rjmp	.-1344   	; 0x48f2 <menu_color()+0x2c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1229
      } else if (color_R == BLUE) {
    4e32:	82 e0       	ldi	r24, 0x02	; 2
    4e34:	0e 94 a8 10 	call	0x2150	; 0x2150 <color(char)>
    4e38:	82 30       	cpi	r24, 0x02	; 2
    4e3a:	d1 f5       	brne	.+116    	; 0x4eb0 <menu_color()+0x5ea>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1230
        lcd.setCursor(12, 0);
    4e3c:	60 e0       	ldi	r22, 0x00	; 0
    4e3e:	8c e0       	ldi	r24, 0x0C	; 12
    4e40:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1231
        lcd.print("BLUE");
    4e44:	81 e4       	ldi	r24, 0x41	; 65
    4e46:	95 e0       	ldi	r25, 0x05	; 5
    4e48:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1232
        lcd.setCursor(0, 3);
    4e4c:	63 e0       	ldi	r22, 0x03	; 3
    4e4e:	80 e0       	ldi	r24, 0x00	; 0
    4e50:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1233
        lcd.printf("M%4d %4d %4d %4d", EEPROM_read_int(blue_right_r), EEPROM_read_int(blue_right_g), EEPROM_read_int(blue_right_b), EEPROM_read_int(blue_right_c));
    4e54:	82 e5       	ldi	r24, 0x52	; 82
    4e56:	90 e0       	ldi	r25, 0x00	; 0
    4e58:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    4e5c:	38 2e       	mov	r3, r24
    4e5e:	29 2e       	mov	r2, r25
    4e60:	80 e5       	ldi	r24, 0x50	; 80
    4e62:	90 e0       	ldi	r25, 0x00	; 0
    4e64:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    4e68:	58 2e       	mov	r5, r24
    4e6a:	49 2e       	mov	r4, r25
    4e6c:	8e e4       	ldi	r24, 0x4E	; 78
    4e6e:	90 e0       	ldi	r25, 0x00	; 0
    4e70:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    4e74:	78 2e       	mov	r7, r24
    4e76:	69 2e       	mov	r6, r25
    4e78:	8c e4       	ldi	r24, 0x4C	; 76
    4e7a:	90 e0       	ldi	r25, 0x00	; 0
    4e7c:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    4e80:	2f 92       	push	r2
    4e82:	3f 92       	push	r3
    4e84:	4f 92       	push	r4
    4e86:	5f 92       	push	r5
    4e88:	6f 92       	push	r6
    4e8a:	7f 92       	push	r7
    4e8c:	9f 93       	push	r25
    4e8e:	8f 93       	push	r24
    4e90:	1f 93       	push	r17
    4e92:	0f 93       	push	r16
    4e94:	df 93       	push	r29
    4e96:	cf 93       	push	r28
    4e98:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
    4e9c:	2d b7       	in	r18, 0x3d	; 61
    4e9e:	3e b7       	in	r19, 0x3e	; 62
    4ea0:	24 5f       	subi	r18, 0xF4	; 244
    4ea2:	3f 4f       	sbci	r19, 0xFF	; 255
    4ea4:	0f b6       	in	r0, 0x3f	; 63
    4ea6:	f8 94       	cli
    4ea8:	3e bf       	out	0x3e, r19	; 62
    4eaa:	0f be       	out	0x3f, r0	; 63
    4eac:	2d bf       	out	0x3d, r18	; 61
    4eae:	21 cd       	rjmp	.-1470   	; 0x48f2 <menu_color()+0x2c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1234
      } else if (color_R == YELLOW) {
    4eb0:	82 e0       	ldi	r24, 0x02	; 2
    4eb2:	0e 94 a8 10 	call	0x2150	; 0x2150 <color(char)>
    4eb6:	84 30       	cpi	r24, 0x04	; 4
    4eb8:	e1 f5       	brne	.+120    	; 0x4f32 <menu_color()+0x66c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1235
        lcd.setCursor(12, 0);
    4eba:	60 e0       	ldi	r22, 0x00	; 0
    4ebc:	8c e0       	ldi	r24, 0x0C	; 12
    4ebe:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1236
        lcd.print("YELLOW");
    4ec2:	8d ed       	ldi	r24, 0xDD	; 221
    4ec4:	94 e0       	ldi	r25, 0x04	; 4
    4ec6:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1237
        lcd.setCursor(0, 3);
    4eca:	63 e0       	ldi	r22, 0x03	; 3
    4ecc:	80 e0       	ldi	r24, 0x00	; 0
    4ece:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1238
        lcd.printf("M%4d %4d %4d ", EEPROM_read_int(yellow_right_r), EEPROM_read_int(yellow_right_g), EEPROM_read_int(yellow_right_b), EEPROM_read_int(yellow_right_c));
    4ed2:	8a e5       	ldi	r24, 0x5A	; 90
    4ed4:	90 e0       	ldi	r25, 0x00	; 0
    4ed6:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    4eda:	38 2e       	mov	r3, r24
    4edc:	29 2e       	mov	r2, r25
    4ede:	88 e5       	ldi	r24, 0x58	; 88
    4ee0:	90 e0       	ldi	r25, 0x00	; 0
    4ee2:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    4ee6:	58 2e       	mov	r5, r24
    4ee8:	49 2e       	mov	r4, r25
    4eea:	86 e5       	ldi	r24, 0x56	; 86
    4eec:	90 e0       	ldi	r25, 0x00	; 0
    4eee:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    4ef2:	78 2e       	mov	r7, r24
    4ef4:	69 2e       	mov	r6, r25
    4ef6:	84 e5       	ldi	r24, 0x54	; 84
    4ef8:	90 e0       	ldi	r25, 0x00	; 0
    4efa:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    4efe:	2f 92       	push	r2
    4f00:	3f 92       	push	r3
    4f02:	4f 92       	push	r4
    4f04:	5f 92       	push	r5
    4f06:	6f 92       	push	r6
    4f08:	7f 92       	push	r7
    4f0a:	9f 93       	push	r25
    4f0c:	8f 93       	push	r24
    4f0e:	86 e4       	ldi	r24, 0x46	; 70
    4f10:	95 e0       	ldi	r25, 0x05	; 5
    4f12:	9f 93       	push	r25
    4f14:	8f 93       	push	r24
    4f16:	df 93       	push	r29
    4f18:	cf 93       	push	r28
    4f1a:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
    4f1e:	2d b7       	in	r18, 0x3d	; 61
    4f20:	3e b7       	in	r19, 0x3e	; 62
    4f22:	24 5f       	subi	r18, 0xF4	; 244
    4f24:	3f 4f       	sbci	r19, 0xFF	; 255
    4f26:	0f b6       	in	r0, 0x3f	; 63
    4f28:	f8 94       	cli
    4f2a:	3e bf       	out	0x3e, r19	; 62
    4f2c:	0f be       	out	0x3f, r0	; 63
    4f2e:	2d bf       	out	0x3d, r18	; 61
    4f30:	e0 cc       	rjmp	.-1600   	; 0x48f2 <menu_color()+0x2c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1239
      } else if (color_R == SILVER) {
    4f32:	82 e0       	ldi	r24, 0x02	; 2
    4f34:	0e 94 a8 10 	call	0x2150	; 0x2150 <color(char)>
    4f38:	85 30       	cpi	r24, 0x05	; 5
    4f3a:	d1 f5       	brne	.+116    	; 0x4fb0 <menu_color()+0x6ea>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1240
        lcd.setCursor(12, 0);
    4f3c:	60 e0       	ldi	r22, 0x00	; 0
    4f3e:	8c e0       	ldi	r24, 0x0C	; 12
    4f40:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1241
        lcd.print("SIL ");
    4f44:	84 e5       	ldi	r24, 0x54	; 84
    4f46:	95 e0       	ldi	r25, 0x05	; 5
    4f48:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1242
        lcd.setCursor(0, 3);
    4f4c:	63 e0       	ldi	r22, 0x03	; 3
    4f4e:	80 e0       	ldi	r24, 0x00	; 0
    4f50:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1243
        lcd.printf("M%4d %4d %4d %4d", EEPROM_read_int(silver_right_r), EEPROM_read_int(silver_right_g), EEPROM_read_int(silver_right_b), EEPROM_read_int(silver_right_c));
    4f54:	82 e6       	ldi	r24, 0x62	; 98
    4f56:	90 e0       	ldi	r25, 0x00	; 0
    4f58:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    4f5c:	38 2e       	mov	r3, r24
    4f5e:	29 2e       	mov	r2, r25
    4f60:	80 e6       	ldi	r24, 0x60	; 96
    4f62:	90 e0       	ldi	r25, 0x00	; 0
    4f64:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    4f68:	58 2e       	mov	r5, r24
    4f6a:	49 2e       	mov	r4, r25
    4f6c:	8e e5       	ldi	r24, 0x5E	; 94
    4f6e:	90 e0       	ldi	r25, 0x00	; 0
    4f70:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    4f74:	78 2e       	mov	r7, r24
    4f76:	69 2e       	mov	r6, r25
    4f78:	8c e5       	ldi	r24, 0x5C	; 92
    4f7a:	90 e0       	ldi	r25, 0x00	; 0
    4f7c:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    4f80:	2f 92       	push	r2
    4f82:	3f 92       	push	r3
    4f84:	4f 92       	push	r4
    4f86:	5f 92       	push	r5
    4f88:	6f 92       	push	r6
    4f8a:	7f 92       	push	r7
    4f8c:	9f 93       	push	r25
    4f8e:	8f 93       	push	r24
    4f90:	1f 93       	push	r17
    4f92:	0f 93       	push	r16
    4f94:	df 93       	push	r29
    4f96:	cf 93       	push	r28
    4f98:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
    4f9c:	2d b7       	in	r18, 0x3d	; 61
    4f9e:	3e b7       	in	r19, 0x3e	; 62
    4fa0:	24 5f       	subi	r18, 0xF4	; 244
    4fa2:	3f 4f       	sbci	r19, 0xFF	; 255
    4fa4:	0f b6       	in	r0, 0x3f	; 63
    4fa6:	f8 94       	cli
    4fa8:	3e bf       	out	0x3e, r19	; 62
    4faa:	0f be       	out	0x3f, r0	; 63
    4fac:	2d bf       	out	0x3d, r18	; 61
    4fae:	a1 cc       	rjmp	.-1726   	; 0x48f2 <menu_color()+0x2c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1244
      } else if (color_R == WHITE) {
    4fb0:	82 e0       	ldi	r24, 0x02	; 2
    4fb2:	0e 94 a8 10 	call	0x2150	; 0x2150 <color(char)>
    4fb6:	87 30       	cpi	r24, 0x07	; 7
    4fb8:	09 f0       	breq	.+2      	; 0x4fbc <menu_color()+0x6f6>
    4fba:	9b cc       	rjmp	.-1738   	; 0x48f2 <menu_color()+0x2c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1245
        lcd.setCursor(12, 0);
    4fbc:	60 e0       	ldi	r22, 0x00	; 0
    4fbe:	8c e0       	ldi	r24, 0x0C	; 12
    4fc0:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1246
        lcd.print("WHT ");
    4fc4:	89 e5       	ldi	r24, 0x59	; 89
    4fc6:	95 e0       	ldi	r25, 0x05	; 5
    4fc8:	69 ce       	rjmp	.-814    	; 0x4c9c <menu_color()+0x3d6>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1250
        lcd.setCursor(0, 3);
        lcd.print("                    ");
      }
    } else if (page == 3)  // memory RED
    4fca:	83 30       	cpi	r24, 0x03	; 3
    4fcc:	09 f0       	breq	.+2      	; 0x4fd0 <menu_color()+0x70a>
    4fce:	59 c0       	rjmp	.+178    	; 0x5082 <menu_color()+0x7bc>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1252
    {
      lcd.setCursor(0, 0);
    4fd0:	60 e0       	ldi	r22, 0x00	; 0
    4fd2:	80 e0       	ldi	r24, 0x00	; 0
    4fd4:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1253
      lcd.print("memory RED:  ");
    4fd8:	8e e5       	ldi	r24, 0x5E	; 94
    4fda:	95 e0       	ldi	r25, 0x05	; 5
    4fdc:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1255

      lcd.setCursor(0, 1);
    4fe0:	61 e0       	ldi	r22, 0x01	; 1
    4fe2:	80 e0       	ldi	r24, 0x00	; 0
    4fe4:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1256
      lcd.print("  RED  GRN  BLU ");
    4fe8:	84 e1       	ldi	r24, 0x14	; 20
    4fea:	95 e0       	ldi	r25, 0x05	; 5
    4fec:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1258

      lcd.setCursor(0, 2);
    4ff0:	62 e0       	ldi	r22, 0x02	; 2
    4ff2:	80 e0       	ldi	r24, 0x00	; 0
    4ff4:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1259
      lcd.printf("L%4d %4d %4d ", EEPROM_read_int(red_left_r), EEPROM_read_int(red_left_g), EEPROM_read_int(red_left_b));
    4ff8:	88 e1       	ldi	r24, 0x18	; 24
    4ffa:	90 e0       	ldi	r25, 0x00	; 0
    4ffc:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    5000:	58 2e       	mov	r5, r24
    5002:	49 2e       	mov	r4, r25
    5004:	86 e1       	ldi	r24, 0x16	; 22
    5006:	90 e0       	ldi	r25, 0x00	; 0
    5008:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    500c:	78 2e       	mov	r7, r24
    500e:	69 2e       	mov	r6, r25
    5010:	84 e1       	ldi	r24, 0x14	; 20
    5012:	90 e0       	ldi	r25, 0x00	; 0
    5014:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    5018:	4f 92       	push	r4
    501a:	5f 92       	push	r5
    501c:	6f 92       	push	r6
    501e:	7f 92       	push	r7
    5020:	9f 93       	push	r25
    5022:	8f 93       	push	r24
    5024:	df 92       	push	r13
    5026:	cf 92       	push	r12
    5028:	df 93       	push	r29
    502a:	cf 93       	push	r28
    502c:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1261

      lcd.setCursor(0, 3);
    5030:	63 e0       	ldi	r22, 0x03	; 3
    5032:	80 e0       	ldi	r24, 0x00	; 0
    5034:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1262
      lcd.printf("R%4d %4d %4d ", EEPROM_read_int(red_right_r), EEPROM_read_int(red_right_g), EEPROM_read_int(red_right_b));
    5038:	80 e4       	ldi	r24, 0x40	; 64
    503a:	90 e0       	ldi	r25, 0x00	; 0
    503c:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    5040:	58 2e       	mov	r5, r24
    5042:	49 2e       	mov	r4, r25
    5044:	8e e3       	ldi	r24, 0x3E	; 62
    5046:	90 e0       	ldi	r25, 0x00	; 0
    5048:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    504c:	78 2e       	mov	r7, r24
    504e:	69 2e       	mov	r6, r25
    5050:	8c e3       	ldi	r24, 0x3C	; 60
    5052:	90 e0       	ldi	r25, 0x00	; 0
    5054:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    5058:	4f 92       	push	r4
    505a:	5f 92       	push	r5
    505c:	6f 92       	push	r6
    505e:	7f 92       	push	r7
    5060:	9f 93       	push	r25
    5062:	8f 93       	push	r24
    5064:	bf 92       	push	r11
    5066:	af 92       	push	r10
    5068:	df 93       	push	r29
    506a:	cf 93       	push	r28
    506c:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
    5070:	8d b7       	in	r24, 0x3d	; 61
    5072:	9e b7       	in	r25, 0x3e	; 62
    5074:	44 96       	adiw	r24, 0x14	; 20
    5076:	0f b6       	in	r0, 0x3f	; 63
    5078:	f8 94       	cli
    507a:	9e bf       	out	0x3e, r25	; 62
    507c:	0f be       	out	0x3f, r0	; 63
    507e:	8d bf       	out	0x3d, r24	; 61
    5080:	38 cc       	rjmp	.-1936   	; 0x48f2 <menu_color()+0x2c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1263
    } else if (page == 4)  // memory GREEN
    5082:	84 30       	cpi	r24, 0x04	; 4
    5084:	09 f0       	breq	.+2      	; 0x5088 <menu_color()+0x7c2>
    5086:	5a c0       	rjmp	.+180    	; 0x513c <menu_color()+0x876>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1265
    {
      lcd.setCursor(0, 0);
    5088:	60 e0       	ldi	r22, 0x00	; 0
    508a:	80 e0       	ldi	r24, 0x00	; 0
    508c:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1266
      lcd.print("memory GRN:  ");
    5090:	88 e8       	ldi	r24, 0x88	; 136
    5092:	95 e0       	ldi	r25, 0x05	; 5
    5094:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1268

      lcd.setCursor(0, 1);
    5098:	61 e0       	ldi	r22, 0x01	; 1
    509a:	80 e0       	ldi	r24, 0x00	; 0
    509c:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1269
      lcd.print("  RED  GRN  BLU ");
    50a0:	84 e1       	ldi	r24, 0x14	; 20
    50a2:	95 e0       	ldi	r25, 0x05	; 5
    50a4:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1271

      lcd.setCursor(0, 2);
    50a8:	62 e0       	ldi	r22, 0x02	; 2
    50aa:	80 e0       	ldi	r24, 0x00	; 0
    50ac:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1272
      lcd.printf("L%4d %4d %4d ", EEPROM_read_int(green_left_r), EEPROM_read_int(green_left_g), EEPROM_read_int(green_left_b));
    50b0:	80 e2       	ldi	r24, 0x20	; 32
    50b2:	90 e0       	ldi	r25, 0x00	; 0
    50b4:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    50b8:	58 2e       	mov	r5, r24
    50ba:	49 2e       	mov	r4, r25
    50bc:	8e e1       	ldi	r24, 0x1E	; 30
    50be:	90 e0       	ldi	r25, 0x00	; 0
    50c0:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    50c4:	78 2e       	mov	r7, r24
    50c6:	69 2e       	mov	r6, r25
    50c8:	8c e1       	ldi	r24, 0x1C	; 28
    50ca:	90 e0       	ldi	r25, 0x00	; 0
    50cc:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    50d0:	4f 92       	push	r4
    50d2:	5f 92       	push	r5
    50d4:	6f 92       	push	r6
    50d6:	7f 92       	push	r7
    50d8:	9f 93       	push	r25
    50da:	8f 93       	push	r24
    50dc:	df 92       	push	r13
    50de:	cf 92       	push	r12
    50e0:	df 93       	push	r29
    50e2:	cf 93       	push	r28
    50e4:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1274

      lcd.setCursor(0, 3);
    50e8:	63 e0       	ldi	r22, 0x03	; 3
    50ea:	80 e0       	ldi	r24, 0x00	; 0
    50ec:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1275
      lcd.printf("R%4d %4d %4d ", EEPROM_read_int(green_right_r), EEPROM_read_int(green_right_g), EEPROM_read_int(green_right_b));
    50f0:	88 e4       	ldi	r24, 0x48	; 72
    50f2:	90 e0       	ldi	r25, 0x00	; 0
    50f4:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    50f8:	58 2e       	mov	r5, r24
    50fa:	49 2e       	mov	r4, r25
    50fc:	86 e4       	ldi	r24, 0x46	; 70
    50fe:	90 e0       	ldi	r25, 0x00	; 0
    5100:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    5104:	78 2e       	mov	r7, r24
    5106:	69 2e       	mov	r6, r25
    5108:	84 e4       	ldi	r24, 0x44	; 68
    510a:	90 e0       	ldi	r25, 0x00	; 0
    510c:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    5110:	4f 92       	push	r4
    5112:	5f 92       	push	r5
    5114:	6f 92       	push	r6
    5116:	7f 92       	push	r7
    5118:	9f 93       	push	r25
    511a:	8f 93       	push	r24
    511c:	bf 92       	push	r11
    511e:	af 92       	push	r10
    5120:	df 93       	push	r29
    5122:	cf 93       	push	r28
    5124:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
    5128:	2d b7       	in	r18, 0x3d	; 61
    512a:	3e b7       	in	r19, 0x3e	; 62
    512c:	2c 5e       	subi	r18, 0xEC	; 236
    512e:	3f 4f       	sbci	r19, 0xFF	; 255
    5130:	0f b6       	in	r0, 0x3f	; 63
    5132:	f8 94       	cli
    5134:	3e bf       	out	0x3e, r19	; 62
    5136:	0f be       	out	0x3f, r0	; 63
    5138:	2d bf       	out	0x3d, r18	; 61
    513a:	db cb       	rjmp	.-2122   	; 0x48f2 <menu_color()+0x2c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1276
    } else if (page == 5)  // memory BLUE
    513c:	85 30       	cpi	r24, 0x05	; 5
    513e:	09 f0       	breq	.+2      	; 0x5142 <menu_color()+0x87c>
    5140:	59 c0       	rjmp	.+178    	; 0x51f4 <menu_color()+0x92e>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1278
    {
      lcd.setCursor(0, 0);
    5142:	60 e0       	ldi	r22, 0x00	; 0
    5144:	80 e0       	ldi	r24, 0x00	; 0
    5146:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1279
      lcd.print("memory BLU:  ");
    514a:	86 e9       	ldi	r24, 0x96	; 150
    514c:	95 e0       	ldi	r25, 0x05	; 5
    514e:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1281

      lcd.setCursor(0, 1);
    5152:	61 e0       	ldi	r22, 0x01	; 1
    5154:	80 e0       	ldi	r24, 0x00	; 0
    5156:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1282
      lcd.print("  RED  GRN  BLU ");
    515a:	84 e1       	ldi	r24, 0x14	; 20
    515c:	95 e0       	ldi	r25, 0x05	; 5
    515e:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1284

      lcd.setCursor(0, 2);
    5162:	62 e0       	ldi	r22, 0x02	; 2
    5164:	80 e0       	ldi	r24, 0x00	; 0
    5166:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1285
      lcd.printf("L%4d %4d %4d ", EEPROM_read_int(blue_left_r), EEPROM_read_int(blue_left_g), EEPROM_read_int(blue_left_b));
    516a:	88 e2       	ldi	r24, 0x28	; 40
    516c:	90 e0       	ldi	r25, 0x00	; 0
    516e:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    5172:	58 2e       	mov	r5, r24
    5174:	49 2e       	mov	r4, r25
    5176:	86 e2       	ldi	r24, 0x26	; 38
    5178:	90 e0       	ldi	r25, 0x00	; 0
    517a:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    517e:	78 2e       	mov	r7, r24
    5180:	69 2e       	mov	r6, r25
    5182:	84 e2       	ldi	r24, 0x24	; 36
    5184:	90 e0       	ldi	r25, 0x00	; 0
    5186:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    518a:	4f 92       	push	r4
    518c:	5f 92       	push	r5
    518e:	6f 92       	push	r6
    5190:	7f 92       	push	r7
    5192:	9f 93       	push	r25
    5194:	8f 93       	push	r24
    5196:	df 92       	push	r13
    5198:	cf 92       	push	r12
    519a:	df 93       	push	r29
    519c:	cf 93       	push	r28
    519e:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1287

      lcd.setCursor(0, 3);
    51a2:	63 e0       	ldi	r22, 0x03	; 3
    51a4:	80 e0       	ldi	r24, 0x00	; 0
    51a6:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1288
      lcd.printf("R%4d %4d %4d ", EEPROM_read_int(blue_right_r), EEPROM_read_int(blue_right_g), EEPROM_read_int(blue_right_b));
    51aa:	80 e5       	ldi	r24, 0x50	; 80
    51ac:	90 e0       	ldi	r25, 0x00	; 0
    51ae:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    51b2:	58 2e       	mov	r5, r24
    51b4:	49 2e       	mov	r4, r25
    51b6:	8e e4       	ldi	r24, 0x4E	; 78
    51b8:	90 e0       	ldi	r25, 0x00	; 0
    51ba:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    51be:	78 2e       	mov	r7, r24
    51c0:	69 2e       	mov	r6, r25
    51c2:	8c e4       	ldi	r24, 0x4C	; 76
    51c4:	90 e0       	ldi	r25, 0x00	; 0
    51c6:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    51ca:	4f 92       	push	r4
    51cc:	5f 92       	push	r5
    51ce:	6f 92       	push	r6
    51d0:	7f 92       	push	r7
    51d2:	9f 93       	push	r25
    51d4:	8f 93       	push	r24
    51d6:	bf 92       	push	r11
    51d8:	af 92       	push	r10
    51da:	df 93       	push	r29
    51dc:	cf 93       	push	r28
    51de:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
    51e2:	8d b7       	in	r24, 0x3d	; 61
    51e4:	9e b7       	in	r25, 0x3e	; 62
    51e6:	44 96       	adiw	r24, 0x14	; 20
    51e8:	0f b6       	in	r0, 0x3f	; 63
    51ea:	f8 94       	cli
    51ec:	9e bf       	out	0x3e, r25	; 62
    51ee:	0f be       	out	0x3f, r0	; 63
    51f0:	8d bf       	out	0x3d, r24	; 61
    51f2:	7f cb       	rjmp	.-2306   	; 0x48f2 <menu_color()+0x2c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1289
    } else if (page == 6)  // memory Yellow
    51f4:	86 30       	cpi	r24, 0x06	; 6
    51f6:	09 f0       	breq	.+2      	; 0x51fa <menu_color()+0x934>
    51f8:	5a c0       	rjmp	.+180    	; 0x52ae <menu_color()+0x9e8>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1291
    {
      lcd.setCursor(0, 0);
    51fa:	60 e0       	ldi	r22, 0x00	; 0
    51fc:	80 e0       	ldi	r24, 0x00	; 0
    51fe:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1292
      lcd.print("memory Yel:  ");
    5202:	84 ea       	ldi	r24, 0xA4	; 164
    5204:	95 e0       	ldi	r25, 0x05	; 5
    5206:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1294

      lcd.setCursor(0, 1);
    520a:	61 e0       	ldi	r22, 0x01	; 1
    520c:	80 e0       	ldi	r24, 0x00	; 0
    520e:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1295
      lcd.print("  RED  GRN  BLU ");
    5212:	84 e1       	ldi	r24, 0x14	; 20
    5214:	95 e0       	ldi	r25, 0x05	; 5
    5216:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1297

      lcd.setCursor(0, 2);
    521a:	62 e0       	ldi	r22, 0x02	; 2
    521c:	80 e0       	ldi	r24, 0x00	; 0
    521e:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1298
      lcd.printf("L%4d %4d %4d ", EEPROM_read_int(yellow_left_r), EEPROM_read_int(yellow_left_g), EEPROM_read_int(yellow_left_b));
    5222:	80 e3       	ldi	r24, 0x30	; 48
    5224:	90 e0       	ldi	r25, 0x00	; 0
    5226:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    522a:	58 2e       	mov	r5, r24
    522c:	49 2e       	mov	r4, r25
    522e:	8e e2       	ldi	r24, 0x2E	; 46
    5230:	90 e0       	ldi	r25, 0x00	; 0
    5232:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    5236:	78 2e       	mov	r7, r24
    5238:	69 2e       	mov	r6, r25
    523a:	8c e2       	ldi	r24, 0x2C	; 44
    523c:	90 e0       	ldi	r25, 0x00	; 0
    523e:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    5242:	4f 92       	push	r4
    5244:	5f 92       	push	r5
    5246:	6f 92       	push	r6
    5248:	7f 92       	push	r7
    524a:	9f 93       	push	r25
    524c:	8f 93       	push	r24
    524e:	df 92       	push	r13
    5250:	cf 92       	push	r12
    5252:	df 93       	push	r29
    5254:	cf 93       	push	r28
    5256:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1300

      lcd.setCursor(0, 3);
    525a:	63 e0       	ldi	r22, 0x03	; 3
    525c:	80 e0       	ldi	r24, 0x00	; 0
    525e:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1301
      lcd.printf("R%4d %4d %4d ", EEPROM_read_int(yellow_right_r), EEPROM_read_int(yellow_right_g), EEPROM_read_int(yellow_right_b));
    5262:	88 e5       	ldi	r24, 0x58	; 88
    5264:	90 e0       	ldi	r25, 0x00	; 0
    5266:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    526a:	58 2e       	mov	r5, r24
    526c:	49 2e       	mov	r4, r25
    526e:	86 e5       	ldi	r24, 0x56	; 86
    5270:	90 e0       	ldi	r25, 0x00	; 0
    5272:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    5276:	78 2e       	mov	r7, r24
    5278:	69 2e       	mov	r6, r25
    527a:	84 e5       	ldi	r24, 0x54	; 84
    527c:	90 e0       	ldi	r25, 0x00	; 0
    527e:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    5282:	4f 92       	push	r4
    5284:	5f 92       	push	r5
    5286:	6f 92       	push	r6
    5288:	7f 92       	push	r7
    528a:	9f 93       	push	r25
    528c:	8f 93       	push	r24
    528e:	bf 92       	push	r11
    5290:	af 92       	push	r10
    5292:	df 93       	push	r29
    5294:	cf 93       	push	r28
    5296:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
    529a:	2d b7       	in	r18, 0x3d	; 61
    529c:	3e b7       	in	r19, 0x3e	; 62
    529e:	2c 5e       	subi	r18, 0xEC	; 236
    52a0:	3f 4f       	sbci	r19, 0xFF	; 255
    52a2:	0f b6       	in	r0, 0x3f	; 63
    52a4:	f8 94       	cli
    52a6:	3e bf       	out	0x3e, r19	; 62
    52a8:	0f be       	out	0x3f, r0	; 63
    52aa:	2d bf       	out	0x3d, r18	; 61
    52ac:	22 cb       	rjmp	.-2492   	; 0x48f2 <menu_color()+0x2c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1302
    } else if (page == 7)  // memory Silver
    52ae:	87 30       	cpi	r24, 0x07	; 7
    52b0:	09 f0       	breq	.+2      	; 0x52b4 <menu_color()+0x9ee>
    52b2:	6d c0       	rjmp	.+218    	; 0x538e <menu_color()+0xac8>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1304
    {
      lcd.setCursor(0, 0);
    52b4:	60 e0       	ldi	r22, 0x00	; 0
    52b6:	80 e0       	ldi	r24, 0x00	; 0
    52b8:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1305
      lcd.print("memory Silver:  ");
    52bc:	82 eb       	ldi	r24, 0xB2	; 178
    52be:	95 e0       	ldi	r25, 0x05	; 5
    52c0:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1307

      lcd.setCursor(0, 1);
    52c4:	61 e0       	ldi	r22, 0x01	; 1
    52c6:	80 e0       	ldi	r24, 0x00	; 0
    52c8:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1308
      lcd.print("  RED  GRN  BLU ");
    52cc:	84 e1       	ldi	r24, 0x14	; 20
    52ce:	95 e0       	ldi	r25, 0x05	; 5
    52d0:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1310

      lcd.setCursor(0, 2);
    52d4:	62 e0       	ldi	r22, 0x02	; 2
    52d6:	80 e0       	ldi	r24, 0x00	; 0
    52d8:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1311
      lcd.printf("L%4d %4d %4d %4d", EEPROM_read_int(silver_left_r), EEPROM_read_int(silver_left_g), EEPROM_read_int(silver_left_b), EEPROM_read_int(silver_left_c));
    52dc:	8a e3       	ldi	r24, 0x3A	; 58
    52de:	90 e0       	ldi	r25, 0x00	; 0
    52e0:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    52e4:	38 2e       	mov	r3, r24
    52e6:	29 2e       	mov	r2, r25
    52e8:	88 e3       	ldi	r24, 0x38	; 56
    52ea:	90 e0       	ldi	r25, 0x00	; 0
    52ec:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    52f0:	58 2e       	mov	r5, r24
    52f2:	49 2e       	mov	r4, r25
    52f4:	86 e3       	ldi	r24, 0x36	; 54
    52f6:	90 e0       	ldi	r25, 0x00	; 0
    52f8:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    52fc:	78 2e       	mov	r7, r24
    52fe:	69 2e       	mov	r6, r25
    5300:	84 e3       	ldi	r24, 0x34	; 52
    5302:	90 e0       	ldi	r25, 0x00	; 0
    5304:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    5308:	2f 92       	push	r2
    530a:	3f 92       	push	r3
    530c:	4f 92       	push	r4
    530e:	5f 92       	push	r5
    5310:	6f 92       	push	r6
    5312:	7f 92       	push	r7
    5314:	9f 93       	push	r25
    5316:	8f 93       	push	r24
    5318:	83 ec       	ldi	r24, 0xC3	; 195
    531a:	95 e0       	ldi	r25, 0x05	; 5
    531c:	9f 93       	push	r25
    531e:	8f 93       	push	r24
    5320:	df 93       	push	r29
    5322:	cf 93       	push	r28
    5324:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1313

      lcd.setCursor(0, 3);
    5328:	63 e0       	ldi	r22, 0x03	; 3
    532a:	80 e0       	ldi	r24, 0x00	; 0
    532c:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1314
      lcd.printf("R%4d %4d %4d %4d", EEPROM_read_int(silver_right_r), EEPROM_read_int(silver_right_g), EEPROM_read_int(silver_right_b), EEPROM_read_int(silver_right_c));
    5330:	82 e6       	ldi	r24, 0x62	; 98
    5332:	90 e0       	ldi	r25, 0x00	; 0
    5334:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    5338:	38 2e       	mov	r3, r24
    533a:	29 2e       	mov	r2, r25
    533c:	80 e6       	ldi	r24, 0x60	; 96
    533e:	90 e0       	ldi	r25, 0x00	; 0
    5340:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    5344:	58 2e       	mov	r5, r24
    5346:	49 2e       	mov	r4, r25
    5348:	8e e5       	ldi	r24, 0x5E	; 94
    534a:	90 e0       	ldi	r25, 0x00	; 0
    534c:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    5350:	78 2e       	mov	r7, r24
    5352:	69 2e       	mov	r6, r25
    5354:	8c e5       	ldi	r24, 0x5C	; 92
    5356:	90 e0       	ldi	r25, 0x00	; 0
    5358:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    535c:	2f 92       	push	r2
    535e:	3f 92       	push	r3
    5360:	4f 92       	push	r4
    5362:	5f 92       	push	r5
    5364:	6f 92       	push	r6
    5366:	7f 92       	push	r7
    5368:	9f 93       	push	r25
    536a:	8f 93       	push	r24
    536c:	24 ed       	ldi	r18, 0xD4	; 212
    536e:	35 e0       	ldi	r19, 0x05	; 5
    5370:	3f 93       	push	r19
    5372:	2f 93       	push	r18
    5374:	df 93       	push	r29
    5376:	cf 93       	push	r28
    5378:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
    537c:	8d b7       	in	r24, 0x3d	; 61
    537e:	9e b7       	in	r25, 0x3e	; 62
    5380:	48 96       	adiw	r24, 0x18	; 24
    5382:	0f b6       	in	r0, 0x3f	; 63
    5384:	f8 94       	cli
    5386:	9e bf       	out	0x3e, r25	; 62
    5388:	0f be       	out	0x3f, r0	; 63
    538a:	8d bf       	out	0x3d, r24	; 61
    538c:	b2 ca       	rjmp	.-2716   	; 0x48f2 <menu_color()+0x2c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1315
    }else if (page == 8)  // APDS Front
    538e:	88 30       	cpi	r24, 0x08	; 8
    5390:	09 f0       	breq	.+2      	; 0x5394 <menu_color()+0xace>
    5392:	af ca       	rjmp	.-2722   	; 0x48f2 <menu_color()+0x2c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1317
    {
      lcd.setCursor(0, 0);
    5394:	60 e0       	ldi	r22, 0x00	; 0
    5396:	80 e0       	ldi	r24, 0x00	; 0
    5398:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1318
      lcd.print("APDS Front: ");
    539c:	85 ee       	ldi	r24, 0xE5	; 229
    539e:	95 e0       	ldi	r25, 0x05	; 5
    53a0:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1319
      lcd.setCursor(0, 1);
    53a4:	61 e0       	ldi	r22, 0x01	; 1
    53a6:	80 e0       	ldi	r24, 0x00	; 0
    53a8:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1320
      lcd.print("  RED  GRN  BLU ");
    53ac:	84 e1       	ldi	r24, 0x14	; 20
    53ae:	95 e0       	ldi	r25, 0x05	; 5
    53b0:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1322

      lcd.setCursor(0, 2);
    53b4:	62 e0       	ldi	r22, 0x02	; 2
    53b6:	80 e0       	ldi	r24, 0x00	; 0
    53b8:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1323
      lcd.printf(" %4d %4d %4d %4d", red, green, blue, clear);
    53bc:	80 91 1f 09 	lds	r24, 0x091F	; 0x80091f <clear+0x1>
    53c0:	8f 93       	push	r24
    53c2:	80 91 1e 09 	lds	r24, 0x091E	; 0x80091e <clear>
    53c6:	8f 93       	push	r24
    53c8:	80 91 1d 09 	lds	r24, 0x091D	; 0x80091d <blue+0x1>
    53cc:	8f 93       	push	r24
    53ce:	80 91 1c 09 	lds	r24, 0x091C	; 0x80091c <blue>
    53d2:	8f 93       	push	r24
    53d4:	80 91 1b 09 	lds	r24, 0x091B	; 0x80091b <green+0x1>
    53d8:	8f 93       	push	r24
    53da:	80 91 1a 09 	lds	r24, 0x091A	; 0x80091a <green>
    53de:	8f 93       	push	r24
    53e0:	80 91 19 09 	lds	r24, 0x0919	; 0x800919 <red+0x1>
    53e4:	8f 93       	push	r24
    53e6:	80 91 18 09 	lds	r24, 0x0918	; 0x800918 <red>
    53ea:	8f 93       	push	r24
    53ec:	9f 92       	push	r9
    53ee:	8f 92       	push	r8
    53f0:	df 93       	push	r29
    53f2:	cf 93       	push	r28
    53f4:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1325

      lcd.setCursor(12, 0);
    53f8:	60 e0       	ldi	r22, 0x00	; 0
    53fa:	8c e0       	ldi	r24, 0x0C	; 12
    53fc:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1326
      if (color_F == RED) {
    5400:	83 e0       	ldi	r24, 0x03	; 3
    5402:	0e 94 a8 10 	call	0x2150	; 0x2150 <color(char)>
    5406:	2d b7       	in	r18, 0x3d	; 61
    5408:	3e b7       	in	r19, 0x3e	; 62
    540a:	24 5f       	subi	r18, 0xF4	; 244
    540c:	3f 4f       	sbci	r19, 0xFF	; 255
    540e:	0f b6       	in	r0, 0x3f	; 63
    5410:	f8 94       	cli
    5412:	3e bf       	out	0x3e, r19	; 62
    5414:	0f be       	out	0x3f, r0	; 63
    5416:	2d bf       	out	0x3d, r18	; 61
    5418:	81 11       	cpse	r24, r1
    541a:	3a c0       	rjmp	.+116    	; 0x5490 <menu_color()+0xbca>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1327
        lcd.setCursor(12, 0);
    541c:	60 e0       	ldi	r22, 0x00	; 0
    541e:	8c e0       	ldi	r24, 0x0C	; 12
    5420:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1328
        lcd.print("RED ");
    5424:	85 e2       	ldi	r24, 0x25	; 37
    5426:	95 e0       	ldi	r25, 0x05	; 5
    5428:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1329
        lcd.setCursor(0, 3);
    542c:	63 e0       	ldi	r22, 0x03	; 3
    542e:	80 e0       	ldi	r24, 0x00	; 0
    5430:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1330
        lcd.printf("M%4d %4d %4d %4d ", EEPROM_read_int(red_front_r), EEPROM_read_int(red_front_g), EEPROM_read_int(red_front_b), EEPROM_read_int(red_front_c));
    5434:	8a e6       	ldi	r24, 0x6A	; 106
    5436:	90 e0       	ldi	r25, 0x00	; 0
    5438:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    543c:	38 2e       	mov	r3, r24
    543e:	29 2e       	mov	r2, r25
    5440:	88 e6       	ldi	r24, 0x68	; 104
    5442:	90 e0       	ldi	r25, 0x00	; 0
    5444:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    5448:	58 2e       	mov	r5, r24
    544a:	49 2e       	mov	r4, r25
    544c:	86 e6       	ldi	r24, 0x66	; 102
    544e:	90 e0       	ldi	r25, 0x00	; 0
    5450:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    5454:	78 2e       	mov	r7, r24
    5456:	69 2e       	mov	r6, r25
    5458:	84 e6       	ldi	r24, 0x64	; 100
    545a:	90 e0       	ldi	r25, 0x00	; 0
    545c:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    5460:	2f 92       	push	r2
    5462:	3f 92       	push	r3
    5464:	4f 92       	push	r4
    5466:	5f 92       	push	r5
    5468:	6f 92       	push	r6
    546a:	7f 92       	push	r7
    546c:	9f 93       	push	r25
    546e:	8f 93       	push	r24
    5470:	ff 92       	push	r15
    5472:	ef 92       	push	r14
    5474:	df 93       	push	r29
    5476:	cf 93       	push	r28
    5478:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
    547c:	2d b7       	in	r18, 0x3d	; 61
    547e:	3e b7       	in	r19, 0x3e	; 62
    5480:	24 5f       	subi	r18, 0xF4	; 244
    5482:	3f 4f       	sbci	r19, 0xFF	; 255
    5484:	0f b6       	in	r0, 0x3f	; 63
    5486:	f8 94       	cli
    5488:	3e bf       	out	0x3e, r19	; 62
    548a:	0f be       	out	0x3f, r0	; 63
    548c:	2d bf       	out	0x3d, r18	; 61
    548e:	31 ca       	rjmp	.-2974   	; 0x48f2 <menu_color()+0x2c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1331
      } else if (color_F == GREEN) {
    5490:	83 e0       	ldi	r24, 0x03	; 3
    5492:	0e 94 a8 10 	call	0x2150	; 0x2150 <color(char)>
    5496:	81 30       	cpi	r24, 0x01	; 1
    5498:	d1 f5       	brne	.+116    	; 0x550e <menu_color()+0xc48>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1332
        lcd.setCursor(12, 0);
    549a:	60 e0       	ldi	r22, 0x00	; 0
    549c:	8c e0       	ldi	r24, 0x0C	; 12
    549e:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1333
        lcd.print("GRN ");
    54a2:	8c e3       	ldi	r24, 0x3C	; 60
    54a4:	95 e0       	ldi	r25, 0x05	; 5
    54a6:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1334
        lcd.setCursor(0, 3);
    54aa:	63 e0       	ldi	r22, 0x03	; 3
    54ac:	80 e0       	ldi	r24, 0x00	; 0
    54ae:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1335
        lcd.printf("M%4d %4d %4d %4d ", EEPROM_read_int(green_front_r), EEPROM_read_int(green_front_g), EEPROM_read_int(green_front_b), EEPROM_read_int(green_front_c));
    54b2:	82 e7       	ldi	r24, 0x72	; 114
    54b4:	90 e0       	ldi	r25, 0x00	; 0
    54b6:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    54ba:	38 2e       	mov	r3, r24
    54bc:	29 2e       	mov	r2, r25
    54be:	80 e7       	ldi	r24, 0x70	; 112
    54c0:	90 e0       	ldi	r25, 0x00	; 0
    54c2:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    54c6:	58 2e       	mov	r5, r24
    54c8:	49 2e       	mov	r4, r25
    54ca:	8e e6       	ldi	r24, 0x6E	; 110
    54cc:	90 e0       	ldi	r25, 0x00	; 0
    54ce:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    54d2:	78 2e       	mov	r7, r24
    54d4:	69 2e       	mov	r6, r25
    54d6:	8c e6       	ldi	r24, 0x6C	; 108
    54d8:	90 e0       	ldi	r25, 0x00	; 0
    54da:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    54de:	2f 92       	push	r2
    54e0:	3f 92       	push	r3
    54e2:	4f 92       	push	r4
    54e4:	5f 92       	push	r5
    54e6:	6f 92       	push	r6
    54e8:	7f 92       	push	r7
    54ea:	9f 93       	push	r25
    54ec:	8f 93       	push	r24
    54ee:	ff 92       	push	r15
    54f0:	ef 92       	push	r14
    54f2:	df 93       	push	r29
    54f4:	cf 93       	push	r28
    54f6:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
    54fa:	2d b7       	in	r18, 0x3d	; 61
    54fc:	3e b7       	in	r19, 0x3e	; 62
    54fe:	24 5f       	subi	r18, 0xF4	; 244
    5500:	3f 4f       	sbci	r19, 0xFF	; 255
    5502:	0f b6       	in	r0, 0x3f	; 63
    5504:	f8 94       	cli
    5506:	3e bf       	out	0x3e, r19	; 62
    5508:	0f be       	out	0x3f, r0	; 63
    550a:	2d bf       	out	0x3d, r18	; 61
    550c:	f2 c9       	rjmp	.-3100   	; 0x48f2 <menu_color()+0x2c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1336
      } else if (color_F == WHITE) {
    550e:	83 e0       	ldi	r24, 0x03	; 3
    5510:	50 cd       	rjmp	.-1376   	; 0x4fb2 <menu_color()+0x6ec>

00005512 <color_calib()>:
color_calib():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:416

void color_calib(void) {
  static char page = 1, last_page = 12;
  char red_l_calibrated = 0, red_r_calibrated = 0, grn_l_calibrated = 0, grn_r_calibrated = 0, blu_l_calibrated = 0, blu_r_calibrated = 0, yel_l_calibrated = 0, yel_r_calibrated = 0, sil_l_calibrated = 0, sil_r_calibrated = 0,red_f_calibrated = 0, grn_f_calibrated = 0;

  lcd.clear();
    5512:	0e 94 c4 05 	call	0xb88	; 0xb88 <LiquidCrystal::clear() [clone .constprop.32]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:414
  // delay(5);
}

void color_calib(void) {
  static char page = 1, last_page = 12;
  char red_l_calibrated = 0, red_r_calibrated = 0, grn_l_calibrated = 0, grn_r_calibrated = 0, blu_l_calibrated = 0, blu_r_calibrated = 0, yel_l_calibrated = 0, yel_r_calibrated = 0, sil_l_calibrated = 0, sil_r_calibrated = 0,red_f_calibrated = 0, grn_f_calibrated = 0;
    5516:	d0 e0       	ldi	r29, 0x00	; 0
    5518:	c0 e0       	ldi	r28, 0x00	; 0
    551a:	10 e0       	ldi	r17, 0x00	; 0
    551c:	00 e0       	ldi	r16, 0x00	; 0
    551e:	f1 2c       	mov	r15, r1
    5520:	e1 2c       	mov	r14, r1
    5522:	d1 2c       	mov	r13, r1
    5524:	c1 2c       	mov	r12, r1
    5526:	b1 2c       	mov	r11, r1
    5528:	a1 2c       	mov	r10, r1
    552a:	91 2c       	mov	r9, r1
    552c:	81 2c       	mov	r8, r1
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:423
    if (next_page == 0) {
      while (next_page == 0)
        ;
      page++;
      if (page > last_page)
        page = 1;
    552e:	77 24       	eor	r7, r7
    5530:	73 94       	inc	r7
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:432
    if (previuse_page == 0) {
      while (previuse_page == 0)
        ;
      page--;
      if (page < 1)
        page = last_page;
    5532:	8c e0       	ldi	r24, 0x0C	; 12
    5534:	68 2e       	mov	r6, r24
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:418
  static char page = 1, last_page = 12;
  char red_l_calibrated = 0, red_r_calibrated = 0, grn_l_calibrated = 0, grn_r_calibrated = 0, blu_l_calibrated = 0, blu_r_calibrated = 0, yel_l_calibrated = 0, yel_r_calibrated = 0, sil_l_calibrated = 0, sil_r_calibrated = 0,red_f_calibrated = 0, grn_f_calibrated = 0;

  lcd.clear();
  while (1) {
    if (next_page == 0) {
    5536:	88 e0       	ldi	r24, 0x08	; 8
    5538:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    553c:	89 2b       	or	r24, r25
    553e:	79 f4       	brne	.+30     	; 0x555e <color_calib()+0x4c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:419
      while (next_page == 0)
    5540:	88 e0       	ldi	r24, 0x08	; 8
    5542:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    5546:	89 2b       	or	r24, r25
    5548:	d9 f3       	breq	.-10     	; 0x5540 <color_calib()+0x2e>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:421
        ;
      page++;
    554a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    554e:	8f 5f       	subi	r24, 0xFF	; 255
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:422
      if (page > last_page)
    5550:	8d 30       	cpi	r24, 0x0D	; 13
    5552:	0c f0       	brlt	.+2      	; 0x5556 <color_calib()+0x44>
    5554:	a1 c0       	rjmp	.+322    	; 0x5698 <color_calib()+0x186>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:421
  lcd.clear();
  while (1) {
    if (next_page == 0) {
      while (next_page == 0)
        ;
      page++;
    5556:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:424
      if (page > last_page)
        page = 1;
      lcd.clear();
    555a:	0e 94 c4 05 	call	0xb88	; 0xb88 <LiquidCrystal::clear() [clone .constprop.32]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:427
    }

    if (previuse_page == 0) {
    555e:	89 e0       	ldi	r24, 0x09	; 9
    5560:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    5564:	89 2b       	or	r24, r25
    5566:	79 f4       	brne	.+30     	; 0x5586 <color_calib()+0x74>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:428
      while (previuse_page == 0)
    5568:	89 e0       	ldi	r24, 0x09	; 9
    556a:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    556e:	89 2b       	or	r24, r25
    5570:	d9 f3       	breq	.-10     	; 0x5568 <color_calib()+0x56>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:430
        ;
      page--;
    5572:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    5576:	81 50       	subi	r24, 0x01	; 1
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:431
      if (page < 1)
    5578:	18 16       	cp	r1, r24
    557a:	0c f0       	brlt	.+2      	; 0x557e <color_calib()+0x6c>
    557c:	90 c0       	rjmp	.+288    	; 0x569e <color_calib()+0x18c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:430
    }

    if (previuse_page == 0) {
      while (previuse_page == 0)
        ;
      page--;
    557e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:433
      if (page < 1)
        page = last_page;
      lcd.clear();
    5582:	0e 94 c4 05 	call	0xb88	; 0xb88 <LiquidCrystal::clear() [clone .constprop.32]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:436
    }

    if (start == 0) {
    5586:	86 e0       	ldi	r24, 0x06	; 6
    5588:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    558c:	89 2b       	or	r24, r25
    558e:	41 f4       	brne	.+16     	; 0x55a0 <color_calib()+0x8e>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:437
      lcd.clear();
    5590:	0e 94 c4 05 	call	0xb88	; 0xb88 <LiquidCrystal::clear() [clone .constprop.32]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:438
      delay(200);
    5594:	68 ec       	ldi	r22, 0xC8	; 200
    5596:	70 e0       	ldi	r23, 0x00	; 0
    5598:	80 e0       	ldi	r24, 0x00	; 0
    559a:	90 e0       	ldi	r25, 0x00	; 0
    559c:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:441
    }  // baraye inke age 2 bar khastim calib konim motevajeh beshim

    if (page <= 4) {
    55a0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:442
      lcd.setCursor(3, 0);
    55a4:	60 e0       	ldi	r22, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:441
    if (start == 0) {
      lcd.clear();
      delay(200);
    }  // baraye inke age 2 bar khastim calib konim motevajeh beshim

    if (page <= 4) {
    55a6:	85 30       	cpi	r24, 0x05	; 5
    55a8:	0c f0       	brlt	.+2      	; 0x55ac <color_calib()+0x9a>
    55aa:	7c c0       	rjmp	.+248    	; 0x56a4 <color_calib()+0x192>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:442
      lcd.setCursor(3, 0);
    55ac:	83 e0       	ldi	r24, 0x03	; 3
    55ae:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:443
      lcd.print("RED left    ");
    55b2:	83 e2       	ldi	r24, 0x23	; 35
    55b4:	97 e0       	ldi	r25, 0x07	; 7
    55b6:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:444
      if (red_l_calibrated == 1)
    55ba:	81 e0       	ldi	r24, 0x01	; 1
    55bc:	88 12       	cpse	r8, r24
    55be:	04 c0       	rjmp	.+8      	; 0x55c8 <color_calib()+0xb6>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:445
        lcd.print("done");
    55c0:	80 e3       	ldi	r24, 0x30	; 48
    55c2:	97 e0       	ldi	r25, 0x07	; 7
    55c4:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:447

      lcd.setCursor(3, 1);
    55c8:	61 e0       	ldi	r22, 0x01	; 1
    55ca:	83 e0       	ldi	r24, 0x03	; 3
    55cc:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:448
      lcd.print("RED right   ");
    55d0:	85 e3       	ldi	r24, 0x35	; 53
    55d2:	97 e0       	ldi	r25, 0x07	; 7
    55d4:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:449
      if (red_r_calibrated == 1)
    55d8:	81 e0       	ldi	r24, 0x01	; 1
    55da:	98 12       	cpse	r9, r24
    55dc:	04 c0       	rjmp	.+8      	; 0x55e6 <color_calib()+0xd4>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:450
        lcd.print("done");
    55de:	80 e3       	ldi	r24, 0x30	; 48
    55e0:	97 e0       	ldi	r25, 0x07	; 7
    55e2:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:452

      lcd.setCursor(3, 2);
    55e6:	62 e0       	ldi	r22, 0x02	; 2
    55e8:	83 e0       	ldi	r24, 0x03	; 3
    55ea:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:453
      lcd.print("Green left  ");
    55ee:	82 e4       	ldi	r24, 0x42	; 66
    55f0:	97 e0       	ldi	r25, 0x07	; 7
    55f2:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:454
      if (grn_l_calibrated == 1)
    55f6:	81 e0       	ldi	r24, 0x01	; 1
    55f8:	a8 12       	cpse	r10, r24
    55fa:	04 c0       	rjmp	.+8      	; 0x5604 <color_calib()+0xf2>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:455
        lcd.print("done");
    55fc:	80 e3       	ldi	r24, 0x30	; 48
    55fe:	97 e0       	ldi	r25, 0x07	; 7
    5600:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:457

      lcd.setCursor(3, 3);
    5604:	63 e0       	ldi	r22, 0x03	; 3
    5606:	83 e0       	ldi	r24, 0x03	; 3
    5608:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:458
      lcd.print("Green right ");
    560c:	8f e4       	ldi	r24, 0x4F	; 79
    560e:	97 e0       	ldi	r25, 0x07	; 7
    5610:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:459
      if (grn_r_calibrated == 1)
    5614:	81 e0       	ldi	r24, 0x01	; 1
    5616:	b8 12       	cpse	r11, r24
    5618:	04 c0       	rjmp	.+8      	; 0x5622 <color_calib()+0x110>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:460
        lcd.print("done");
    561a:	80 e3       	ldi	r24, 0x30	; 48
    561c:	97 e0       	ldi	r25, 0x07	; 7
    561e:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:462

      lcd.setCursor(0, page - 1);
    5622:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    5626:	61 50       	subi	r22, 0x01	; 1
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:508
      lcd.setCursor(3, 3);
      lcd.print("Red Front");
      if (red_f_calibrated == 1)
        lcd.print("done");

      lcd.setCursor(0, page - 9);
    5628:	80 e0       	ldi	r24, 0x00	; 0
    562a:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:509
      lcd.print("-> ");
    562e:	8c e5       	ldi	r24, 0x5C	; 92
    5630:	97 e0       	ldi	r25, 0x07	; 7
    5632:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:512
    }

    if (page == 1)  // -> red left
    5636:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    563a:	81 30       	cpi	r24, 0x01	; 1
    563c:	09 f0       	breq	.+2      	; 0x5640 <color_calib()+0x12e>
    563e:	af c0       	rjmp	.+350    	; 0x579e <color_calib()+0x28c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:514
    {
      if (start == 0) {
    5640:	86 e0       	ldi	r24, 0x06	; 6
    5642:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    5646:	89 2b       	or	r24, r25
    5648:	09 f0       	breq	.+2      	; 0x564c <color_calib()+0x13a>
    564a:	75 cf       	rjmp	.-278    	; 0x5536 <color_calib()+0x24>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:515
        color_L;
    564c:	81 e0       	ldi	r24, 0x01	; 1
    564e:	0e 94 a8 10 	call	0x2150	; 0x2150 <color(char)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:520
        // EEPROM_read_int(red_left_r) = red;
        // EEPROM_read_int(red_left_g) = green;
        // EEPROM_read_int(red_left_b) = blue;
        // EEPROM_read_int(red_left_c) = clear;
        EEPROM_write_int(red_left_r, red);
    5652:	60 91 18 09 	lds	r22, 0x0918	; 0x800918 <red>
    5656:	70 91 19 09 	lds	r23, 0x0919	; 0x800919 <red+0x1>
    565a:	84 e1       	ldi	r24, 0x14	; 20
    565c:	90 e0       	ldi	r25, 0x00	; 0
    565e:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:521
        EEPROM_write_int(red_left_g, green);
    5662:	60 91 1a 09 	lds	r22, 0x091A	; 0x80091a <green>
    5666:	70 91 1b 09 	lds	r23, 0x091B	; 0x80091b <green+0x1>
    566a:	86 e1       	ldi	r24, 0x16	; 22
    566c:	90 e0       	ldi	r25, 0x00	; 0
    566e:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:522
        EEPROM_write_int(red_left_b, blue);
    5672:	60 91 1c 09 	lds	r22, 0x091C	; 0x80091c <blue>
    5676:	70 91 1d 09 	lds	r23, 0x091D	; 0x80091d <blue+0x1>
    567a:	88 e1       	ldi	r24, 0x18	; 24
    567c:	90 e0       	ldi	r25, 0x00	; 0
    567e:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:523
        EEPROM_write_int(red_left_c, clear);
    5682:	60 91 1e 09 	lds	r22, 0x091E	; 0x80091e <clear>
    5686:	70 91 1f 09 	lds	r23, 0x091F	; 0x80091f <clear+0x1>
    568a:	8a e1       	ldi	r24, 0x1A	; 26
    568c:	90 e0       	ldi	r25, 0x00	; 0
    568e:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:524
        red_l_calibrated = 1;
    5692:	88 24       	eor	r8, r8
    5694:	83 94       	inc	r8
    5696:	4f cf       	rjmp	.-354    	; 0x5536 <color_calib()+0x24>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:423
    if (next_page == 0) {
      while (next_page == 0)
        ;
      page++;
      if (page > last_page)
        page = 1;
    5698:	70 92 00 01 	sts	0x0100, r7	; 0x800100 <__DATA_REGION_ORIGIN__>
    569c:	5e cf       	rjmp	.-324    	; 0x555a <color_calib()+0x48>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:432
    if (previuse_page == 0) {
      while (previuse_page == 0)
        ;
      page--;
      if (page < 1)
        page = last_page;
    569e:	60 92 00 01 	sts	0x0100, r6	; 0x800100 <__DATA_REGION_ORIGIN__>
    56a2:	6f cf       	rjmp	.-290    	; 0x5582 <color_calib()+0x70>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:464
      if (grn_r_calibrated == 1)
        lcd.print("done");

      lcd.setCursor(0, page - 1);
      lcd.print("-> ");
    } else if (page <= 8) {
    56a4:	89 30       	cpi	r24, 0x09	; 9
    56a6:	0c f0       	brlt	.+2      	; 0x56aa <color_calib()+0x198>
    56a8:	3f c0       	rjmp	.+126    	; 0x5728 <color_calib()+0x216>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:465
      lcd.setCursor(3, 0);
    56aa:	83 e0       	ldi	r24, 0x03	; 3
    56ac:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:466
      lcd.print("BLUE left   ");
    56b0:	80 e6       	ldi	r24, 0x60	; 96
    56b2:	97 e0       	ldi	r25, 0x07	; 7
    56b4:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:467
      if (blu_l_calibrated == 1)
    56b8:	81 e0       	ldi	r24, 0x01	; 1
    56ba:	c8 12       	cpse	r12, r24
    56bc:	04 c0       	rjmp	.+8      	; 0x56c6 <color_calib()+0x1b4>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:468
        lcd.print("done");
    56be:	80 e3       	ldi	r24, 0x30	; 48
    56c0:	97 e0       	ldi	r25, 0x07	; 7
    56c2:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:470

      lcd.setCursor(3, 1);
    56c6:	61 e0       	ldi	r22, 0x01	; 1
    56c8:	83 e0       	ldi	r24, 0x03	; 3
    56ca:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:471
      lcd.print("BLUE right  ");
    56ce:	8d e6       	ldi	r24, 0x6D	; 109
    56d0:	97 e0       	ldi	r25, 0x07	; 7
    56d2:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:472
      if (blu_r_calibrated == 1)
    56d6:	81 e0       	ldi	r24, 0x01	; 1
    56d8:	d8 12       	cpse	r13, r24
    56da:	04 c0       	rjmp	.+8      	; 0x56e4 <color_calib()+0x1d2>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:473
        lcd.print("done");
    56dc:	80 e3       	ldi	r24, 0x30	; 48
    56de:	97 e0       	ldi	r25, 0x07	; 7
    56e0:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:475

      lcd.setCursor(3, 2);
    56e4:	62 e0       	ldi	r22, 0x02	; 2
    56e6:	83 e0       	ldi	r24, 0x03	; 3
    56e8:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:476
      lcd.print("YELLOW left ");
    56ec:	8a e7       	ldi	r24, 0x7A	; 122
    56ee:	97 e0       	ldi	r25, 0x07	; 7
    56f0:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:477
      if (yel_l_calibrated == 1)
    56f4:	81 e0       	ldi	r24, 0x01	; 1
    56f6:	e8 12       	cpse	r14, r24
    56f8:	04 c0       	rjmp	.+8      	; 0x5702 <color_calib()+0x1f0>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:478
        lcd.print("done");
    56fa:	80 e3       	ldi	r24, 0x30	; 48
    56fc:	97 e0       	ldi	r25, 0x07	; 7
    56fe:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:480

      lcd.setCursor(3, 3);
    5702:	63 e0       	ldi	r22, 0x03	; 3
    5704:	83 e0       	ldi	r24, 0x03	; 3
    5706:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:481
      lcd.print("YELLOW right ");
    570a:	87 e8       	ldi	r24, 0x87	; 135
    570c:	97 e0       	ldi	r25, 0x07	; 7
    570e:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:482
      if (yel_r_calibrated == 1)
    5712:	81 e0       	ldi	r24, 0x01	; 1
    5714:	f8 12       	cpse	r15, r24
    5716:	04 c0       	rjmp	.+8      	; 0x5720 <color_calib()+0x20e>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:483
        lcd.print("done");
    5718:	80 e3       	ldi	r24, 0x30	; 48
    571a:	97 e0       	ldi	r25, 0x07	; 7
    571c:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:485

      lcd.setCursor(0, page - 5);
    5720:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    5724:	65 50       	subi	r22, 0x05	; 5
    5726:	80 cf       	rjmp	.-256    	; 0x5628 <color_calib()+0x116>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:488
      lcd.print("-> ");
    } else {
      lcd.setCursor(3, 0);
    5728:	83 e0       	ldi	r24, 0x03	; 3
    572a:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:489
      lcd.print("SILVER left  ");
    572e:	85 e9       	ldi	r24, 0x95	; 149
    5730:	97 e0       	ldi	r25, 0x07	; 7
    5732:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:490
      if (sil_l_calibrated == 1)
    5736:	01 30       	cpi	r16, 0x01	; 1
    5738:	21 f4       	brne	.+8      	; 0x5742 <color_calib()+0x230>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:491
        lcd.print("done");
    573a:	80 e3       	ldi	r24, 0x30	; 48
    573c:	97 e0       	ldi	r25, 0x07	; 7
    573e:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:493

      lcd.setCursor(3, 1);
    5742:	61 e0       	ldi	r22, 0x01	; 1
    5744:	83 e0       	ldi	r24, 0x03	; 3
    5746:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:494
      lcd.print("SILVER right ");
    574a:	83 ea       	ldi	r24, 0xA3	; 163
    574c:	97 e0       	ldi	r25, 0x07	; 7
    574e:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:495
      if (sil_r_calibrated == 1)
    5752:	11 30       	cpi	r17, 0x01	; 1
    5754:	21 f4       	brne	.+8      	; 0x575e <color_calib()+0x24c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:496
        lcd.print("done");
    5756:	80 e3       	ldi	r24, 0x30	; 48
    5758:	97 e0       	ldi	r25, 0x07	; 7
    575a:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:498

      lcd.setCursor(3, 2);
    575e:	62 e0       	ldi	r22, 0x02	; 2
    5760:	83 e0       	ldi	r24, 0x03	; 3
    5762:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:499
      lcd.print("Green Front ");
    5766:	81 eb       	ldi	r24, 0xB1	; 177
    5768:	97 e0       	ldi	r25, 0x07	; 7
    576a:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:500
      if (grn_f_calibrated == 1)
    576e:	d1 30       	cpi	r29, 0x01	; 1
    5770:	21 f4       	brne	.+8      	; 0x577a <color_calib()+0x268>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:501
        lcd.print("done");
    5772:	80 e3       	ldi	r24, 0x30	; 48
    5774:	97 e0       	ldi	r25, 0x07	; 7
    5776:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:503

      lcd.setCursor(3, 3);
    577a:	63 e0       	ldi	r22, 0x03	; 3
    577c:	83 e0       	ldi	r24, 0x03	; 3
    577e:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:504
      lcd.print("Red Front");
    5782:	8e eb       	ldi	r24, 0xBE	; 190
    5784:	97 e0       	ldi	r25, 0x07	; 7
    5786:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:505
      if (red_f_calibrated == 1)
    578a:	c1 30       	cpi	r28, 0x01	; 1
    578c:	21 f4       	brne	.+8      	; 0x5796 <color_calib()+0x284>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:506
        lcd.print("done");
    578e:	80 e3       	ldi	r24, 0x30	; 48
    5790:	97 e0       	ldi	r25, 0x07	; 7
    5792:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:508

      lcd.setCursor(0, page - 9);
    5796:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    579a:	69 50       	subi	r22, 0x09	; 9
    579c:	45 cf       	rjmp	.-374    	; 0x5628 <color_calib()+0x116>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:526
        EEPROM_write_int(red_left_g, green);
        EEPROM_write_int(red_left_b, blue);
        EEPROM_write_int(red_left_c, clear);
        red_l_calibrated = 1;
      }
    } else if (page == 2)  // red right
    579e:	82 30       	cpi	r24, 0x02	; 2
    57a0:	61 f5       	brne	.+88     	; 0x57fa <color_calib()+0x2e8>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:528
    {
      if (start == 0) {
    57a2:	86 e0       	ldi	r24, 0x06	; 6
    57a4:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    57a8:	89 2b       	or	r24, r25
    57aa:	09 f0       	breq	.+2      	; 0x57ae <color_calib()+0x29c>
    57ac:	c4 ce       	rjmp	.-632    	; 0x5536 <color_calib()+0x24>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:529
        color_R;
    57ae:	82 e0       	ldi	r24, 0x02	; 2
    57b0:	0e 94 a8 10 	call	0x2150	; 0x2150 <color(char)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:530
        EEPROM_write_int(red_right_r, red);
    57b4:	60 91 18 09 	lds	r22, 0x0918	; 0x800918 <red>
    57b8:	70 91 19 09 	lds	r23, 0x0919	; 0x800919 <red+0x1>
    57bc:	8c e3       	ldi	r24, 0x3C	; 60
    57be:	90 e0       	ldi	r25, 0x00	; 0
    57c0:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:531
        EEPROM_write_int(red_right_g, green);
    57c4:	60 91 1a 09 	lds	r22, 0x091A	; 0x80091a <green>
    57c8:	70 91 1b 09 	lds	r23, 0x091B	; 0x80091b <green+0x1>
    57cc:	8e e3       	ldi	r24, 0x3E	; 62
    57ce:	90 e0       	ldi	r25, 0x00	; 0
    57d0:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:532
        EEPROM_write_int(red_right_b, blue);
    57d4:	60 91 1c 09 	lds	r22, 0x091C	; 0x80091c <blue>
    57d8:	70 91 1d 09 	lds	r23, 0x091D	; 0x80091d <blue+0x1>
    57dc:	80 e4       	ldi	r24, 0x40	; 64
    57de:	90 e0       	ldi	r25, 0x00	; 0
    57e0:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:533
        EEPROM_write_int(red_right_c, clear);
    57e4:	60 91 1e 09 	lds	r22, 0x091E	; 0x80091e <clear>
    57e8:	70 91 1f 09 	lds	r23, 0x091F	; 0x80091f <clear+0x1>
    57ec:	82 e4       	ldi	r24, 0x42	; 66
    57ee:	90 e0       	ldi	r25, 0x00	; 0
    57f0:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:534
        red_r_calibrated = 1;
    57f4:	99 24       	eor	r9, r9
    57f6:	93 94       	inc	r9
    57f8:	9e ce       	rjmp	.-708    	; 0x5536 <color_calib()+0x24>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:538
      }
    }

    else if (page == 3)  // grn left
    57fa:	83 30       	cpi	r24, 0x03	; 3
    57fc:	61 f5       	brne	.+88     	; 0x5856 <color_calib()+0x344>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:540
    {
      if (start == 0) {
    57fe:	86 e0       	ldi	r24, 0x06	; 6
    5800:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    5804:	89 2b       	or	r24, r25
    5806:	09 f0       	breq	.+2      	; 0x580a <color_calib()+0x2f8>
    5808:	96 ce       	rjmp	.-724    	; 0x5536 <color_calib()+0x24>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:541
        color_L;
    580a:	81 e0       	ldi	r24, 0x01	; 1
    580c:	0e 94 a8 10 	call	0x2150	; 0x2150 <color(char)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:542
        EEPROM_write_int(green_left_r, red);
    5810:	60 91 18 09 	lds	r22, 0x0918	; 0x800918 <red>
    5814:	70 91 19 09 	lds	r23, 0x0919	; 0x800919 <red+0x1>
    5818:	8c e1       	ldi	r24, 0x1C	; 28
    581a:	90 e0       	ldi	r25, 0x00	; 0
    581c:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:543
        EEPROM_write_int(green_left_g, green);
    5820:	60 91 1a 09 	lds	r22, 0x091A	; 0x80091a <green>
    5824:	70 91 1b 09 	lds	r23, 0x091B	; 0x80091b <green+0x1>
    5828:	8e e1       	ldi	r24, 0x1E	; 30
    582a:	90 e0       	ldi	r25, 0x00	; 0
    582c:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:544
        EEPROM_write_int(green_left_b, blue);
    5830:	60 91 1c 09 	lds	r22, 0x091C	; 0x80091c <blue>
    5834:	70 91 1d 09 	lds	r23, 0x091D	; 0x80091d <blue+0x1>
    5838:	80 e2       	ldi	r24, 0x20	; 32
    583a:	90 e0       	ldi	r25, 0x00	; 0
    583c:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:545
        EEPROM_write_int(green_left_c, clear);
    5840:	60 91 1e 09 	lds	r22, 0x091E	; 0x80091e <clear>
    5844:	70 91 1f 09 	lds	r23, 0x091F	; 0x80091f <clear+0x1>
    5848:	82 e2       	ldi	r24, 0x22	; 34
    584a:	90 e0       	ldi	r25, 0x00	; 0
    584c:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:546
        grn_l_calibrated = 1;
    5850:	aa 24       	eor	r10, r10
    5852:	a3 94       	inc	r10
    5854:	70 ce       	rjmp	.-800    	; 0x5536 <color_calib()+0x24>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:548
      }
    } else if (page == 4)  // grn right
    5856:	84 30       	cpi	r24, 0x04	; 4
    5858:	61 f5       	brne	.+88     	; 0x58b2 <color_calib()+0x3a0>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:550
    {
      if (start == 0) {
    585a:	86 e0       	ldi	r24, 0x06	; 6
    585c:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    5860:	89 2b       	or	r24, r25
    5862:	09 f0       	breq	.+2      	; 0x5866 <color_calib()+0x354>
    5864:	68 ce       	rjmp	.-816    	; 0x5536 <color_calib()+0x24>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:551
        color_R;
    5866:	82 e0       	ldi	r24, 0x02	; 2
    5868:	0e 94 a8 10 	call	0x2150	; 0x2150 <color(char)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:552
        EEPROM_write_int(green_right_r, red);
    586c:	60 91 18 09 	lds	r22, 0x0918	; 0x800918 <red>
    5870:	70 91 19 09 	lds	r23, 0x0919	; 0x800919 <red+0x1>
    5874:	84 e4       	ldi	r24, 0x44	; 68
    5876:	90 e0       	ldi	r25, 0x00	; 0
    5878:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:553
        EEPROM_write_int(green_right_g, green);
    587c:	60 91 1a 09 	lds	r22, 0x091A	; 0x80091a <green>
    5880:	70 91 1b 09 	lds	r23, 0x091B	; 0x80091b <green+0x1>
    5884:	86 e4       	ldi	r24, 0x46	; 70
    5886:	90 e0       	ldi	r25, 0x00	; 0
    5888:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:554
        EEPROM_write_int(green_right_b, blue);
    588c:	60 91 1c 09 	lds	r22, 0x091C	; 0x80091c <blue>
    5890:	70 91 1d 09 	lds	r23, 0x091D	; 0x80091d <blue+0x1>
    5894:	88 e4       	ldi	r24, 0x48	; 72
    5896:	90 e0       	ldi	r25, 0x00	; 0
    5898:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:555
        EEPROM_write_int(green_right_c, clear);
    589c:	60 91 1e 09 	lds	r22, 0x091E	; 0x80091e <clear>
    58a0:	70 91 1f 09 	lds	r23, 0x091F	; 0x80091f <clear+0x1>
    58a4:	8a e4       	ldi	r24, 0x4A	; 74
    58a6:	90 e0       	ldi	r25, 0x00	; 0
    58a8:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:556
        grn_r_calibrated = 1;
    58ac:	bb 24       	eor	r11, r11
    58ae:	b3 94       	inc	r11
    58b0:	42 ce       	rjmp	.-892    	; 0x5536 <color_calib()+0x24>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:560
      }
    }

    else if (page == 5)  // blu left
    58b2:	85 30       	cpi	r24, 0x05	; 5
    58b4:	61 f5       	brne	.+88     	; 0x590e <color_calib()+0x3fc>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:562
    {
      if (start == 0) {
    58b6:	86 e0       	ldi	r24, 0x06	; 6
    58b8:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    58bc:	89 2b       	or	r24, r25
    58be:	09 f0       	breq	.+2      	; 0x58c2 <color_calib()+0x3b0>
    58c0:	3a ce       	rjmp	.-908    	; 0x5536 <color_calib()+0x24>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:563
        color_L;
    58c2:	81 e0       	ldi	r24, 0x01	; 1
    58c4:	0e 94 a8 10 	call	0x2150	; 0x2150 <color(char)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:564
        EEPROM_write_int(blue_left_r, red);
    58c8:	60 91 18 09 	lds	r22, 0x0918	; 0x800918 <red>
    58cc:	70 91 19 09 	lds	r23, 0x0919	; 0x800919 <red+0x1>
    58d0:	84 e2       	ldi	r24, 0x24	; 36
    58d2:	90 e0       	ldi	r25, 0x00	; 0
    58d4:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:565
        EEPROM_write_int(blue_left_g, green);
    58d8:	60 91 1a 09 	lds	r22, 0x091A	; 0x80091a <green>
    58dc:	70 91 1b 09 	lds	r23, 0x091B	; 0x80091b <green+0x1>
    58e0:	86 e2       	ldi	r24, 0x26	; 38
    58e2:	90 e0       	ldi	r25, 0x00	; 0
    58e4:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:566
        EEPROM_write_int(blue_left_b, blue);
    58e8:	60 91 1c 09 	lds	r22, 0x091C	; 0x80091c <blue>
    58ec:	70 91 1d 09 	lds	r23, 0x091D	; 0x80091d <blue+0x1>
    58f0:	88 e2       	ldi	r24, 0x28	; 40
    58f2:	90 e0       	ldi	r25, 0x00	; 0
    58f4:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:567
        EEPROM_write_int(blue_left_c, clear);
    58f8:	60 91 1e 09 	lds	r22, 0x091E	; 0x80091e <clear>
    58fc:	70 91 1f 09 	lds	r23, 0x091F	; 0x80091f <clear+0x1>
    5900:	8a e2       	ldi	r24, 0x2A	; 42
    5902:	90 e0       	ldi	r25, 0x00	; 0
    5904:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:568
        blu_l_calibrated = 1;
    5908:	cc 24       	eor	r12, r12
    590a:	c3 94       	inc	r12
    590c:	14 ce       	rjmp	.-984    	; 0x5536 <color_calib()+0x24>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:570
      }
    } else if (page == 6)  // blu right
    590e:	86 30       	cpi	r24, 0x06	; 6
    5910:	59 f5       	brne	.+86     	; 0x5968 <color_calib()+0x456>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:572
    {
      if (start == 0) {
    5912:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    5916:	89 2b       	or	r24, r25
    5918:	09 f0       	breq	.+2      	; 0x591c <color_calib()+0x40a>
    591a:	0d ce       	rjmp	.-998    	; 0x5536 <color_calib()+0x24>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:573
        color_R;
    591c:	82 e0       	ldi	r24, 0x02	; 2
    591e:	0e 94 a8 10 	call	0x2150	; 0x2150 <color(char)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:574
        EEPROM_write_int(blue_right_r, red);
    5922:	60 91 18 09 	lds	r22, 0x0918	; 0x800918 <red>
    5926:	70 91 19 09 	lds	r23, 0x0919	; 0x800919 <red+0x1>
    592a:	8c e4       	ldi	r24, 0x4C	; 76
    592c:	90 e0       	ldi	r25, 0x00	; 0
    592e:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:575
        EEPROM_write_int(blue_right_g, green);
    5932:	60 91 1a 09 	lds	r22, 0x091A	; 0x80091a <green>
    5936:	70 91 1b 09 	lds	r23, 0x091B	; 0x80091b <green+0x1>
    593a:	8e e4       	ldi	r24, 0x4E	; 78
    593c:	90 e0       	ldi	r25, 0x00	; 0
    593e:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:576
        EEPROM_write_int(blue_right_b, blue);
    5942:	60 91 1c 09 	lds	r22, 0x091C	; 0x80091c <blue>
    5946:	70 91 1d 09 	lds	r23, 0x091D	; 0x80091d <blue+0x1>
    594a:	80 e5       	ldi	r24, 0x50	; 80
    594c:	90 e0       	ldi	r25, 0x00	; 0
    594e:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:577
        EEPROM_write_int(blue_right_c, clear);
    5952:	60 91 1e 09 	lds	r22, 0x091E	; 0x80091e <clear>
    5956:	70 91 1f 09 	lds	r23, 0x091F	; 0x80091f <clear+0x1>
    595a:	82 e5       	ldi	r24, 0x52	; 82
    595c:	90 e0       	ldi	r25, 0x00	; 0
    595e:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:578
        blu_r_calibrated = 1;
    5962:	dd 24       	eor	r13, r13
    5964:	d3 94       	inc	r13
    5966:	e7 cd       	rjmp	.-1074   	; 0x5536 <color_calib()+0x24>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:582
      }
    }

    else if (page == 7)  // yelow left
    5968:	87 30       	cpi	r24, 0x07	; 7
    596a:	61 f5       	brne	.+88     	; 0x59c4 <color_calib()+0x4b2>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:584
    {
      if (start == 0) {
    596c:	86 e0       	ldi	r24, 0x06	; 6
    596e:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    5972:	89 2b       	or	r24, r25
    5974:	09 f0       	breq	.+2      	; 0x5978 <color_calib()+0x466>
    5976:	df cd       	rjmp	.-1090   	; 0x5536 <color_calib()+0x24>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:585
        color_L;
    5978:	81 e0       	ldi	r24, 0x01	; 1
    597a:	0e 94 a8 10 	call	0x2150	; 0x2150 <color(char)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:586
        EEPROM_write_int(yellow_left_r, red);
    597e:	60 91 18 09 	lds	r22, 0x0918	; 0x800918 <red>
    5982:	70 91 19 09 	lds	r23, 0x0919	; 0x800919 <red+0x1>
    5986:	8c e2       	ldi	r24, 0x2C	; 44
    5988:	90 e0       	ldi	r25, 0x00	; 0
    598a:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:587
        EEPROM_write_int(yellow_left_g, green);
    598e:	60 91 1a 09 	lds	r22, 0x091A	; 0x80091a <green>
    5992:	70 91 1b 09 	lds	r23, 0x091B	; 0x80091b <green+0x1>
    5996:	8e e2       	ldi	r24, 0x2E	; 46
    5998:	90 e0       	ldi	r25, 0x00	; 0
    599a:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:588
        EEPROM_write_int(yellow_left_b, blue);
    599e:	60 91 1c 09 	lds	r22, 0x091C	; 0x80091c <blue>
    59a2:	70 91 1d 09 	lds	r23, 0x091D	; 0x80091d <blue+0x1>
    59a6:	80 e3       	ldi	r24, 0x30	; 48
    59a8:	90 e0       	ldi	r25, 0x00	; 0
    59aa:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:589
        EEPROM_write_int(yellow_left_c, clear);
    59ae:	60 91 1e 09 	lds	r22, 0x091E	; 0x80091e <clear>
    59b2:	70 91 1f 09 	lds	r23, 0x091F	; 0x80091f <clear+0x1>
    59b6:	82 e3       	ldi	r24, 0x32	; 50
    59b8:	90 e0       	ldi	r25, 0x00	; 0
    59ba:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:590
        yel_l_calibrated = 1;
    59be:	ee 24       	eor	r14, r14
    59c0:	e3 94       	inc	r14
    59c2:	b9 cd       	rjmp	.-1166   	; 0x5536 <color_calib()+0x24>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:592
      }
    } else if (page == 8)  // yelow right
    59c4:	88 30       	cpi	r24, 0x08	; 8
    59c6:	61 f5       	brne	.+88     	; 0x5a20 <color_calib()+0x50e>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:594
    {
      if (start == 0) {
    59c8:	86 e0       	ldi	r24, 0x06	; 6
    59ca:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    59ce:	89 2b       	or	r24, r25
    59d0:	09 f0       	breq	.+2      	; 0x59d4 <color_calib()+0x4c2>
    59d2:	b1 cd       	rjmp	.-1182   	; 0x5536 <color_calib()+0x24>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:595
        color_R;
    59d4:	82 e0       	ldi	r24, 0x02	; 2
    59d6:	0e 94 a8 10 	call	0x2150	; 0x2150 <color(char)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:596
        EEPROM_write_int(yellow_right_r, red);
    59da:	60 91 18 09 	lds	r22, 0x0918	; 0x800918 <red>
    59de:	70 91 19 09 	lds	r23, 0x0919	; 0x800919 <red+0x1>
    59e2:	84 e5       	ldi	r24, 0x54	; 84
    59e4:	90 e0       	ldi	r25, 0x00	; 0
    59e6:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:597
        EEPROM_write_int(yellow_right_g, green);
    59ea:	60 91 1a 09 	lds	r22, 0x091A	; 0x80091a <green>
    59ee:	70 91 1b 09 	lds	r23, 0x091B	; 0x80091b <green+0x1>
    59f2:	86 e5       	ldi	r24, 0x56	; 86
    59f4:	90 e0       	ldi	r25, 0x00	; 0
    59f6:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:598
        EEPROM_write_int(yellow_right_b, blue);
    59fa:	60 91 1c 09 	lds	r22, 0x091C	; 0x80091c <blue>
    59fe:	70 91 1d 09 	lds	r23, 0x091D	; 0x80091d <blue+0x1>
    5a02:	88 e5       	ldi	r24, 0x58	; 88
    5a04:	90 e0       	ldi	r25, 0x00	; 0
    5a06:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:599
        EEPROM_write_int(yellow_right_c, clear);
    5a0a:	60 91 1e 09 	lds	r22, 0x091E	; 0x80091e <clear>
    5a0e:	70 91 1f 09 	lds	r23, 0x091F	; 0x80091f <clear+0x1>
    5a12:	8a e5       	ldi	r24, 0x5A	; 90
    5a14:	90 e0       	ldi	r25, 0x00	; 0
    5a16:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:600
        yel_r_calibrated = 1;
    5a1a:	ff 24       	eor	r15, r15
    5a1c:	f3 94       	inc	r15
    5a1e:	8b cd       	rjmp	.-1258   	; 0x5536 <color_calib()+0x24>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:604
      }
    }

    else if (page == 9)  // sil left
    5a20:	89 30       	cpi	r24, 0x09	; 9
    5a22:	59 f5       	brne	.+86     	; 0x5a7a <color_calib()+0x568>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:606
    {
      if (start == 0) {
    5a24:	86 e0       	ldi	r24, 0x06	; 6
    5a26:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    5a2a:	89 2b       	or	r24, r25
    5a2c:	09 f0       	breq	.+2      	; 0x5a30 <color_calib()+0x51e>
    5a2e:	83 cd       	rjmp	.-1274   	; 0x5536 <color_calib()+0x24>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:607
        color_L;
    5a30:	81 e0       	ldi	r24, 0x01	; 1
    5a32:	0e 94 a8 10 	call	0x2150	; 0x2150 <color(char)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:608
        EEPROM_write_int(silver_left_r, red);
    5a36:	60 91 18 09 	lds	r22, 0x0918	; 0x800918 <red>
    5a3a:	70 91 19 09 	lds	r23, 0x0919	; 0x800919 <red+0x1>
    5a3e:	84 e3       	ldi	r24, 0x34	; 52
    5a40:	90 e0       	ldi	r25, 0x00	; 0
    5a42:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:609
        EEPROM_write_int(silver_left_g, green);
    5a46:	60 91 1a 09 	lds	r22, 0x091A	; 0x80091a <green>
    5a4a:	70 91 1b 09 	lds	r23, 0x091B	; 0x80091b <green+0x1>
    5a4e:	86 e3       	ldi	r24, 0x36	; 54
    5a50:	90 e0       	ldi	r25, 0x00	; 0
    5a52:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:610
        EEPROM_write_int(silver_left_b, blue);
    5a56:	60 91 1c 09 	lds	r22, 0x091C	; 0x80091c <blue>
    5a5a:	70 91 1d 09 	lds	r23, 0x091D	; 0x80091d <blue+0x1>
    5a5e:	88 e3       	ldi	r24, 0x38	; 56
    5a60:	90 e0       	ldi	r25, 0x00	; 0
    5a62:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:611
        EEPROM_write_int(silver_left_c, clear);
    5a66:	60 91 1e 09 	lds	r22, 0x091E	; 0x80091e <clear>
    5a6a:	70 91 1f 09 	lds	r23, 0x091F	; 0x80091f <clear+0x1>
    5a6e:	8a e3       	ldi	r24, 0x3A	; 58
    5a70:	90 e0       	ldi	r25, 0x00	; 0
    5a72:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:612
        sil_l_calibrated = 1;
    5a76:	01 e0       	ldi	r16, 0x01	; 1
    5a78:	5e cd       	rjmp	.-1348   	; 0x5536 <color_calib()+0x24>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:614
      }
    } else if (page == 10)  // sil right
    5a7a:	8a 30       	cpi	r24, 0x0A	; 10
    5a7c:	59 f5       	brne	.+86     	; 0x5ad4 <color_calib()+0x5c2>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:616
    {
      if (start == 0) {
    5a7e:	86 e0       	ldi	r24, 0x06	; 6
    5a80:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    5a84:	89 2b       	or	r24, r25
    5a86:	09 f0       	breq	.+2      	; 0x5a8a <color_calib()+0x578>
    5a88:	56 cd       	rjmp	.-1364   	; 0x5536 <color_calib()+0x24>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:617
        color_R;
    5a8a:	82 e0       	ldi	r24, 0x02	; 2
    5a8c:	0e 94 a8 10 	call	0x2150	; 0x2150 <color(char)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:618
        EEPROM_write_int(silver_right_r, red);
    5a90:	60 91 18 09 	lds	r22, 0x0918	; 0x800918 <red>
    5a94:	70 91 19 09 	lds	r23, 0x0919	; 0x800919 <red+0x1>
    5a98:	8c e5       	ldi	r24, 0x5C	; 92
    5a9a:	90 e0       	ldi	r25, 0x00	; 0
    5a9c:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:619
        EEPROM_write_int(silver_right_g, green);
    5aa0:	60 91 1a 09 	lds	r22, 0x091A	; 0x80091a <green>
    5aa4:	70 91 1b 09 	lds	r23, 0x091B	; 0x80091b <green+0x1>
    5aa8:	8e e5       	ldi	r24, 0x5E	; 94
    5aaa:	90 e0       	ldi	r25, 0x00	; 0
    5aac:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:620
        EEPROM_write_int(silver_right_b, blue);
    5ab0:	60 91 1c 09 	lds	r22, 0x091C	; 0x80091c <blue>
    5ab4:	70 91 1d 09 	lds	r23, 0x091D	; 0x80091d <blue+0x1>
    5ab8:	80 e6       	ldi	r24, 0x60	; 96
    5aba:	90 e0       	ldi	r25, 0x00	; 0
    5abc:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:621
        EEPROM_write_int(silver_right_c, clear);
    5ac0:	60 91 1e 09 	lds	r22, 0x091E	; 0x80091e <clear>
    5ac4:	70 91 1f 09 	lds	r23, 0x091F	; 0x80091f <clear+0x1>
    5ac8:	82 e6       	ldi	r24, 0x62	; 98
    5aca:	90 e0       	ldi	r25, 0x00	; 0
    5acc:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:622
        sil_r_calibrated = 1;
    5ad0:	11 e0       	ldi	r17, 0x01	; 1
    5ad2:	31 cd       	rjmp	.-1438   	; 0x5536 <color_calib()+0x24>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:624
      }
    }else if (page == 11)  // grn front
    5ad4:	8b 30       	cpi	r24, 0x0B	; 11
    5ad6:	59 f5       	brne	.+86     	; 0x5b2e <color_calib()+0x61c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:626
    {
      if (start == 0) {
    5ad8:	86 e0       	ldi	r24, 0x06	; 6
    5ada:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    5ade:	89 2b       	or	r24, r25
    5ae0:	09 f0       	breq	.+2      	; 0x5ae4 <color_calib()+0x5d2>
    5ae2:	29 cd       	rjmp	.-1454   	; 0x5536 <color_calib()+0x24>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:627
        color_F;
    5ae4:	83 e0       	ldi	r24, 0x03	; 3
    5ae6:	0e 94 a8 10 	call	0x2150	; 0x2150 <color(char)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:628
        EEPROM_write_int(green_front_r, red);
    5aea:	60 91 18 09 	lds	r22, 0x0918	; 0x800918 <red>
    5aee:	70 91 19 09 	lds	r23, 0x0919	; 0x800919 <red+0x1>
    5af2:	8c e6       	ldi	r24, 0x6C	; 108
    5af4:	90 e0       	ldi	r25, 0x00	; 0
    5af6:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:629
        EEPROM_write_int(green_front_g, green);
    5afa:	60 91 1a 09 	lds	r22, 0x091A	; 0x80091a <green>
    5afe:	70 91 1b 09 	lds	r23, 0x091B	; 0x80091b <green+0x1>
    5b02:	8e e6       	ldi	r24, 0x6E	; 110
    5b04:	90 e0       	ldi	r25, 0x00	; 0
    5b06:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:630
        EEPROM_write_int(green_front_b, blue);
    5b0a:	60 91 1c 09 	lds	r22, 0x091C	; 0x80091c <blue>
    5b0e:	70 91 1d 09 	lds	r23, 0x091D	; 0x80091d <blue+0x1>
    5b12:	80 e7       	ldi	r24, 0x70	; 112
    5b14:	90 e0       	ldi	r25, 0x00	; 0
    5b16:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:631
        EEPROM_write_int(green_front_c, clear);
    5b1a:	60 91 1e 09 	lds	r22, 0x091E	; 0x80091e <clear>
    5b1e:	70 91 1f 09 	lds	r23, 0x091F	; 0x80091f <clear+0x1>
    5b22:	82 e7       	ldi	r24, 0x72	; 114
    5b24:	90 e0       	ldi	r25, 0x00	; 0
    5b26:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:632
        grn_f_calibrated = 1;
    5b2a:	d1 e0       	ldi	r29, 0x01	; 1
    5b2c:	04 cd       	rjmp	.-1528   	; 0x5536 <color_calib()+0x24>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:634
      }
    }else if (page == 12)  // red front
    5b2e:	8c 30       	cpi	r24, 0x0C	; 12
    5b30:	09 f0       	breq	.+2      	; 0x5b34 <color_calib()+0x622>
    5b32:	01 cd       	rjmp	.-1534   	; 0x5536 <color_calib()+0x24>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:636
    {
      if (start == 0) {
    5b34:	86 e0       	ldi	r24, 0x06	; 6
    5b36:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    5b3a:	89 2b       	or	r24, r25
    5b3c:	09 f0       	breq	.+2      	; 0x5b40 <color_calib()+0x62e>
    5b3e:	fb cc       	rjmp	.-1546   	; 0x5536 <color_calib()+0x24>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:637
        color_F;
    5b40:	83 e0       	ldi	r24, 0x03	; 3
    5b42:	0e 94 a8 10 	call	0x2150	; 0x2150 <color(char)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:638
        EEPROM_write_int(red_front_r, red);
    5b46:	60 91 18 09 	lds	r22, 0x0918	; 0x800918 <red>
    5b4a:	70 91 19 09 	lds	r23, 0x0919	; 0x800919 <red+0x1>
    5b4e:	84 e6       	ldi	r24, 0x64	; 100
    5b50:	90 e0       	ldi	r25, 0x00	; 0
    5b52:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:639
        EEPROM_write_int(red_front_g, green);
    5b56:	60 91 1a 09 	lds	r22, 0x091A	; 0x80091a <green>
    5b5a:	70 91 1b 09 	lds	r23, 0x091B	; 0x80091b <green+0x1>
    5b5e:	86 e6       	ldi	r24, 0x66	; 102
    5b60:	90 e0       	ldi	r25, 0x00	; 0
    5b62:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:640
        EEPROM_write_int(red_front_b, blue);
    5b66:	60 91 1c 09 	lds	r22, 0x091C	; 0x80091c <blue>
    5b6a:	70 91 1d 09 	lds	r23, 0x091D	; 0x80091d <blue+0x1>
    5b6e:	88 e6       	ldi	r24, 0x68	; 104
    5b70:	90 e0       	ldi	r25, 0x00	; 0
    5b72:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:641
        EEPROM_write_int(red_front_c, clear);
    5b76:	60 91 1e 09 	lds	r22, 0x091E	; 0x80091e <clear>
    5b7a:	70 91 1f 09 	lds	r23, 0x091F	; 0x80091f <clear+0x1>
    5b7e:	8a e6       	ldi	r24, 0x6A	; 106
    5b80:	90 e0       	ldi	r25, 0x00	; 0
    5b82:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:642
        red_f_calibrated = 1;
    5b86:	c1 e0       	ldi	r28, 0x01	; 1
    5b88:	d6 cc       	rjmp	.-1620   	; 0x5536 <color_calib()+0x24>

00005b8a <global constructors keyed to 65535_0_sport_main_code_2023.ino.cpp.o.2346>:
_GLOBAL__I_65535_0_sport_main_code_2023.ino.cpp.o.2346():
    5b8a:	e7 e3       	ldi	r30, 0x37	; 55
    5b8c:	fa e0       	ldi	r31, 0x0A	; 10
    5b8e:	13 82       	std	Z+3, r1	; 0x03
    5b90:	12 82       	std	Z+2, r1	; 0x02
    5b92:	88 ee       	ldi	r24, 0xE8	; 232
    5b94:	93 e0       	ldi	r25, 0x03	; 3
    5b96:	a0 e0       	ldi	r26, 0x00	; 0
    5b98:	b0 e0       	ldi	r27, 0x00	; 0
    5b9a:	84 83       	std	Z+4, r24	; 0x04
    5b9c:	95 83       	std	Z+5, r25	; 0x05
    5b9e:	a6 83       	std	Z+6, r26	; 0x06
    5ba0:	b7 83       	std	Z+7, r27	; 0x07
    5ba2:	2a e0       	ldi	r18, 0x0A	; 10
    5ba4:	33 e0       	ldi	r19, 0x03	; 3
    5ba6:	31 83       	std	Z+1, r19	; 0x01
    5ba8:	20 83       	st	Z, r18
    5baa:	48 e9       	ldi	r20, 0x98	; 152
    5bac:	50 e0       	ldi	r21, 0x00	; 0
    5bae:	55 87       	std	Z+13, r21	; 0x0d
    5bb0:	44 87       	std	Z+12, r20	; 0x0c
    5bb2:	49 e9       	ldi	r20, 0x99	; 153
    5bb4:	50 e0       	ldi	r21, 0x00	; 0
    5bb6:	57 87       	std	Z+15, r21	; 0x0f
    5bb8:	46 87       	std	Z+14, r20	; 0x0e
    5bba:	4b e9       	ldi	r20, 0x9B	; 155
    5bbc:	50 e0       	ldi	r21, 0x00	; 0
    5bbe:	51 8b       	std	Z+17, r21	; 0x11
    5bc0:	40 8b       	std	Z+16, r20	; 0x10
    5bc2:	4a e9       	ldi	r20, 0x9A	; 154
    5bc4:	50 e0       	ldi	r21, 0x00	; 0
    5bc6:	53 8b       	std	Z+19, r21	; 0x13
    5bc8:	42 8b       	std	Z+18, r20	; 0x12
    5bca:	4d e9       	ldi	r20, 0x9D	; 157
    5bcc:	50 e0       	ldi	r21, 0x00	; 0
    5bce:	55 8b       	std	Z+21, r21	; 0x15
    5bd0:	44 8b       	std	Z+20, r20	; 0x14
    5bd2:	4c e9       	ldi	r20, 0x9C	; 156
    5bd4:	50 e0       	ldi	r21, 0x00	; 0
    5bd6:	57 8b       	std	Z+23, r21	; 0x17
    5bd8:	46 8b       	std	Z+22, r20	; 0x16
    5bda:	11 8e       	std	Z+25, r1	; 0x19
    5bdc:	12 8e       	std	Z+26, r1	; 0x1a
    5bde:	13 8e       	std	Z+27, r1	; 0x1b
    5be0:	14 8e       	std	Z+28, r1	; 0x1c
    5be2:	e4 ed       	ldi	r30, 0xD4	; 212
    5be4:	fa e0       	ldi	r31, 0x0A	; 10
    5be6:	13 82       	std	Z+3, r1	; 0x03
    5be8:	12 82       	std	Z+2, r1	; 0x02
    5bea:	84 83       	std	Z+4, r24	; 0x04
    5bec:	95 83       	std	Z+5, r25	; 0x05
    5bee:	a6 83       	std	Z+6, r26	; 0x06
    5bf0:	b7 83       	std	Z+7, r27	; 0x07
    5bf2:	31 83       	std	Z+1, r19	; 0x01
    5bf4:	20 83       	st	Z, r18
    5bf6:	20 e9       	ldi	r18, 0x90	; 144
    5bf8:	30 e0       	ldi	r19, 0x00	; 0
    5bfa:	35 87       	std	Z+13, r19	; 0x0d
    5bfc:	24 87       	std	Z+12, r18	; 0x0c
    5bfe:	29 e2       	ldi	r18, 0x29	; 41
    5c00:	30 e0       	ldi	r19, 0x00	; 0
    5c02:	37 87       	std	Z+15, r19	; 0x0f
    5c04:	26 87       	std	Z+14, r18	; 0x0e
    5c06:	2b e2       	ldi	r18, 0x2B	; 43
    5c08:	30 e0       	ldi	r19, 0x00	; 0
    5c0a:	31 8b       	std	Z+17, r19	; 0x11
    5c0c:	20 8b       	std	Z+16, r18	; 0x10
    5c0e:	2a e2       	ldi	r18, 0x2A	; 42
    5c10:	30 e0       	ldi	r19, 0x00	; 0
    5c12:	33 8b       	std	Z+19, r19	; 0x13
    5c14:	22 8b       	std	Z+18, r18	; 0x12
    5c16:	25 e9       	ldi	r18, 0x95	; 149
    5c18:	30 e0       	ldi	r19, 0x00	; 0
    5c1a:	35 8b       	std	Z+21, r19	; 0x15
    5c1c:	24 8b       	std	Z+20, r18	; 0x14
    5c1e:	2c e2       	ldi	r18, 0x2C	; 44
    5c20:	30 e0       	ldi	r19, 0x00	; 0
    5c22:	37 8b       	std	Z+23, r19	; 0x17
    5c24:	26 8b       	std	Z+22, r18	; 0x16
    5c26:	11 8e       	std	Z+25, r1	; 0x19
    5c28:	12 8e       	std	Z+26, r1	; 0x1a
    5c2a:	13 8e       	std	Z+27, r1	; 0x1b
    5c2c:	14 8e       	std	Z+28, r1	; 0x1c
    5c2e:	e1 e7       	ldi	r30, 0x71	; 113
    5c30:	fb e0       	ldi	r31, 0x0B	; 11
    5c32:	13 82       	std	Z+3, r1	; 0x03
    5c34:	12 82       	std	Z+2, r1	; 0x02
    5c36:	84 83       	std	Z+4, r24	; 0x04
    5c38:	95 83       	std	Z+5, r25	; 0x05
    5c3a:	a6 83       	std	Z+6, r26	; 0x06
    5c3c:	b7 83       	std	Z+7, r27	; 0x07
    5c3e:	8c e1       	ldi	r24, 0x1C	; 28
    5c40:	93 e0       	ldi	r25, 0x03	; 3
    5c42:	91 83       	std	Z+1, r25	; 0x01
    5c44:	80 83       	st	Z, r24
    5c46:	ed e7       	ldi	r30, 0x7D	; 125
    5c48:	fb e0       	ldi	r31, 0x0B	; 11
    5c4a:	13 82       	std	Z+3, r1	; 0x03
    5c4c:	12 82       	std	Z+2, r1	; 0x02
    5c4e:	8e e2       	ldi	r24, 0x2E	; 46
    5c50:	93 e0       	ldi	r25, 0x03	; 3
    5c52:	91 83       	std	Z+1, r25	; 0x01
    5c54:	80 83       	st	Z, r24
    5c56:	8c e1       	ldi	r24, 0x1C	; 28
    5c58:	84 83       	std	Z+4, r24	; 0x04
    5c5a:	8f ef       	ldi	r24, 0xFF	; 255
    5c5c:	85 83       	std	Z+5, r24	; 0x05
    5c5e:	8e e1       	ldi	r24, 0x1E	; 30
    5c60:	86 83       	std	Z+6, r24	; 0x06
    5c62:	8f e1       	ldi	r24, 0x1F	; 31
    5c64:	87 83       	std	Z+7, r24	; 0x07
    5c66:	80 e2       	ldi	r24, 0x20	; 32
    5c68:	80 87       	std	Z+8, r24	; 0x08
    5c6a:	81 e2       	ldi	r24, 0x21	; 33
    5c6c:	81 87       	std	Z+9, r24	; 0x09
    5c6e:	82 e2       	ldi	r24, 0x22	; 34
    5c70:	82 87       	std	Z+10, r24	; 0x0a
    5c72:	13 86       	std	Z+11, r1	; 0x0b
    5c74:	14 86       	std	Z+12, r1	; 0x0c
    5c76:	15 86       	std	Z+13, r1	; 0x0d
    5c78:	16 86       	std	Z+14, r1	; 0x0e
    5c7a:	17 86       	std	Z+15, r1	; 0x0f
    5c7c:	61 e0       	ldi	r22, 0x01	; 1
    5c7e:	80 e1       	ldi	r24, 0x10	; 16
    5c80:	0c 94 cb 05 	jmp	0xb96	; 0xb96 <LiquidCrystal::begin(unsigned char, unsigned char, unsigned char) [clone .constprop.30]>

00005c84 <main>:
main():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/main.cpp:34

//void setupUSB() __attribute__((weak));
//void setupUSB() { }

int main(void)
{
    5c84:	cf 93       	push	r28
    5c86:	df 93       	push	r29
    5c88:	cd b7       	in	r28, 0x3d	; 61
    5c8a:	de b7       	in	r29, 0x3e	; 62
    5c8c:	29 97       	sbiw	r28, 0x09	; 9
    5c8e:	0f b6       	in	r0, 0x3f	; 63
    5c90:	f8 94       	cli
    5c92:	de bf       	out	0x3e, r29	; 62
    5c94:	0f be       	out	0x3f, r0	; 63
    5c96:	cd bf       	out	0x3d, r28	; 61
init():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:945

void init()
{
  // this needs to be called before setup() or some functions won't
  // work there
  sei();
    5c98:	78 94       	sei
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:963
#endif

  // Set timer 0 prescale factor to 64
#if defined(__AVR_ATmega64__) || defined(__AVR_ATmega128__)
  // CPU specific: different values for the ATmega64/128
  TCCR0 |= _BV(WGM01) | _BV(WGM00) | _BV(CS02);
    5c9a:	83 b7       	in	r24, 0x33	; 51
    5c9c:	8c 64       	ori	r24, 0x4C	; 76
    5c9e:	83 bf       	out	0x33, r24	; 51
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:982
  #error Timer 0 prescale factor 64 not set correctly
#endif

// Enable timer 0 overflow interrupt
#if defined(TIMSK) && defined(TOIE0)
  TIMSK |= _BV(TOIE0);
    5ca0:	87 b7       	in	r24, 0x37	; 55
    5ca2:	81 60       	ori	r24, 0x01	; 1
    5ca4:	87 bf       	out	0x37, r24	; 55
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:995
// this is better for motors as it ensures an even waveform
// note, however, that fast pwm mode can achieve a frequency of up
// 8 MHz (with a 16 MHz clock) at 50% duty cycle

#if defined(TCCR1B) && defined(CS11) && defined(CS10)
  TCCR1B = _BV(CS11); // Set timer 1 prescale factor to 64
    5ca6:	22 e0       	ldi	r18, 0x02	; 2
    5ca8:	2e bd       	out	0x2e, r18	; 46
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:997
#if F_CPU >= 8000000L
  TCCR1B |= _BV(CS10);
    5caa:	8e b5       	in	r24, 0x2e	; 46
    5cac:	81 60       	ori	r24, 0x01	; 1
    5cae:	8e bd       	out	0x2e, r24	; 46
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:1006
#if F_CPU >= 8000000L
  TCCR1 |= _BV(CS10);
#endif
#endif
#if defined(TCCR1A) && defined(WGM10)
  TCCR1A |= _BV(WGM10); // Put timer 1 in 8-bit phase correct pwm mode
    5cb0:	8f b5       	in	r24, 0x2f	; 47
    5cb2:	81 60       	ori	r24, 0x01	; 1
    5cb4:	8f bd       	out	0x2f, r24	; 47
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:1011
#endif

// Set timer 2 prescale factor to 64
#if defined(TCCR2) && defined(CS22)
  TCCR2 |= _BV(CS22);
    5cb6:	85 b5       	in	r24, 0x25	; 37
    5cb8:	84 60       	ori	r24, 0x04	; 4
    5cba:	85 bd       	out	0x25, r24	; 37
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:1020
  TCCR2A |= _BV(CS22);
#endif

// Configure timer 2 for phase correct pwm (8-bit)
#if defined(TCCR2) && defined(WGM20)
  TCCR2 |= _BV(WGM20);
    5cbc:	85 b5       	in	r24, 0x25	; 37
    5cbe:	80 64       	ori	r24, 0x40	; 64
    5cc0:	85 bd       	out	0x25, r24	; 37
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:1028
//#else
  // Timer 2 not finished (may not be present on this CPU)
#endif

#if defined(TCCR3B) && defined(CS31) && defined(WGM30)
  TCCR3B |= _BV(CS31) | _BV(CS30); // Set timer 3 prescale factor to 64
    5cc2:	80 91 8a 00 	lds	r24, 0x008A	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
    5cc6:	83 60       	ori	r24, 0x03	; 3
    5cc8:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:1029
  TCCR3A |= _BV(WGM30);            // Put timer 3 in 8-bit phase correct pwm mode
    5ccc:	80 91 8b 00 	lds	r24, 0x008B	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
    5cd0:	81 60       	ori	r24, 0x01	; 1
    5cd2:	80 93 8b 00 	sts	0x008B, r24	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:1050
#endif

#if defined(ADCSRA)
  // set a2d prescaler so we are inside the desired 50-200 KHz range.
  #if F_CPU >= 16000000 // 16 MHz / 128 = 125 KHz
    ADCSRA = _BV(ADPS2) | _BV(ADPS1) | _BV(ADPS0) | _BV(ADEN);
    5cd6:	87 e8       	ldi	r24, 0x87	; 135
    5cd8:	86 b9       	out	0x06, r24	; 6
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/wiring.c:1070
  // here so they can be used as normal digital i/o; they will be
  // reconnected in Serial.begin()
#if defined(UCSRB)
  UCSRB = 0;
#elif defined(UCSR0B)
  UCSR0B = 0;
    5cda:	1a b8       	out	0x0a, r1	; 10
robot_setup():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1465
    }
  }
}

void robot_setup() {
  TCCR1A = 0;  // Clear the register
    5cdc:	1f bc       	out	0x2f, r1	; 47
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1467
  // Set the Timer/Counter 1 Mode to "Normal" mode
  TCCR1A |= (0 << WGM10) | (0 << WGM11);
    5cde:	8f b5       	in	r24, 0x2f	; 47
    5ce0:	8f bd       	out	0x2f, r24	; 47
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1468
  TCCR1B |= (0 << WGM12) | (0 << WGM13);
    5ce2:	8e b5       	in	r24, 0x2e	; 46
    5ce4:	8e bd       	out	0x2e, r24	; 46
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1470
  // Set the Timer/Counter 1 clock source to "External Crystal Oscillator"
  TCCR1B |= (1 << CS12) | (0 << CS11) | (0 << CS10);
    5ce6:	8e b5       	in	r24, 0x2e	; 46
    5ce8:	84 60       	ori	r24, 0x04	; 4
    5cea:	8e bd       	out	0x2e, r24	; 46
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1471
  pinMode(13, OUTPUT);
    5cec:	61 e0       	ldi	r22, 0x01	; 1
    5cee:	8d e0       	ldi	r24, 0x0D	; 13
    5cf0:	0e 94 3a 02 	call	0x474	; 0x474 <pinMode>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1472
  pinMode(12, OUTPUT);
    5cf4:	61 e0       	ldi	r22, 0x01	; 1
    5cf6:	8c e0       	ldi	r24, 0x0C	; 12
    5cf8:	0e 94 3a 02 	call	0x474	; 0x474 <pinMode>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1473
  pinMode(6, INPUT_PULLUP);
    5cfc:	62 e0       	ldi	r22, 0x02	; 2
    5cfe:	86 e0       	ldi	r24, 0x06	; 6
    5d00:	0e 94 3a 02 	call	0x474	; 0x474 <pinMode>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1474
  pinMode(35, OUTPUT);
    5d04:	61 e0       	ldi	r22, 0x01	; 1
    5d06:	83 e2       	ldi	r24, 0x23	; 35
    5d08:	0e 94 3a 02 	call	0x474	; 0x474 <pinMode>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1475
  pinMode(37, INPUT_PULLUP);  // sbl
    5d0c:	62 e0       	ldi	r22, 0x02	; 2
    5d0e:	85 e2       	ldi	r24, 0x25	; 37
    5d10:	0e 94 3a 02 	call	0x474	; 0x474 <pinMode>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1476
  pinMode(38, INPUT_PULLUP);  // sbr
    5d14:	62 e0       	ldi	r22, 0x02	; 2
    5d16:	86 e2       	ldi	r24, 0x26	; 38
    5d18:	0e 94 3a 02 	call	0x474	; 0x474 <pinMode>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1477
  pinMode(start_pin, INPUT_PULLUP);
    5d1c:	62 e0       	ldi	r22, 0x02	; 2
    5d1e:	86 e0       	ldi	r24, 0x06	; 6
    5d20:	0e 94 3a 02 	call	0x474	; 0x474 <pinMode>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1478
  pinMode(next_page_pin, INPUT_PULLUP);
    5d24:	62 e0       	ldi	r22, 0x02	; 2
    5d26:	88 e0       	ldi	r24, 0x08	; 8
    5d28:	0e 94 3a 02 	call	0x474	; 0x474 <pinMode>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1479
  pinMode(previuse_page_pin, INPUT_PULLUP);
    5d2c:	62 e0       	ldi	r22, 0x02	; 2
    5d2e:	89 e0       	ldi	r24, 0x09	; 9
    5d30:	0e 94 3a 02 	call	0x474	; 0x474 <pinMode>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1480
  pinMode(increase_pin, INPUT_PULLUP);
    5d34:	62 e0       	ldi	r22, 0x02	; 2
    5d36:	8a e0       	ldi	r24, 0x0A	; 10
    5d38:	0e 94 3a 02 	call	0x474	; 0x474 <pinMode>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1481
  pinMode(decrease_pin, INPUT_PULLUP);
    5d3c:	62 e0       	ldi	r22, 0x02	; 2
    5d3e:	8b e0       	ldi	r24, 0x0B	; 11
    5d40:	0e 94 3a 02 	call	0x474	; 0x474 <pinMode>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1482
  pinMode(MUX_A, OUTPUT);
    5d44:	61 e0       	ldi	r22, 0x01	; 1
    5d46:	8c e2       	ldi	r24, 0x2C	; 44
    5d48:	0e 94 3a 02 	call	0x474	; 0x474 <pinMode>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1483
  pinMode(MUX_B, OUTPUT);
    5d4c:	61 e0       	ldi	r22, 0x01	; 1
    5d4e:	8b e2       	ldi	r24, 0x2B	; 43
    5d50:	0e 94 3a 02 	call	0x474	; 0x474 <pinMode>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1484
  pinMode(MUX_C, OUTPUT);
    5d54:	61 e0       	ldi	r22, 0x01	; 1
    5d56:	8a e2       	ldi	r24, 0x2A	; 42
    5d58:	0e 94 3a 02 	call	0x474	; 0x474 <pinMode>
begin():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:63

// Public Methods //////////////////////////////////////////////////////////////

void TwoWire::begin(void)
{
  rxBufferIndex = 0;
    5d5c:	10 92 fa 09 	sts	0x09FA, r1	; 0x8009fa <TwoWire::rxBufferIndex>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:64
  rxBufferLength = 0;
    5d60:	10 92 f9 09 	sts	0x09F9, r1	; 0x8009f9 <TwoWire::rxBufferLength>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:66

  txBufferIndex = 0;
    5d64:	10 92 b6 09 	sts	0x09B6, r1	; 0x8009b6 <TwoWire::txBufferIndex>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire/TwoWire.cpp:67
  txBufferLength = 0;
    5d68:	10 92 d8 09 	sts	0x09D8, r1	; 0x8009d8 <TwoWire::txBufferLength>
twi_init():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:79
 * Output   none
 */
void twi_init(void)
{
  // initialize state
  twi_state = TWI_READY;
    5d6c:	10 92 b4 09 	sts	0x09B4, r1	; 0x8009b4 <twi_state>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:80
  twi_sendStop = true; // default value
    5d70:	81 e0       	ldi	r24, 0x01	; 1
    5d72:	80 93 b3 09 	sts	0x09B3, r24	; 0x8009b3 <twi_sendStop>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:81
  twi_inRepStart = false;
    5d76:	10 92 ac 09 	sts	0x09AC, r1	; 0x8009ac <twi_inRepStart>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:84

  // activate internal pullups for twi.
  digitalWrite(SDA, 1);
    5d7a:	61 e0       	ldi	r22, 0x01	; 1
    5d7c:	83 e1       	ldi	r24, 0x13	; 19
    5d7e:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:85
  digitalWrite(SCL, 1);
    5d82:	61 e0       	ldi	r22, 0x01	; 1
    5d84:	82 e1       	ldi	r24, 0x12	; 18
    5d86:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:88

  // initialize twi prescaler and bit rate
  TWSR &= ~(_BV(TWPS0) | _BV(TWPS1));
    5d8a:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
    5d8e:	8c 7f       	andi	r24, 0xFC	; 252
    5d90:	80 93 71 00 	sts	0x0071, r24	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:89
  TWBR = ((F_CPU / TWI_FREQ) - 16) / 2;
    5d94:	88 e4       	ldi	r24, 0x48	; 72
    5d96:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:97
  SCL Frequency = CPU Clock Frequency / (16 + (2 * TWBR))
  note: TWBR should be 10 or higher for master mode
  It is 72 for a 16mhz Wiring board with 100kHz TWI */

  // enable twi module, acks, and twi interrupt
  TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWEA);
    5d9a:	85 e4       	ldi	r24, 0x45	; 69
    5d9c:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
twi_attachSlaveTxEvent():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:402
 * Input    function: callback function to use
 * Output   none
 */
void twi_attachSlaveTxEvent( void (*function)(void) )
{
  twi_onSlaveTransmit = function;
    5da0:	86 e5       	ldi	r24, 0x56	; 86
    5da2:	93 e0       	ldi	r25, 0x03	; 3
    5da4:	90 93 6a 09 	sts	0x096A, r25	; 0x80096a <twi_onSlaveTransmit+0x1>
    5da8:	80 93 69 09 	sts	0x0969, r24	; 0x800969 <twi_onSlaveTransmit>
twi_attachSlaveRxEvent():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\Wire\src\TwoWire\utility/twi.c:391
 * Input    function: callback function to use
 * Output   none
 */
void twi_attachSlaveRxEvent( void (*function)(uint8_t*, int) )
{
  twi_onSlaveReceive = function;
    5dac:	87 e5       	ldi	r24, 0x57	; 87
    5dae:	93 e0       	ldi	r25, 0x03	; 3
    5db0:	90 93 68 09 	sts	0x0968, r25	; 0x800968 <twi_onSlaveReceive+0x1>
    5db4:	80 93 67 09 	sts	0x0967, r24	; 0x800967 <twi_onSlaveReceive>
begin():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:121

void HardwareSerial::begin(unsigned long baud, byte config)
{
  // Try u2x mode first
  uint16_t baud_setting = (F_CPU / 4 / baud - 1) / 2;
  *_ucsra = 1 << U2X0;
    5db8:	e0 91 e4 0a 	lds	r30, 0x0AE4	; 0x800ae4 <Serial+0x10>
    5dbc:	f0 91 e5 0a 	lds	r31, 0x0AE5	; 0x800ae5 <Serial+0x11>
    5dc0:	32 e0       	ldi	r19, 0x02	; 2
    5dc2:	30 83       	st	Z, r19
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:135
    *_ucsra = 0;
    baud_setting = (F_CPU / 8 / baud - 1) / 2;
  }

  // assign the baud_setting, a.k.a. ubrr (USART Baud Rate Register)
  *_ubrrh = baud_setting >> 8;
    5dc4:	e0 91 e0 0a 	lds	r30, 0x0AE0	; 0x800ae0 <Serial+0xc>
    5dc8:	f0 91 e1 0a 	lds	r31, 0x0AE1	; 0x800ae1 <Serial+0xd>
    5dcc:	10 82       	st	Z, r1
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:136
  *_ubrrl = baud_setting;
    5dce:	e0 91 e2 0a 	lds	r30, 0x0AE2	; 0x800ae2 <Serial+0xe>
    5dd2:	f0 91 e3 0a 	lds	r31, 0x0AE3	; 0x800ae3 <Serial+0xf>
    5dd6:	10 e1       	ldi	r17, 0x10	; 16
    5dd8:	10 83       	st	Z, r17
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:138

  _written = false;
    5dda:	10 92 ec 0a 	sts	0x0AEC, r1	; 0x800aec <Serial+0x18>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:146
#if defined(__AVR_ATmega8__) || defined(__AVR_ATmega8515__) || defined(__AVR_ATmega162__) \
|| defined(__AVR_ATmega8535__) || defined(__AVR_ATmega16__)|| defined(__AVR_ATmega32__)   \
|| defined(__AVR_ATmega162__)
  config |= 0x80; // select UCSRC register (shared with UBRRH)
#endif
  *_ucsrc = config;
    5dde:	e0 91 e8 0a 	lds	r30, 0x0AE8	; 0x800ae8 <Serial+0x14>
    5de2:	f0 91 e9 0a 	lds	r31, 0x0AE9	; 0x800ae9 <Serial+0x15>
    5de6:	46 e0       	ldi	r20, 0x06	; 6
    5de8:	40 83       	st	Z, r20
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:148
  
  *_ucsrb |= _BV(RXEN0) | _BV(TXEN0) | _BV(RXCIE0);
    5dea:	e0 91 e6 0a 	lds	r30, 0x0AE6	; 0x800ae6 <Serial+0x12>
    5dee:	f0 91 e7 0a 	lds	r31, 0x0AE7	; 0x800ae7 <Serial+0x13>
    5df2:	80 81       	ld	r24, Z
    5df4:	88 69       	ori	r24, 0x98	; 152
    5df6:	80 83       	st	Z, r24
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:149
  *_ucsrb &= ~_BV(UDRIE0);
    5df8:	e0 91 e6 0a 	lds	r30, 0x0AE6	; 0x800ae6 <Serial+0x12>
    5dfc:	f0 91 e7 0a 	lds	r31, 0x0AE7	; 0x800ae7 <Serial+0x13>
    5e00:	80 81       	ld	r24, Z
    5e02:	8f 7d       	andi	r24, 0xDF	; 223
    5e04:	80 83       	st	Z, r24
dxl_init():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:253
    delay(10);
}

void dxl_init(long int baudRate)
{
    pinMode(M_TX_PIN, OUTPUT);
    5e06:	61 e0       	ldi	r22, 0x01	; 1
    5e08:	85 e1       	ldi	r24, 0x15	; 21
    5e0a:	0e 94 3a 02 	call	0x474	; 0x474 <pinMode>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:254
    pinMode(M_DIR_PIN, OUTPUT);
    5e0e:	61 e0       	ldi	r22, 0x01	; 1
    5e10:	86 e1       	ldi	r24, 0x16	; 22
    5e12:	0e 94 3a 02 	call	0x474	; 0x474 <pinMode>
begin():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:121

void HardwareSerial::begin(unsigned long baud, byte config)
{
  // Try u2x mode first
  uint16_t baud_setting = (F_CPU / 4 / baud - 1) / 2;
  *_ucsra = 1 << U2X0;
    5e16:	e0 91 47 0a 	lds	r30, 0x0A47	; 0x800a47 <Serial1+0x10>
    5e1a:	f0 91 48 0a 	lds	r31, 0x0A48	; 0x800a48 <Serial1+0x11>
    5e1e:	52 e0       	ldi	r21, 0x02	; 2
    5e20:	50 83       	st	Z, r21
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:135
    *_ucsra = 0;
    baud_setting = (F_CPU / 8 / baud - 1) / 2;
  }

  // assign the baud_setting, a.k.a. ubrr (USART Baud Rate Register)
  *_ubrrh = baud_setting >> 8;
    5e22:	e0 91 43 0a 	lds	r30, 0x0A43	; 0x800a43 <Serial1+0xc>
    5e26:	f0 91 44 0a 	lds	r31, 0x0A44	; 0x800a44 <Serial1+0xd>
    5e2a:	10 82       	st	Z, r1
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:136
  *_ubrrl = baud_setting;
    5e2c:	e0 91 45 0a 	lds	r30, 0x0A45	; 0x800a45 <Serial1+0xe>
    5e30:	f0 91 46 0a 	lds	r31, 0x0A46	; 0x800a46 <Serial1+0xf>
    5e34:	10 83       	st	Z, r17
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:138

  _written = false;
    5e36:	10 92 4f 0a 	sts	0x0A4F, r1	; 0x800a4f <Serial1+0x18>
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:146
#if defined(__AVR_ATmega8__) || defined(__AVR_ATmega8515__) || defined(__AVR_ATmega162__) \
|| defined(__AVR_ATmega8535__) || defined(__AVR_ATmega16__)|| defined(__AVR_ATmega32__)   \
|| defined(__AVR_ATmega162__)
  config |= 0x80; // select UCSRC register (shared with UBRRH)
#endif
  *_ucsrc = config;
    5e3a:	e0 91 4b 0a 	lds	r30, 0x0A4B	; 0x800a4b <Serial1+0x14>
    5e3e:	f0 91 4c 0a 	lds	r31, 0x0A4C	; 0x800a4c <Serial1+0x15>
    5e42:	86 e0       	ldi	r24, 0x06	; 6
    5e44:	80 83       	st	Z, r24
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:148
  
  *_ucsrb |= _BV(RXEN0) | _BV(TXEN0) | _BV(RXCIE0);
    5e46:	e0 91 49 0a 	lds	r30, 0x0A49	; 0x800a49 <Serial1+0x12>
    5e4a:	f0 91 4a 0a 	lds	r31, 0x0A4A	; 0x800a4a <Serial1+0x13>
    5e4e:	80 81       	ld	r24, Z
    5e50:	88 69       	ori	r24, 0x98	; 152
    5e52:	80 83       	st	Z, r24
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/HardwareSerial.cpp:149
  *_ucsrb &= ~_BV(UDRIE0);
    5e54:	e0 91 49 0a 	lds	r30, 0x0A49	; 0x800a49 <Serial1+0x12>
    5e58:	f0 91 4a 0a 	lds	r31, 0x0A4A	; 0x800a4a <Serial1+0x13>
    5e5c:	80 81       	ld	r24, Z
    5e5e:	8f 7d       	andi	r24, 0xDF	; 223
    5e60:	80 83       	st	Z, r24
robot_setup():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1489

  Wire.begin();
  Serial.begin(115200);
  dxl_init(115200);
  lcd.begin(20, 4);
    5e62:	64 e0       	ldi	r22, 0x04	; 4
    5e64:	84 e1       	ldi	r24, 0x14	; 20
    5e66:	0e 94 cb 05 	call	0xb96	; 0xb96 <LiquidCrystal::begin(unsigned char, unsigned char, unsigned char) [clone .constprop.30]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1490
  delay(800);
    5e6a:	60 e2       	ldi	r22, 0x20	; 32
    5e6c:	73 e0       	ldi	r23, 0x03	; 3
    5e6e:	80 e0       	ldi	r24, 0x00	; 0
    5e70:	90 e0       	ldi	r25, 0x00	; 0
    5e72:	0e 94 24 03 	call	0x648	; 0x648 <delay>
setup():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_main_code_2023.ino:13
{

  robot_setup();

  //eeprom set in code
  T90=132;spd=200;range_value=20;
    5e76:	84 e8       	ldi	r24, 0x84	; 132
    5e78:	90 e0       	ldi	r25, 0x00	; 0
    5e7a:	90 93 7e 09 	sts	0x097E, r25	; 0x80097e <T90+0x1>
    5e7e:	80 93 7d 09 	sts	0x097D, r24	; 0x80097d <T90>
    5e82:	88 ec       	ldi	r24, 0xC8	; 200
    5e84:	90 e0       	ldi	r25, 0x00	; 0
    5e86:	90 93 9a 09 	sts	0x099A, r25	; 0x80099a <spd+0x1>
    5e8a:	80 93 99 09 	sts	0x0999, r24	; 0x800999 <spd>
    5e8e:	84 e1       	ldi	r24, 0x14	; 20
    5e90:	90 e0       	ldi	r25, 0x00	; 0
    5e92:	90 93 7c 09 	sts	0x097C, r25	; 0x80097c <range_value+0x1>
    5e96:	80 93 7b 09 	sts	0x097B, r24	; 0x80097b <range_value>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_main_code_2023.ino:14
  EEPROM_write_int(T90_address, T90);
    5e9a:	64 e8       	ldi	r22, 0x84	; 132
    5e9c:	70 e0       	ldi	r23, 0x00	; 0
    5e9e:	88 e9       	ldi	r24, 0x98	; 152
    5ea0:	90 e0       	ldi	r25, 0x00	; 0
    5ea2:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_main_code_2023.ino:15
  EEPROM_write_int(spd_address, spd);
    5ea6:	60 91 99 09 	lds	r22, 0x0999	; 0x800999 <spd>
    5eaa:	70 91 9a 09 	lds	r23, 0x099A	; 0x80099a <spd+0x1>
    5eae:	86 e9       	ldi	r24, 0x96	; 150
    5eb0:	90 e0       	ldi	r25, 0x00	; 0
    5eb2:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_main_code_2023.ino:16
  EEPROM_write_int(range_address, range_value);
    5eb6:	60 91 7b 09 	lds	r22, 0x097B	; 0x80097b <range_value>
    5eba:	70 91 7c 09 	lds	r23, 0x097C	; 0x80097c <range_value+0x1>
    5ebe:	8a e9       	ldi	r24, 0x9A	; 154
    5ec0:	90 e0       	ldi	r25, 0x00	; 0
    5ec2:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_main_code_2023.ino:19
  
  //compass eeprom
  DN=96,DE=188,DS=277;
    5ec6:	80 e6       	ldi	r24, 0x60	; 96
    5ec8:	90 e0       	ldi	r25, 0x00	; 0
    5eca:	90 93 7a 09 	sts	0x097A, r25	; 0x80097a <DN+0x1>
    5ece:	80 93 79 09 	sts	0x0979, r24	; 0x800979 <DN>
    5ed2:	8c eb       	ldi	r24, 0xBC	; 188
    5ed4:	90 e0       	ldi	r25, 0x00	; 0
    5ed6:	90 93 78 09 	sts	0x0978, r25	; 0x800978 <DE+0x1>
    5eda:	80 93 77 09 	sts	0x0977, r24	; 0x800977 <DE>
    5ede:	85 e1       	ldi	r24, 0x15	; 21
    5ee0:	91 e0       	ldi	r25, 0x01	; 1
    5ee2:	90 93 76 09 	sts	0x0976, r25	; 0x800976 <DS+0x1>
    5ee6:	80 93 75 09 	sts	0x0975, r24	; 0x800975 <DS>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_main_code_2023.ino:20
  EEPROM_write_int(DN_address, DN);
    5eea:	60 e6       	ldi	r22, 0x60	; 96
    5eec:	70 e0       	ldi	r23, 0x00	; 0
    5eee:	8c e9       	ldi	r24, 0x9C	; 156
    5ef0:	90 e0       	ldi	r25, 0x00	; 0
    5ef2:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_main_code_2023.ino:21
  EEPROM_write_int(DE_address, DE);
    5ef6:	60 91 77 09 	lds	r22, 0x0977	; 0x800977 <DE>
    5efa:	70 91 78 09 	lds	r23, 0x0978	; 0x800978 <DE+0x1>
    5efe:	8e e9       	ldi	r24, 0x9E	; 158
    5f00:	90 e0       	ldi	r25, 0x00	; 0
    5f02:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_main_code_2023.ino:22
  EEPROM_write_int(DS_address, DS);
    5f06:	60 91 75 09 	lds	r22, 0x0975	; 0x800975 <DS>
    5f0a:	70 91 76 09 	lds	r23, 0x0976	; 0x800976 <DS+0x1>
    5f0e:	80 ea       	ldi	r24, 0xA0	; 160
    5f10:	90 e0       	ldi	r25, 0x00	; 0
    5f12:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_main_code_2023.ino:25

  // servo positions
  basket_up=275,basket_normal=500,arm_normal=800,arm_down=190,arm_dropping=800,gripper_close=900,gripper_open=590;
    5f16:	83 e1       	ldi	r24, 0x13	; 19
    5f18:	91 e0       	ldi	r25, 0x01	; 1
    5f1a:	90 93 74 09 	sts	0x0974, r25	; 0x800974 <basket_up+0x1>
    5f1e:	80 93 73 09 	sts	0x0973, r24	; 0x800973 <basket_up>
    5f22:	84 ef       	ldi	r24, 0xF4	; 244
    5f24:	91 e0       	ldi	r25, 0x01	; 1
    5f26:	90 93 a0 09 	sts	0x09A0, r25	; 0x8009a0 <basket_normal+0x1>
    5f2a:	80 93 9f 09 	sts	0x099F, r24	; 0x80099f <basket_normal>
    5f2e:	80 e2       	ldi	r24, 0x20	; 32
    5f30:	93 e0       	ldi	r25, 0x03	; 3
    5f32:	90 93 72 09 	sts	0x0972, r25	; 0x800972 <arm_normal+0x1>
    5f36:	80 93 71 09 	sts	0x0971, r24	; 0x800971 <arm_normal>
    5f3a:	2e eb       	ldi	r18, 0xBE	; 190
    5f3c:	30 e0       	ldi	r19, 0x00	; 0
    5f3e:	30 93 9e 09 	sts	0x099E, r19	; 0x80099e <arm_down+0x1>
    5f42:	20 93 9d 09 	sts	0x099D, r18	; 0x80099d <arm_down>
    5f46:	90 93 70 09 	sts	0x0970, r25	; 0x800970 <arm_dropping+0x1>
    5f4a:	80 93 6f 09 	sts	0x096F, r24	; 0x80096f <arm_dropping>
    5f4e:	84 e8       	ldi	r24, 0x84	; 132
    5f50:	93 e0       	ldi	r25, 0x03	; 3
    5f52:	90 93 6e 09 	sts	0x096E, r25	; 0x80096e <gripper_close+0x1>
    5f56:	80 93 6d 09 	sts	0x096D, r24	; 0x80096d <gripper_close>
    5f5a:	8e e4       	ldi	r24, 0x4E	; 78
    5f5c:	92 e0       	ldi	r25, 0x02	; 2
    5f5e:	90 93 6c 09 	sts	0x096C, r25	; 0x80096c <gripper_open+0x1>
    5f62:	80 93 6b 09 	sts	0x096B, r24	; 0x80096b <gripper_open>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_main_code_2023.ino:26
  EEPROM_write_int(basket_up_address, basket_up);
    5f66:	63 e1       	ldi	r22, 0x13	; 19
    5f68:	71 e0       	ldi	r23, 0x01	; 1
    5f6a:	84 ea       	ldi	r24, 0xA4	; 164
    5f6c:	90 e0       	ldi	r25, 0x00	; 0
    5f6e:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_main_code_2023.ino:27
  EEPROM_write_int(basket_normal_address, basket_normal);
    5f72:	60 91 9f 09 	lds	r22, 0x099F	; 0x80099f <basket_normal>
    5f76:	70 91 a0 09 	lds	r23, 0x09A0	; 0x8009a0 <basket_normal+0x1>
    5f7a:	86 ea       	ldi	r24, 0xA6	; 166
    5f7c:	90 e0       	ldi	r25, 0x00	; 0
    5f7e:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_main_code_2023.ino:28
  EEPROM_write_int(arm_normal_address, arm_normal);
    5f82:	60 91 71 09 	lds	r22, 0x0971	; 0x800971 <arm_normal>
    5f86:	70 91 72 09 	lds	r23, 0x0972	; 0x800972 <arm_normal+0x1>
    5f8a:	88 ea       	ldi	r24, 0xA8	; 168
    5f8c:	90 e0       	ldi	r25, 0x00	; 0
    5f8e:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_main_code_2023.ino:29
  EEPROM_write_int(arm_down_address, arm_down);
    5f92:	60 91 9d 09 	lds	r22, 0x099D	; 0x80099d <arm_down>
    5f96:	70 91 9e 09 	lds	r23, 0x099E	; 0x80099e <arm_down+0x1>
    5f9a:	8a ea       	ldi	r24, 0xAA	; 170
    5f9c:	90 e0       	ldi	r25, 0x00	; 0
    5f9e:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_main_code_2023.ino:30
  EEPROM_write_int(arm_dropping_address, arm_dropping);
    5fa2:	60 91 6f 09 	lds	r22, 0x096F	; 0x80096f <arm_dropping>
    5fa6:	70 91 70 09 	lds	r23, 0x0970	; 0x800970 <arm_dropping+0x1>
    5faa:	8c ea       	ldi	r24, 0xAC	; 172
    5fac:	90 e0       	ldi	r25, 0x00	; 0
    5fae:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_main_code_2023.ino:31
  EEPROM_write_int(gripper_close_address, gripper_close);
    5fb2:	60 91 6d 09 	lds	r22, 0x096D	; 0x80096d <gripper_close>
    5fb6:	70 91 6e 09 	lds	r23, 0x096E	; 0x80096e <gripper_close+0x1>
    5fba:	8e ea       	ldi	r24, 0xAE	; 174
    5fbc:	90 e0       	ldi	r25, 0x00	; 0
    5fbe:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_main_code_2023.ino:32
  EEPROM_write_int(gripper_open_address, gripper_open);
    5fc2:	60 91 6b 09 	lds	r22, 0x096B	; 0x80096b <gripper_open>
    5fc6:	70 91 6c 09 	lds	r23, 0x096C	; 0x80096c <gripper_open+0x1>
    5fca:	80 eb       	ldi	r24, 0xB0	; 176
    5fcc:	90 e0       	ldi	r25, 0x00	; 0
    5fce:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_main_code_2023.ino:35

  //ev zone setup
  barband[0]=0;barband[1]=0;barband[2]=0;barband[3]=0;
    5fd2:	10 92 85 09 	sts	0x0985, r1	; 0x800985 <barband>
    5fd6:	10 92 86 09 	sts	0x0986, r1	; 0x800986 <barband+0x1>
    5fda:	10 92 87 09 	sts	0x0987, r1	; 0x800987 <barband+0x2>
    5fde:	10 92 88 09 	sts	0x0988, r1	; 0x800988 <barband+0x3>
menu():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1349
}

void menu(void) {
  static unsigned char page = 1, last_page = 6;
  int battery;
  lcd.clear();
    5fe2:	0e 94 c4 05 	call	0xb88	; 0xb88 <LiquidCrystal::clear() [clone .constprop.32]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1350
  lcd.print("Error: check switch");
    5fe6:	88 ec       	ldi	r24, 0xC8	; 200
    5fe8:	97 e0       	ldi	r25, 0x07	; 7
    5fea:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1352

  lcd.setCursor(0, 1);
    5fee:	61 e0       	ldi	r22, 0x01	; 1
    5ff0:	80 e0       	ldi	r24, 0x00	; 0
    5ff2:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1353
  lcd.printf("SBL=%d   SBR=%d", SBL, SBR);
    5ff6:	86 e2       	ldi	r24, 0x26	; 38
    5ff8:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    5ffc:	89 83       	std	Y+1, r24	; 0x01
    5ffe:	9a 83       	std	Y+2, r25	; 0x02
    6000:	85 e2       	ldi	r24, 0x25	; 37
    6002:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    6006:	ea 81       	ldd	r30, Y+2	; 0x02
    6008:	ef 93       	push	r30
    600a:	f9 81       	ldd	r31, Y+1	; 0x01
    600c:	ff 93       	push	r31
    600e:	9f 93       	push	r25
    6010:	8f 93       	push	r24
    6012:	8c ed       	ldi	r24, 0xDC	; 220
    6014:	97 e0       	ldi	r25, 0x07	; 7
    6016:	9f 93       	push	r25
    6018:	8f 93       	push	r24
    601a:	2d e7       	ldi	r18, 0x7D	; 125
    601c:	3b e0       	ldi	r19, 0x0B	; 11
    601e:	3f 93       	push	r19
    6020:	2f 93       	push	r18
    6022:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1355

  lcd.setCursor(0, 3);
    6026:	63 e0       	ldi	r22, 0x03	; 3
    6028:	80 e0       	ldi	r24, 0x00	; 0
    602a:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1356
  lcd.printf("p_p=%d next_p=%d Ent=%d", previuse_page, next_page, start);
    602e:	86 e0       	ldi	r24, 0x06	; 6
    6030:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    6034:	f8 2e       	mov	r15, r24
    6036:	e9 2e       	mov	r14, r25
    6038:	88 e0       	ldi	r24, 0x08	; 8
    603a:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    603e:	18 2f       	mov	r17, r24
    6040:	09 2f       	mov	r16, r25
    6042:	89 e0       	ldi	r24, 0x09	; 9
    6044:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    6048:	ef 92       	push	r14
    604a:	ff 92       	push	r15
    604c:	0f 93       	push	r16
    604e:	1f 93       	push	r17
    6050:	9f 93       	push	r25
    6052:	8f 93       	push	r24
    6054:	8c ee       	ldi	r24, 0xEC	; 236
    6056:	97 e0       	ldi	r25, 0x07	; 7
    6058:	9f 93       	push	r25
    605a:	8f 93       	push	r24
    605c:	8d e7       	ldi	r24, 0x7D	; 125
    605e:	9b e0       	ldi	r25, 0x0B	; 11
    6060:	9f 93       	push	r25
    6062:	8f 93       	push	r24
    6064:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1358

  if (start == 0 || next_page == 0 || previuse_page == 0 || SBL == 0 || SBR == 0)
    6068:	86 e0       	ldi	r24, 0x06	; 6
    606a:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    606e:	0f b6       	in	r0, 0x3f	; 63
    6070:	f8 94       	cli
    6072:	de bf       	out	0x3e, r29	; 62
    6074:	0f be       	out	0x3f, r0	; 63
    6076:	cd bf       	out	0x3d, r28	; 61
    6078:	89 2b       	or	r24, r25
    607a:	09 f0       	breq	.+2      	; 0x607e <main+0x3fa>
    607c:	d8 c0       	rjmp	.+432    	; 0x622e <main+0x5aa>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1359
    beep(10);
    607e:	8a e0       	ldi	r24, 0x0A	; 10
    6080:	90 e0       	ldi	r25, 0x00	; 0
    6082:	0e 94 a9 07 	call	0xf52	; 0xf52 <beep(int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1360
  lcd.clear();
    6086:	0e 94 c4 05 	call	0xb88	; 0xb88 <LiquidCrystal::clear() [clone .constprop.32]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1368
      while (next_page == 0)
        ;
      delay(50);
      page++;
      if (page > last_page)
        page = 1;
    608a:	dd 24       	eor	r13, r13
    608c:	d3 94       	inc	r13
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1377
      while (previuse_page == 0)
        ;
      delay(50);
      page--;
      if (page < 1)
        page = last_page;
    608e:	36 e0       	ldi	r19, 0x06	; 6
    6090:	c3 2e       	mov	r12, r19
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1412
        lcd.print("Rescue Team");
        beep(1);
        break;
      }
      battery = analogRead(A7);
      battery = (battery * 5 / 102.3) * 3.1;
    6092:	45 e0       	ldi	r20, 0x05	; 5
    6094:	b4 2e       	mov	r11, r20
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1414
      lcd.setCursor(8, 0);
      lcd.printf("bat=%3d ", battery);
    6096:	0d e7       	ldi	r16, 0x7D	; 125
    6098:	1b e0       	ldi	r17, 0x0B	; 11
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1362

  if (start == 0 || next_page == 0 || previuse_page == 0 || SBL == 0 || SBR == 0)
    beep(10);
  lcd.clear();
  while (1) {
    if (next_page == 0) {
    609a:	88 e0       	ldi	r24, 0x08	; 8
    609c:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    60a0:	89 2b       	or	r24, r25
    60a2:	a9 f4       	brne	.+42     	; 0x60ce <main+0x44a>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1363
      while (next_page == 0)
    60a4:	88 e0       	ldi	r24, 0x08	; 8
    60a6:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    60aa:	89 2b       	or	r24, r25
    60ac:	d9 f3       	breq	.-10     	; 0x60a4 <main+0x420>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1365
        ;
      delay(50);
    60ae:	62 e3       	ldi	r22, 0x32	; 50
    60b0:	70 e0       	ldi	r23, 0x00	; 0
    60b2:	80 e0       	ldi	r24, 0x00	; 0
    60b4:	90 e0       	ldi	r25, 0x00	; 0
    60b6:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1366
      page++;
    60ba:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <menu()::page>
    60be:	8f 5f       	subi	r24, 0xFF	; 255
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1367
      if (page > last_page)
    60c0:	87 30       	cpi	r24, 0x07	; 7
    60c2:	08 f0       	brcs	.+2      	; 0x60c6 <main+0x442>
    60c4:	cd c0       	rjmp	.+410    	; 0x6260 <main+0x5dc>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1366
  while (1) {
    if (next_page == 0) {
      while (next_page == 0)
        ;
      delay(50);
      page++;
    60c6:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <menu()::page>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1369
      if (page > last_page)
        page = 1;
      lcd.clear();
    60ca:	0e 94 c4 05 	call	0xb88	; 0xb88 <LiquidCrystal::clear() [clone .constprop.32]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1371
    }
    if (previuse_page == 0) {
    60ce:	89 e0       	ldi	r24, 0x09	; 9
    60d0:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    60d4:	89 2b       	or	r24, r25
    60d6:	a1 f4       	brne	.+40     	; 0x6100 <main+0x47c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1372
      while (previuse_page == 0)
    60d8:	89 e0       	ldi	r24, 0x09	; 9
    60da:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    60de:	89 2b       	or	r24, r25
    60e0:	d9 f3       	breq	.-10     	; 0x60d8 <main+0x454>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1374
        ;
      delay(50);
    60e2:	62 e3       	ldi	r22, 0x32	; 50
    60e4:	70 e0       	ldi	r23, 0x00	; 0
    60e6:	80 e0       	ldi	r24, 0x00	; 0
    60e8:	90 e0       	ldi	r25, 0x00	; 0
    60ea:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1375
      page--;
    60ee:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <menu()::page>
    60f2:	81 50       	subi	r24, 0x01	; 1
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1376
      if (page < 1)
    60f4:	09 f4       	brne	.+2      	; 0x60f8 <main+0x474>
    60f6:	b7 c0       	rjmp	.+366    	; 0x6266 <main+0x5e2>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1375
    }
    if (previuse_page == 0) {
      while (previuse_page == 0)
        ;
      delay(50);
      page--;
    60f8:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <menu()::page>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1378
      if (page < 1)
        page = last_page;
      lcd.clear();
    60fc:	0e 94 c4 05 	call	0xb88	; 0xb88 <LiquidCrystal::clear() [clone .constprop.32]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1380
    }
    if (page <= 4) {
    6100:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <menu()::page>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1381
      lcd.setCursor(2, 0);
    6104:	60 e0       	ldi	r22, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1380
      page--;
      if (page < 1)
        page = last_page;
      lcd.clear();
    }
    if (page <= 4) {
    6106:	85 30       	cpi	r24, 0x05	; 5
    6108:	08 f0       	brcs	.+2      	; 0x610c <main+0x488>
    610a:	b0 c0       	rjmp	.+352    	; 0x626c <main+0x5e8>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1381
      lcd.setCursor(2, 0);
    610c:	82 e0       	ldi	r24, 0x02	; 2
    610e:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1382
      lcd.print("Start ");
    6112:	84 e0       	ldi	r24, 0x04	; 4
    6114:	98 e0       	ldi	r25, 0x08	; 8
    6116:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1383
      lcd.setCursor(2, 1);
    611a:	61 e0       	ldi	r22, 0x01	; 1
    611c:	82 e0       	ldi	r24, 0x02	; 2
    611e:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1384
      lcd.print("Test Sensor   ");
    6122:	8b e0       	ldi	r24, 0x0B	; 11
    6124:	98 e0       	ldi	r25, 0x08	; 8
    6126:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1385
      lcd.setCursor(2, 2);
    612a:	62 e0       	ldi	r22, 0x02	; 2
    612c:	82 e0       	ldi	r24, 0x02	; 2
    612e:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1386
      lcd.print("Setup         ");
    6132:	8a e1       	ldi	r24, 0x1A	; 26
    6134:	98 e0       	ldi	r25, 0x08	; 8
    6136:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1387
      lcd.setCursor(2, 3);
    613a:	63 e0       	ldi	r22, 0x03	; 3
    613c:	82 e0       	ldi	r24, 0x02	; 2
    613e:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1388
      lcd.print("Test Color    ");
    6142:	89 e2       	ldi	r24, 0x29	; 41
    6144:	98 e0       	ldi	r25, 0x08	; 8
    6146:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1389
      lcd.setCursor(0, page - 1);
    614a:	60 91 05 01 	lds	r22, 0x0105	; 0x800105 <menu()::page>
    614e:	61 50       	subi	r22, 0x01	; 1
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1396
    } else if (page > 4) {
      lcd.setCursor(2, 0);
      lcd.print("Test Motor   ");
      lcd.setCursor(2, 1);
      lcd.print("color calib ");
      lcd.setCursor(0, page - 5);
    6150:	80 e0       	ldi	r24, 0x00	; 0
    6152:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1397
      lcd.print("> ");
    6156:	8d e5       	ldi	r24, 0x5D	; 93
    6158:	97 e0       	ldi	r25, 0x07	; 7
    615a:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1400
    }

    if (page == 1)  // start
    615e:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <menu()::page>
    6162:	81 30       	cpi	r24, 0x01	; 1
    6164:	09 f0       	breq	.+2      	; 0x6168 <main+0x4e4>
    6166:	e3 c0       	rjmp	.+454    	; 0x632e <main+0x6aa>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1402
    {
      if (start == 0) {
    6168:	86 e0       	ldi	r24, 0x06	; 6
    616a:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    616e:	89 2b       	or	r24, r25
    6170:	09 f0       	breq	.+2      	; 0x6174 <main+0x4f0>
    6172:	8f c0       	rjmp	.+286    	; 0x6292 <main+0x60e>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1403
        while (start == 0)
    6174:	86 e0       	ldi	r24, 0x06	; 6
    6176:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    617a:	89 2b       	or	r24, r25
    617c:	d9 f3       	breq	.-10     	; 0x6174 <main+0x4f0>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1405
          ;
        lcd.clear();
    617e:	0e 94 c4 05 	call	0xb88	; 0xb88 <LiquidCrystal::clear() [clone .constprop.32]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1407

        lcd.print("Rescue Team");
    6182:	83 e5       	ldi	r24, 0x53	; 83
    6184:	98 e0       	ldi	r25, 0x08	; 8
    6186:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1408
        beep(1);
    618a:	81 e0       	ldi	r24, 0x01	; 1
    618c:	90 e0       	ldi	r25, 0x00	; 0
    618e:	0e 94 a9 07 	call	0xf52	; 0xf52 <beep(int)>
setup():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_main_code_2023.ino:38
  
  menu();
  move_arm(arm_normal,500);move_gripper(gripper_open,500);delay(1500);
    6192:	64 ef       	ldi	r22, 0xF4	; 244
    6194:	71 e0       	ldi	r23, 0x01	; 1
    6196:	80 91 71 09 	lds	r24, 0x0971	; 0x800971 <arm_normal>
    619a:	90 91 72 09 	lds	r25, 0x0972	; 0x800972 <arm_normal+0x1>
    619e:	0e 94 3f 08 	call	0x107e	; 0x107e <move_arm(int, int)>
    61a2:	64 ef       	ldi	r22, 0xF4	; 244
    61a4:	71 e0       	ldi	r23, 0x01	; 1
    61a6:	80 91 6b 09 	lds	r24, 0x096B	; 0x80096b <gripper_open>
    61aa:	90 91 6c 09 	lds	r25, 0x096C	; 0x80096c <gripper_open+0x1>
    61ae:	0e 94 b5 08 	call	0x116a	; 0x116a <move_gripper(int, int)>
    61b2:	6c ed       	ldi	r22, 0xDC	; 220
    61b4:	75 e0       	ldi	r23, 0x05	; 5
    61b6:	80 e0       	ldi	r24, 0x00	; 0
    61b8:	90 e0       	ldi	r25, 0x00	; 0
    61ba:	0e 94 24 03 	call	0x648	; 0x648 <delay>
linefollow():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:70
    }
  }
  */
}
void linefollow() {
  int spd = EEPROM_read_int(spd_address);
    61be:	86 e9       	ldi	r24, 0x96	; 150
    61c0:	90 e0       	ldi	r25, 0x00	; 0
    61c2:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    61c6:	9b 83       	std	Y+3, r25	; 0x03
    61c8:	8a 83       	std	Y+2, r24	; 0x02
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:71
  if(SM && SL1)go(spd*0.8,spd*1.2);
    61ca:	40 e0       	ldi	r20, 0x00	; 0
    61cc:	60 e0       	ldi	r22, 0x00	; 0
    61ce:	80 e0       	ldi	r24, 0x00	; 0
    61d0:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    61d4:	89 2b       	or	r24, r25
    61d6:	09 f4       	brne	.+2      	; 0x61da <main+0x556>
    61d8:	32 c3       	rjmp	.+1636   	; 0x683e <main+0xbba>
    61da:	40 e0       	ldi	r20, 0x00	; 0
    61dc:	60 e0       	ldi	r22, 0x00	; 0
    61de:	81 e0       	ldi	r24, 0x01	; 1
    61e0:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    61e4:	89 2b       	or	r24, r25
    61e6:	09 f4       	brne	.+2      	; 0x61ea <main+0x566>
    61e8:	2a c3       	rjmp	.+1620   	; 0x683e <main+0xbba>
    61ea:	4a 81       	ldd	r20, Y+2	; 0x02
    61ec:	5b 81       	ldd	r21, Y+3	; 0x03
    61ee:	ba 01       	movw	r22, r20
    61f0:	55 0f       	add	r21, r21
    61f2:	88 0b       	sbc	r24, r24
    61f4:	99 0b       	sbc	r25, r25
    61f6:	0e 94 ac 45 	call	0x8b58	; 0x8b58 <__floatsisf>
    61fa:	6b 01       	movw	r12, r22
    61fc:	7c 01       	movw	r14, r24
    61fe:	2a e9       	ldi	r18, 0x9A	; 154
    6200:	39 e9       	ldi	r19, 0x99	; 153
    6202:	49 e9       	ldi	r20, 0x99	; 153
    6204:	5f e3       	ldi	r21, 0x3F	; 63
    6206:	0e 94 5c 46 	call	0x8cb8	; 0x8cb8 <__mulsf3>
    620a:	0e 94 74 45 	call	0x8ae8	; 0x8ae8 <__fixsfsi>
    620e:	4b 01       	movw	r8, r22
    6210:	2d ec       	ldi	r18, 0xCD	; 205
    6212:	3c ec       	ldi	r19, 0xCC	; 204
    6214:	4c e4       	ldi	r20, 0x4C	; 76
    6216:	5f e3       	ldi	r21, 0x3F	; 63
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:72
  else if(SM && SR1)go(spd*1.2,spd*0.8);
    6218:	c7 01       	movw	r24, r14
    621a:	b6 01       	movw	r22, r12
    621c:	0e 94 5c 46 	call	0x8cb8	; 0x8cb8 <__mulsf3>
    6220:	0e 94 74 45 	call	0x8ae8	; 0x8ae8 <__fixsfsi>
    6224:	cb 01       	movw	r24, r22
    6226:	b4 01       	movw	r22, r8
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:100

  else if (SL8) go(-spd, spd);
  else if (SR8) go(spd, -spd);

  else if (SL9) go(-spd, spd);
  else if (SR9) go(spd, -spd);
    6228:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
    622c:	8a c4       	rjmp	.+2324   	; 0x6b42 <main+0xebe>
menu():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1358
  lcd.printf("SBL=%d   SBR=%d", SBL, SBR);

  lcd.setCursor(0, 3);
  lcd.printf("p_p=%d next_p=%d Ent=%d", previuse_page, next_page, start);

  if (start == 0 || next_page == 0 || previuse_page == 0 || SBL == 0 || SBR == 0)
    622e:	88 e0       	ldi	r24, 0x08	; 8
    6230:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    6234:	89 2b       	or	r24, r25
    6236:	09 f4       	brne	.+2      	; 0x623a <main+0x5b6>
    6238:	22 cf       	rjmp	.-444    	; 0x607e <main+0x3fa>
    623a:	89 e0       	ldi	r24, 0x09	; 9
    623c:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    6240:	89 2b       	or	r24, r25
    6242:	09 f4       	brne	.+2      	; 0x6246 <main+0x5c2>
    6244:	1c cf       	rjmp	.-456    	; 0x607e <main+0x3fa>
    6246:	85 e2       	ldi	r24, 0x25	; 37
    6248:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    624c:	89 2b       	or	r24, r25
    624e:	09 f4       	brne	.+2      	; 0x6252 <main+0x5ce>
    6250:	16 cf       	rjmp	.-468    	; 0x607e <main+0x3fa>
    6252:	86 e2       	ldi	r24, 0x26	; 38
    6254:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    6258:	89 2b       	or	r24, r25
    625a:	09 f4       	brne	.+2      	; 0x625e <main+0x5da>
    625c:	10 cf       	rjmp	.-480    	; 0x607e <main+0x3fa>
    625e:	13 cf       	rjmp	.-474    	; 0x6086 <main+0x402>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1368
      while (next_page == 0)
        ;
      delay(50);
      page++;
      if (page > last_page)
        page = 1;
    6260:	d0 92 05 01 	sts	0x0105, r13	; 0x800105 <menu()::page>
    6264:	32 cf       	rjmp	.-412    	; 0x60ca <main+0x446>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1377
      while (previuse_page == 0)
        ;
      delay(50);
      page--;
      if (page < 1)
        page = last_page;
    6266:	c0 92 05 01 	sts	0x0105, r12	; 0x800105 <menu()::page>
    626a:	48 cf       	rjmp	.-368    	; 0x60fc <main+0x478>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1392
      lcd.setCursor(2, 3);
      lcd.print("Test Color    ");
      lcd.setCursor(0, page - 1);
      lcd.print("> ");
    } else if (page > 4) {
      lcd.setCursor(2, 0);
    626c:	82 e0       	ldi	r24, 0x02	; 2
    626e:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1393
      lcd.print("Test Motor   ");
    6272:	88 e3       	ldi	r24, 0x38	; 56
    6274:	98 e0       	ldi	r25, 0x08	; 8
    6276:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1394
      lcd.setCursor(2, 1);
    627a:	61 e0       	ldi	r22, 0x01	; 1
    627c:	82 e0       	ldi	r24, 0x02	; 2
    627e:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1395
      lcd.print("color calib ");
    6282:	86 e4       	ldi	r24, 0x46	; 70
    6284:	98 e0       	ldi	r25, 0x08	; 8
    6286:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1396
      lcd.setCursor(0, page - 5);
    628a:	60 91 05 01 	lds	r22, 0x0105	; 0x800105 <menu()::page>
    628e:	65 50       	subi	r22, 0x05	; 5
    6290:	5f cf       	rjmp	.-322    	; 0x6150 <main+0x4cc>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1411

        lcd.print("Rescue Team");
        beep(1);
        break;
      }
      battery = analogRead(A7);
    6292:	84 e3       	ldi	r24, 0x34	; 52
    6294:	0e 94 ea 02 	call	0x5d4	; 0x5d4 <analogRead>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1412
      battery = (battery * 5 / 102.3) * 3.1;
    6298:	b8 9e       	mul	r11, r24
    629a:	b0 01       	movw	r22, r0
    629c:	b9 9e       	mul	r11, r25
    629e:	70 0d       	add	r23, r0
    62a0:	11 24       	eor	r1, r1
    62a2:	07 2e       	mov	r0, r23
    62a4:	00 0c       	add	r0, r0
    62a6:	88 0b       	sbc	r24, r24
    62a8:	99 0b       	sbc	r25, r25
    62aa:	0e 94 ac 45 	call	0x8b58	; 0x8b58 <__floatsisf>
    62ae:	2a e9       	ldi	r18, 0x9A	; 154
    62b0:	39 e9       	ldi	r19, 0x99	; 153
    62b2:	4c ec       	ldi	r20, 0xCC	; 204
    62b4:	52 e4       	ldi	r21, 0x42	; 66
    62b6:	0e 94 02 45 	call	0x8a04	; 0x8a04 <__divsf3>
    62ba:	26 e6       	ldi	r18, 0x66	; 102
    62bc:	36 e6       	ldi	r19, 0x66	; 102
    62be:	46 e4       	ldi	r20, 0x46	; 70
    62c0:	50 e4       	ldi	r21, 0x40	; 64
    62c2:	0e 94 5c 46 	call	0x8cb8	; 0x8cb8 <__mulsf3>
    62c6:	0e 94 74 45 	call	0x8ae8	; 0x8ae8 <__fixsfsi>
    62ca:	a6 2e       	mov	r10, r22
    62cc:	97 2e       	mov	r9, r23
    62ce:	e6 2e       	mov	r14, r22
    62d0:	f7 2e       	mov	r15, r23
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1413
      lcd.setCursor(8, 0);
    62d2:	60 e0       	ldi	r22, 0x00	; 0
    62d4:	88 e0       	ldi	r24, 0x08	; 8
    62d6:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1414
      lcd.printf("bat=%3d ", battery);
    62da:	9f 92       	push	r9
    62dc:	af 92       	push	r10
    62de:	4f e5       	ldi	r20, 0x5F	; 95
    62e0:	58 e0       	ldi	r21, 0x08	; 8
    62e2:	5f 93       	push	r21
    62e4:	4f 93       	push	r20
    62e6:	1f 93       	push	r17
    62e8:	0f 93       	push	r16
    62ea:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1416

      if (battery < 105) {
    62ee:	0f 90       	pop	r0
    62f0:	0f 90       	pop	r0
    62f2:	0f 90       	pop	r0
    62f4:	0f 90       	pop	r0
    62f6:	0f 90       	pop	r0
    62f8:	0f 90       	pop	r0
    62fa:	99 e6       	ldi	r25, 0x69	; 105
    62fc:	e9 16       	cp	r14, r25
    62fe:	f1 04       	cpc	r15, r1
    6300:	0c f0       	brlt	.+2      	; 0x6304 <main+0x680>
    6302:	cb ce       	rjmp	.-618    	; 0x609a <main+0x416>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1417
        LED_on;
    6304:	61 e0       	ldi	r22, 0x01	; 1
    6306:	8d e0       	ldi	r24, 0x0D	; 13
    6308:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1418
        delay(50);
    630c:	62 e3       	ldi	r22, 0x32	; 50
    630e:	70 e0       	ldi	r23, 0x00	; 0
    6310:	80 e0       	ldi	r24, 0x00	; 0
    6312:	90 e0       	ldi	r25, 0x00	; 0
    6314:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1419
        LED_off;
    6318:	60 e0       	ldi	r22, 0x00	; 0
    631a:	8d e0       	ldi	r24, 0x0D	; 13
    631c:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1420
        delay(50);
    6320:	62 e3       	ldi	r22, 0x32	; 50
    6322:	70 e0       	ldi	r23, 0x00	; 0
    6324:	80 e0       	ldi	r24, 0x00	; 0
    6326:	90 e0       	ldi	r25, 0x00	; 0
    6328:	0e 94 24 03 	call	0x648	; 0x648 <delay>
    632c:	b6 ce       	rjmp	.-660    	; 0x609a <main+0x416>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1422
      }
    } else if (page == 2)  // Test Sensor
    632e:	82 30       	cpi	r24, 0x02	; 2
    6330:	69 f4       	brne	.+26     	; 0x634c <main+0x6c8>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1424
    {
      if (start == 0) {
    6332:	86 e0       	ldi	r24, 0x06	; 6
    6334:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    6338:	89 2b       	or	r24, r25
    633a:	09 f0       	breq	.+2      	; 0x633e <main+0x6ba>
    633c:	ae ce       	rjmp	.-676    	; 0x609a <main+0x416>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1425
        while (start == 0)
    633e:	86 e0       	ldi	r24, 0x06	; 6
    6340:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    6344:	89 2b       	or	r24, r25
    6346:	d9 f3       	breq	.-10     	; 0x633e <main+0x6ba>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1427
          ;
        menu_sensor();
    6348:	0e 94 c1 14 	call	0x2982	; 0x2982 <menu_sensor()>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1429
      }
    } else if (page == 3)  // Setup
    634c:	83 30       	cpi	r24, 0x03	; 3
    634e:	09 f0       	breq	.+2      	; 0x6352 <main+0x6ce>
    6350:	3f c2       	rjmp	.+1150   	; 0x67d0 <main+0xb4c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1431
    {
      if (start == 0) {
    6352:	86 e0       	ldi	r24, 0x06	; 6
    6354:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    6358:	89 2b       	or	r24, r25
    635a:	09 f0       	breq	.+2      	; 0x635e <main+0x6da>
    635c:	9e ce       	rjmp	.-708    	; 0x609a <main+0x416>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1432
        while (start == 0)
    635e:	86 e0       	ldi	r24, 0x06	; 6
    6360:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    6364:	89 2b       	or	r24, r25
    6366:	d9 f3       	breq	.-10     	; 0x635e <main+0x6da>
menu_setup():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:650
  }
}

void menu_setup(void) {
  static char page = 1, last_page = 8;
  int spd = EEPROM_read_int(spd_address);
    6368:	86 e9       	ldi	r24, 0x96	; 150
    636a:	90 e0       	ldi	r25, 0x00	; 0
    636c:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    6370:	8c 01       	movw	r16, r24
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:651
  int T90 = EEPROM_read_int(T90_address);
    6372:	88 e9       	ldi	r24, 0x98	; 152
    6374:	90 e0       	ldi	r25, 0x00	; 0
    6376:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    637a:	7c 01       	movw	r14, r24
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:652
  int range_value = EEPROM_read_int(range_address);
    637c:	8a e9       	ldi	r24, 0x9A	; 154
    637e:	90 e0       	ldi	r25, 0x00	; 0
    6380:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    6384:	6c 01       	movw	r12, r24
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:653
  int DN = EEPROM_read_int(DN_address);
    6386:	8c e9       	ldi	r24, 0x9C	; 156
    6388:	90 e0       	ldi	r25, 0x00	; 0
    638a:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    638e:	98 2e       	mov	r9, r24
    6390:	89 2e       	mov	r8, r25
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:654
  int DE = EEPROM_read_int(DE_address);
    6392:	8e e9       	ldi	r24, 0x9E	; 158
    6394:	90 e0       	ldi	r25, 0x00	; 0
    6396:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    639a:	78 2e       	mov	r7, r24
    639c:	69 2e       	mov	r6, r25
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:655
  int DS = EEPROM_read_int(DS_address);
    639e:	80 ea       	ldi	r24, 0xA0	; 160
    63a0:	90 e0       	ldi	r25, 0x00	; 0
    63a2:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    63a6:	58 2e       	mov	r5, r24
    63a8:	49 2e       	mov	r4, r25
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:656
  int ev_s_ball = EEPROM_read_int(DW_address);
    63aa:	82 ea       	ldi	r24, 0xA2	; 162
    63ac:	90 e0       	ldi	r25, 0x00	; 0
    63ae:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    63b2:	1c 01       	movw	r2, r24
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:658

  lcd.clear();
    63b4:	0e 94 c4 05 	call	0xb88	; 0xb88 <LiquidCrystal::clear() [clone .constprop.32]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:661

  while (1) {
    if (next_page == 0) {
    63b8:	88 e0       	ldi	r24, 0x08	; 8
    63ba:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    63be:	89 2b       	or	r24, r25
    63c0:	a9 f4       	brne	.+42     	; 0x63ec <main+0x768>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:662
      while (next_page == 0)
    63c2:	88 e0       	ldi	r24, 0x08	; 8
    63c4:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    63c8:	89 2b       	or	r24, r25
    63ca:	d9 f3       	breq	.-10     	; 0x63c2 <main+0x73e>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:664
        ;
      delay(50);
    63cc:	62 e3       	ldi	r22, 0x32	; 50
    63ce:	70 e0       	ldi	r23, 0x00	; 0
    63d0:	80 e0       	ldi	r24, 0x00	; 0
    63d2:	90 e0       	ldi	r25, 0x00	; 0
    63d4:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:665
      page++;
    63d8:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <menu_setup()::page>
    63dc:	8f 5f       	subi	r24, 0xFF	; 255
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:666
      if (page > last_page)
    63de:	89 30       	cpi	r24, 0x09	; 9
    63e0:	0c f0       	brlt	.+2      	; 0x63e4 <main+0x760>
    63e2:	93 c0       	rjmp	.+294    	; 0x650a <main+0x886>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:667
        page = 1;
    63e4:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <menu_setup()::page>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:668
      lcd.clear();
    63e8:	0e 94 c4 05 	call	0xb88	; 0xb88 <LiquidCrystal::clear() [clone .constprop.32]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:670
    }
    if (previuse_page == 0) {
    63ec:	89 e0       	ldi	r24, 0x09	; 9
    63ee:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    63f2:	89 2b       	or	r24, r25
    63f4:	a9 f4       	brne	.+42     	; 0x6420 <main+0x79c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:671
      while (previuse_page == 0)
    63f6:	89 e0       	ldi	r24, 0x09	; 9
    63f8:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    63fc:	89 2b       	or	r24, r25
    63fe:	d9 f3       	breq	.-10     	; 0x63f6 <main+0x772>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:673
        ;
      delay(50);
    6400:	62 e3       	ldi	r22, 0x32	; 50
    6402:	70 e0       	ldi	r23, 0x00	; 0
    6404:	80 e0       	ldi	r24, 0x00	; 0
    6406:	90 e0       	ldi	r25, 0x00	; 0
    6408:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:674
      page--;
    640c:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <menu_setup()::page>
    6410:	81 50       	subi	r24, 0x01	; 1
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:675
      if (page < 1)
    6412:	18 16       	cp	r1, r24
    6414:	0c f0       	brlt	.+2      	; 0x6418 <main+0x794>
    6416:	7b c0       	rjmp	.+246    	; 0x650e <main+0x88a>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:676
        page = last_page;
    6418:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <menu_setup()::page>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:677
      lcd.clear();
    641c:	0e 94 c4 05 	call	0xb88	; 0xb88 <LiquidCrystal::clear() [clone .constprop.32]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:679
    }
    if (page < 5) {
    6420:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <menu_setup()::page>
    6424:	85 30       	cpi	r24, 0x05	; 5
    6426:	0c f0       	brlt	.+2      	; 0x642a <main+0x7a6>
    6428:	74 c0       	rjmp	.+232    	; 0x6512 <main+0x88e>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:680
      lcd.setCursor(2, 0);
    642a:	60 e0       	ldi	r22, 0x00	; 0
    642c:	82 e0       	ldi	r24, 0x02	; 2
    642e:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:681
      lcd.printf("speed     %3d ", spd);
    6432:	1f 93       	push	r17
    6434:	0f 93       	push	r16
    6436:	e8 e6       	ldi	r30, 0x68	; 104
    6438:	f8 e0       	ldi	r31, 0x08	; 8
    643a:	ff 93       	push	r31
    643c:	ef 93       	push	r30
    643e:	4d e7       	ldi	r20, 0x7D	; 125
    6440:	5b e0       	ldi	r21, 0x0B	; 11
    6442:	5f 93       	push	r21
    6444:	4f 93       	push	r20
    6446:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:683

      lcd.setCursor(2, 1);
    644a:	61 e0       	ldi	r22, 0x01	; 1
    644c:	82 e0       	ldi	r24, 0x02	; 2
    644e:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:684
      lcd.printf("T90       %3d ", T90);
    6452:	ff 92       	push	r15
    6454:	ef 92       	push	r14
    6456:	e7 e7       	ldi	r30, 0x77	; 119
    6458:	f8 e0       	ldi	r31, 0x08	; 8
    645a:	ff 93       	push	r31
    645c:	ef 93       	push	r30
    645e:	4d e7       	ldi	r20, 0x7D	; 125
    6460:	5b e0       	ldi	r21, 0x0B	; 11
    6462:	5f 93       	push	r21
    6464:	4f 93       	push	r20
    6466:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:686

      lcd.setCursor(2, 2);
    646a:	62 e0       	ldi	r22, 0x02	; 2
    646c:	82 e0       	ldi	r24, 0x02	; 2
    646e:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:687
      lcd.printf("calib rng %3d ", range);
    6472:	8a e9       	ldi	r24, 0x9A	; 154
    6474:	90 e0       	ldi	r25, 0x00	; 0
    6476:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    647a:	9f 93       	push	r25
    647c:	8f 93       	push	r24
    647e:	e6 e8       	ldi	r30, 0x86	; 134
    6480:	f8 e0       	ldi	r31, 0x08	; 8
    6482:	ff 93       	push	r31
    6484:	ef 93       	push	r30
    6486:	4d e7       	ldi	r20, 0x7D	; 125
    6488:	5b e0       	ldi	r21, 0x0B	; 11
    648a:	5f 93       	push	r21
    648c:	4f 93       	push	r20
    648e:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:689

      lcd.setCursor(2, 3);
    6492:	63 e0       	ldi	r22, 0x03	; 3
    6494:	82 e0       	ldi	r24, 0x02	; 2
    6496:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:690
      lcd.printf("reset memory   ");
    649a:	e5 e9       	ldi	r30, 0x95	; 149
    649c:	f8 e0       	ldi	r31, 0x08	; 8
    649e:	ff 93       	push	r31
    64a0:	ef 93       	push	r30
    64a2:	4d e7       	ldi	r20, 0x7D	; 125
    64a4:	5b e0       	ldi	r21, 0x0B	; 11
    64a6:	5f 93       	push	r21
    64a8:	4f 93       	push	r20
    64aa:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:692

      lcd.setCursor(0, page - 1);
    64ae:	60 91 04 01 	lds	r22, 0x0104	; 0x800104 <menu_setup()::page>
    64b2:	61 50       	subi	r22, 0x01	; 1
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:708
      lcd.printf("DS  %d ", DS);

      lcd.setCursor(2, 3);
      lcd.printf("ev_s_ball  %d ", ev_s_ball);

      lcd.setCursor(0, page - 5);
    64b4:	80 e0       	ldi	r24, 0x00	; 0
    64b6:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:709
      lcd.print(">");
    64ba:	85 ea       	ldi	r24, 0xA5	; 165
    64bc:	98 e0       	ldi	r25, 0x08	; 8
    64be:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
    64c2:	0f b6       	in	r0, 0x3f	; 63
    64c4:	f8 94       	cli
    64c6:	de bf       	out	0x3e, r29	; 62
    64c8:	0f be       	out	0x3f, r0	; 63
    64ca:	cd bf       	out	0x3d, r28	; 61
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:712
    }

    if (page == 1)  // spd
    64cc:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <menu_setup()::page>
    64d0:	81 30       	cpi	r24, 0x01	; 1
    64d2:	09 f0       	breq	.+2      	; 0x64d6 <main+0x852>
    64d4:	94 c0       	rjmp	.+296    	; 0x65fe <main+0x97a>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:714
    {
      if (increase == 0) {
    64d6:	8a e0       	ldi	r24, 0x0A	; 10
    64d8:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    64dc:	89 2b       	or	r24, r25
    64de:	09 f0       	breq	.+2      	; 0x64e2 <main+0x85e>
    64e0:	64 c0       	rjmp	.+200    	; 0x65aa <main+0x926>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:715
        delay(120);
    64e2:	68 e7       	ldi	r22, 0x78	; 120
    64e4:	70 e0       	ldi	r23, 0x00	; 0
    64e6:	80 e0       	ldi	r24, 0x00	; 0
    64e8:	90 e0       	ldi	r25, 0x00	; 0
    64ea:	0e 94 24 03 	call	0x648	; 0x648 <delay>
    64ee:	06 5f       	subi	r16, 0xF6	; 246
    64f0:	1f 4f       	sbci	r17, 0xFF	; 255
    64f2:	0f 3f       	cpi	r16, 0xFF	; 255
    64f4:	11 05       	cpc	r17, r1
    64f6:	19 f0       	breq	.+6      	; 0x64fe <main+0x87a>
    64f8:	14 f0       	brlt	.+4      	; 0x64fe <main+0x87a>
    64fa:	0f ef       	ldi	r16, 0xFF	; 255
    64fc:	10 e0       	ldi	r17, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:731
      } else if (start == 0) {
        go(spd, spd);
        while (start == 0)
          ;
        go(0, 0);
        EEPROM_write_int(spd_address, spd);
    64fe:	b8 01       	movw	r22, r16
    6500:	86 e9       	ldi	r24, 0x96	; 150
    6502:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:796
    {
      if (start == 0) {
        while (start == 0)
          ;
        DS = deg;
        EEPROM_write_int(DS_address, DS);
    6504:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
    6508:	57 cf       	rjmp	.-338    	; 0x63b8 <main+0x734>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:667
      while (next_page == 0)
        ;
      delay(50);
      page++;
      if (page > last_page)
        page = 1;
    650a:	81 e0       	ldi	r24, 0x01	; 1
    650c:	6b cf       	rjmp	.-298    	; 0x63e4 <main+0x760>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:676
      while (previuse_page == 0)
        ;
      delay(50);
      page--;
      if (page < 1)
        page = last_page;
    650e:	88 e0       	ldi	r24, 0x08	; 8
    6510:	83 cf       	rjmp	.-250    	; 0x6418 <main+0x794>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:694
      lcd.setCursor(2, 3);
      lcd.printf("reset memory   ");

      lcd.setCursor(0, page - 1);
      lcd.print(">");
    } else if (page < 9) {
    6512:	89 30       	cpi	r24, 0x09	; 9
    6514:	dc f6       	brge	.-74     	; 0x64cc <main+0x848>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:696

      lcd.setCursor(2, 0);
    6516:	60 e0       	ldi	r22, 0x00	; 0
    6518:	82 e0       	ldi	r24, 0x02	; 2
    651a:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:697
      lcd.printf("DN  %d  deg: %d ", DN, deg);
    651e:	81 e0       	ldi	r24, 0x01	; 1
    6520:	90 e0       	ldi	r25, 0x00	; 0
    6522:	0e 94 91 1b 	call	0x3722	; 0x3722 <cmps(int)>
    6526:	9f 93       	push	r25
    6528:	8f 93       	push	r24
    652a:	8f 92       	push	r8
    652c:	9f 92       	push	r9
    652e:	27 ea       	ldi	r18, 0xA7	; 167
    6530:	38 e0       	ldi	r19, 0x08	; 8
    6532:	3f 93       	push	r19
    6534:	2f 93       	push	r18
    6536:	8d e7       	ldi	r24, 0x7D	; 125
    6538:	9b e0       	ldi	r25, 0x0B	; 11
    653a:	9f 93       	push	r25
    653c:	8f 93       	push	r24
    653e:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:699

      lcd.setCursor(2, 1);
    6542:	61 e0       	ldi	r22, 0x01	; 1
    6544:	82 e0       	ldi	r24, 0x02	; 2
    6546:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:700
      lcd.printf("DE  %d ", DE);
    654a:	6f 92       	push	r6
    654c:	7f 92       	push	r7
    654e:	28 eb       	ldi	r18, 0xB8	; 184
    6550:	38 e0       	ldi	r19, 0x08	; 8
    6552:	3f 93       	push	r19
    6554:	2f 93       	push	r18
    6556:	8d e7       	ldi	r24, 0x7D	; 125
    6558:	9b e0       	ldi	r25, 0x0B	; 11
    655a:	9f 93       	push	r25
    655c:	8f 93       	push	r24
    655e:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:702

      lcd.setCursor(2, 2);
    6562:	62 e0       	ldi	r22, 0x02	; 2
    6564:	82 e0       	ldi	r24, 0x02	; 2
    6566:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:703
      lcd.printf("DS  %d ", DS);
    656a:	4f 92       	push	r4
    656c:	5f 92       	push	r5
    656e:	20 ec       	ldi	r18, 0xC0	; 192
    6570:	38 e0       	ldi	r19, 0x08	; 8
    6572:	3f 93       	push	r19
    6574:	2f 93       	push	r18
    6576:	8d e7       	ldi	r24, 0x7D	; 125
    6578:	9b e0       	ldi	r25, 0x0B	; 11
    657a:	9f 93       	push	r25
    657c:	8f 93       	push	r24
    657e:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:705

      lcd.setCursor(2, 3);
    6582:	63 e0       	ldi	r22, 0x03	; 3
    6584:	82 e0       	ldi	r24, 0x02	; 2
    6586:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:706
      lcd.printf("ev_s_ball  %d ", ev_s_ball);
    658a:	3f 92       	push	r3
    658c:	2f 92       	push	r2
    658e:	28 ec       	ldi	r18, 0xC8	; 200
    6590:	38 e0       	ldi	r19, 0x08	; 8
    6592:	3f 93       	push	r19
    6594:	2f 93       	push	r18
    6596:	8d e7       	ldi	r24, 0x7D	; 125
    6598:	9b e0       	ldi	r25, 0x0B	; 11
    659a:	9f 93       	push	r25
    659c:	8f 93       	push	r24
    659e:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:708

      lcd.setCursor(0, page - 5);
    65a2:	60 91 04 01 	lds	r22, 0x0104	; 0x800104 <menu_setup()::page>
    65a6:	65 50       	subi	r22, 0x05	; 5
    65a8:	85 cf       	rjmp	.-246    	; 0x64b4 <main+0x830>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:720
        delay(120);
        spd += 10;
        if (spd > 255)
          spd = 255;
        EEPROM_write_int(spd_address, spd);
      } else if (decrease == 0) {
    65aa:	8b e0       	ldi	r24, 0x0B	; 11
    65ac:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    65b0:	89 2b       	or	r24, r25
    65b2:	79 f4       	brne	.+30     	; 0x65d2 <main+0x94e>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:721
        delay(120);
    65b4:	68 e7       	ldi	r22, 0x78	; 120
    65b6:	70 e0       	ldi	r23, 0x00	; 0
    65b8:	80 e0       	ldi	r24, 0x00	; 0
    65ba:	90 e0       	ldi	r25, 0x00	; 0
    65bc:	0e 94 24 03 	call	0x648	; 0x648 <delay>
    65c0:	0a 50       	subi	r16, 0x0A	; 10
    65c2:	11 09       	sbc	r17, r1
    65c4:	0a 30       	cpi	r16, 0x0A	; 10
    65c6:	11 05       	cpc	r17, r1
    65c8:	0c f0       	brlt	.+2      	; 0x65cc <main+0x948>
    65ca:	99 cf       	rjmp	.-206    	; 0x64fe <main+0x87a>
    65cc:	0a e0       	ldi	r16, 0x0A	; 10
    65ce:	10 e0       	ldi	r17, 0x00	; 0
    65d0:	96 cf       	rjmp	.-212    	; 0x64fe <main+0x87a>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:726
        spd -= 10;
        if (spd < 10)
          spd = 10;
        EEPROM_write_int(spd_address, spd);
      } else if (start == 0) {
    65d2:	86 e0       	ldi	r24, 0x06	; 6
    65d4:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    65d8:	89 2b       	or	r24, r25
    65da:	09 f0       	breq	.+2      	; 0x65de <main+0x95a>
    65dc:	ed ce       	rjmp	.-550    	; 0x63b8 <main+0x734>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:727
        go(spd, spd);
    65de:	b8 01       	movw	r22, r16
    65e0:	c8 01       	movw	r24, r16
    65e2:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:728
        while (start == 0)
    65e6:	86 e0       	ldi	r24, 0x06	; 6
    65e8:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    65ec:	89 2b       	or	r24, r25
    65ee:	d9 f3       	breq	.-10     	; 0x65e6 <main+0x962>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:730
          ;
        go(0, 0);
    65f0:	70 e0       	ldi	r23, 0x00	; 0
    65f2:	60 e0       	ldi	r22, 0x00	; 0
    65f4:	90 e0       	ldi	r25, 0x00	; 0
    65f6:	80 e0       	ldi	r24, 0x00	; 0
    65f8:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
    65fc:	80 cf       	rjmp	.-256    	; 0x64fe <main+0x87a>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:733
        EEPROM_write_int(spd_address, spd);
      }
    } else if (page == 2)  // T90
    65fe:	82 30       	cpi	r24, 0x02	; 2
    6600:	d9 f5       	brne	.+118    	; 0x6678 <main+0x9f4>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:735
    {
      if (increase == 0) {
    6602:	8a e0       	ldi	r24, 0x0A	; 10
    6604:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    6608:	89 2b       	or	r24, r25
    660a:	69 f4       	brne	.+26     	; 0x6626 <main+0x9a2>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:736
        delay(200);
    660c:	68 ec       	ldi	r22, 0xC8	; 200
    660e:	70 e0       	ldi	r23, 0x00	; 0
    6610:	80 e0       	ldi	r24, 0x00	; 0
    6612:	90 e0       	ldi	r25, 0x00	; 0
    6614:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:737
        T90 += 1;
    6618:	3f ef       	ldi	r19, 0xFF	; 255
    661a:	e3 1a       	sub	r14, r19
    661c:	f3 0a       	sbc	r15, r19
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:742
        EEPROM_write_int(T90_address, T90);
      } else if (decrease == 0) {
        delay(200);
        T90 -= 1;
        EEPROM_write_int(T90_address, T90);
    661e:	b7 01       	movw	r22, r14
    6620:	88 e9       	ldi	r24, 0x98	; 152
    6622:	90 e0       	ldi	r25, 0x00	; 0
    6624:	6f cf       	rjmp	.-290    	; 0x6504 <main+0x880>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:739
    {
      if (increase == 0) {
        delay(200);
        T90 += 1;
        EEPROM_write_int(T90_address, T90);
      } else if (decrease == 0) {
    6626:	8b e0       	ldi	r24, 0x0B	; 11
    6628:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    662c:	89 2b       	or	r24, r25
    662e:	51 f4       	brne	.+20     	; 0x6644 <main+0x9c0>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:740
        delay(200);
    6630:	68 ec       	ldi	r22, 0xC8	; 200
    6632:	70 e0       	ldi	r23, 0x00	; 0
    6634:	80 e0       	ldi	r24, 0x00	; 0
    6636:	90 e0       	ldi	r25, 0x00	; 0
    6638:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:741
        T90 -= 1;
    663c:	41 e0       	ldi	r20, 0x01	; 1
    663e:	e4 1a       	sub	r14, r20
    6640:	f1 08       	sbc	r15, r1
    6642:	ed cf       	rjmp	.-38     	; 0x661e <main+0x99a>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:743
        EEPROM_write_int(T90_address, T90);
      } else if (start == 0) {
    6644:	86 e0       	ldi	r24, 0x06	; 6
    6646:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    664a:	89 2b       	or	r24, r25
    664c:	09 f0       	breq	.+2      	; 0x6650 <main+0x9cc>
    664e:	b4 ce       	rjmp	.-664    	; 0x63b8 <main+0x734>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:744
        while (start == 0)
    6650:	86 e0       	ldi	r24, 0x06	; 6
    6652:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    6656:	89 2b       	or	r24, r25
    6658:	d9 f3       	breq	.-10     	; 0x6650 <main+0x9cc>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:746
          ;
        lcd.clear();
    665a:	0e 94 c4 05 	call	0xb88	; 0xb88 <LiquidCrystal::clear() [clone .constprop.32]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:747
        EEPROM_write_int(T90_address, T90);
    665e:	b7 01       	movw	r22, r14
    6660:	88 e9       	ldi	r24, 0x98	; 152
    6662:	90 e0       	ldi	r25, 0x00	; 0
    6664:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:748
        move(Left, T90, 200);
    6668:	48 ec       	ldi	r20, 0xC8	; 200
    666a:	50 e0       	ldi	r21, 0x00	; 0
    666c:	b7 01       	movw	r22, r14
    666e:	8b e0       	ldi	r24, 0x0B	; 11
    6670:	90 e0       	ldi	r25, 0x00	; 0
    6672:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
    6676:	a0 ce       	rjmp	.-704    	; 0x63b8 <main+0x734>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:750
      }
    } else if (page == 3)  // range
    6678:	83 30       	cpi	r24, 0x03	; 3
    667a:	81 f5       	brne	.+96     	; 0x66dc <main+0xa58>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:752
    {
      if (increase == 0) {
    667c:	8a e0       	ldi	r24, 0x0A	; 10
    667e:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    6682:	89 2b       	or	r24, r25
    6684:	a1 f4       	brne	.+40     	; 0x66ae <main+0xa2a>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:753
        delay(100);
    6686:	64 e6       	ldi	r22, 0x64	; 100
    6688:	70 e0       	ldi	r23, 0x00	; 0
    668a:	80 e0       	ldi	r24, 0x00	; 0
    668c:	90 e0       	ldi	r25, 0x00	; 0
    668e:	0e 94 24 03 	call	0x648	; 0x648 <delay>
    6692:	5f ef       	ldi	r21, 0xFF	; 255
    6694:	c5 1a       	sub	r12, r21
    6696:	d5 0a       	sbc	r13, r21
    6698:	81 e5       	ldi	r24, 0x51	; 81
    669a:	c8 16       	cp	r12, r24
    669c:	d1 04       	cpc	r13, r1
    669e:	1c f0       	brlt	.+6      	; 0x66a6 <main+0xa22>
    66a0:	20 e5       	ldi	r18, 0x50	; 80
    66a2:	c2 2e       	mov	r12, r18
    66a4:	d1 2c       	mov	r13, r1
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:763
      } else if (decrease == 0) {
        delay(100);
        range_value -= 1;
        if (range_value < 5)
          range_value = 5;
        EEPROM_write_int(range_address, range_value);
    66a6:	b6 01       	movw	r22, r12
    66a8:	8a e9       	ldi	r24, 0x9A	; 154
    66aa:	90 e0       	ldi	r25, 0x00	; 0
    66ac:	2b cf       	rjmp	.-426    	; 0x6504 <main+0x880>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:758
        delay(100);
        range_value += 1;
        if (range_value > 80)
          range_value = 80;
        EEPROM_write_int(range_address, range_value);
      } else if (decrease == 0) {
    66ae:	8b e0       	ldi	r24, 0x0B	; 11
    66b0:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    66b4:	89 2b       	or	r24, r25
    66b6:	09 f0       	breq	.+2      	; 0x66ba <main+0xa36>
    66b8:	7f ce       	rjmp	.-770    	; 0x63b8 <main+0x734>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:759
        delay(100);
    66ba:	64 e6       	ldi	r22, 0x64	; 100
    66bc:	70 e0       	ldi	r23, 0x00	; 0
    66be:	80 e0       	ldi	r24, 0x00	; 0
    66c0:	90 e0       	ldi	r25, 0x00	; 0
    66c2:	0e 94 24 03 	call	0x648	; 0x648 <delay>
    66c6:	91 e0       	ldi	r25, 0x01	; 1
    66c8:	c9 1a       	sub	r12, r25
    66ca:	d1 08       	sbc	r13, r1
    66cc:	e5 e0       	ldi	r30, 0x05	; 5
    66ce:	ce 16       	cp	r12, r30
    66d0:	d1 04       	cpc	r13, r1
    66d2:	4c f7       	brge	.-46     	; 0x66a6 <main+0xa22>
    66d4:	95 e0       	ldi	r25, 0x05	; 5
    66d6:	c9 2e       	mov	r12, r25
    66d8:	d1 2c       	mov	r13, r1
    66da:	e5 cf       	rjmp	.-54     	; 0x66a6 <main+0xa22>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:765
        range_value -= 1;
        if (range_value < 5)
          range_value = 5;
        EEPROM_write_int(range_address, range_value);
      }
    } else if (page == 4)  // reset memory
    66dc:	84 30       	cpi	r24, 0x04	; 4
    66de:	d1 f4       	brne	.+52     	; 0x6714 <main+0xa90>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:767
    {
      if (start == 0) {
    66e0:	86 e0       	ldi	r24, 0x06	; 6
    66e2:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    66e6:	5c 01       	movw	r10, r24
    66e8:	89 2b       	or	r24, r25
    66ea:	09 f0       	breq	.+2      	; 0x66ee <main+0xa6a>
    66ec:	65 ce       	rjmp	.-822    	; 0x63b8 <main+0x734>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:768
        lcd.clear();
    66ee:	0e 94 c4 05 	call	0xb88	; 0xb88 <LiquidCrystal::clear() [clone .constprop.32]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:769
        while (start == 0)
    66f2:	86 e0       	ldi	r24, 0x06	; 6
    66f4:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    66f8:	89 2b       	or	r24, r25
    66fa:	d9 f3       	breq	.-10     	; 0x66f2 <main+0xa6e>
operator=():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\libraries\EEPROM\src/EEPROM.h:47
    operator uint8_t() const             { return **this; }

    //Assignment/write members.
    EERef &operator=( const EERef &ref ) { return *this = *ref; }
    EERef &operator=( uint8_t in )       { return eeprom_write_byte( (uint8_t*) index, in ), *this;  }
    66fc:	60 e0       	ldi	r22, 0x00	; 0
    66fe:	c5 01       	movw	r24, r10
    6700:	0e 94 f0 44 	call	0x89e0	; 0x89e0 <eeprom_write_byte>
menu_setup():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:771
          ;
        for (int i = 0; i < 200; i++)
    6704:	ff ef       	ldi	r31, 0xFF	; 255
    6706:	af 1a       	sub	r10, r31
    6708:	bf 0a       	sbc	r11, r31
    670a:	28 ec       	ldi	r18, 0xC8	; 200
    670c:	a2 16       	cp	r10, r18
    670e:	b1 04       	cpc	r11, r1
    6710:	a9 f7       	brne	.-22     	; 0x66fc <main+0xa78>
    6712:	52 ce       	rjmp	.-860    	; 0x63b8 <main+0x734>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:774
          EEPROM.write(i, 0);
      }
    } else if (page == 5)  // DN
    6714:	85 30       	cpi	r24, 0x05	; 5
    6716:	b1 f4       	brne	.+44     	; 0x6744 <main+0xac0>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:776
    {
      if (start == 0) {
    6718:	86 e0       	ldi	r24, 0x06	; 6
    671a:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    671e:	89 2b       	or	r24, r25
    6720:	09 f0       	breq	.+2      	; 0x6724 <main+0xaa0>
    6722:	4a ce       	rjmp	.-876    	; 0x63b8 <main+0x734>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:777
        while (start == 0)
    6724:	86 e0       	ldi	r24, 0x06	; 6
    6726:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    672a:	89 2b       	or	r24, r25
    672c:	d9 f3       	breq	.-10     	; 0x6724 <main+0xaa0>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:779
          ;
        DN = deg;
    672e:	81 e0       	ldi	r24, 0x01	; 1
    6730:	90 e0       	ldi	r25, 0x00	; 0
    6732:	0e 94 91 1b 	call	0x3722	; 0x3722 <cmps(int)>
    6736:	98 2e       	mov	r9, r24
    6738:	89 2e       	mov	r8, r25
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:780
        EEPROM_write_int(DN_address, DN);
    673a:	68 2f       	mov	r22, r24
    673c:	79 2f       	mov	r23, r25
    673e:	8c e9       	ldi	r24, 0x9C	; 156
    6740:	90 e0       	ldi	r25, 0x00	; 0
    6742:	e0 ce       	rjmp	.-576    	; 0x6504 <main+0x880>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:782
      }
    } else if (page == 6)  // DE
    6744:	86 30       	cpi	r24, 0x06	; 6
    6746:	a9 f4       	brne	.+42     	; 0x6772 <main+0xaee>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:784
    {
       if (start == 0) {
    6748:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    674c:	89 2b       	or	r24, r25
    674e:	09 f0       	breq	.+2      	; 0x6752 <main+0xace>
    6750:	33 ce       	rjmp	.-922    	; 0x63b8 <main+0x734>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:785
        while (start == 0)
    6752:	86 e0       	ldi	r24, 0x06	; 6
    6754:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    6758:	89 2b       	or	r24, r25
    675a:	d9 f3       	breq	.-10     	; 0x6752 <main+0xace>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:787
          ;
        DE = deg;
    675c:	81 e0       	ldi	r24, 0x01	; 1
    675e:	90 e0       	ldi	r25, 0x00	; 0
    6760:	0e 94 91 1b 	call	0x3722	; 0x3722 <cmps(int)>
    6764:	78 2e       	mov	r7, r24
    6766:	69 2e       	mov	r6, r25
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:788
        EEPROM_write_int(DE_address, DE);
    6768:	68 2f       	mov	r22, r24
    676a:	79 2f       	mov	r23, r25
    676c:	8e e9       	ldi	r24, 0x9E	; 158
    676e:	90 e0       	ldi	r25, 0x00	; 0
    6770:	c9 ce       	rjmp	.-622    	; 0x6504 <main+0x880>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:790
      }
    } else if (page == 7)  // DS
    6772:	87 30       	cpi	r24, 0x07	; 7
    6774:	b1 f4       	brne	.+44     	; 0x67a2 <main+0xb1e>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:792
    {
      if (start == 0) {
    6776:	86 e0       	ldi	r24, 0x06	; 6
    6778:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    677c:	89 2b       	or	r24, r25
    677e:	09 f0       	breq	.+2      	; 0x6782 <main+0xafe>
    6780:	1b ce       	rjmp	.-970    	; 0x63b8 <main+0x734>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:793
        while (start == 0)
    6782:	86 e0       	ldi	r24, 0x06	; 6
    6784:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    6788:	89 2b       	or	r24, r25
    678a:	d9 f3       	breq	.-10     	; 0x6782 <main+0xafe>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:795
          ;
        DS = deg;
    678c:	81 e0       	ldi	r24, 0x01	; 1
    678e:	90 e0       	ldi	r25, 0x00	; 0
    6790:	0e 94 91 1b 	call	0x3722	; 0x3722 <cmps(int)>
    6794:	58 2e       	mov	r5, r24
    6796:	49 2e       	mov	r4, r25
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:796
        EEPROM_write_int(DS_address, DS);
    6798:	68 2f       	mov	r22, r24
    679a:	79 2f       	mov	r23, r25
    679c:	80 ea       	ldi	r24, 0xA0	; 160
    679e:	90 e0       	ldi	r25, 0x00	; 0
    67a0:	b1 ce       	rjmp	.-670    	; 0x6504 <main+0x880>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:798
      }
    } else if (page == 8)  // DW
    67a2:	88 30       	cpi	r24, 0x08	; 8
    67a4:	09 f0       	breq	.+2      	; 0x67a8 <main+0xb24>
    67a6:	08 ce       	rjmp	.-1008   	; 0x63b8 <main+0x734>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:800
    {
      if (start == 0) {
    67a8:	86 e0       	ldi	r24, 0x06	; 6
    67aa:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    67ae:	89 2b       	or	r24, r25
    67b0:	09 f0       	breq	.+2      	; 0x67b4 <main+0xb30>
    67b2:	02 ce       	rjmp	.-1020   	; 0x63b8 <main+0x734>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:801
        while (start == 0)
    67b4:	86 e0       	ldi	r24, 0x06	; 6
    67b6:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    67ba:	89 2b       	or	r24, r25
    67bc:	d9 f3       	breq	.-10     	; 0x67b4 <main+0xb30>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:804
          ;
        ev_s_ball = 0;
        EEPROM_write_int(DW_address, ev_s_ball);
    67be:	70 e0       	ldi	r23, 0x00	; 0
    67c0:	60 e0       	ldi	r22, 0x00	; 0
    67c2:	82 ea       	ldi	r24, 0xA2	; 162
    67c4:	90 e0       	ldi	r25, 0x00	; 0
    67c6:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
main():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:803
    } else if (page == 8)  // DW
    {
      if (start == 0) {
        while (start == 0)
          ;
        ev_s_ball = 0;
    67ca:	21 2c       	mov	r2, r1
    67cc:	31 2c       	mov	r3, r1
    67ce:	f4 cd       	rjmp	.-1048   	; 0x63b8 <main+0x734>
menu():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1436
      if (start == 0) {
        while (start == 0)
          ;
        menu_setup();
      }
    } else if (page == 4)  // Test Color
    67d0:	84 30       	cpi	r24, 0x04	; 4
    67d2:	79 f4       	brne	.+30     	; 0x67f2 <main+0xb6e>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1438
    {
      if (start == 0) {
    67d4:	86 e0       	ldi	r24, 0x06	; 6
    67d6:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    67da:	89 2b       	or	r24, r25
    67dc:	09 f0       	breq	.+2      	; 0x67e0 <main+0xb5c>
    67de:	5d cc       	rjmp	.-1862   	; 0x609a <main+0x416>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1439
        lcd.clear();
    67e0:	0e 94 c4 05 	call	0xb88	; 0xb88 <LiquidCrystal::clear() [clone .constprop.32]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1440
        while (start == 0)
    67e4:	86 e0       	ldi	r24, 0x06	; 6
    67e6:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    67ea:	89 2b       	or	r24, r25
    67ec:	d9 f3       	breq	.-10     	; 0x67e4 <main+0xb60>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1442
          ;
        menu_color();
    67ee:	0e 94 63 24 	call	0x48c6	; 0x48c6 <menu_color()>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1444
      }
    } else if (page == 5)  // Test Motor
    67f2:	85 30       	cpi	r24, 0x05	; 5
    67f4:	69 f4       	brne	.+26     	; 0x6810 <main+0xb8c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1446
    {
      if (start == 0) {
    67f6:	86 e0       	ldi	r24, 0x06	; 6
    67f8:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    67fc:	89 2b       	or	r24, r25
    67fe:	09 f0       	breq	.+2      	; 0x6802 <main+0xb7e>
    6800:	4c cc       	rjmp	.-1896   	; 0x609a <main+0x416>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1447
        while (start == 0)
    6802:	86 e0       	ldi	r24, 0x06	; 6
    6804:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    6808:	89 2b       	or	r24, r25
    680a:	d9 f3       	breq	.-10     	; 0x6802 <main+0xb7e>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1449
          ;
        menu_motor();
    680c:	0e 94 0a 1c 	call	0x3814	; 0x3814 <menu_motor()>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1451
      }
    } else if (page == 6)  // color calibration
    6810:	86 30       	cpi	r24, 0x06	; 6
    6812:	09 f0       	breq	.+2      	; 0x6816 <main+0xb92>
    6814:	42 cc       	rjmp	.-1916   	; 0x609a <main+0x416>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1453
    {
      if (start == 0) {
    6816:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    681a:	89 2b       	or	r24, r25
    681c:	09 f0       	breq	.+2      	; 0x6820 <main+0xb9c>
    681e:	3d cc       	rjmp	.-1926   	; 0x609a <main+0x416>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1454
        lcd.clear();
    6820:	0e 94 c4 05 	call	0xb88	; 0xb88 <LiquidCrystal::clear() [clone .constprop.32]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1455
        while (start == 0)
    6824:	86 e0       	ldi	r24, 0x06	; 6
    6826:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    682a:	89 2b       	or	r24, r25
    682c:	d9 f3       	breq	.-10     	; 0x6824 <main+0xba0>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1457
          ;
        delay(200);
    682e:	68 ec       	ldi	r22, 0xC8	; 200
    6830:	70 e0       	ldi	r23, 0x00	; 0
    6832:	80 e0       	ldi	r24, 0x00	; 0
    6834:	90 e0       	ldi	r25, 0x00	; 0
    6836:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1458
        color_calib();
    683a:	0e 94 89 2a 	call	0x5512	; 0x5512 <color_calib()>
linefollow():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:72
  */
}
void linefollow() {
  int spd = EEPROM_read_int(spd_address);
  if(SM && SL1)go(spd*0.8,spd*1.2);
  else if(SM && SR1)go(spd*1.2,spd*0.8);
    683e:	40 e0       	ldi	r20, 0x00	; 0
    6840:	60 e0       	ldi	r22, 0x00	; 0
    6842:	80 e0       	ldi	r24, 0x00	; 0
    6844:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    6848:	89 2b       	or	r24, r25
    684a:	59 f4       	brne	.+22     	; 0x6862 <main+0xbde>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:73
  else if (SM == 1) go(spd, spd);
    684c:	40 e0       	ldi	r20, 0x00	; 0
    684e:	60 e0       	ldi	r22, 0x00	; 0
    6850:	80 e0       	ldi	r24, 0x00	; 0
    6852:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    6856:	01 97       	sbiw	r24, 0x01	; 1
    6858:	19 f5       	brne	.+70     	; 0x68a0 <main+0xc1c>
    685a:	6a 81       	ldd	r22, Y+2	; 0x02
    685c:	7b 81       	ldd	r23, Y+3	; 0x03
    685e:	cb 01       	movw	r24, r22
    6860:	e3 cc       	rjmp	.-1594   	; 0x6228 <main+0x5a4>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:72
  */
}
void linefollow() {
  int spd = EEPROM_read_int(spd_address);
  if(SM && SL1)go(spd*0.8,spd*1.2);
  else if(SM && SR1)go(spd*1.2,spd*0.8);
    6862:	40 e0       	ldi	r20, 0x00	; 0
    6864:	61 e0       	ldi	r22, 0x01	; 1
    6866:	81 e0       	ldi	r24, 0x01	; 1
    6868:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    686c:	89 2b       	or	r24, r25
    686e:	71 f3       	breq	.-36     	; 0x684c <main+0xbc8>
    6870:	ea 81       	ldd	r30, Y+2	; 0x02
    6872:	fb 81       	ldd	r31, Y+3	; 0x03
    6874:	bf 01       	movw	r22, r30
    6876:	ff 0f       	add	r31, r31
    6878:	88 0b       	sbc	r24, r24
    687a:	99 0b       	sbc	r25, r25
    687c:	0e 94 ac 45 	call	0x8b58	; 0x8b58 <__floatsisf>
    6880:	6b 01       	movw	r12, r22
    6882:	7c 01       	movw	r14, r24
    6884:	2d ec       	ldi	r18, 0xCD	; 205
    6886:	3c ec       	ldi	r19, 0xCC	; 204
    6888:	4c e4       	ldi	r20, 0x4C	; 76
    688a:	5f e3       	ldi	r21, 0x3F	; 63
    688c:	0e 94 5c 46 	call	0x8cb8	; 0x8cb8 <__mulsf3>
    6890:	0e 94 74 45 	call	0x8ae8	; 0x8ae8 <__fixsfsi>
    6894:	4b 01       	movw	r8, r22
    6896:	2a e9       	ldi	r18, 0x9A	; 154
    6898:	39 e9       	ldi	r19, 0x99	; 153
    689a:	49 e9       	ldi	r20, 0x99	; 153
    689c:	5f e3       	ldi	r21, 0x3F	; 63
    689e:	bc cc       	rjmp	.-1672   	; 0x6218 <main+0x594>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:75
  else if (SM == 1) go(spd, spd);
  
  else if (SL1) go(spd * 0.3, spd * 1.6);
    68a0:	40 e0       	ldi	r20, 0x00	; 0
    68a2:	60 e0       	ldi	r22, 0x00	; 0
    68a4:	81 e0       	ldi	r24, 0x01	; 1
    68a6:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    68aa:	89 2b       	or	r24, r25
    68ac:	c1 f0       	breq	.+48     	; 0x68de <main+0xc5a>
    68ae:	2a 81       	ldd	r18, Y+2	; 0x02
    68b0:	3b 81       	ldd	r19, Y+3	; 0x03
    68b2:	b9 01       	movw	r22, r18
    68b4:	33 0f       	add	r19, r19
    68b6:	88 0b       	sbc	r24, r24
    68b8:	99 0b       	sbc	r25, r25
    68ba:	0e 94 ac 45 	call	0x8b58	; 0x8b58 <__floatsisf>
    68be:	6b 01       	movw	r12, r22
    68c0:	7c 01       	movw	r14, r24
    68c2:	2d ec       	ldi	r18, 0xCD	; 205
    68c4:	3c ec       	ldi	r19, 0xCC	; 204
    68c6:	4c ec       	ldi	r20, 0xCC	; 204
    68c8:	5f e3       	ldi	r21, 0x3F	; 63
    68ca:	0e 94 5c 46 	call	0x8cb8	; 0x8cb8 <__mulsf3>
    68ce:	0e 94 74 45 	call	0x8ae8	; 0x8ae8 <__fixsfsi>
    68d2:	4b 01       	movw	r8, r22
    68d4:	2a e9       	ldi	r18, 0x9A	; 154
    68d6:	39 e9       	ldi	r19, 0x99	; 153
    68d8:	49 e9       	ldi	r20, 0x99	; 153
    68da:	5e e3       	ldi	r21, 0x3E	; 62
    68dc:	9d cc       	rjmp	.-1734   	; 0x6218 <main+0x594>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:76
  else if (SR1) go(spd * 1.6, spd * 0.3);
    68de:	40 e0       	ldi	r20, 0x00	; 0
    68e0:	61 e0       	ldi	r22, 0x01	; 1
    68e2:	81 e0       	ldi	r24, 0x01	; 1
    68e4:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    68e8:	89 2b       	or	r24, r25
    68ea:	c1 f0       	breq	.+48     	; 0x691c <main+0xc98>
    68ec:	4a 81       	ldd	r20, Y+2	; 0x02
    68ee:	5b 81       	ldd	r21, Y+3	; 0x03
    68f0:	ba 01       	movw	r22, r20
    68f2:	55 0f       	add	r21, r21
    68f4:	88 0b       	sbc	r24, r24
    68f6:	99 0b       	sbc	r25, r25
    68f8:	0e 94 ac 45 	call	0x8b58	; 0x8b58 <__floatsisf>
    68fc:	6b 01       	movw	r12, r22
    68fe:	7c 01       	movw	r14, r24
    6900:	2a e9       	ldi	r18, 0x9A	; 154
    6902:	39 e9       	ldi	r19, 0x99	; 153
    6904:	49 e9       	ldi	r20, 0x99	; 153
    6906:	5e e3       	ldi	r21, 0x3E	; 62
    6908:	0e 94 5c 46 	call	0x8cb8	; 0x8cb8 <__mulsf3>
    690c:	0e 94 74 45 	call	0x8ae8	; 0x8ae8 <__fixsfsi>
    6910:	4b 01       	movw	r8, r22
    6912:	2d ec       	ldi	r18, 0xCD	; 205
    6914:	3c ec       	ldi	r19, 0xCC	; 204
    6916:	4c ec       	ldi	r20, 0xCC	; 204
    6918:	5f e3       	ldi	r21, 0x3F	; 63
    691a:	7e cc       	rjmp	.-1796   	; 0x6218 <main+0x594>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:78

  else if (SL2) go(-spd * 0.4, spd * 1.4);
    691c:	40 e0       	ldi	r20, 0x00	; 0
    691e:	60 e0       	ldi	r22, 0x00	; 0
    6920:	82 e0       	ldi	r24, 0x02	; 2
    6922:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    6926:	89 2b       	or	r24, r25
    6928:	39 f1       	breq	.+78     	; 0x6978 <main+0xcf4>
    692a:	ea 81       	ldd	r30, Y+2	; 0x02
    692c:	fb 81       	ldd	r31, Y+3	; 0x03
    692e:	bf 01       	movw	r22, r30
    6930:	ff 0f       	add	r31, r31
    6932:	88 0b       	sbc	r24, r24
    6934:	99 0b       	sbc	r25, r25
    6936:	0e 94 ac 45 	call	0x8b58	; 0x8b58 <__floatsisf>
    693a:	23 e3       	ldi	r18, 0x33	; 51
    693c:	33 e3       	ldi	r19, 0x33	; 51
    693e:	43 eb       	ldi	r20, 0xB3	; 179
    6940:	5f e3       	ldi	r21, 0x3F	; 63
    6942:	0e 94 5c 46 	call	0x8cb8	; 0x8cb8 <__mulsf3>
    6946:	0e 94 74 45 	call	0x8ae8	; 0x8ae8 <__fixsfsi>
    694a:	6b 01       	movw	r12, r22
    694c:	6a 81       	ldd	r22, Y+2	; 0x02
    694e:	7b 81       	ldd	r23, Y+3	; 0x03
    6950:	71 95       	neg	r23
    6952:	61 95       	neg	r22
    6954:	71 09       	sbc	r23, r1
    6956:	07 2e       	mov	r0, r23
    6958:	00 0c       	add	r0, r0
    695a:	88 0b       	sbc	r24, r24
    695c:	99 0b       	sbc	r25, r25
    695e:	0e 94 ac 45 	call	0x8b58	; 0x8b58 <__floatsisf>
    6962:	2d ec       	ldi	r18, 0xCD	; 205
    6964:	3c ec       	ldi	r19, 0xCC	; 204
    6966:	4c ec       	ldi	r20, 0xCC	; 204
    6968:	5e e3       	ldi	r21, 0x3E	; 62
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:79
  else if (SR2) go(spd * 1.4, -spd * 0.4);
    696a:	0e 94 5c 46 	call	0x8cb8	; 0x8cb8 <__mulsf3>
    696e:	0e 94 74 45 	call	0x8ae8	; 0x8ae8 <__fixsfsi>
    6972:	cb 01       	movw	r24, r22
    6974:	b6 01       	movw	r22, r12
    6976:	58 cc       	rjmp	.-1872   	; 0x6228 <main+0x5a4>
    6978:	40 e0       	ldi	r20, 0x00	; 0
    697a:	61 e0       	ldi	r22, 0x01	; 1
    697c:	82 e0       	ldi	r24, 0x02	; 2
    697e:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    6982:	89 2b       	or	r24, r25
    6984:	09 f1       	breq	.+66     	; 0x69c8 <main+0xd44>
    6986:	6a 81       	ldd	r22, Y+2	; 0x02
    6988:	7b 81       	ldd	r23, Y+3	; 0x03
    698a:	71 95       	neg	r23
    698c:	61 95       	neg	r22
    698e:	71 09       	sbc	r23, r1
    6990:	07 2e       	mov	r0, r23
    6992:	00 0c       	add	r0, r0
    6994:	88 0b       	sbc	r24, r24
    6996:	99 0b       	sbc	r25, r25
    6998:	0e 94 ac 45 	call	0x8b58	; 0x8b58 <__floatsisf>
    699c:	2d ec       	ldi	r18, 0xCD	; 205
    699e:	3c ec       	ldi	r19, 0xCC	; 204
    69a0:	4c ec       	ldi	r20, 0xCC	; 204
    69a2:	5e e3       	ldi	r21, 0x3E	; 62
    69a4:	0e 94 5c 46 	call	0x8cb8	; 0x8cb8 <__mulsf3>
    69a8:	0e 94 74 45 	call	0x8ae8	; 0x8ae8 <__fixsfsi>
    69ac:	6b 01       	movw	r12, r22
    69ae:	2a 81       	ldd	r18, Y+2	; 0x02
    69b0:	3b 81       	ldd	r19, Y+3	; 0x03
    69b2:	b9 01       	movw	r22, r18
    69b4:	33 0f       	add	r19, r19
    69b6:	88 0b       	sbc	r24, r24
    69b8:	99 0b       	sbc	r25, r25
    69ba:	0e 94 ac 45 	call	0x8b58	; 0x8b58 <__floatsisf>
    69be:	23 e3       	ldi	r18, 0x33	; 51
    69c0:	33 e3       	ldi	r19, 0x33	; 51
    69c2:	43 eb       	ldi	r20, 0xB3	; 179
    69c4:	5f e3       	ldi	r21, 0x3F	; 63
    69c6:	d1 cf       	rjmp	.-94     	; 0x696a <main+0xce6>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:81

  else if (SL3) go(-spd * 0.7, spd);
    69c8:	40 e0       	ldi	r20, 0x00	; 0
    69ca:	60 e0       	ldi	r22, 0x00	; 0
    69cc:	83 e0       	ldi	r24, 0x03	; 3
    69ce:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    69d2:	89 2b       	or	r24, r25
    69d4:	b9 f0       	breq	.+46     	; 0x6a04 <main+0xd80>
    69d6:	6a 81       	ldd	r22, Y+2	; 0x02
    69d8:	7b 81       	ldd	r23, Y+3	; 0x03
    69da:	71 95       	neg	r23
    69dc:	61 95       	neg	r22
    69de:	71 09       	sbc	r23, r1
    69e0:	07 2e       	mov	r0, r23
    69e2:	00 0c       	add	r0, r0
    69e4:	88 0b       	sbc	r24, r24
    69e6:	99 0b       	sbc	r25, r25
    69e8:	0e 94 ac 45 	call	0x8b58	; 0x8b58 <__floatsisf>
    69ec:	23 e3       	ldi	r18, 0x33	; 51
    69ee:	33 e3       	ldi	r19, 0x33	; 51
    69f0:	43 e3       	ldi	r20, 0x33	; 51
    69f2:	5f e3       	ldi	r21, 0x3F	; 63
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:84
  else if (SR3) go(spd, -spd * 0.7);

  else if (SL4) go(-spd * 0.9, spd);
    69f4:	0e 94 5c 46 	call	0x8cb8	; 0x8cb8 <__mulsf3>
    69f8:	0e 94 74 45 	call	0x8ae8	; 0x8ae8 <__fixsfsi>
    69fc:	cb 01       	movw	r24, r22
    69fe:	6a 81       	ldd	r22, Y+2	; 0x02
    6a00:	7b 81       	ldd	r23, Y+3	; 0x03
    6a02:	12 cc       	rjmp	.-2012   	; 0x6228 <main+0x5a4>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:82

  else if (SL2) go(-spd * 0.4, spd * 1.4);
  else if (SR2) go(spd * 1.4, -spd * 0.4);

  else if (SL3) go(-spd * 0.7, spd);
  else if (SR3) go(spd, -spd * 0.7);
    6a04:	40 e0       	ldi	r20, 0x00	; 0
    6a06:	61 e0       	ldi	r22, 0x01	; 1
    6a08:	83 e0       	ldi	r24, 0x03	; 3
    6a0a:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    6a0e:	89 2b       	or	r24, r25
    6a10:	b1 f0       	breq	.+44     	; 0x6a3e <main+0xdba>
    6a12:	6a 81       	ldd	r22, Y+2	; 0x02
    6a14:	7b 81       	ldd	r23, Y+3	; 0x03
    6a16:	71 95       	neg	r23
    6a18:	61 95       	neg	r22
    6a1a:	71 09       	sbc	r23, r1
    6a1c:	07 2e       	mov	r0, r23
    6a1e:	00 0c       	add	r0, r0
    6a20:	88 0b       	sbc	r24, r24
    6a22:	99 0b       	sbc	r25, r25
    6a24:	0e 94 ac 45 	call	0x8b58	; 0x8b58 <__floatsisf>
    6a28:	23 e3       	ldi	r18, 0x33	; 51
    6a2a:	33 e3       	ldi	r19, 0x33	; 51
    6a2c:	43 e3       	ldi	r20, 0x33	; 51
    6a2e:	5f e3       	ldi	r21, 0x3F	; 63
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:85

  else if (SL4) go(-spd * 0.9, spd);
  else if (SR4) go(spd, -spd * 0.9);
    6a30:	0e 94 5c 46 	call	0x8cb8	; 0x8cb8 <__mulsf3>
    6a34:	0e 94 74 45 	call	0x8ae8	; 0x8ae8 <__fixsfsi>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:100

  else if (SL8) go(-spd, spd);
  else if (SR8) go(spd, -spd);

  else if (SL9) go(-spd, spd);
  else if (SR9) go(spd, -spd);
    6a38:	8a 81       	ldd	r24, Y+2	; 0x02
    6a3a:	9b 81       	ldd	r25, Y+3	; 0x03
    6a3c:	f5 cb       	rjmp	.-2070   	; 0x6228 <main+0x5a4>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:84
  else if (SR2) go(spd * 1.4, -spd * 0.4);

  else if (SL3) go(-spd * 0.7, spd);
  else if (SR3) go(spd, -spd * 0.7);

  else if (SL4) go(-spd * 0.9, spd);
    6a3e:	40 e0       	ldi	r20, 0x00	; 0
    6a40:	60 e0       	ldi	r22, 0x00	; 0
    6a42:	84 e0       	ldi	r24, 0x04	; 4
    6a44:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    6a48:	89 2b       	or	r24, r25
    6a4a:	81 f0       	breq	.+32     	; 0x6a6c <main+0xde8>
    6a4c:	6a 81       	ldd	r22, Y+2	; 0x02
    6a4e:	7b 81       	ldd	r23, Y+3	; 0x03
    6a50:	71 95       	neg	r23
    6a52:	61 95       	neg	r22
    6a54:	71 09       	sbc	r23, r1
    6a56:	07 2e       	mov	r0, r23
    6a58:	00 0c       	add	r0, r0
    6a5a:	88 0b       	sbc	r24, r24
    6a5c:	99 0b       	sbc	r25, r25
    6a5e:	0e 94 ac 45 	call	0x8b58	; 0x8b58 <__floatsisf>
    6a62:	26 e6       	ldi	r18, 0x66	; 102
    6a64:	36 e6       	ldi	r19, 0x66	; 102
    6a66:	46 e6       	ldi	r20, 0x66	; 102
    6a68:	5f e3       	ldi	r21, 0x3F	; 63
    6a6a:	c4 cf       	rjmp	.-120    	; 0x69f4 <main+0xd70>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:85
  else if (SR4) go(spd, -spd * 0.9);
    6a6c:	40 e0       	ldi	r20, 0x00	; 0
    6a6e:	61 e0       	ldi	r22, 0x01	; 1
    6a70:	84 e0       	ldi	r24, 0x04	; 4
    6a72:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    6a76:	89 2b       	or	r24, r25
    6a78:	81 f0       	breq	.+32     	; 0x6a9a <main+0xe16>
    6a7a:	6a 81       	ldd	r22, Y+2	; 0x02
    6a7c:	7b 81       	ldd	r23, Y+3	; 0x03
    6a7e:	71 95       	neg	r23
    6a80:	61 95       	neg	r22
    6a82:	71 09       	sbc	r23, r1
    6a84:	07 2e       	mov	r0, r23
    6a86:	00 0c       	add	r0, r0
    6a88:	88 0b       	sbc	r24, r24
    6a8a:	99 0b       	sbc	r25, r25
    6a8c:	0e 94 ac 45 	call	0x8b58	; 0x8b58 <__floatsisf>
    6a90:	26 e6       	ldi	r18, 0x66	; 102
    6a92:	36 e6       	ldi	r19, 0x66	; 102
    6a94:	46 e6       	ldi	r20, 0x66	; 102
    6a96:	5f e3       	ldi	r21, 0x3F	; 63
    6a98:	cb cf       	rjmp	.-106    	; 0x6a30 <main+0xdac>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:87

  else if (SL5) go(-spd, spd);
    6a9a:	40 e0       	ldi	r20, 0x00	; 0
    6a9c:	60 e0       	ldi	r22, 0x00	; 0
    6a9e:	85 e0       	ldi	r24, 0x05	; 5
    6aa0:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    6aa4:	89 2b       	or	r24, r25
    6aa6:	39 f0       	breq	.+14     	; 0x6ab6 <main+0xe32>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:99
  else if (SR7) go(spd, -spd);

  else if (SL8) go(-spd, spd);
  else if (SR8) go(spd, -spd);

  else if (SL9) go(-spd, spd);
    6aa8:	6a 81       	ldd	r22, Y+2	; 0x02
    6aaa:	7b 81       	ldd	r23, Y+3	; 0x03
    6aac:	cb 01       	movw	r24, r22
    6aae:	91 95       	neg	r25
    6ab0:	81 95       	neg	r24
    6ab2:	91 09       	sbc	r25, r1
    6ab4:	b9 cb       	rjmp	.-2190   	; 0x6228 <main+0x5a4>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:88

  else if (SL4) go(-spd * 0.9, spd);
  else if (SR4) go(spd, -spd * 0.9);

  else if (SL5) go(-spd, spd);
  else if (SR5) go(spd, -spd);
    6ab6:	40 e0       	ldi	r20, 0x00	; 0
    6ab8:	61 e0       	ldi	r22, 0x01	; 1
    6aba:	85 e0       	ldi	r24, 0x05	; 5
    6abc:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    6ac0:	89 2b       	or	r24, r25
    6ac2:	31 f0       	breq	.+12     	; 0x6ad0 <main+0xe4c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:100

  else if (SL8) go(-spd, spd);
  else if (SR8) go(spd, -spd);

  else if (SL9) go(-spd, spd);
  else if (SR9) go(spd, -spd);
    6ac4:	6a 81       	ldd	r22, Y+2	; 0x02
    6ac6:	7b 81       	ldd	r23, Y+3	; 0x03
    6ac8:	71 95       	neg	r23
    6aca:	61 95       	neg	r22
    6acc:	71 09       	sbc	r23, r1
    6ace:	b4 cf       	rjmp	.-152    	; 0x6a38 <main+0xdb4>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:90
  else if (SR4) go(spd, -spd * 0.9);

  else if (SL5) go(-spd, spd);
  else if (SR5) go(spd, -spd);

  else if (SL6) go(-spd, spd);
    6ad0:	40 e0       	ldi	r20, 0x00	; 0
    6ad2:	60 e0       	ldi	r22, 0x00	; 0
    6ad4:	86 e0       	ldi	r24, 0x06	; 6
    6ad6:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    6ada:	89 2b       	or	r24, r25
    6adc:	29 f7       	brne	.-54     	; 0x6aa8 <main+0xe24>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:91
  else if (SR6) go(spd, -spd);
    6ade:	40 e0       	ldi	r20, 0x00	; 0
    6ae0:	61 e0       	ldi	r22, 0x01	; 1
    6ae2:	86 e0       	ldi	r24, 0x06	; 6
    6ae4:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    6ae8:	89 2b       	or	r24, r25
    6aea:	61 f7       	brne	.-40     	; 0x6ac4 <main+0xe40>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:93

  else if (SL7) go(-spd, spd);
    6aec:	40 e0       	ldi	r20, 0x00	; 0
    6aee:	60 e0       	ldi	r22, 0x00	; 0
    6af0:	87 e0       	ldi	r24, 0x07	; 7
    6af2:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    6af6:	89 2b       	or	r24, r25
    6af8:	b9 f6       	brne	.-82     	; 0x6aa8 <main+0xe24>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:94
  else if (SR7) go(spd, -spd);
    6afa:	40 e0       	ldi	r20, 0x00	; 0
    6afc:	61 e0       	ldi	r22, 0x01	; 1
    6afe:	87 e0       	ldi	r24, 0x07	; 7
    6b00:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    6b04:	89 2b       	or	r24, r25
    6b06:	f1 f6       	brne	.-68     	; 0x6ac4 <main+0xe40>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:96

  else if (SL8) go(-spd, spd);
    6b08:	40 e0       	ldi	r20, 0x00	; 0
    6b0a:	62 e0       	ldi	r22, 0x02	; 2
    6b0c:	80 e0       	ldi	r24, 0x00	; 0
    6b0e:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    6b12:	89 2b       	or	r24, r25
    6b14:	49 f6       	brne	.-110    	; 0x6aa8 <main+0xe24>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:97
  else if (SR8) go(spd, -spd);
    6b16:	40 e0       	ldi	r20, 0x00	; 0
    6b18:	63 e0       	ldi	r22, 0x03	; 3
    6b1a:	80 e0       	ldi	r24, 0x00	; 0
    6b1c:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    6b20:	89 2b       	or	r24, r25
    6b22:	81 f6       	brne	.-96     	; 0x6ac4 <main+0xe40>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:99

  else if (SL9) go(-spd, spd);
    6b24:	40 e0       	ldi	r20, 0x00	; 0
    6b26:	62 e0       	ldi	r22, 0x02	; 2
    6b28:	81 e0       	ldi	r24, 0x01	; 1
    6b2a:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    6b2e:	89 2b       	or	r24, r25
    6b30:	09 f0       	breq	.+2      	; 0x6b34 <main+0xeb0>
    6b32:	ba cf       	rjmp	.-140    	; 0x6aa8 <main+0xe24>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:100
  else if (SR9) go(spd, -spd);
    6b34:	40 e0       	ldi	r20, 0x00	; 0
    6b36:	63 e0       	ldi	r22, 0x03	; 3
    6b38:	81 e0       	ldi	r24, 0x01	; 1
    6b3a:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    6b3e:	89 2b       	or	r24, r25
    6b40:	09 f6       	brne	.-126    	; 0x6ac4 <main+0xe40>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:101
  if (color_L == RED ||color_R == RED) {go(0,0);beep(5);while(1);}
    6b42:	81 e0       	ldi	r24, 0x01	; 1
    6b44:	0e 94 a8 10 	call	0x2150	; 0x2150 <color(char)>
    6b48:	81 11       	cpse	r24, r1
    6b4a:	0b c0       	rjmp	.+22     	; 0x6b62 <main+0xede>
    6b4c:	70 e0       	ldi	r23, 0x00	; 0
    6b4e:	60 e0       	ldi	r22, 0x00	; 0
    6b50:	90 e0       	ldi	r25, 0x00	; 0
    6b52:	80 e0       	ldi	r24, 0x00	; 0
    6b54:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
    6b58:	85 e0       	ldi	r24, 0x05	; 5
    6b5a:	90 e0       	ldi	r25, 0x00	; 0
    6b5c:	0e 94 a9 07 	call	0xf52	; 0xf52 <beep(int)>
    6b60:	ff cf       	rjmp	.-2      	; 0x6b60 <main+0xedc>
    6b62:	82 e0       	ldi	r24, 0x02	; 2
    6b64:	0e 94 a8 10 	call	0x2150	; 0x2150 <color(char)>
    6b68:	88 23       	and	r24, r24
    6b6a:	81 f3       	breq	.-32     	; 0x6b4c <main+0xec8>
handle_color():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2060

  inter_detected = false;
  item = WHITE;
}
void handle_color() {
  int T90 = EEPROM_read_int(T90_address);
    6b6c:	88 e9       	ldi	r24, 0x98	; 152
    6b6e:	90 e0       	ldi	r25, 0x00	; 0
    6b70:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    6b74:	9b 83       	std	Y+3, r25	; 0x03
    6b76:	8a 83       	std	Y+2, r24	; 0x02
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2063
  int inter_detected = false;
  int deadend_detected = false;
  left_card = color_L;   //left side
    6b78:	81 e0       	ldi	r24, 0x01	; 1
    6b7a:	0e 94 a8 10 	call	0x2150	; 0x2150 <color(char)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2064
  right_card = color_R;  //right side
    6b7e:	82 e0       	ldi	r24, 0x02	; 2
    6b80:	0e 94 a8 10 	call	0x2150	; 0x2150 <color(char)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2066

  if (color_L == GREEN) {
    6b84:	81 e0       	ldi	r24, 0x01	; 1
    6b86:	0e 94 a8 10 	call	0x2150	; 0x2150 <color(char)>
    6b8a:	81 30       	cpi	r24, 0x01	; 1
    6b8c:	09 f0       	breq	.+2      	; 0x6b90 <main+0xf0c>
    6b8e:	7e c0       	rjmp	.+252    	; 0x6c8c <main+0x1008>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2067
    cnt = 0;
    6b90:	1d bc       	out	0x2d, r1	; 45
    6b92:	1c bc       	out	0x2c, r1	; 44
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2068
    go(50, 50);
    6b94:	62 e3       	ldi	r22, 0x32	; 50
    6b96:	70 e0       	ldi	r23, 0x00	; 0
    6b98:	82 e3       	ldi	r24, 0x32	; 50
    6b9a:	90 e0       	ldi	r25, 0x00	; 0
    6b9c:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
main():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2062
  item = WHITE;
}
void handle_color() {
  int T90 = EEPROM_read_int(T90_address);
  int inter_detected = false;
  int deadend_detected = false;
    6ba0:	10 e0       	ldi	r17, 0x00	; 0
    6ba2:	00 e0       	ldi	r16, 0x00	; 0
handle_color():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2069
  right_card = color_R;  //right side

  if (color_L == GREEN) {
    cnt = 0;
    go(50, 50);
    while (cnt / 100 < 10) {
    6ba4:	8c b5       	in	r24, 0x2c	; 44
    6ba6:	9d b5       	in	r25, 0x2d	; 45
    6ba8:	88 3e       	cpi	r24, 0xE8	; 232
    6baa:	93 40       	sbci	r25, 0x03	; 3
    6bac:	10 f0       	brcs	.+4      	; 0x6bb2 <main+0xf2e>
    6bae:	0c 94 35 42 	jmp	0x846a	; 0x846a <main+0x27e6>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2070
      if (SR7 || SR6 || SL7 || SL6) {
    6bb2:	40 e0       	ldi	r20, 0x00	; 0
    6bb4:	61 e0       	ldi	r22, 0x01	; 1
    6bb6:	87 e0       	ldi	r24, 0x07	; 7
    6bb8:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    6bbc:	89 2b       	or	r24, r25
    6bbe:	11 f0       	breq	.+4      	; 0x6bc4 <main+0xf40>
    6bc0:	0c 94 29 42 	jmp	0x8452	; 0x8452 <main+0x27ce>
    6bc4:	40 e0       	ldi	r20, 0x00	; 0
    6bc6:	61 e0       	ldi	r22, 0x01	; 1
    6bc8:	86 e0       	ldi	r24, 0x06	; 6
    6bca:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    6bce:	89 2b       	or	r24, r25
    6bd0:	11 f0       	breq	.+4      	; 0x6bd6 <main+0xf52>
    6bd2:	0c 94 29 42 	jmp	0x8452	; 0x8452 <main+0x27ce>
    6bd6:	40 e0       	ldi	r20, 0x00	; 0
    6bd8:	60 e0       	ldi	r22, 0x00	; 0
    6bda:	87 e0       	ldi	r24, 0x07	; 7
    6bdc:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    6be0:	89 2b       	or	r24, r25
    6be2:	11 f0       	breq	.+4      	; 0x6be8 <main+0xf64>
    6be4:	0c 94 29 42 	jmp	0x8452	; 0x8452 <main+0x27ce>
    6be8:	40 e0       	ldi	r20, 0x00	; 0
    6bea:	60 e0       	ldi	r22, 0x00	; 0
    6bec:	86 e0       	ldi	r24, 0x06	; 6
    6bee:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    6bf2:	89 2b       	or	r24, r25
    6bf4:	11 f0       	breq	.+4      	; 0x6bfa <main+0xf76>
    6bf6:	0c 94 29 42 	jmp	0x8452	; 0x8452 <main+0x27ce>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2074
        inter_detected = true;
        break;
      }
      else if (color_R == GREEN) {
    6bfa:	82 e0       	ldi	r24, 0x02	; 2
    6bfc:	0e 94 a8 10 	call	0x2150	; 0x2150 <color(char)>
    6c00:	81 30       	cpi	r24, 0x01	; 1
    6c02:	81 f6       	brne	.-96     	; 0x6ba4 <main+0xf20>
main():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2075
        deadend_detected = true;
    6c04:	01 e0       	ldi	r16, 0x01	; 1
    6c06:	10 e0       	ldi	r17, 0x00	; 0
    6c08:	cd cf       	rjmp	.-102    	; 0x6ba4 <main+0xf20>
handle_color():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2083
    }
    if (inter_detected) {
      move(forward, T90 / 4, 150);
    } else if (deadend_detected) {
      //move(Left, T90 * 2, 150);
      if(touch_count==1){
    6c0a:	80 91 7f 09 	lds	r24, 0x097F	; 0x80097f <touch_count>
    6c0e:	90 91 80 09 	lds	r25, 0x0980	; 0x800980 <touch_count+0x1>
    6c12:	81 30       	cpi	r24, 0x01	; 1
    6c14:	91 05       	cpc	r25, r1
    6c16:	b9 f4       	brne	.+46     	; 0x6c46 <main+0xfc2>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2101
      
    }
    else {
      lcd.clear();
      lcd.print("green left");
      move(forward, T90 / 4, 150);
    6c18:	6a 81       	ldd	r22, Y+2	; 0x02
    6c1a:	7b 81       	ldd	r23, Y+3	; 0x03
    6c1c:	77 ff       	sbrs	r23, 7
    6c1e:	02 c0       	rjmp	.+4      	; 0x6c24 <main+0xfa0>
    6c20:	6d 5f       	subi	r22, 0xFD	; 253
    6c22:	7f 4f       	sbci	r23, 0xFF	; 255
    6c24:	75 95       	asr	r23
    6c26:	67 95       	ror	r22
    6c28:	75 95       	asr	r23
    6c2a:	67 95       	ror	r22
    6c2c:	46 e9       	ldi	r20, 0x96	; 150
    6c2e:	50 e0       	ldi	r21, 0x00	; 0
    6c30:	8a e0       	ldi	r24, 0x0A	; 10
    6c32:	90 e0       	ldi	r25, 0x00	; 0
    6c34:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2102
      move(Left, T90, 150);
    6c38:	46 e9       	ldi	r20, 0x96	; 150
    6c3a:	50 e0       	ldi	r21, 0x00	; 0
    6c3c:	6a 81       	ldd	r22, Y+2	; 0x02
    6c3e:	7b 81       	ldd	r23, Y+3	; 0x03
    6c40:	8b e0       	ldi	r24, 0x0B	; 11
    6c42:	90 e0       	ldi	r25, 0x00	; 0
    6c44:	1b c0       	rjmp	.+54     	; 0x6c7c <main+0xff8>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2088
      if(touch_count==1){
        move(forward, T90 / 4, 150);
        move(Left, T90, 150);

      }
      else if(touch_count==2){
    6c46:	82 30       	cpi	r24, 0x02	; 2
    6c48:	91 05       	cpc	r25, r1
    6c4a:	09 f0       	breq	.+2      	; 0x6c4e <main+0xfca>
    6c4c:	59 c0       	rjmp	.+178    	; 0x6d00 <main+0x107c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2089
        move(forward, T90 / 8, 150);
    6c4e:	6a 81       	ldd	r22, Y+2	; 0x02
    6c50:	7b 81       	ldd	r23, Y+3	; 0x03
    6c52:	77 ff       	sbrs	r23, 7
    6c54:	02 c0       	rjmp	.+4      	; 0x6c5a <main+0xfd6>
    6c56:	69 5f       	subi	r22, 0xF9	; 249
    6c58:	7f 4f       	sbci	r23, 0xFF	; 255
    6c5a:	83 e0       	ldi	r24, 0x03	; 3
    6c5c:	75 95       	asr	r23
    6c5e:	67 95       	ror	r22
    6c60:	8a 95       	dec	r24
    6c62:	e1 f7       	brne	.-8      	; 0x6c5c <main+0xfd8>
    6c64:	46 e9       	ldi	r20, 0x96	; 150
    6c66:	50 e0       	ldi	r21, 0x00	; 0
    6c68:	8a e0       	ldi	r24, 0x0A	; 10
    6c6a:	90 e0       	ldi	r25, 0x00	; 0
    6c6c:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2090
        move(Right, T90, 150);
    6c70:	46 e9       	ldi	r20, 0x96	; 150
    6c72:	50 e0       	ldi	r21, 0x00	; 0
    6c74:	6a 81       	ldd	r22, Y+2	; 0x02
    6c76:	7b 81       	ldd	r23, Y+3	; 0x03
    6c78:	8c e0       	ldi	r24, 0x0C	; 12
    6c7a:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2102
    }
    else {
      lcd.clear();
      lcd.print("green left");
      move(forward, T90 / 4, 150);
      move(Left, T90, 150);
    6c7c:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2104
    }
    go(80, 80);
    6c80:	60 e5       	ldi	r22, 0x50	; 80
    6c82:	70 e0       	ldi	r23, 0x00	; 0
    6c84:	80 e5       	ldi	r24, 0x50	; 80
    6c86:	90 e0       	ldi	r25, 0x00	; 0
    6c88:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2109
    inter_detected = false;
    deadend_detected = false;
  }

  if (color_R == GREEN) {
    6c8c:	82 e0       	ldi	r24, 0x02	; 2
    6c8e:	0e 94 a8 10 	call	0x2150	; 0x2150 <color(char)>
    6c92:	81 30       	cpi	r24, 0x01	; 1
    6c94:	09 f0       	breq	.+2      	; 0x6c98 <main+0x1014>
    6c96:	7d c0       	rjmp	.+250    	; 0x6d92 <main+0x110e>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2110
    cnt = 0;
    6c98:	1d bc       	out	0x2d, r1	; 45
    6c9a:	1c bc       	out	0x2c, r1	; 44
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2111
    go(50, 50);
    6c9c:	62 e3       	ldi	r22, 0x32	; 50
    6c9e:	70 e0       	ldi	r23, 0x00	; 0
    6ca0:	82 e3       	ldi	r24, 0x32	; 50
    6ca2:	90 e0       	ldi	r25, 0x00	; 0
    6ca4:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
    6ca8:	10 e0       	ldi	r17, 0x00	; 0
    6caa:	00 e0       	ldi	r16, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2112
    while (cnt / 100 < 10) {
    6cac:	8c b5       	in	r24, 0x2c	; 44
    6cae:	9d b5       	in	r25, 0x2d	; 45
    6cb0:	88 3e       	cpi	r24, 0xE8	; 232
    6cb2:	93 40       	sbci	r25, 0x03	; 3
    6cb4:	08 f0       	brcs	.+2      	; 0x6cb8 <main+0x1034>
    6cb6:	4a c0       	rjmp	.+148    	; 0x6d4c <main+0x10c8>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2113
      if (SR7 || SR6 || SL7 || SL6) {
    6cb8:	40 e0       	ldi	r20, 0x00	; 0
    6cba:	61 e0       	ldi	r22, 0x01	; 1
    6cbc:	87 e0       	ldi	r24, 0x07	; 7
    6cbe:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    6cc2:	89 2b       	or	r24, r25
    6cc4:	69 f5       	brne	.+90     	; 0x6d20 <main+0x109c>
    6cc6:	40 e0       	ldi	r20, 0x00	; 0
    6cc8:	61 e0       	ldi	r22, 0x01	; 1
    6cca:	86 e0       	ldi	r24, 0x06	; 6
    6ccc:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    6cd0:	89 2b       	or	r24, r25
    6cd2:	31 f5       	brne	.+76     	; 0x6d20 <main+0x109c>
    6cd4:	40 e0       	ldi	r20, 0x00	; 0
    6cd6:	60 e0       	ldi	r22, 0x00	; 0
    6cd8:	87 e0       	ldi	r24, 0x07	; 7
    6cda:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    6cde:	89 2b       	or	r24, r25
    6ce0:	f9 f4       	brne	.+62     	; 0x6d20 <main+0x109c>
    6ce2:	40 e0       	ldi	r20, 0x00	; 0
    6ce4:	60 e0       	ldi	r22, 0x00	; 0
    6ce6:	86 e0       	ldi	r24, 0x06	; 6
    6ce8:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    6cec:	89 2b       	or	r24, r25
    6cee:	c1 f4       	brne	.+48     	; 0x6d20 <main+0x109c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2118
        inter_detected = true;
        beep(3);
        break;
      }
      else if (color_L == GREEN) {
    6cf0:	81 e0       	ldi	r24, 0x01	; 1
    6cf2:	0e 94 a8 10 	call	0x2150	; 0x2150 <color(char)>
    6cf6:	81 30       	cpi	r24, 0x01	; 1
    6cf8:	c9 f6       	brne	.-78     	; 0x6cac <main+0x1028>
main():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2119
        deadend_detected = true;
    6cfa:	01 e0       	ldi	r16, 0x01	; 1
    6cfc:	10 e0       	ldi	r17, 0x00	; 0
    6cfe:	d6 cf       	rjmp	.-84     	; 0x6cac <main+0x1028>
handle_color():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2093
      else if(touch_count==2){
        move(forward, T90 / 8, 150);
        move(Right, T90, 150);
        
      }
      else if(touch_count==3){
    6d00:	03 97       	sbiw	r24, 0x03	; 3
    6d02:	09 f0       	breq	.+2      	; 0x6d06 <main+0x1082>
    6d04:	bd cf       	rjmp	.-134    	; 0x6c80 <main+0xffc>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2094
        move(forward, T90 / 2, 150);
    6d06:	6a 81       	ldd	r22, Y+2	; 0x02
    6d08:	7b 81       	ldd	r23, Y+3	; 0x03
    6d0a:	77 ff       	sbrs	r23, 7
    6d0c:	02 c0       	rjmp	.+4      	; 0x6d12 <main+0x108e>
    6d0e:	6f 5f       	subi	r22, 0xFF	; 255
    6d10:	7f 4f       	sbci	r23, 0xFF	; 255
    6d12:	75 95       	asr	r23
    6d14:	67 95       	ror	r22
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2080
        deadend_detected = true;
      }
      
    }
    if (inter_detected) {
      move(forward, T90 / 4, 150);
    6d16:	46 e9       	ldi	r20, 0x96	; 150
    6d18:	50 e0       	ldi	r21, 0x00	; 0
    6d1a:	8a e0       	ldi	r24, 0x0A	; 10
    6d1c:	90 e0       	ldi	r25, 0x00	; 0
    6d1e:	ae cf       	rjmp	.-164    	; 0x6c7c <main+0xff8>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2115
    cnt = 0;
    go(50, 50);
    while (cnt / 100 < 10) {
      if (SR7 || SR6 || SL7 || SL6) {
        inter_detected = true;
        beep(3);
    6d20:	83 e0       	ldi	r24, 0x03	; 3
    6d22:	90 e0       	ldi	r25, 0x00	; 0
    6d24:	0e 94 a9 07 	call	0xf52	; 0xf52 <beep(int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2124
        deadend_detected = true;
      }
      
    }
    if (inter_detected) {
      move(forward, T90 / 4, 150);
    6d28:	8a 81       	ldd	r24, Y+2	; 0x02
    6d2a:	9b 81       	ldd	r25, Y+3	; 0x03
    6d2c:	97 ff       	sbrs	r25, 7
    6d2e:	03 c0       	rjmp	.+6      	; 0x6d36 <main+0x10b2>
    6d30:	03 96       	adiw	r24, 0x03	; 3
    6d32:	9b 83       	std	Y+3, r25	; 0x03
    6d34:	8a 83       	std	Y+2, r24	; 0x02
    6d36:	6a 81       	ldd	r22, Y+2	; 0x02
    6d38:	7b 81       	ldd	r23, Y+3	; 0x03
    6d3a:	75 95       	asr	r23
    6d3c:	67 95       	ror	r22
    6d3e:	75 95       	asr	r23
    6d40:	67 95       	ror	r22
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2137
        move(forward, T90 / 8, 150);
        move(Right, T90, 150);
        
      }
      else if(touch_count==3){
        move(forward, T90 / 2, 150);
    6d42:	46 e9       	ldi	r20, 0x96	; 150
    6d44:	50 e0       	ldi	r21, 0x00	; 0
    6d46:	8a e0       	ldi	r24, 0x0A	; 10
    6d48:	90 e0       	ldi	r25, 0x00	; 0
    6d4a:	21 c0       	rjmp	.+66     	; 0x6d8e <main+0x110a>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2125
      }
      
    }
    if (inter_detected) {
      move(forward, T90 / 4, 150);
    }else if (deadend_detected) {
    6d4c:	01 2b       	or	r16, r17
    6d4e:	09 f4       	brne	.+2      	; 0x6d52 <main+0x10ce>
    6d50:	36 c1       	rjmp	.+620    	; 0x6fbe <main+0x133a>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2126
      if(touch_count==1){
    6d52:	80 91 7f 09 	lds	r24, 0x097F	; 0x80097f <touch_count>
    6d56:	90 91 80 09 	lds	r25, 0x0980	; 0x800980 <touch_count+0x1>
    6d5a:	81 30       	cpi	r24, 0x01	; 1
    6d5c:	91 05       	cpc	r25, r1
    6d5e:	09 f0       	breq	.+2      	; 0x6d62 <main+0x10de>
    6d60:	04 c1       	rjmp	.+520    	; 0x6f6a <main+0x12e6>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2127
        move(forward, T90 / 4, 150);
    6d62:	6a 81       	ldd	r22, Y+2	; 0x02
    6d64:	7b 81       	ldd	r23, Y+3	; 0x03
    6d66:	77 ff       	sbrs	r23, 7
    6d68:	02 c0       	rjmp	.+4      	; 0x6d6e <main+0x10ea>
    6d6a:	6d 5f       	subi	r22, 0xFD	; 253
    6d6c:	7f 4f       	sbci	r23, 0xFF	; 255
    6d6e:	75 95       	asr	r23
    6d70:	67 95       	ror	r22
    6d72:	75 95       	asr	r23
    6d74:	67 95       	ror	r22
    6d76:	46 e9       	ldi	r20, 0x96	; 150
    6d78:	50 e0       	ldi	r21, 0x00	; 0
    6d7a:	8a e0       	ldi	r24, 0x0A	; 10
    6d7c:	90 e0       	ldi	r25, 0x00	; 0
    6d7e:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2128
        move(Left, T90, 150);
    6d82:	46 e9       	ldi	r20, 0x96	; 150
    6d84:	50 e0       	ldi	r21, 0x00	; 0
    6d86:	6a 81       	ldd	r22, Y+2	; 0x02
    6d88:	7b 81       	ldd	r23, Y+3	; 0x03
    6d8a:	8b e0       	ldi	r24, 0x0B	; 11
    6d8c:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2143
      }
    }  else {
      lcd.clear();
      lcd.print("green left");
      move(forward, T90 / 8, 150);
      move(Right, T90, 150);
    6d8e:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
loop():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_main_code_2023.ino:50

void loop(){
  linefollow();
  handle_color(); 
  //if(Front_distance<100)avoid_obstacle(Left);
  if(!SM && VSM<=silver_voltage_L && VSR10<=silver_voltage_R)
    6d92:	40 e0       	ldi	r20, 0x00	; 0
    6d94:	60 e0       	ldi	r22, 0x00	; 0
    6d96:	80 e0       	ldi	r24, 0x00	; 0
    6d98:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    6d9c:	89 2b       	or	r24, r25
    6d9e:	11 f0       	breq	.+4      	; 0x6da4 <main+0x1120>
    6da0:	0c 94 1f 42 	jmp	0x843e	; 0x843e <main+0x27ba>
    6da4:	41 e0       	ldi	r20, 0x01	; 1
    6da6:	60 e0       	ldi	r22, 0x00	; 0
    6da8:	80 e0       	ldi	r24, 0x00	; 0
    6daa:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    6dae:	04 97       	sbiw	r24, 0x04	; 4
    6db0:	14 f0       	brlt	.+4      	; 0x6db6 <main+0x1132>
    6db2:	0c 94 1f 42 	jmp	0x843e	; 0x843e <main+0x27ba>
    6db6:	41 e0       	ldi	r20, 0x01	; 1
    6db8:	63 e0       	ldi	r22, 0x03	; 3
    6dba:	82 e0       	ldi	r24, 0x02	; 2
    6dbc:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    6dc0:	04 97       	sbiw	r24, 0x04	; 4
    6dc2:	14 f0       	brlt	.+4      	; 0x6dc8 <main+0x1144>
    6dc4:	0c 94 1f 42 	jmp	0x843e	; 0x843e <main+0x27ba>
ev_zone():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3576
        redroom_time=0;
    }

}
void ev_zone(void){
  ball_num=0;move(Back,25,50);
    6dc8:	10 92 a2 09 	sts	0x09A2, r1	; 0x8009a2 <ball_num+0x1>
    6dcc:	10 92 a1 09 	sts	0x09A1, r1	; 0x8009a1 <ball_num>
    6dd0:	42 e3       	ldi	r20, 0x32	; 50
    6dd2:	50 e0       	ldi	r21, 0x00	; 0
    6dd4:	69 e1       	ldi	r22, 0x19	; 25
    6dd6:	70 e0       	ldi	r23, 0x00	; 0
    6dd8:	8d e0       	ldi	r24, 0x0D	; 13
    6dda:	90 e0       	ldi	r25, 0x00	; 0
    6ddc:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3577
  move_basket(basket_normal,400);
    6de0:	60 e9       	ldi	r22, 0x90	; 144
    6de2:	71 e0       	ldi	r23, 0x01	; 1
    6de4:	80 91 9f 09 	lds	r24, 0x099F	; 0x80099f <basket_normal>
    6de8:	90 91 a0 09 	lds	r25, 0x09A0	; 0x8009a0 <basket_normal+0x1>
    6dec:	0e 94 8c 1b 	call	0x3718	; 0x3718 <move_basket(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3578
  move_arm(arm_down,400);
    6df0:	60 e9       	ldi	r22, 0x90	; 144
    6df2:	71 e0       	ldi	r23, 0x01	; 1
    6df4:	80 91 9d 09 	lds	r24, 0x099D	; 0x80099d <arm_down>
    6df8:	90 91 9e 09 	lds	r25, 0x099E	; 0x80099e <arm_down+0x1>
    6dfc:	0e 94 3f 08 	call	0x107e	; 0x107e <move_arm(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3579
  delay(500);
    6e00:	64 ef       	ldi	r22, 0xF4	; 244
    6e02:	71 e0       	ldi	r23, 0x01	; 1
    6e04:	80 e0       	ldi	r24, 0x00	; 0
    6e06:	90 e0       	ldi	r25, 0x00	; 0
    6e08:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3580
  rotate(0);
    6e0c:	90 e0       	ldi	r25, 0x00	; 0
    6e0e:	80 e0       	ldi	r24, 0x00	; 0
    6e10:	0e 94 0c 08 	call	0x1018	; 0x1018 <rotate(int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3581
  move(forward,55,100);
    6e14:	44 e6       	ldi	r20, 0x64	; 100
    6e16:	50 e0       	ldi	r21, 0x00	; 0
    6e18:	67 e3       	ldi	r22, 0x37	; 55
    6e1a:	70 e0       	ldi	r23, 0x00	; 0
    6e1c:	8a e0       	ldi	r24, 0x0A	; 10
    6e1e:	90 e0       	ldi	r25, 0x00	; 0
    6e20:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3582
  delay(200);
    6e24:	68 ec       	ldi	r22, 0xC8	; 200
    6e26:	70 e0       	ldi	r23, 0x00	; 0
    6e28:	80 e0       	ldi	r24, 0x00	; 0
    6e2a:	90 e0       	ldi	r25, 0x00	; 0
    6e2c:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3585
  //if(VL_Right<VL_Left && VL_Right!=20 && VL_Left!=20)redroom_dir=Left; 
  //else     
   redroom_dir=Right;
    6e30:	8c e0       	ldi	r24, 0x0C	; 12
    6e32:	90 e0       	ldi	r25, 0x00	; 0
    6e34:	90 93 9c 09 	sts	0x099C, r25	; 0x80099c <redroom_dir+0x1>
    6e38:	80 93 9b 09 	sts	0x099B, r24	; 0x80099b <redroom_dir>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3586
  if(VSR10<=0.3||VSL10<=0.3)move(forward,20,100);
    6e3c:	41 e0       	ldi	r20, 0x01	; 1
    6e3e:	63 e0       	ldi	r22, 0x03	; 3
    6e40:	82 e0       	ldi	r24, 0x02	; 2
    6e42:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    6e46:	bc 01       	movw	r22, r24
    6e48:	99 0f       	add	r25, r25
    6e4a:	88 0b       	sbc	r24, r24
    6e4c:	99 0b       	sbc	r25, r25
    6e4e:	0e 94 ac 45 	call	0x8b58	; 0x8b58 <__floatsisf>
    6e52:	2a e9       	ldi	r18, 0x9A	; 154
    6e54:	39 e9       	ldi	r19, 0x99	; 153
    6e56:	49 e9       	ldi	r20, 0x99	; 153
    6e58:	5e e3       	ldi	r21, 0x3E	; 62
    6e5a:	0e 94 fd 44 	call	0x89fa	; 0x89fa <__cmpsf2>
    6e5e:	18 16       	cp	r1, r24
    6e60:	0c f4       	brge	.+2      	; 0x6e64 <main+0x11e0>
    6e62:	b4 c0       	rjmp	.+360    	; 0x6fcc <main+0x1348>
    6e64:	44 e6       	ldi	r20, 0x64	; 100
    6e66:	50 e0       	ldi	r21, 0x00	; 0
    6e68:	64 e1       	ldi	r22, 0x14	; 20
    6e6a:	70 e0       	ldi	r23, 0x00	; 0
    6e6c:	8a e0       	ldi	r24, 0x0A	; 10
    6e6e:	90 e0       	ldi	r25, 0x00	; 0
    6e70:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3590
  while(1)
    {
    lcd.setCursor(0,1);
    lcd.printf("dis= %5d   ",VL_Front);
    6e74:	47 e2       	ldi	r20, 0x27	; 39
    6e76:	24 2e       	mov	r2, r20
    6e78:	44 e0       	ldi	r20, 0x04	; 4
    6e7a:	34 2e       	mov	r3, r20
    6e7c:	5d e7       	ldi	r21, 0x7D	; 125
    6e7e:	45 2e       	mov	r4, r21
    6e80:	5b e0       	ldi	r21, 0x0B	; 11
    6e82:	55 2e       	mov	r5, r21
contact():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3565
                        }
                    else{move(Left,T90);}
                    go(spd,spd);check_while();
                    if(check_while_finished==0){
                          if(redroom_dir==Right){move(Right,T90);redroom_dir=Left;}
                          else {move(Left,T90);redroom_dir=Right;}
    6e84:	6c e0       	ldi	r22, 0x0C	; 12
    6e86:	86 2e       	mov	r8, r22
    6e88:	91 2c       	mov	r9, r1
ev_zone():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3589
  //else     
   redroom_dir=Right;
  if(VSR10<=0.3||VSL10<=0.3)move(forward,20,100);
  while(1)
    {
    lcd.setCursor(0,1);
    6e8a:	61 e0       	ldi	r22, 0x01	; 1
    6e8c:	80 e0       	ldi	r24, 0x00	; 0
    6e8e:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3590
    lcd.printf("dis= %5d   ",VL_Front);
    6e92:	83 e0       	ldi	r24, 0x03	; 3
    6e94:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    6e98:	9f 93       	push	r25
    6e9a:	8f 93       	push	r24
    6e9c:	3f 92       	push	r3
    6e9e:	2f 92       	push	r2
    6ea0:	5f 92       	push	r5
    6ea2:	4f 92       	push	r4
    6ea4:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3591
    go(spd,spd);
    6ea8:	80 91 99 09 	lds	r24, 0x0999	; 0x800999 <spd>
    6eac:	90 91 9a 09 	lds	r25, 0x099A	; 0x80099a <spd+0x1>
    6eb0:	bc 01       	movw	r22, r24
    6eb2:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3592
    victim();
    6eb6:	0e 94 3c 0b 	call	0x1678	; 0x1678 <victim()>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3593
    if(SFL||SFR || obs){contact();}
    6eba:	40 e0       	ldi	r20, 0x00	; 0
    6ebc:	62 e0       	ldi	r22, 0x02	; 2
    6ebe:	84 e0       	ldi	r24, 0x04	; 4
    6ec0:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    6ec4:	0f 90       	pop	r0
    6ec6:	0f 90       	pop	r0
    6ec8:	0f 90       	pop	r0
    6eca:	0f 90       	pop	r0
    6ecc:	0f 90       	pop	r0
    6ece:	0f 90       	pop	r0
    6ed0:	89 2b       	or	r24, r25
    6ed2:	09 f4       	brne	.+2      	; 0x6ed6 <main+0x1252>
    6ed4:	90 c0       	rjmp	.+288    	; 0x6ff6 <main+0x1372>
contact():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2981
        }

}
void contact(void){
    int near_wall_right,near_wall_left,i=0;
    int basket_up = EEPROM_read_int(basket_up_address);
    6ed6:	84 ea       	ldi	r24, 0xA4	; 164
    6ed8:	90 e0       	ldi	r25, 0x00	; 0
    6eda:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    6ede:	6c 01       	movw	r12, r24
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2982
    int basket_normal = EEPROM_read_int(basket_normal_address);
    6ee0:	86 ea       	ldi	r24, 0xA6	; 166
    6ee2:	90 e0       	ldi	r25, 0x00	; 0
    6ee4:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    6ee8:	7c 01       	movw	r14, r24
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2984
    int arm_normal = EEPROM_read_int(arm_normal_address);
    int arm_down = EEPROM_read_int(arm_down_address);
    6eea:	8a ea       	ldi	r24, 0xAA	; 170
    6eec:	90 e0       	ldi	r25, 0x00	; 0
    6eee:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    6ef2:	3c 01       	movw	r6, r24
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2987
    int arm_dropping = EEPROM_read_int(arm_dropping_address);
    int gripper_close = EEPROM_read_int(gripper_close_address);
    int gripper_open = EEPROM_read_int(gripper_open_address);
    6ef4:	80 eb       	ldi	r24, 0xB0	; 176
    6ef6:	90 e0       	ldi	r25, 0x00	; 0
    6ef8:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    6efc:	5c 01       	movw	r10, r24
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2988
    int T90 = EEPROM_read_int(T90_address);
    6efe:	88 e9       	ldi	r24, 0x98	; 152
    6f00:	90 e0       	ldi	r25, 0x00	; 0
    6f02:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    6f06:	99 87       	std	Y+9, r25	; 0x09
    6f08:	88 87       	std	Y+8, r24	; 0x08
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2989
    int ev_s_ball = EEPROM_read_int(DW_address);
    6f0a:	82 ea       	ldi	r24, 0xA2	; 162
    6f0c:	90 e0       	ldi	r25, 0x00	; 0
    6f0e:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <EEPROM_read_int(int)>
    6f12:	8c 01       	movw	r16, r24
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2990
    lcd.clear();
    6f14:	0e 94 c4 05 	call	0xb88	; 0xb88 <LiquidCrystal::clear() [clone .constprop.32]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2991
    lcd.print("contact");
    6f18:	82 ee       	ldi	r24, 0xE2	; 226
    6f1a:	98 e0       	ldi	r25, 0x08	; 8
    6f1c:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2992
    if(obs) //if obstacle is being seen
    6f20:	40 e0       	ldi	r20, 0x00	; 0
    6f22:	62 e0       	ldi	r22, 0x02	; 2
    6f24:	86 e0       	ldi	r24, 0x06	; 6
    6f26:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    6f2a:	89 2b       	or	r24, r25
    6f2c:	09 f0       	breq	.+2      	; 0x6f30 <main+0x12ac>
    6f2e:	81 c0       	rjmp	.+258    	; 0x7032 <main+0x13ae>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3122

            }
        }
        redroom_time=0;
    }
    else if(SFL||SFR) //if bumpers pressed
    6f30:	40 e0       	ldi	r20, 0x00	; 0
    6f32:	62 e0       	ldi	r22, 0x02	; 2
    6f34:	84 e0       	ldi	r24, 0x04	; 4
    6f36:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    6f3a:	89 2b       	or	r24, r25
    6f3c:	09 f4       	brne	.+2      	; 0x6f40 <main+0x12bc>
    6f3e:	ee c2       	rjmp	.+1500   	; 0x751c <main+0x1898>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3124
   {   
        if(SFL)first_touched=Left;
    6f40:	40 e0       	ldi	r20, 0x00	; 0
    6f42:	62 e0       	ldi	r22, 0x02	; 2
    6f44:	84 e0       	ldi	r24, 0x04	; 4
    6f46:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    6f4a:	89 2b       	or	r24, r25
    6f4c:	09 f0       	breq	.+2      	; 0x6f50 <main+0x12cc>
    6f4e:	ef c2       	rjmp	.+1502   	; 0x752e <main+0x18aa>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3125
        else if(SFR)first_touched=Right;
    6f50:	40 e0       	ldi	r20, 0x00	; 0
    6f52:	63 e0       	ldi	r22, 0x03	; 3
    6f54:	84 e0       	ldi	r24, 0x04	; 4
    6f56:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    6f5a:	89 2b       	or	r24, r25
    6f5c:	09 f4       	brne	.+2      	; 0x6f60 <main+0x12dc>
    6f5e:	ed c2       	rjmp	.+1498   	; 0x753a <main+0x18b6>
    6f60:	90 92 90 09 	sts	0x0990, r9	; 0x800990 <first_touched+0x1>
    6f64:	80 92 8f 09 	sts	0x098F, r8	; 0x80098f <first_touched>
    6f68:	e8 c2       	rjmp	.+1488   	; 0x753a <main+0x18b6>
handle_color():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2131
      if(touch_count==1){
        move(forward, T90 / 4, 150);
        move(Left, T90, 150);

      }
      else if(touch_count==2){
    6f6a:	82 30       	cpi	r24, 0x02	; 2
    6f6c:	91 05       	cpc	r25, r1
    6f6e:	c1 f4       	brne	.+48     	; 0x6fa0 <main+0x131c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2142
        move(forward, T90 / 2, 150);
      }
    }  else {
      lcd.clear();
      lcd.print("green left");
      move(forward, T90 / 8, 150);
    6f70:	6a 81       	ldd	r22, Y+2	; 0x02
    6f72:	7b 81       	ldd	r23, Y+3	; 0x03
    6f74:	77 ff       	sbrs	r23, 7
    6f76:	02 c0       	rjmp	.+4      	; 0x6f7c <main+0x12f8>
    6f78:	69 5f       	subi	r22, 0xF9	; 249
    6f7a:	7f 4f       	sbci	r23, 0xFF	; 255
    6f7c:	e3 e0       	ldi	r30, 0x03	; 3
    6f7e:	75 95       	asr	r23
    6f80:	67 95       	ror	r22
    6f82:	ea 95       	dec	r30
    6f84:	e1 f7       	brne	.-8      	; 0x6f7e <main+0x12fa>
    6f86:	46 e9       	ldi	r20, 0x96	; 150
    6f88:	50 e0       	ldi	r21, 0x00	; 0
    6f8a:	8a e0       	ldi	r24, 0x0A	; 10
    6f8c:	90 e0       	ldi	r25, 0x00	; 0
    6f8e:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2143
      move(Right, T90, 150);
    6f92:	46 e9       	ldi	r20, 0x96	; 150
    6f94:	50 e0       	ldi	r21, 0x00	; 0
    6f96:	6a 81       	ldd	r22, Y+2	; 0x02
    6f98:	7b 81       	ldd	r23, Y+3	; 0x03
    6f9a:	8c e0       	ldi	r24, 0x0C	; 12
    6f9c:	90 e0       	ldi	r25, 0x00	; 0
    6f9e:	f7 ce       	rjmp	.-530    	; 0x6d8e <main+0x110a>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2136
      else if(touch_count==2){
        move(forward, T90 / 8, 150);
        move(Right, T90, 150);
        
      }
      else if(touch_count==3){
    6fa0:	03 97       	sbiw	r24, 0x03	; 3
    6fa2:	09 f0       	breq	.+2      	; 0x6fa6 <main+0x1322>
    6fa4:	f6 ce       	rjmp	.-532    	; 0x6d92 <main+0x110e>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2137
        move(forward, T90 / 2, 150);
    6fa6:	ea 81       	ldd	r30, Y+2	; 0x02
    6fa8:	fb 81       	ldd	r31, Y+3	; 0x03
    6faa:	f7 ff       	sbrs	r31, 7
    6fac:	03 c0       	rjmp	.+6      	; 0x6fb4 <main+0x1330>
    6fae:	31 96       	adiw	r30, 0x01	; 1
    6fb0:	fb 83       	std	Y+3, r31	; 0x03
    6fb2:	ea 83       	std	Y+2, r30	; 0x02
    6fb4:	6a 81       	ldd	r22, Y+2	; 0x02
    6fb6:	7b 81       	ldd	r23, Y+3	; 0x03
    6fb8:	75 95       	asr	r23
    6fba:	67 95       	ror	r22
    6fbc:	c2 ce       	rjmp	.-636    	; 0x6d42 <main+0x10be>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2140
      }
    }  else {
      lcd.clear();
    6fbe:	0e 94 c4 05 	call	0xb88	; 0xb88 <LiquidCrystal::clear() [clone .constprop.32]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2141
      lcd.print("green left");
    6fc2:	87 ed       	ldi	r24, 0xD7	; 215
    6fc4:	98 e0       	ldi	r25, 0x08	; 8
    6fc6:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
    6fca:	d2 cf       	rjmp	.-92     	; 0x6f70 <main+0x12ec>
ev_zone():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3586
  move(forward,55,100);
  delay(200);
  //if(VL_Right<VL_Left && VL_Right!=20 && VL_Left!=20)redroom_dir=Left; 
  //else     
   redroom_dir=Right;
  if(VSR10<=0.3||VSL10<=0.3)move(forward,20,100);
    6fcc:	41 e0       	ldi	r20, 0x01	; 1
    6fce:	62 e0       	ldi	r22, 0x02	; 2
    6fd0:	82 e0       	ldi	r24, 0x02	; 2
    6fd2:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    6fd6:	bc 01       	movw	r22, r24
    6fd8:	99 0f       	add	r25, r25
    6fda:	88 0b       	sbc	r24, r24
    6fdc:	99 0b       	sbc	r25, r25
    6fde:	0e 94 ac 45 	call	0x8b58	; 0x8b58 <__floatsisf>
    6fe2:	2a e9       	ldi	r18, 0x9A	; 154
    6fe4:	39 e9       	ldi	r19, 0x99	; 153
    6fe6:	49 e9       	ldi	r20, 0x99	; 153
    6fe8:	5e e3       	ldi	r21, 0x3E	; 62
    6fea:	0e 94 fd 44 	call	0x89fa	; 0x89fa <__cmpsf2>
    6fee:	18 16       	cp	r1, r24
    6ff0:	0c f0       	brlt	.+2      	; 0x6ff4 <main+0x1370>
    6ff2:	38 cf       	rjmp	.-400    	; 0x6e64 <main+0x11e0>
    6ff4:	3f cf       	rjmp	.-386    	; 0x6e74 <main+0x11f0>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3593
    {
    lcd.setCursor(0,1);
    lcd.printf("dis= %5d   ",VL_Front);
    go(spd,spd);
    victim();
    if(SFL||SFR || obs){contact();}
    6ff6:	40 e0       	ldi	r20, 0x00	; 0
    6ff8:	63 e0       	ldi	r22, 0x03	; 3
    6ffa:	84 e0       	ldi	r24, 0x04	; 4
    6ffc:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    7000:	89 2b       	or	r24, r25
    7002:	09 f0       	breq	.+2      	; 0x7006 <main+0x1382>
    7004:	68 cf       	rjmp	.-304    	; 0x6ed6 <main+0x1252>
    7006:	40 e0       	ldi	r20, 0x00	; 0
    7008:	62 e0       	ldi	r22, 0x02	; 2
    700a:	86 e0       	ldi	r24, 0x06	; 6
    700c:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    7010:	89 2b       	or	r24, r25
    7012:	09 f0       	breq	.+2      	; 0x7016 <main+0x1392>
    7014:	60 cf       	rjmp	.-320    	; 0x6ed6 <main+0x1252>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3594
    silver();
    7016:	0e 94 f7 09 	call	0x13ee	; 0x13ee <silver()>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3595
    redroom_time++;
    701a:	80 91 97 09 	lds	r24, 0x0997	; 0x800997 <redroom_time>
    701e:	90 91 98 09 	lds	r25, 0x0998	; 0x800998 <redroom_time+0x1>
    7022:	01 96       	adiw	r24, 0x01	; 1
    7024:	90 93 98 09 	sts	0x0998, r25	; 0x800998 <redroom_time+0x1>
    7028:	80 93 97 09 	sts	0x0997, r24	; 0x800997 <redroom_time>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3596
    come_down();
    702c:	0e 94 71 0a 	call	0x14e2	; 0x14e2 <come_down()>
    7030:	2c cf       	rjmp	.-424    	; 0x6e8a <main+0x1206>
contact():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2994
    int ev_s_ball = EEPROM_read_int(DW_address);
    lcd.clear();
    lcd.print("contact");
    if(obs) //if obstacle is being seen
    {
        lcd.clear();
    7032:	0e 94 c4 05 	call	0xb88	; 0xb88 <LiquidCrystal::clear() [clone .constprop.32]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2995
        lcd.print("OBS");
    7036:	8a ee       	ldi	r24, 0xEA	; 234
    7038:	98 e0       	ldi	r25, 0x08	; 8
    703a:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2996
        victim();
    703e:	0e 94 3c 0b 	call	0x1678	; 0x1678 <victim()>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2997
        if(SFL==0 && SFR==0){
    7042:	40 e0       	ldi	r20, 0x00	; 0
    7044:	62 e0       	ldi	r22, 0x02	; 2
    7046:	84 e0       	ldi	r24, 0x04	; 4
    7048:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    704c:	89 2b       	or	r24, r25
    704e:	09 f0       	breq	.+2      	; 0x7052 <main+0x13ce>
    7050:	60 c2       	rjmp	.+1216   	; 0x7512 <main+0x188e>
    7052:	40 e0       	ldi	r20, 0x00	; 0
    7054:	63 e0       	ldi	r22, 0x03	; 3
    7056:	84 e0       	ldi	r24, 0x04	; 4
    7058:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    705c:	89 2b       	or	r24, r25
    705e:	09 f0       	breq	.+2      	; 0x7062 <main+0x13de>
    7060:	58 c2       	rjmp	.+1200   	; 0x7512 <main+0x188e>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2998
            move(Back,30);
    7062:	44 eb       	ldi	r20, 0xB4	; 180
    7064:	50 e0       	ldi	r21, 0x00	; 0
    7066:	6e e1       	ldi	r22, 0x1E	; 30
    7068:	70 e0       	ldi	r23, 0x00	; 0
    706a:	8d e0       	ldi	r24, 0x0D	; 13
    706c:	90 e0       	ldi	r25, 0x00	; 0
    706e:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2999
            correction(sides);
    7072:	83 e0       	ldi	r24, 0x03	; 3
    7074:	0e 94 69 0d 	call	0x1ad2	; 0x1ad2 <correction(char)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3000
            if(redroom_dir==Right)
    7078:	80 91 9b 09 	lds	r24, 0x099B	; 0x80099b <redroom_dir>
    707c:	90 91 9c 09 	lds	r25, 0x099C	; 0x80099c <redroom_dir+0x1>
    7080:	8c 30       	cpi	r24, 0x0C	; 12
    7082:	91 05       	cpc	r25, r1
    7084:	09 f0       	breq	.+2      	; 0x7088 <main+0x1404>
    7086:	18 c1       	rjmp	.+560    	; 0x72b8 <main+0x1634>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3003
            {
                
                move(Right,T90,spd);
    7088:	00 91 99 09 	lds	r16, 0x0999	; 0x800999 <spd>
    708c:	10 91 9a 09 	lds	r17, 0x099A	; 0x80099a <spd+0x1>
    7090:	a8 01       	movw	r20, r16
    7092:	68 85       	ldd	r22, Y+8	; 0x08
    7094:	79 85       	ldd	r23, Y+9	; 0x09
    7096:	8c e0       	ldi	r24, 0x0C	; 12
    7098:	90 e0       	ldi	r25, 0x00	; 0
    709a:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3004
                go(spd,spd);
    709e:	b8 01       	movw	r22, r16
    70a0:	c8 01       	movw	r24, r16
    70a2:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3005
                if(ev_ball>=2 && b_ball>=1)//(s_ball>=2|| b_ball>=2 || fifth==1)change
    70a6:	80 91 95 09 	lds	r24, 0x0995	; 0x800995 <ev_ball>
    70aa:	90 91 96 09 	lds	r25, 0x0996	; 0x800996 <ev_ball+0x1>
    70ae:	02 97       	sbiw	r24, 0x02	; 2
    70b0:	14 f4       	brge	.+4      	; 0x70b6 <main+0x1432>
    70b2:	0c 94 56 40 	jmp	0x80ac	; 0x80ac <main+0x2428>
    70b6:	80 91 93 09 	lds	r24, 0x0993	; 0x800993 <b_ball>
    70ba:	90 91 94 09 	lds	r25, 0x0994	; 0x800994 <b_ball+0x1>
    70be:	18 16       	cp	r1, r24
    70c0:	19 06       	cpc	r1, r25
    70c2:	14 f0       	brlt	.+4      	; 0x70c8 <main+0x1444>
    70c4:	0c 94 56 40 	jmp	0x80ac	; 0x80ac <main+0x2428>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3007
                {
                    if(VL_Left<135 && VL_Left!=20)
    70c8:	82 e0       	ldi	r24, 0x02	; 2
    70ca:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    70ce:	87 38       	cpi	r24, 0x87	; 135
    70d0:	91 05       	cpc	r25, r1
    70d2:	08 f4       	brcc	.+2      	; 0x70d6 <main+0x1452>
    70d4:	4f c0       	rjmp	.+158    	; 0x7174 <main+0x14f0>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3031
                            move(Back,20);move(Left,T90*2);
                            }
                    }
                    else
                    {
                        go(150,150);
    70d6:	66 e9       	ldi	r22, 0x96	; 150
    70d8:	70 e0       	ldi	r23, 0x00	; 0
    70da:	86 e9       	ldi	r24, 0x96	; 150
    70dc:	90 e0       	ldi	r25, 0x00	; 0
    70de:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3032
                        cnt=0;
    70e2:	1d bc       	out	0x2d, r1	; 45
    70e4:	1c bc       	out	0x2c, r1	; 44
    70e6:	09 ec       	ldi	r16, 0xC9	; 201
    70e8:	10 e0       	ldi	r17, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3034
                        i=0;
                        while(cnt/100<=40 && i<200)
    70ea:	8c b5       	in	r24, 0x2c	; 44
    70ec:	9d b5       	in	r25, 0x2d	; 45
    70ee:	84 30       	cpi	r24, 0x04	; 4
    70f0:	90 41       	sbci	r25, 0x10	; 16
    70f2:	58 f5       	brcc	.+86     	; 0x714a <main+0x14c6>
    70f4:	01 50       	subi	r16, 0x01	; 1
    70f6:	11 09       	sbc	r17, r1
    70f8:	41 f1       	breq	.+80     	; 0x714a <main+0x14c6>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3037
                        {
                            i++;
                            delay(3);
    70fa:	63 e0       	ldi	r22, 0x03	; 3
    70fc:	70 e0       	ldi	r23, 0x00	; 0
    70fe:	80 e0       	ldi	r24, 0x00	; 0
    7100:	90 e0       	ldi	r25, 0x00	; 0
    7102:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3038
                            victim();
    7106:	0e 94 3c 0b 	call	0x1678	; 0x1678 <victim()>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3039
                            if(VSR10<=silver_voltage_R||VSL10<=silver_voltage_L||SM){move(Back,75);break;}
    710a:	41 e0       	ldi	r20, 0x01	; 1
    710c:	63 e0       	ldi	r22, 0x03	; 3
    710e:	82 e0       	ldi	r24, 0x02	; 2
    7110:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    7114:	04 97       	sbiw	r24, 0x04	; 4
    7116:	0c f4       	brge	.+2      	; 0x711a <main+0x1496>
    7118:	a3 c0       	rjmp	.+326    	; 0x7260 <main+0x15dc>
    711a:	41 e0       	ldi	r20, 0x01	; 1
    711c:	62 e0       	ldi	r22, 0x02	; 2
    711e:	82 e0       	ldi	r24, 0x02	; 2
    7120:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    7124:	04 97       	sbiw	r24, 0x04	; 4
    7126:	0c f4       	brge	.+2      	; 0x712a <main+0x14a6>
    7128:	9b c0       	rjmp	.+310    	; 0x7260 <main+0x15dc>
    712a:	40 e0       	ldi	r20, 0x00	; 0
    712c:	60 e0       	ldi	r22, 0x00	; 0
    712e:	80 e0       	ldi	r24, 0x00	; 0
    7130:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    7134:	89 2b       	or	r24, r25
    7136:	09 f0       	breq	.+2      	; 0x713a <main+0x14b6>
    7138:	93 c0       	rjmp	.+294    	; 0x7260 <main+0x15dc>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3040
                            if(SFL||SFR)break;
    713a:	40 e0       	ldi	r20, 0x00	; 0
    713c:	62 e0       	ldi	r22, 0x02	; 2
    713e:	84 e0       	ldi	r24, 0x04	; 4
    7140:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    7144:	89 2b       	or	r24, r25
    7146:	09 f4       	brne	.+2      	; 0x714a <main+0x14c6>
    7148:	94 c0       	rjmp	.+296    	; 0x7272 <main+0x15ee>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3042
                        }
                        if(SFL==1||SFR==1)
    714a:	40 e0       	ldi	r20, 0x00	; 0
    714c:	62 e0       	ldi	r22, 0x02	; 2
    714e:	84 e0       	ldi	r24, 0x04	; 4
    7150:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    7154:	01 97       	sbiw	r24, 0x01	; 1
    7156:	09 f4       	brne	.+2      	; 0x715a <main+0x14d6>
    7158:	95 c0       	rjmp	.+298    	; 0x7284 <main+0x1600>
    715a:	40 e0       	ldi	r20, 0x00	; 0
    715c:	63 e0       	ldi	r22, 0x03	; 3
    715e:	84 e0       	ldi	r24, 0x04	; 4
    7160:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    7164:	01 97       	sbiw	r24, 0x01	; 1
    7166:	09 f4       	brne	.+2      	; 0x716a <main+0x14e6>
    7168:	8d c0       	rjmp	.+282    	; 0x7284 <main+0x1600>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3442
                                go(spd,spd);check_while();
                                move(Left,T90*0.85);
                            }
                            else
                            {
                                move(Back,25);move(Left,T90*2);
    716a:	44 eb       	ldi	r20, 0xB4	; 180
    716c:	50 e0       	ldi	r21, 0x00	; 0
    716e:	69 e1       	ldi	r22, 0x19	; 25
    7170:	70 e0       	ldi	r23, 0x00	; 0
    7172:	50 c0       	rjmp	.+160    	; 0x7214 <main+0x1590>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3007
                
                move(Right,T90,spd);
                go(spd,spd);
                if(ev_ball>=2 && b_ball>=1)//(s_ball>=2|| b_ball>=2 || fifth==1)change
                {
                    if(VL_Left<135 && VL_Left!=20)
    7174:	82 e0       	ldi	r24, 0x02	; 2
    7176:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    717a:	44 97       	sbiw	r24, 0x14	; 20
    717c:	09 f4       	brne	.+2      	; 0x7180 <main+0x14fc>
    717e:	ab cf       	rjmp	.-170    	; 0x70d6 <main+0x1452>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3009
                    {
                        go(100,100); 
    7180:	64 e6       	ldi	r22, 0x64	; 100
    7182:	70 e0       	ldi	r23, 0x00	; 0
    7184:	84 e6       	ldi	r24, 0x64	; 100
    7186:	90 e0       	ldi	r25, 0x00	; 0
    7188:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
    718c:	09 ec       	ldi	r16, 0xC9	; 201
    718e:	10 e0       	ldi	r17, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3011
                        i=0;
                        while(VL_Left<135 && i<200)
    7190:	82 e0       	ldi	r24, 0x02	; 2
    7192:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    7196:	87 38       	cpi	r24, 0x87	; 135
    7198:	91 05       	cpc	r25, r1
    719a:	50 f5       	brcc	.+84     	; 0x71f0 <main+0x156c>
    719c:	01 50       	subi	r16, 0x01	; 1
    719e:	11 09       	sbc	r17, r1
    71a0:	39 f1       	breq	.+78     	; 0x71f0 <main+0x156c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3014
                        {
                            i++;
                            delay(3);
    71a2:	63 e0       	ldi	r22, 0x03	; 3
    71a4:	70 e0       	ldi	r23, 0x00	; 0
    71a6:	80 e0       	ldi	r24, 0x00	; 0
    71a8:	90 e0       	ldi	r25, 0x00	; 0
    71aa:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3015
                            victim();
    71ae:	0e 94 3c 0b 	call	0x1678	; 0x1678 <victim()>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3016
                            if(VSR10<=silver_voltage_R||VSL10<=silver_voltage_L||SM){move(Back,75);break;}
    71b2:	41 e0       	ldi	r20, 0x01	; 1
    71b4:	63 e0       	ldi	r22, 0x03	; 3
    71b6:	82 e0       	ldi	r24, 0x02	; 2
    71b8:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    71bc:	04 97       	sbiw	r24, 0x04	; 4
    71be:	0c f4       	brge	.+2      	; 0x71c2 <main+0x153e>
    71c0:	5a c7       	rjmp	.+3764   	; 0x8076 <main+0x23f2>
    71c2:	41 e0       	ldi	r20, 0x01	; 1
    71c4:	62 e0       	ldi	r22, 0x02	; 2
    71c6:	82 e0       	ldi	r24, 0x02	; 2
    71c8:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    71cc:	04 97       	sbiw	r24, 0x04	; 4
    71ce:	0c f4       	brge	.+2      	; 0x71d2 <main+0x154e>
    71d0:	52 c7       	rjmp	.+3748   	; 0x8076 <main+0x23f2>
    71d2:	40 e0       	ldi	r20, 0x00	; 0
    71d4:	60 e0       	ldi	r22, 0x00	; 0
    71d6:	80 e0       	ldi	r24, 0x00	; 0
    71d8:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    71dc:	89 2b       	or	r24, r25
    71de:	09 f0       	breq	.+2      	; 0x71e2 <main+0x155e>
    71e0:	4a c7       	rjmp	.+3732   	; 0x8076 <main+0x23f2>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3017
                            if(SFL||SFR)break;
    71e2:	40 e0       	ldi	r20, 0x00	; 0
    71e4:	62 e0       	ldi	r22, 0x02	; 2
    71e6:	84 e0       	ldi	r24, 0x04	; 4
    71e8:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    71ec:	89 2b       	or	r24, r25
    71ee:	e9 f0       	breq	.+58     	; 0x722a <main+0x15a6>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3412
                                delay(3);
                                victim();
                                if(VSR10<=silver_voltage_R||VSL10<=silver_voltage_L||SM){move(Back,75);break;}
                                if(SFL||SFR)break;
                            }
                            if(SFL==1||SFR==1)
    71f0:	40 e0       	ldi	r20, 0x00	; 0
    71f2:	62 e0       	ldi	r22, 0x02	; 2
    71f4:	84 e0       	ldi	r24, 0x04	; 4
    71f6:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    71fa:	01 97       	sbiw	r24, 0x01	; 1
    71fc:	f9 f0       	breq	.+62     	; 0x723c <main+0x15b8>
    71fe:	40 e0       	ldi	r20, 0x00	; 0
    7200:	63 e0       	ldi	r22, 0x03	; 3
    7202:	84 e0       	ldi	r24, 0x04	; 4
    7204:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    7208:	01 97       	sbiw	r24, 0x01	; 1
    720a:	c1 f0       	breq	.+48     	; 0x723c <main+0x15b8>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3419
                                go(spd,spd);check_while();
                                move(Left,T90);
                            }
                            else
                                {
                                move(Back,20);move(Left,T90*2);
    720c:	44 eb       	ldi	r20, 0xB4	; 180
    720e:	50 e0       	ldi	r21, 0x00	; 0
    7210:	64 e1       	ldi	r22, 0x14	; 20
    7212:	70 e0       	ldi	r23, 0x00	; 0
    7214:	8d e0       	ldi	r24, 0x0D	; 13
    7216:	90 e0       	ldi	r25, 0x00	; 0
    7218:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
    721c:	68 85       	ldd	r22, Y+8	; 0x08
    721e:	79 85       	ldd	r23, Y+9	; 0x09
    7220:	66 0f       	add	r22, r22
    7222:	77 1f       	adc	r23, r23
    7224:	44 eb       	ldi	r20, 0xB4	; 180
    7226:	50 e0       	ldi	r21, 0x00	; 0
    7228:	16 c0       	rjmp	.+44     	; 0x7256 <main+0x15d2>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3017
                        {
                            i++;
                            delay(3);
                            victim();
                            if(VSR10<=silver_voltage_R||VSL10<=silver_voltage_L||SM){move(Back,75);break;}
                            if(SFL||SFR)break;
    722a:	40 e0       	ldi	r20, 0x00	; 0
    722c:	63 e0       	ldi	r22, 0x03	; 3
    722e:	84 e0       	ldi	r24, 0x04	; 4
    7230:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    7234:	89 2b       	or	r24, r25
    7236:	09 f4       	brne	.+2      	; 0x723a <main+0x15b6>
    7238:	ab cf       	rjmp	.-170    	; 0x7190 <main+0x150c>
    723a:	da cf       	rjmp	.-76     	; 0x71f0 <main+0x156c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3021
                        }
                        if(SFL==1||SFR==1)
                        {
                            go(spd,spd);check_while();
    723c:	80 91 99 09 	lds	r24, 0x0999	; 0x800999 <spd>
    7240:	90 91 9a 09 	lds	r25, 0x099A	; 0x80099a <spd+0x1>
    7244:	bc 01       	movw	r22, r24
    7246:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
    724a:	0e 94 2b 1f 	call	0x3e56	; 0x3e56 <check_while()>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3022
                            move(Left,T90);
    724e:	44 eb       	ldi	r20, 0xB4	; 180
    7250:	50 e0       	ldi	r21, 0x00	; 0
    7252:	68 85       	ldd	r22, Y+8	; 0x08
    7254:	79 85       	ldd	r23, Y+9	; 0x09
    7256:	8b e0       	ldi	r24, 0x0B	; 11
    7258:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3497
                                if(SFL||SFR)break;
                            }
                            if(SFL==1||SFR==1)
                            {
                                go(spd,spd);check_while();
                                move(Right,T90*0.85);
    725a:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
    725e:	59 c1       	rjmp	.+690    	; 0x7512 <main+0x188e>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3039
                        while(cnt/100<=40 && i<200)
                        {
                            i++;
                            delay(3);
                            victim();
                            if(VSR10<=silver_voltage_R||VSL10<=silver_voltage_L||SM){move(Back,75);break;}
    7260:	44 eb       	ldi	r20, 0xB4	; 180
    7262:	50 e0       	ldi	r21, 0x00	; 0
    7264:	6b e4       	ldi	r22, 0x4B	; 75
    7266:	70 e0       	ldi	r23, 0x00	; 0
    7268:	8d e0       	ldi	r24, 0x0D	; 13
    726a:	90 e0       	ldi	r25, 0x00	; 0
    726c:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
    7270:	6c cf       	rjmp	.-296    	; 0x714a <main+0x14c6>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3040
                            if(SFL||SFR)break;
    7272:	40 e0       	ldi	r20, 0x00	; 0
    7274:	63 e0       	ldi	r22, 0x03	; 3
    7276:	84 e0       	ldi	r24, 0x04	; 4
    7278:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    727c:	89 2b       	or	r24, r25
    727e:	09 f4       	brne	.+2      	; 0x7282 <main+0x15fe>
    7280:	34 cf       	rjmp	.-408    	; 0x70ea <main+0x1466>
    7282:	63 cf       	rjmp	.-314    	; 0x714a <main+0x14c6>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3044
                        }
                        if(SFL==1||SFR==1)
                        {
                            go(spd,spd);check_while();
    7284:	80 91 99 09 	lds	r24, 0x0999	; 0x800999 <spd>
    7288:	90 91 9a 09 	lds	r25, 0x099A	; 0x80099a <spd+0x1>
    728c:	bc 01       	movw	r22, r24
    728e:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
    7292:	0e 94 2b 1f 	call	0x3e56	; 0x3e56 <check_while()>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3045
                            move(Left,T90*0.85);
    7296:	28 85       	ldd	r18, Y+8	; 0x08
    7298:	39 85       	ldd	r19, Y+9	; 0x09
    729a:	b9 01       	movw	r22, r18
    729c:	33 0f       	add	r19, r19
    729e:	88 0b       	sbc	r24, r24
    72a0:	99 0b       	sbc	r25, r25
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3438
                                if(SFL||SFR)break;
                            }
                            if(SFL==1||SFR==1)
                            {
                                go(spd,spd);check_while();
                                move(Left,T90*0.85);
    72a2:	0e 94 ac 45 	call	0x8b58	; 0x8b58 <__floatsisf>
    72a6:	2a e9       	ldi	r18, 0x9A	; 154
    72a8:	39 e9       	ldi	r19, 0x99	; 153
    72aa:	49 e5       	ldi	r20, 0x59	; 89
    72ac:	5f e3       	ldi	r21, 0x3F	; 63
    72ae:	0e 94 5c 46 	call	0x8cb8	; 0x8cb8 <__mulsf3>
    72b2:	0e 94 74 45 	call	0x8ae8	; 0x8ae8 <__fixsfsi>
    72b6:	b6 cf       	rjmp	.-148    	; 0x7224 <main+0x15a0>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3060
                    check_while();
                    if(check_while_finished==0){move(Right,T90,spd);redroom_dir=Left;}
                }

            }
            else if(redroom_dir==Left)
    72b8:	0b 97       	sbiw	r24, 0x0b	; 11
    72ba:	09 f0       	breq	.+2      	; 0x72be <main+0x163a>
    72bc:	2a c1       	rjmp	.+596    	; 0x7512 <main+0x188e>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3062
            {
                move(Left,T90,spd);
    72be:	00 91 99 09 	lds	r16, 0x0999	; 0x800999 <spd>
    72c2:	10 91 9a 09 	lds	r17, 0x099A	; 0x80099a <spd+0x1>
    72c6:	a8 01       	movw	r20, r16
    72c8:	68 85       	ldd	r22, Y+8	; 0x08
    72ca:	79 85       	ldd	r23, Y+9	; 0x09
    72cc:	8b e0       	ldi	r24, 0x0B	; 11
    72ce:	90 e0       	ldi	r25, 0x00	; 0
    72d0:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3063
                go(spd,spd);
    72d4:	b8 01       	movw	r22, r16
    72d6:	c8 01       	movw	r24, r16
    72d8:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3064
                if(ev_ball>=2 && b_ball>=1)//(s_ball>=2|| b_ball>=2 || fifth==1)change
    72dc:	80 91 95 09 	lds	r24, 0x0995	; 0x800995 <ev_ball>
    72e0:	90 91 96 09 	lds	r25, 0x0996	; 0x800996 <ev_ball+0x1>
    72e4:	02 97       	sbiw	r24, 0x02	; 2
    72e6:	0c f4       	brge	.+2      	; 0x72ea <main+0x1666>
    72e8:	fe c0       	rjmp	.+508    	; 0x74e6 <main+0x1862>
    72ea:	80 91 93 09 	lds	r24, 0x0993	; 0x800993 <b_ball>
    72ee:	90 91 94 09 	lds	r25, 0x0994	; 0x800994 <b_ball+0x1>
    72f2:	18 16       	cp	r1, r24
    72f4:	19 06       	cpc	r1, r25
    72f6:	0c f0       	brlt	.+2      	; 0x72fa <main+0x1676>
    72f8:	f6 c0       	rjmp	.+492    	; 0x74e6 <main+0x1862>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3066
                {
                    if(VL_Right<135 && VL_Right!=20)
    72fa:	81 e0       	ldi	r24, 0x01	; 1
    72fc:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    7300:	87 38       	cpi	r24, 0x87	; 135
    7302:	91 05       	cpc	r25, r1
    7304:	08 f4       	brcc	.+2      	; 0x7308 <main+0x1684>
    7306:	59 c0       	rjmp	.+178    	; 0x73ba <main+0x1736>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3090
                            move(Back,20);move(Right,T90*2);
                            }
                    }
                    else
                    {
                        go(150,150);
    7308:	66 e9       	ldi	r22, 0x96	; 150
    730a:	70 e0       	ldi	r23, 0x00	; 0
    730c:	86 e9       	ldi	r24, 0x96	; 150
    730e:	90 e0       	ldi	r25, 0x00	; 0
    7310:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3091
                        cnt=0;
    7314:	1d bc       	out	0x2d, r1	; 45
    7316:	1c bc       	out	0x2c, r1	; 44
    7318:	09 ec       	ldi	r16, 0xC9	; 201
    731a:	10 e0       	ldi	r17, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3093
                        i=0;
                        while(cnt/100<=40 && i<200)
    731c:	8c b5       	in	r24, 0x2c	; 44
    731e:	9d b5       	in	r25, 0x2d	; 45
    7320:	84 30       	cpi	r24, 0x04	; 4
    7322:	90 41       	sbci	r25, 0x10	; 16
    7324:	58 f5       	brcc	.+86     	; 0x737c <main+0x16f8>
    7326:	01 50       	subi	r16, 0x01	; 1
    7328:	11 09       	sbc	r17, r1
    732a:	41 f1       	breq	.+80     	; 0x737c <main+0x16f8>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3096
                        {
                            i++;
                            delay(3);
    732c:	63 e0       	ldi	r22, 0x03	; 3
    732e:	70 e0       	ldi	r23, 0x00	; 0
    7330:	80 e0       	ldi	r24, 0x00	; 0
    7332:	90 e0       	ldi	r25, 0x00	; 0
    7334:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3097
                            victim();
    7338:	0e 94 3c 0b 	call	0x1678	; 0x1678 <victim()>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3098
                            if(VSR10<=silver_voltage_R||VSL10<=silver_voltage_L||SM){move(Back,75);break;}
    733c:	41 e0       	ldi	r20, 0x01	; 1
    733e:	63 e0       	ldi	r22, 0x03	; 3
    7340:	82 e0       	ldi	r24, 0x02	; 2
    7342:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    7346:	04 97       	sbiw	r24, 0x04	; 4
    7348:	0c f4       	brge	.+2      	; 0x734c <main+0x16c8>
    734a:	a1 c0       	rjmp	.+322    	; 0x748e <main+0x180a>
    734c:	41 e0       	ldi	r20, 0x01	; 1
    734e:	62 e0       	ldi	r22, 0x02	; 2
    7350:	82 e0       	ldi	r24, 0x02	; 2
    7352:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    7356:	04 97       	sbiw	r24, 0x04	; 4
    7358:	0c f4       	brge	.+2      	; 0x735c <main+0x16d8>
    735a:	99 c0       	rjmp	.+306    	; 0x748e <main+0x180a>
    735c:	40 e0       	ldi	r20, 0x00	; 0
    735e:	60 e0       	ldi	r22, 0x00	; 0
    7360:	80 e0       	ldi	r24, 0x00	; 0
    7362:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    7366:	89 2b       	or	r24, r25
    7368:	09 f0       	breq	.+2      	; 0x736c <main+0x16e8>
    736a:	91 c0       	rjmp	.+290    	; 0x748e <main+0x180a>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3099
                            if(SFL||SFR)break;
    736c:	40 e0       	ldi	r20, 0x00	; 0
    736e:	62 e0       	ldi	r22, 0x02	; 2
    7370:	84 e0       	ldi	r24, 0x04	; 4
    7372:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    7376:	89 2b       	or	r24, r25
    7378:	09 f4       	brne	.+2      	; 0x737c <main+0x16f8>
    737a:	92 c0       	rjmp	.+292    	; 0x74a0 <main+0x181c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3101
                        }
                        if(SFL==1||SFR==1)
    737c:	40 e0       	ldi	r20, 0x00	; 0
    737e:	62 e0       	ldi	r22, 0x02	; 2
    7380:	84 e0       	ldi	r24, 0x04	; 4
    7382:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    7386:	01 97       	sbiw	r24, 0x01	; 1
    7388:	09 f4       	brne	.+2      	; 0x738c <main+0x1708>
    738a:	93 c0       	rjmp	.+294    	; 0x74b2 <main+0x182e>
    738c:	40 e0       	ldi	r20, 0x00	; 0
    738e:	63 e0       	ldi	r22, 0x03	; 3
    7390:	84 e0       	ldi	r24, 0x04	; 4
    7392:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    7396:	01 97       	sbiw	r24, 0x01	; 1
    7398:	09 f4       	brne	.+2      	; 0x739c <main+0x1718>
    739a:	8b c0       	rjmp	.+278    	; 0x74b2 <main+0x182e>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3501
                                go(spd,spd);check_while();
                                move(Right,T90*0.85);
                            }
                            else
                            {
                                move(Back,25);move(Right,T90*2);
    739c:	44 eb       	ldi	r20, 0xB4	; 180
    739e:	50 e0       	ldi	r21, 0x00	; 0
    73a0:	69 e1       	ldi	r22, 0x19	; 25
    73a2:	70 e0       	ldi	r23, 0x00	; 0
    73a4:	8d e0       	ldi	r24, 0x0D	; 13
    73a6:	90 e0       	ldi	r25, 0x00	; 0
    73a8:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
    73ac:	68 85       	ldd	r22, Y+8	; 0x08
    73ae:	79 85       	ldd	r23, Y+9	; 0x09
    73b0:	66 0f       	add	r22, r22
    73b2:	77 1f       	adc	r23, r23
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3497
                                if(SFL||SFR)break;
                            }
                            if(SFL==1||SFR==1)
                            {
                                go(spd,spd);check_while();
                                move(Right,T90*0.85);
    73b4:	44 eb       	ldi	r20, 0xB4	; 180
    73b6:	50 e0       	ldi	r21, 0x00	; 0
    73b8:	5e c0       	rjmp	.+188    	; 0x7476 <main+0x17f2>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3066
            {
                move(Left,T90,spd);
                go(spd,spd);
                if(ev_ball>=2 && b_ball>=1)//(s_ball>=2|| b_ball>=2 || fifth==1)change
                {
                    if(VL_Right<135 && VL_Right!=20)
    73ba:	81 e0       	ldi	r24, 0x01	; 1
    73bc:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    73c0:	44 97       	sbiw	r24, 0x14	; 20
    73c2:	09 f4       	brne	.+2      	; 0x73c6 <main+0x1742>
    73c4:	a1 cf       	rjmp	.-190    	; 0x7308 <main+0x1684>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3068
                    {
                        go(100,100); 
    73c6:	64 e6       	ldi	r22, 0x64	; 100
    73c8:	70 e0       	ldi	r23, 0x00	; 0
    73ca:	84 e6       	ldi	r24, 0x64	; 100
    73cc:	90 e0       	ldi	r25, 0x00	; 0
    73ce:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
    73d2:	09 ec       	ldi	r16, 0xC9	; 201
    73d4:	10 e0       	ldi	r17, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3070
                        i=0;
                        while(VL_Right<135 && i<200)
    73d6:	81 e0       	ldi	r24, 0x01	; 1
    73d8:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    73dc:	87 38       	cpi	r24, 0x87	; 135
    73de:	91 05       	cpc	r25, r1
    73e0:	50 f5       	brcc	.+84     	; 0x7436 <main+0x17b2>
    73e2:	01 50       	subi	r16, 0x01	; 1
    73e4:	11 09       	sbc	r17, r1
    73e6:	39 f1       	breq	.+78     	; 0x7436 <main+0x17b2>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3073
                        {
                            i++;
                            delay(3);
    73e8:	63 e0       	ldi	r22, 0x03	; 3
    73ea:	70 e0       	ldi	r23, 0x00	; 0
    73ec:	80 e0       	ldi	r24, 0x00	; 0
    73ee:	90 e0       	ldi	r25, 0x00	; 0
    73f0:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3074
                            victim();
    73f4:	0e 94 3c 0b 	call	0x1678	; 0x1678 <victim()>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3075
                            if(VSR10<=silver_voltage_R||VSL10<=silver_voltage_L||SM){move(Back,75);break;}
    73f8:	41 e0       	ldi	r20, 0x01	; 1
    73fa:	63 e0       	ldi	r22, 0x03	; 3
    73fc:	82 e0       	ldi	r24, 0x02	; 2
    73fe:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    7402:	04 97       	sbiw	r24, 0x04	; 4
    7404:	0c f4       	brge	.+2      	; 0x7408 <main+0x1784>
    7406:	33 c7       	rjmp	.+3686   	; 0x826e <main+0x25ea>
    7408:	41 e0       	ldi	r20, 0x01	; 1
    740a:	62 e0       	ldi	r22, 0x02	; 2
    740c:	82 e0       	ldi	r24, 0x02	; 2
    740e:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    7412:	04 97       	sbiw	r24, 0x04	; 4
    7414:	0c f4       	brge	.+2      	; 0x7418 <main+0x1794>
    7416:	2b c7       	rjmp	.+3670   	; 0x826e <main+0x25ea>
    7418:	40 e0       	ldi	r20, 0x00	; 0
    741a:	60 e0       	ldi	r22, 0x00	; 0
    741c:	80 e0       	ldi	r24, 0x00	; 0
    741e:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    7422:	89 2b       	or	r24, r25
    7424:	09 f0       	breq	.+2      	; 0x7428 <main+0x17a4>
    7426:	23 c7       	rjmp	.+3654   	; 0x826e <main+0x25ea>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3076
                            if(SFL||SFR)break;
    7428:	40 e0       	ldi	r20, 0x00	; 0
    742a:	62 e0       	ldi	r22, 0x02	; 2
    742c:	84 e0       	ldi	r24, 0x04	; 4
    742e:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    7432:	89 2b       	or	r24, r25
    7434:	19 f1       	breq	.+70     	; 0x747c <main+0x17f8>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3471
                                delay(3);
                                victim();
                                if(VSR10<=silver_voltage_R||VSL10<=silver_voltage_L||SM){move(Back,75);break;}
                                if(SFL||SFR)break;
                            }
                            if(SFL==1||SFR==1)
    7436:	40 e0       	ldi	r20, 0x00	; 0
    7438:	62 e0       	ldi	r22, 0x02	; 2
    743a:	84 e0       	ldi	r24, 0x04	; 4
    743c:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    7440:	01 97       	sbiw	r24, 0x01	; 1
    7442:	61 f0       	breq	.+24     	; 0x745c <main+0x17d8>
    7444:	40 e0       	ldi	r20, 0x00	; 0
    7446:	63 e0       	ldi	r22, 0x03	; 3
    7448:	84 e0       	ldi	r24, 0x04	; 4
    744a:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3478
                                go(spd,spd);check_while();
                                move(Right,T90);
                            }
                            else
                                {
                                move(Back,20);move(Right,T90*2);
    744e:	44 eb       	ldi	r20, 0xB4	; 180
    7450:	50 e0       	ldi	r21, 0x00	; 0
    7452:	64 e1       	ldi	r22, 0x14	; 20
    7454:	70 e0       	ldi	r23, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3471
                                delay(3);
                                victim();
                                if(VSR10<=silver_voltage_R||VSL10<=silver_voltage_L||SM){move(Back,75);break;}
                                if(SFL||SFR)break;
                            }
                            if(SFL==1||SFR==1)
    7456:	01 97       	sbiw	r24, 0x01	; 1
    7458:	09 f0       	breq	.+2      	; 0x745c <main+0x17d8>
    745a:	a4 cf       	rjmp	.-184    	; 0x73a4 <main+0x1720>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3473
                            {
                                go(spd,spd);check_while();
    745c:	80 91 99 09 	lds	r24, 0x0999	; 0x800999 <spd>
    7460:	90 91 9a 09 	lds	r25, 0x099A	; 0x80099a <spd+0x1>
    7464:	bc 01       	movw	r22, r24
    7466:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
    746a:	0e 94 2b 1f 	call	0x3e56	; 0x3e56 <check_while()>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3474
                                move(Right,T90);
    746e:	44 eb       	ldi	r20, 0xB4	; 180
    7470:	50 e0       	ldi	r21, 0x00	; 0
    7472:	68 85       	ldd	r22, Y+8	; 0x08
    7474:	79 85       	ldd	r23, Y+9	; 0x09
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3497
                                if(SFL||SFR)break;
                            }
                            if(SFL==1||SFR==1)
                            {
                                go(spd,spd);check_while();
                                move(Right,T90*0.85);
    7476:	8c e0       	ldi	r24, 0x0C	; 12
    7478:	90 e0       	ldi	r25, 0x00	; 0
    747a:	ef ce       	rjmp	.-546    	; 0x725a <main+0x15d6>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3076
                        {
                            i++;
                            delay(3);
                            victim();
                            if(VSR10<=silver_voltage_R||VSL10<=silver_voltage_L||SM){move(Back,75);break;}
                            if(SFL||SFR)break;
    747c:	40 e0       	ldi	r20, 0x00	; 0
    747e:	63 e0       	ldi	r22, 0x03	; 3
    7480:	84 e0       	ldi	r24, 0x04	; 4
    7482:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    7486:	89 2b       	or	r24, r25
    7488:	09 f4       	brne	.+2      	; 0x748c <main+0x1808>
    748a:	a5 cf       	rjmp	.-182    	; 0x73d6 <main+0x1752>
    748c:	d4 cf       	rjmp	.-88     	; 0x7436 <main+0x17b2>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3098
                        while(cnt/100<=40 && i<200)
                        {
                            i++;
                            delay(3);
                            victim();
                            if(VSR10<=silver_voltage_R||VSL10<=silver_voltage_L||SM){move(Back,75);break;}
    748e:	44 eb       	ldi	r20, 0xB4	; 180
    7490:	50 e0       	ldi	r21, 0x00	; 0
    7492:	6b e4       	ldi	r22, 0x4B	; 75
    7494:	70 e0       	ldi	r23, 0x00	; 0
    7496:	8d e0       	ldi	r24, 0x0D	; 13
    7498:	90 e0       	ldi	r25, 0x00	; 0
    749a:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
    749e:	6e cf       	rjmp	.-292    	; 0x737c <main+0x16f8>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3099
                            if(SFL||SFR)break;
    74a0:	40 e0       	ldi	r20, 0x00	; 0
    74a2:	63 e0       	ldi	r22, 0x03	; 3
    74a4:	84 e0       	ldi	r24, 0x04	; 4
    74a6:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    74aa:	89 2b       	or	r24, r25
    74ac:	09 f4       	brne	.+2      	; 0x74b0 <main+0x182c>
    74ae:	36 cf       	rjmp	.-404    	; 0x731c <main+0x1698>
    74b0:	65 cf       	rjmp	.-310    	; 0x737c <main+0x16f8>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3103
                        }
                        if(SFL==1||SFR==1)
                        {
                            go(spd,spd);check_while();
    74b2:	80 91 99 09 	lds	r24, 0x0999	; 0x800999 <spd>
    74b6:	90 91 9a 09 	lds	r25, 0x099A	; 0x80099a <spd+0x1>
    74ba:	bc 01       	movw	r22, r24
    74bc:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
    74c0:	0e 94 2b 1f 	call	0x3e56	; 0x3e56 <check_while()>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3104
                            move(Right,T90*0.85);
    74c4:	48 85       	ldd	r20, Y+8	; 0x08
    74c6:	59 85       	ldd	r21, Y+9	; 0x09
    74c8:	ba 01       	movw	r22, r20
    74ca:	55 0f       	add	r21, r21
    74cc:	88 0b       	sbc	r24, r24
    74ce:	99 0b       	sbc	r25, r25
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3497
                                if(SFL||SFR)break;
                            }
                            if(SFL==1||SFR==1)
                            {
                                go(spd,spd);check_while();
                                move(Right,T90*0.85);
    74d0:	0e 94 ac 45 	call	0x8b58	; 0x8b58 <__floatsisf>
    74d4:	2a e9       	ldi	r18, 0x9A	; 154
    74d6:	39 e9       	ldi	r19, 0x99	; 153
    74d8:	49 e5       	ldi	r20, 0x59	; 89
    74da:	5f e3       	ldi	r21, 0x3F	; 63
    74dc:	0e 94 5c 46 	call	0x8cb8	; 0x8cb8 <__mulsf3>
    74e0:	0e 94 74 45 	call	0x8ae8	; 0x8ae8 <__fixsfsi>
    74e4:	67 cf       	rjmp	.-306    	; 0x73b4 <main+0x1730>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3114
                        }
                    }
                }
                else
                {
                    check_while();
    74e6:	0e 94 2b 1f 	call	0x3e56	; 0x3e56 <check_while()>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3115
                    if(check_while_finished==0){move(Left,T90,spd);redroom_dir=Right;}
    74ea:	80 91 91 09 	lds	r24, 0x0991	; 0x800991 <check_while_finished>
    74ee:	90 91 92 09 	lds	r25, 0x0992	; 0x800992 <check_while_finished+0x1>
    74f2:	89 2b       	or	r24, r25
    74f4:	71 f4       	brne	.+28     	; 0x7512 <main+0x188e>
    74f6:	40 91 99 09 	lds	r20, 0x0999	; 0x800999 <spd>
    74fa:	50 91 9a 09 	lds	r21, 0x099A	; 0x80099a <spd+0x1>
    74fe:	68 85       	ldd	r22, Y+8	; 0x08
    7500:	79 85       	ldd	r23, Y+9	; 0x09
    7502:	8b e0       	ldi	r24, 0x0B	; 11
    7504:	90 e0       	ldi	r25, 0x00	; 0
    7506:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
    750a:	90 92 9c 09 	sts	0x099C, r9	; 0x80099c <redroom_dir+0x1>
    750e:	80 92 9b 09 	sts	0x099B, r8	; 0x80099b <redroom_dir>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3120
                }

            }
        }
        redroom_time=0;
    7512:	10 92 98 09 	sts	0x0998, r1	; 0x800998 <redroom_time+0x1>
    7516:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <redroom_time>
    751a:	7d cd       	rjmp	.-1286   	; 0x7016 <main+0x1392>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3122
    }
    else if(SFL||SFR) //if bumpers pressed
    751c:	40 e0       	ldi	r20, 0x00	; 0
    751e:	63 e0       	ldi	r22, 0x03	; 3
    7520:	84 e0       	ldi	r24, 0x04	; 4
    7522:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    7526:	89 2b       	or	r24, r25
    7528:	09 f0       	breq	.+2      	; 0x752c <main+0x18a8>
    752a:	0a cd       	rjmp	.-1516   	; 0x6f40 <main+0x12bc>
    752c:	74 cd       	rjmp	.-1304   	; 0x7016 <main+0x1392>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3124
   {   
        if(SFL)first_touched=Left;
    752e:	8b e0       	ldi	r24, 0x0B	; 11
    7530:	90 e0       	ldi	r25, 0x00	; 0
    7532:	90 93 90 09 	sts	0x0990, r25	; 0x800990 <first_touched+0x1>
    7536:	80 93 8f 09 	sts	0x098F, r24	; 0x80098f <first_touched>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3126
        else if(SFR)first_touched=Right;
        correction(forward);
    753a:	8a e0       	ldi	r24, 0x0A	; 10
    753c:	0e 94 69 0d 	call	0x1ad2	; 0x1ad2 <correction(char)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3127
        if(correct==1) // ev-point and wall
    7540:	80 91 8d 09 	lds	r24, 0x098D	; 0x80098d <correct>
    7544:	90 91 8e 09 	lds	r25, 0x098E	; 0x80098e <correct+0x1>
    7548:	01 97       	sbiw	r24, 0x01	; 1
    754a:	09 f0       	breq	.+2      	; 0x754e <main+0x18ca>
    754c:	a7 c4       	rjmp	.+2382   	; 0x7e9c <main+0x2218>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3131
        {
            //correction(sides);
            //if(side_check==1){correction(forward);} //temp
            go(0,0);
    754e:	70 e0       	ldi	r23, 0x00	; 0
    7550:	60 e0       	ldi	r22, 0x00	; 0
    7552:	90 e0       	ldi	r25, 0x00	; 0
    7554:	80 e0       	ldi	r24, 0x00	; 0
    7556:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3132
            delay(100);
    755a:	64 e6       	ldi	r22, 0x64	; 100
    755c:	70 e0       	ldi	r23, 0x00	; 0
    755e:	80 e0       	ldi	r24, 0x00	; 0
    7560:	90 e0       	ldi	r25, 0x00	; 0
    7562:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3133
            if(VL_Front>102 && VL_Front!=500) //ev_point
    7566:	83 e0       	ldi	r24, 0x03	; 3
    7568:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    756c:	87 36       	cpi	r24, 0x67	; 103
    756e:	91 05       	cpc	r25, r1
    7570:	e0 f5       	brcc	.+120    	; 0x75ea <main+0x1966>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3335
                }
              get_out();
            }
            else //wall
            {
                lcd.clear();
    7572:	0e 94 c4 05 	call	0xb88	; 0xb88 <LiquidCrystal::clear() [clone .constprop.32]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3336
                lcd.print("wall 1");
    7576:	8e ee       	ldi	r24, 0xEE	; 238
    7578:	98 e0       	ldi	r25, 0x08	; 8
    757a:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3337
                move(Back,50);
    757e:	44 eb       	ldi	r20, 0xB4	; 180
    7580:	50 e0       	ldi	r21, 0x00	; 0
    7582:	62 e3       	ldi	r22, 0x32	; 50
    7584:	70 e0       	ldi	r23, 0x00	; 0
    7586:	8d e0       	ldi	r24, 0x0D	; 13
    7588:	90 e0       	ldi	r25, 0x00	; 0
    758a:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3338
                if(redroom_dir==Right)
    758e:	80 91 9b 09 	lds	r24, 0x099B	; 0x80099b <redroom_dir>
    7592:	90 91 9c 09 	lds	r25, 0x099C	; 0x80099c <redroom_dir+0x1>
    7596:	8c 30       	cpi	r24, 0x0C	; 12
    7598:	91 05       	cpc	r25, r1
    759a:	09 f0       	breq	.+2      	; 0x759e <main+0x191a>
    759c:	0c c4       	rjmp	.+2072   	; 0x7db6 <main+0x2132>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3340
                {
                    if(ev_ball>=2 && b_ball>=1)//(s_ball>=2 || b_ball>=2)change
    759e:	80 91 95 09 	lds	r24, 0x0995	; 0x800995 <ev_ball>
    75a2:	90 91 96 09 	lds	r25, 0x0996	; 0x800996 <ev_ball+0x1>
    75a6:	02 97       	sbiw	r24, 0x02	; 2
    75a8:	0c f4       	brge	.+2      	; 0x75ac <main+0x1928>
    75aa:	b3 c3       	rjmp	.+1894   	; 0x7d12 <main+0x208e>
    75ac:	80 91 93 09 	lds	r24, 0x0993	; 0x800993 <b_ball>
    75b0:	90 91 94 09 	lds	r25, 0x0994	; 0x800994 <b_ball+0x1>
    75b4:	18 16       	cp	r1, r24
    75b6:	19 06       	cpc	r1, r25
    75b8:	0c f0       	brlt	.+2      	; 0x75bc <main+0x1938>
    75ba:	ab c3       	rjmp	.+1878   	; 0x7d12 <main+0x208e>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3342
                        {
                        move(Right,T90*0.9);
    75bc:	28 85       	ldd	r18, Y+8	; 0x08
    75be:	39 85       	ldd	r19, Y+9	; 0x09
    75c0:	b9 01       	movw	r22, r18
    75c2:	33 0f       	add	r19, r19
    75c4:	88 0b       	sbc	r24, r24
    75c6:	99 0b       	sbc	r25, r25
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3526
            move(Back,50);
            if(redroom_dir==Right)
            {
                if(ev_ball>=2 && b_ball>=1)//(s_ball>=2 || b_ball>=2)
                    {
                    move(Right,T90*0.9);
    75c8:	0e 94 ac 45 	call	0x8b58	; 0x8b58 <__floatsisf>
    75cc:	26 e6       	ldi	r18, 0x66	; 102
    75ce:	36 e6       	ldi	r19, 0x66	; 102
    75d0:	46 e6       	ldi	r20, 0x66	; 102
    75d2:	5f e3       	ldi	r21, 0x3F	; 63
    75d4:	0e 94 5c 46 	call	0x8cb8	; 0x8cb8 <__mulsf3>
    75d8:	0e 94 74 45 	call	0x8ae8	; 0x8ae8 <__fixsfsi>
    75dc:	44 eb       	ldi	r20, 0xB4	; 180
    75de:	50 e0       	ldi	r21, 0x00	; 0
    75e0:	8c e0       	ldi	r24, 0x0C	; 12
    75e2:	90 e0       	ldi	r25, 0x00	; 0
    75e4:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
    75e8:	c4 c3       	rjmp	.+1928   	; 0x7d72 <main+0x20ee>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3133
        {
            //correction(sides);
            //if(side_check==1){correction(forward);} //temp
            go(0,0);
            delay(100);
            if(VL_Front>102 && VL_Front!=500) //ev_point
    75ea:	83 e0       	ldi	r24, 0x03	; 3
    75ec:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    75f0:	84 3f       	cpi	r24, 0xF4	; 244
    75f2:	91 40       	sbci	r25, 0x01	; 1
    75f4:	09 f4       	brne	.+2      	; 0x75f8 <main+0x1974>
    75f6:	bd cf       	rjmp	.-134    	; 0x7572 <main+0x18ee>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3135
            {
                lcd.clear();
    75f8:	0e 94 c4 05 	call	0xb88	; 0xb88 <LiquidCrystal::clear() [clone .constprop.32]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3136
                lcd.setCursor(0,0);
    75fc:	60 e0       	ldi	r22, 0x00	; 0
    75fe:	80 e0       	ldi	r24, 0x00	; 0
    7600:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3137
                lcd.printf("dis=%4d;sb:%d;evs:%d",VL_Front,s_ball,ev_s_ball);
    7604:	90 90 8b 09 	lds	r9, 0x098B	; 0x80098b <s_ball>
    7608:	80 90 8c 09 	lds	r8, 0x098C	; 0x80098c <s_ball+0x1>
    760c:	83 e0       	ldi	r24, 0x03	; 3
    760e:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    7612:	1f 93       	push	r17
    7614:	0f 93       	push	r16
    7616:	8f 92       	push	r8
    7618:	9f 92       	push	r9
    761a:	9f 93       	push	r25
    761c:	8f 93       	push	r24
    761e:	8a e3       	ldi	r24, 0x3A	; 58
    7620:	94 e0       	ldi	r25, 0x04	; 4
    7622:	9f 93       	push	r25
    7624:	8f 93       	push	r24
    7626:	3d e7       	ldi	r19, 0x7D	; 125
    7628:	83 2e       	mov	r8, r19
    762a:	3b e0       	ldi	r19, 0x0B	; 11
    762c:	93 2e       	mov	r9, r19
    762e:	9f 92       	push	r9
    7630:	8f 92       	push	r8
    7632:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3138
                lcd.setCursor(0,1);
    7636:	61 e0       	ldi	r22, 0x01	; 1
    7638:	80 e0       	ldi	r24, 0x00	; 0
    763a:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3139
                lcd.printf("bb=%d;evb:%d;bn:%d",b_ball,ev_b_ball,ball_num);
    763e:	80 91 a2 09 	lds	r24, 0x09A2	; 0x8009a2 <ball_num+0x1>
    7642:	8f 93       	push	r24
    7644:	80 91 a1 09 	lds	r24, 0x09A1	; 0x8009a1 <ball_num>
    7648:	8f 93       	push	r24
    764a:	80 91 8a 09 	lds	r24, 0x098A	; 0x80098a <ev_b_ball+0x1>
    764e:	8f 93       	push	r24
    7650:	80 91 89 09 	lds	r24, 0x0989	; 0x800989 <ev_b_ball>
    7654:	8f 93       	push	r24
    7656:	80 91 94 09 	lds	r24, 0x0994	; 0x800994 <b_ball+0x1>
    765a:	8f 93       	push	r24
    765c:	80 91 93 09 	lds	r24, 0x0993	; 0x800993 <b_ball>
    7660:	8f 93       	push	r24
    7662:	8f e4       	ldi	r24, 0x4F	; 79
    7664:	94 e0       	ldi	r25, 0x04	; 4
    7666:	9f 93       	push	r25
    7668:	8f 93       	push	r24
    766a:	9f 92       	push	r9
    766c:	8f 92       	push	r8
    766e:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3140
                lcd.setCursor(0,2);
    7672:	62 e0       	ldi	r22, 0x02	; 2
    7674:	80 e0       	ldi	r24, 0x00	; 0
    7676:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.21]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3141
                lcd.printf("clr=%4d;1:%d;2:%d;3:%d;4:%d",color_F,barband[0],barband[1],barband[2],barband[3]);
    767a:	30 90 88 09 	lds	r3, 0x0988	; 0x800988 <barband+0x3>
    767e:	43 2c       	mov	r4, r3
    7680:	03 2c       	mov	r0, r3
    7682:	00 0c       	add	r0, r0
    7684:	55 08       	sbc	r5, r5
    7686:	40 90 87 09 	lds	r4, 0x0987	; 0x800987 <barband+0x2>
    768a:	84 2d       	mov	r24, r4
    768c:	04 2c       	mov	r0, r4
    768e:	00 0c       	add	r0, r0
    7690:	99 0b       	sbc	r25, r25
    7692:	9b 83       	std	Y+3, r25	; 0x03
    7694:	8a 83       	std	Y+2, r24	; 0x02
    7696:	20 90 86 09 	lds	r2, 0x0986	; 0x800986 <barband+0x1>
    769a:	e2 2d       	mov	r30, r2
    769c:	02 2c       	mov	r0, r2
    769e:	00 0c       	add	r0, r0
    76a0:	ff 0b       	sbc	r31, r31
    76a2:	fd 83       	std	Y+5, r31	; 0x05
    76a4:	ec 83       	std	Y+4, r30	; 0x04
    76a6:	f0 91 85 09 	lds	r31, 0x0985	; 0x800985 <barband>
    76aa:	f9 83       	std	Y+1, r31	; 0x01
    76ac:	2f 2f       	mov	r18, r31
    76ae:	02 2e       	mov	r0, r18
    76b0:	00 0c       	add	r0, r0
    76b2:	33 0b       	sbc	r19, r19
    76b4:	3f 83       	std	Y+7, r19	; 0x07
    76b6:	2e 83       	std	Y+6, r18	; 0x06
    76b8:	83 e0       	ldi	r24, 0x03	; 3
    76ba:	0e 94 a8 10 	call	0x2150	; 0x2150 <color(char)>
    76be:	5f 92       	push	r5
    76c0:	3f 92       	push	r3
    76c2:	3b 81       	ldd	r19, Y+3	; 0x03
    76c4:	3f 93       	push	r19
    76c6:	4f 92       	push	r4
    76c8:	4d 81       	ldd	r20, Y+5	; 0x05
    76ca:	4f 93       	push	r20
    76cc:	2f 92       	push	r2
    76ce:	5f 81       	ldd	r21, Y+7	; 0x07
    76d0:	5f 93       	push	r21
    76d2:	99 81       	ldd	r25, Y+1	; 0x01
    76d4:	9f 93       	push	r25
    76d6:	28 2f       	mov	r18, r24
    76d8:	08 2e       	mov	r0, r24
    76da:	00 0c       	add	r0, r0
    76dc:	33 0b       	sbc	r19, r19
    76de:	3f 93       	push	r19
    76e0:	8f 93       	push	r24
    76e2:	82 e6       	ldi	r24, 0x62	; 98
    76e4:	94 e0       	ldi	r25, 0x04	; 4
    76e6:	9f 93       	push	r25
    76e8:	8f 93       	push	r24
    76ea:	9f 92       	push	r9
    76ec:	8f 92       	push	r8
    76ee:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <Print::printf(char const*, ...) [clone .constprop.22]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3142
                if((VL_Front>102) && color_F==GREEN && s_ball>0)
    76f2:	0f b6       	in	r0, 0x3f	; 63
    76f4:	f8 94       	cli
    76f6:	de bf       	out	0x3e, r29	; 62
    76f8:	0f be       	out	0x3f, r0	; 63
    76fa:	cd bf       	out	0x3d, r28	; 61
    76fc:	83 e0       	ldi	r24, 0x03	; 3
    76fe:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    7702:	87 36       	cpi	r24, 0x67	; 103
    7704:	91 05       	cpc	r25, r1
    7706:	68 f0       	brcs	.+26     	; 0x7722 <main+0x1a9e>
    7708:	83 e0       	ldi	r24, 0x03	; 3
    770a:	0e 94 a8 10 	call	0x2150	; 0x2150 <color(char)>
    770e:	81 30       	cpi	r24, 0x01	; 1
    7710:	41 f4       	brne	.+16     	; 0x7722 <main+0x1a9e>
    7712:	80 91 8b 09 	lds	r24, 0x098B	; 0x80098b <s_ball>
    7716:	90 91 8c 09 	lds	r25, 0x098C	; 0x80098c <s_ball+0x1>
    771a:	18 16       	cp	r1, r24
    771c:	19 06       	cpc	r1, r25
    771e:	0c f4       	brge	.+2      	; 0x7722 <main+0x1a9e>
    7720:	56 c0       	rjmp	.+172    	; 0x77ce <main+0x1b4a>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3185
                          {move(Right,T90*1.55);redroom_dir=Right;}//change0
                      else
                          {move(Left,T90*1.55); /*pich_sakoo=1; */ redroom_dir=Left;}
                      no_side=1;//change0
                  }
                else if((VL_Front>102) && color_F==RED && b_ball>0 && ev_s_ball>1)
    7722:	83 e0       	ldi	r24, 0x03	; 3
    7724:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    7728:	87 36       	cpi	r24, 0x67	; 103
    772a:	91 05       	cpc	r25, r1
    772c:	80 f0       	brcs	.+32     	; 0x774e <main+0x1aca>
    772e:	83 e0       	ldi	r24, 0x03	; 3
    7730:	0e 94 a8 10 	call	0x2150	; 0x2150 <color(char)>
    7734:	81 11       	cpse	r24, r1
    7736:	0b c0       	rjmp	.+22     	; 0x774e <main+0x1aca>
    7738:	80 91 93 09 	lds	r24, 0x0993	; 0x800993 <b_ball>
    773c:	90 91 94 09 	lds	r25, 0x0994	; 0x800994 <b_ball+0x1>
    7740:	18 16       	cp	r1, r24
    7742:	19 06       	cpc	r1, r25
    7744:	24 f4       	brge	.+8      	; 0x774e <main+0x1aca>
    7746:	02 30       	cpi	r16, 0x02	; 2
    7748:	11 05       	cpc	r17, r1
    774a:	0c f0       	brlt	.+2      	; 0x774e <main+0x1aca>
    774c:	f8 c0       	rjmp	.+496    	; 0x793e <main+0x1cba>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3227
                        {move(Left,T90*1.55); /*pich_sakoo=1; */ redroom_dir=Left;}
                    no_side=1;//change0
                }
                else
                {
                    if(ball_num>0||s_ball>0||b_ball>0)
    774e:	80 91 a1 09 	lds	r24, 0x09A1	; 0x8009a1 <ball_num>
    7752:	90 91 a2 09 	lds	r25, 0x09A2	; 0x8009a2 <ball_num+0x1>
    7756:	18 16       	cp	r1, r24
    7758:	19 06       	cpc	r1, r25
    775a:	0c f0       	brlt	.+2      	; 0x775e <main+0x1ada>
    775c:	73 c1       	rjmp	.+742    	; 0x7a44 <main+0x1dc0>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3229
                        {
                            delay(20);
    775e:	64 e1       	ldi	r22, 0x14	; 20
    7760:	70 e0       	ldi	r23, 0x00	; 0
    7762:	80 e0       	ldi	r24, 0x00	; 0
    7764:	90 e0       	ldi	r25, 0x00	; 0
    7766:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3230
                            if((VL_Front>102) && color_F==GREEN && s_ball>0)
    776a:	83 e0       	ldi	r24, 0x03	; 3
    776c:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    7770:	87 36       	cpi	r24, 0x67	; 103
    7772:	91 05       	cpc	r25, r1
    7774:	68 f0       	brcs	.+26     	; 0x7790 <main+0x1b0c>
    7776:	83 e0       	ldi	r24, 0x03	; 3
    7778:	0e 94 a8 10 	call	0x2150	; 0x2150 <color(char)>
    777c:	81 30       	cpi	r24, 0x01	; 1
    777e:	41 f4       	brne	.+16     	; 0x7790 <main+0x1b0c>
    7780:	80 91 8b 09 	lds	r24, 0x098B	; 0x80098b <s_ball>
    7784:	90 91 8c 09 	lds	r25, 0x098C	; 0x80098c <s_ball+0x1>
    7788:	18 16       	cp	r1, r24
    778a:	19 06       	cpc	r1, r25
    778c:	0c f4       	brge	.+2      	; 0x7790 <main+0x1b0c>
    778e:	7e c1       	rjmp	.+764    	; 0x7a8c <main+0x1e08>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3272
                                    {move(Right,T90*1.55);redroom_dir=Right;}
                                else
                                    {move(Left,T90*1.55); /*pich_sakoo=1; */ redroom_dir=Left;}
                                no_side=1;
                            }
                            else if((VL_Front>102) && color_F==RED && b_ball>0 && ev_s_ball>1)
    7790:	83 e0       	ldi	r24, 0x03	; 3
    7792:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    7796:	87 36       	cpi	r24, 0x67	; 103
    7798:	91 05       	cpc	r25, r1
    779a:	08 f0       	brcs	.+2      	; 0x779e <main+0x1b1a>
    779c:	49 c2       	rjmp	.+1170   	; 0x7c30 <main+0x1fac>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3313
                                    {move(Right,T90);redroom_dir=Right;}
                                else
                                    {move(Left,T90); /*pich_sakoo=1; */ redroom_dir=Left;}
                                no_side=1;
                            }else{
                      move(Back,25);
    779e:	44 eb       	ldi	r20, 0xB4	; 180
    77a0:	50 e0       	ldi	r21, 0x00	; 0
    77a2:	69 e1       	ldi	r22, 0x19	; 25
    77a4:	70 e0       	ldi	r23, 0x00	; 0
    77a6:	8d e0       	ldi	r24, 0x0D	; 13
    77a8:	90 e0       	ldi	r25, 0x00	; 0
    77aa:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3314
                      if(first_touched==Left)
    77ae:	80 91 8f 09 	lds	r24, 0x098F	; 0x80098f <first_touched>
    77b2:	90 91 90 09 	lds	r25, 0x0990	; 0x800990 <first_touched+0x1>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3317
                          {move(Right,T90);redroom_dir=Right;}
                      else
                          {move(Left,T90); /*pich_sakoo=1; */ redroom_dir=Left;}
    77b6:	44 eb       	ldi	r20, 0xB4	; 180
    77b8:	50 e0       	ldi	r21, 0x00	; 0
    77ba:	68 85       	ldd	r22, Y+8	; 0x08
    77bc:	79 85       	ldd	r23, Y+9	; 0x09
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3314
                                else
                                    {move(Left,T90); /*pich_sakoo=1; */ redroom_dir=Left;}
                                no_side=1;
                            }else{
                      move(Back,25);
                      if(first_touched==Left)
    77be:	0b 97       	sbiw	r24, 0x0b	; 11
    77c0:	09 f0       	breq	.+2      	; 0x77c4 <main+0x1b40>
    77c2:	2f c2       	rjmp	.+1118   	; 0x7c22 <main+0x1f9e>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3315
                          {move(Right,T90);redroom_dir=Right;}
    77c4:	44 eb       	ldi	r20, 0xB4	; 180
    77c6:	50 e0       	ldi	r21, 0x00	; 0
    77c8:	68 85       	ldd	r22, Y+8	; 0x08
    77ca:	79 85       	ldd	r23, Y+9	; 0x09
    77cc:	2f c1       	rjmp	.+606    	; 0x7a2c <main+0x1da8>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3146
                lcd.printf("clr=%4d;1:%d;2:%d;3:%d;4:%d",color_F,barband[0],barband[1],barband[2],barband[3]);
                if((VL_Front>102) && color_F==GREEN && s_ball>0)
                {
                  while(1)
                      {
                        if(fifth==1)
    77ce:	80 91 83 09 	lds	r24, 0x0983	; 0x800983 <fifth>
    77d2:	90 91 84 09 	lds	r25, 0x0984	; 0x800984 <fifth+0x1>
    77d6:	01 97       	sbiw	r24, 0x01	; 1
    77d8:	09 f0       	breq	.+2      	; 0x77dc <main+0x1b58>
    77da:	66 c0       	rjmp	.+204    	; 0x78a8 <main+0x1c24>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3150
                        {
                            if(conductive==1)
                                {
                                ev_s_ball++;s_ball--;
    77dc:	0f 5f       	subi	r16, 0xFF	; 255
    77de:	1f 4f       	sbci	r17, 0xFF	; 255
    77e0:	80 91 8b 09 	lds	r24, 0x098B	; 0x80098b <s_ball>
    77e4:	90 91 8c 09 	lds	r25, 0x098C	; 0x80098c <s_ball+0x1>
    77e8:	01 97       	sbiw	r24, 0x01	; 1
    77ea:	90 93 8c 09 	sts	0x098C, r25	; 0x80098c <s_ball+0x1>
    77ee:	80 93 8b 09 	sts	0x098B, r24	; 0x80098b <s_ball>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3151
                                EEPROM_write_int(DW_address, ev_s_ball);
    77f2:	b8 01       	movw	r22, r16
    77f4:	82 ea       	ldi	r24, 0xA2	; 162
    77f6:	90 e0       	ldi	r25, 0x00	; 0
    77f8:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3152
                                ball_num--;
    77fc:	80 91 a1 09 	lds	r24, 0x09A1	; 0x8009a1 <ball_num>
    7800:	90 91 a2 09 	lds	r25, 0x09A2	; 0x8009a2 <ball_num+0x1>
    7804:	01 97       	sbiw	r24, 0x01	; 1
    7806:	90 93 a2 09 	sts	0x09A2, r25	; 0x8009a2 <ball_num+0x1>
    780a:	80 93 a1 09 	sts	0x09A1, r24	; 0x8009a1 <ball_num>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3153
                                move(Back,30);
    780e:	44 eb       	ldi	r20, 0xB4	; 180
    7810:	50 e0       	ldi	r21, 0x00	; 0
    7812:	6e e1       	ldi	r22, 0x1E	; 30
    7814:	70 e0       	ldi	r23, 0x00	; 0
    7816:	8d e0       	ldi	r24, 0x0D	; 13
    7818:	90 e0       	ldi	r25, 0x00	; 0
    781a:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3154
                                move_arm(500,600);delay(300);
    781e:	68 e5       	ldi	r22, 0x58	; 88
    7820:	72 e0       	ldi	r23, 0x02	; 2
    7822:	84 ef       	ldi	r24, 0xF4	; 244
    7824:	91 e0       	ldi	r25, 0x01	; 1
    7826:	0e 94 3f 08 	call	0x107e	; 0x107e <move_arm(int, int)>
    782a:	6c e2       	ldi	r22, 0x2C	; 44
    782c:	71 e0       	ldi	r23, 0x01	; 1
    782e:	80 e0       	ldi	r24, 0x00	; 0
    7830:	90 e0       	ldi	r25, 0x00	; 0
    7832:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3155
                                move(forward,50);
    7836:	44 eb       	ldi	r20, 0xB4	; 180
    7838:	50 e0       	ldi	r21, 0x00	; 0
    783a:	62 e3       	ldi	r22, 0x32	; 50
    783c:	70 e0       	ldi	r23, 0x00	; 0
    783e:	8a e0       	ldi	r24, 0x0A	; 10
    7840:	90 e0       	ldi	r25, 0x00	; 0
    7842:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3156
                                move_gripper(gripper_open,700);delay(500);
    7846:	6c eb       	ldi	r22, 0xBC	; 188
    7848:	72 e0       	ldi	r23, 0x02	; 2
    784a:	c5 01       	movw	r24, r10
    784c:	0e 94 b5 08 	call	0x116a	; 0x116a <move_gripper(int, int)>
    7850:	64 ef       	ldi	r22, 0xF4	; 244
    7852:	71 e0       	ldi	r23, 0x01	; 1
    7854:	80 e0       	ldi	r24, 0x00	; 0
    7856:	90 e0       	ldi	r25, 0x00	; 0
    7858:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3157
                                move(Back,70);go(0,0);
    785c:	44 eb       	ldi	r20, 0xB4	; 180
    785e:	50 e0       	ldi	r21, 0x00	; 0
    7860:	66 e4       	ldi	r22, 0x46	; 70
    7862:	70 e0       	ldi	r23, 0x00	; 0
    7864:	8d e0       	ldi	r24, 0x0D	; 13
    7866:	90 e0       	ldi	r25, 0x00	; 0
    7868:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
    786c:	70 e0       	ldi	r23, 0x00	; 0
    786e:	60 e0       	ldi	r22, 0x00	; 0
    7870:	90 e0       	ldi	r25, 0x00	; 0
    7872:	80 e0       	ldi	r24, 0x00	; 0
    7874:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3158
                                move_arm(arm_down,500);delay(200);correction(forward);go(0,0);
    7878:	64 ef       	ldi	r22, 0xF4	; 244
    787a:	71 e0       	ldi	r23, 0x01	; 1
    787c:	c3 01       	movw	r24, r6
    787e:	0e 94 3f 08 	call	0x107e	; 0x107e <move_arm(int, int)>
    7882:	68 ec       	ldi	r22, 0xC8	; 200
    7884:	70 e0       	ldi	r23, 0x00	; 0
    7886:	80 e0       	ldi	r24, 0x00	; 0
    7888:	90 e0       	ldi	r25, 0x00	; 0
    788a:	0e 94 24 03 	call	0x648	; 0x648 <delay>
    788e:	8a e0       	ldi	r24, 0x0A	; 10
    7890:	0e 94 69 0d 	call	0x1ad2	; 0x1ad2 <correction(char)>
    7894:	70 e0       	ldi	r23, 0x00	; 0
    7896:	60 e0       	ldi	r22, 0x00	; 0
    7898:	90 e0       	ldi	r25, 0x00	; 0
    789a:	80 e0       	ldi	r24, 0x00	; 0
    789c:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3159
                                fifth=0;
    78a0:	10 92 84 09 	sts	0x0984, r1	; 0x800984 <fifth+0x1>
    78a4:	10 92 83 09 	sts	0x0983, r1	; 0x800983 <fifth>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3164
                                }
                            
                            
                            }
                        if(rotate(1)!=10)
    78a8:	81 e0       	ldi	r24, 0x01	; 1
    78aa:	90 e0       	ldi	r25, 0x00	; 0
    78ac:	0e 94 0c 08 	call	0x1018	; 0x1018 <rotate(int)>
    78b0:	0a 97       	sbiw	r24, 0x0a	; 10
    78b2:	09 f4       	brne	.+2      	; 0x78b6 <main+0x1c32>
    78b4:	a3 c1       	rjmp	.+838    	; 0x7bfc <main+0x1f78>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3166
                            {
                            delay(50);
    78b6:	62 e3       	ldi	r22, 0x32	; 50
    78b8:	70 e0       	ldi	r23, 0x00	; 0
    78ba:	80 e0       	ldi	r24, 0x00	; 0
    78bc:	90 e0       	ldi	r25, 0x00	; 0
    78be:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3167
                            ev_s_ball++;
    78c2:	0f 5f       	subi	r16, 0xFF	; 255
    78c4:	1f 4f       	sbci	r17, 0xFF	; 255
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3168
                            EEPROM_write_int(DW_address, ev_s_ball);
    78c6:	b8 01       	movw	r22, r16
    78c8:	82 ea       	ldi	r24, 0xA2	; 162
    78ca:	90 e0       	ldi	r25, 0x00	; 0
    78cc:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3169
                            s_ball--;
    78d0:	80 91 8b 09 	lds	r24, 0x098B	; 0x80098b <s_ball>
    78d4:	90 91 8c 09 	lds	r25, 0x098C	; 0x80098c <s_ball+0x1>
    78d8:	01 97       	sbiw	r24, 0x01	; 1
    78da:	90 93 8c 09 	sts	0x098C, r25	; 0x80098c <s_ball+0x1>
    78de:	80 93 8b 09 	sts	0x098B, r24	; 0x80098b <s_ball>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3170
                            ball_num--;
    78e2:	80 91 a1 09 	lds	r24, 0x09A1	; 0x8009a1 <ball_num>
    78e6:	90 91 a2 09 	lds	r25, 0x09A2	; 0x8009a2 <ball_num+0x1>
    78ea:	01 97       	sbiw	r24, 0x01	; 1
    78ec:	90 93 a2 09 	sts	0x09A2, r25	; 0x8009a2 <ball_num+0x1>
    78f0:	80 93 a1 09 	sts	0x09A1, r24	; 0x8009a1 <ball_num>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3171
                            barband[rotate(1)]=0; delay(700);
    78f4:	81 e0       	ldi	r24, 0x01	; 1
    78f6:	90 e0       	ldi	r25, 0x00	; 0
    78f8:	0e 94 0c 08 	call	0x1018	; 0x1018 <rotate(int)>
    78fc:	8b 57       	subi	r24, 0x7B	; 123
    78fe:	96 4f       	sbci	r25, 0xF6	; 246
    7900:	fc 01       	movw	r30, r24
    7902:	10 82       	st	Z, r1
    7904:	6c eb       	ldi	r22, 0xBC	; 188
    7906:	72 e0       	ldi	r23, 0x02	; 2
    7908:	80 e0       	ldi	r24, 0x00	; 0
    790a:	90 e0       	ldi	r25, 0x00	; 0
    790c:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3172
                            move_basket(basket_up,500); delay(800);
    7910:	64 ef       	ldi	r22, 0xF4	; 244
    7912:	71 e0       	ldi	r23, 0x01	; 1
    7914:	c6 01       	movw	r24, r12
    7916:	0e 94 8c 1b 	call	0x3718	; 0x3718 <move_basket(int, int)>
    791a:	60 e2       	ldi	r22, 0x20	; 32
    791c:	73 e0       	ldi	r23, 0x03	; 3
    791e:	80 e0       	ldi	r24, 0x00	; 0
    7920:	90 e0       	ldi	r25, 0x00	; 0
    7922:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3173
                            move_basket(basket_normal,350); delay(300);
    7926:	6e e5       	ldi	r22, 0x5E	; 94
    7928:	71 e0       	ldi	r23, 0x01	; 1
    792a:	c7 01       	movw	r24, r14
    792c:	0e 94 8c 1b 	call	0x3718	; 0x3718 <move_basket(int, int)>
    7930:	6c e2       	ldi	r22, 0x2C	; 44
    7932:	71 e0       	ldi	r23, 0x01	; 1
    7934:	80 e0       	ldi	r24, 0x00	; 0
    7936:	90 e0       	ldi	r25, 0x00	; 0
    7938:	0e 94 24 03 	call	0x648	; 0x648 <delay>
    793c:	48 cf       	rjmp	.-368    	; 0x77ce <main+0x1b4a>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3205
                                    move_arm(arm_down,500);delay(200);correction(forward);go(0,0); 
                                  fifth=0;
                                }
                            
                            }
                        if(rotate(2)!=10)
    793e:	82 e0       	ldi	r24, 0x02	; 2
    7940:	90 e0       	ldi	r25, 0x00	; 0
    7942:	0e 94 0c 08 	call	0x1018	; 0x1018 <rotate(int)>
    7946:	a0 90 89 09 	lds	r10, 0x0989	; 0x800989 <ev_b_ball>
    794a:	b0 90 8a 09 	lds	r11, 0x098A	; 0x80098a <ev_b_ball+0x1>
    794e:	0a 97       	sbiw	r24, 0x0a	; 10
    7950:	09 f4       	brne	.+2      	; 0x7954 <main+0x1cd0>
    7952:	44 c0       	rjmp	.+136    	; 0x79dc <main+0x1d58>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3207
                              {
                              delay(50);
    7954:	62 e3       	ldi	r22, 0x32	; 50
    7956:	70 e0       	ldi	r23, 0x00	; 0
    7958:	80 e0       	ldi	r24, 0x00	; 0
    795a:	90 e0       	ldi	r25, 0x00	; 0
    795c:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3208
                              ev_b_ball++;
    7960:	5f ef       	ldi	r21, 0xFF	; 255
    7962:	a5 1a       	sub	r10, r21
    7964:	b5 0a       	sbc	r11, r21
    7966:	b0 92 8a 09 	sts	0x098A, r11	; 0x80098a <ev_b_ball+0x1>
    796a:	a0 92 89 09 	sts	0x0989, r10	; 0x800989 <ev_b_ball>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3209
                              b_ball--;
    796e:	80 91 93 09 	lds	r24, 0x0993	; 0x800993 <b_ball>
    7972:	90 91 94 09 	lds	r25, 0x0994	; 0x800994 <b_ball+0x1>
    7976:	01 97       	sbiw	r24, 0x01	; 1
    7978:	90 93 94 09 	sts	0x0994, r25	; 0x800994 <b_ball+0x1>
    797c:	80 93 93 09 	sts	0x0993, r24	; 0x800993 <b_ball>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3210
                              ball_num--;
    7980:	80 91 a1 09 	lds	r24, 0x09A1	; 0x8009a1 <ball_num>
    7984:	90 91 a2 09 	lds	r25, 0x09A2	; 0x8009a2 <ball_num+0x1>
    7988:	01 97       	sbiw	r24, 0x01	; 1
    798a:	90 93 a2 09 	sts	0x09A2, r25	; 0x8009a2 <ball_num+0x1>
    798e:	80 93 a1 09 	sts	0x09A1, r24	; 0x8009a1 <ball_num>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3211
                              barband[rotate(2)]=0; delay(700);
    7992:	82 e0       	ldi	r24, 0x02	; 2
    7994:	90 e0       	ldi	r25, 0x00	; 0
    7996:	0e 94 0c 08 	call	0x1018	; 0x1018 <rotate(int)>
    799a:	8b 57       	subi	r24, 0x7B	; 123
    799c:	96 4f       	sbci	r25, 0xF6	; 246
    799e:	fc 01       	movw	r30, r24
    79a0:	10 82       	st	Z, r1
    79a2:	6c eb       	ldi	r22, 0xBC	; 188
    79a4:	72 e0       	ldi	r23, 0x02	; 2
    79a6:	80 e0       	ldi	r24, 0x00	; 0
    79a8:	90 e0       	ldi	r25, 0x00	; 0
    79aa:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3212
                              move_basket(basket_up,500); delay(800);
    79ae:	64 ef       	ldi	r22, 0xF4	; 244
    79b0:	71 e0       	ldi	r23, 0x01	; 1
    79b2:	c6 01       	movw	r24, r12
    79b4:	0e 94 8c 1b 	call	0x3718	; 0x3718 <move_basket(int, int)>
    79b8:	60 e2       	ldi	r22, 0x20	; 32
    79ba:	73 e0       	ldi	r23, 0x03	; 3
    79bc:	80 e0       	ldi	r24, 0x00	; 0
    79be:	90 e0       	ldi	r25, 0x00	; 0
    79c0:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3213
                              move_basket(basket_normal,350); delay(300);
    79c4:	6e e5       	ldi	r22, 0x5E	; 94
    79c6:	71 e0       	ldi	r23, 0x01	; 1
    79c8:	c7 01       	movw	r24, r14
    79ca:	0e 94 8c 1b 	call	0x3718	; 0x3718 <move_basket(int, int)>
    79ce:	6c e2       	ldi	r22, 0x2C	; 44
    79d0:	71 e0       	ldi	r23, 0x01	; 1
    79d2:	80 e0       	ldi	r24, 0x00	; 0
    79d4:	90 e0       	ldi	r25, 0x00	; 0
    79d6:	0e 94 24 03 	call	0x648	; 0x648 <delay>
    79da:	b1 cf       	rjmp	.-158    	; 0x793e <main+0x1cba>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3217
                              }
                        else break;
                        }
                    ev_ball=ev_s_ball+ev_b_ball;
    79dc:	0a 0d       	add	r16, r10
    79de:	1b 1d       	adc	r17, r11
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3264
                                        move_basket(basket_up,500); delay(800);
                                        move_basket(basket_normal,350); delay(300);
                                        }
                                    else break;
                                    }
                                ev_ball=ev_s_ball+ev_b_ball;
    79e0:	10 93 96 09 	sts	0x0996, r17	; 0x800996 <ev_ball+0x1>
    79e4:	00 93 95 09 	sts	0x0995, r16	; 0x800995 <ev_ball>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3265
                                move(Back,25);
    79e8:	44 eb       	ldi	r20, 0xB4	; 180
    79ea:	50 e0       	ldi	r21, 0x00	; 0
    79ec:	69 e1       	ldi	r22, 0x19	; 25
    79ee:	70 e0       	ldi	r23, 0x00	; 0
    79f0:	8d e0       	ldi	r24, 0x0D	; 13
    79f2:	90 e0       	ldi	r25, 0x00	; 0
    79f4:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3266
                                if(first_touched==Left)
    79f8:	20 91 8f 09 	lds	r18, 0x098F	; 0x80098f <first_touched>
    79fc:	30 91 90 09 	lds	r19, 0x0990	; 0x800990 <first_touched+0x1>
    7a00:	48 85       	ldd	r20, Y+8	; 0x08
    7a02:	59 85       	ldd	r21, Y+9	; 0x09
    7a04:	ba 01       	movw	r22, r20
    7a06:	55 0f       	add	r21, r21
    7a08:	88 0b       	sbc	r24, r24
    7a0a:	99 0b       	sbc	r25, r25
    7a0c:	2b 30       	cpi	r18, 0x0B	; 11
    7a0e:	31 05       	cpc	r19, r1
    7a10:	09 f0       	breq	.+2      	; 0x7a14 <main+0x1d90>
    7a12:	fb c0       	rjmp	.+502    	; 0x7c0a <main+0x1f86>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3267
                                    {move(Right,T90*1.55);redroom_dir=Right;}
    7a14:	0e 94 ac 45 	call	0x8b58	; 0x8b58 <__floatsisf>
    7a18:	26 e6       	ldi	r18, 0x66	; 102
    7a1a:	36 e6       	ldi	r19, 0x66	; 102
    7a1c:	46 ec       	ldi	r20, 0xC6	; 198
    7a1e:	5f e3       	ldi	r21, 0x3F	; 63
    7a20:	0e 94 5c 46 	call	0x8cb8	; 0x8cb8 <__mulsf3>
    7a24:	0e 94 74 45 	call	0x8ae8	; 0x8ae8 <__fixsfsi>
    7a28:	44 eb       	ldi	r20, 0xB4	; 180
    7a2a:	50 e0       	ldi	r21, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3325
                            
                        }
                    else{
                      move(Back,25);
                      if(first_touched==Left)
                          {move(Right,T90);redroom_dir=Right;}
    7a2c:	8c e0       	ldi	r24, 0x0C	; 12
    7a2e:	90 e0       	ldi	r25, 0x00	; 0
    7a30:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
    7a34:	8c e0       	ldi	r24, 0x0C	; 12
    7a36:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3327
                      else
                          {move(Left,T90); /*pich_sakoo=1; */ redroom_dir=Left;}
    7a38:	90 93 9c 09 	sts	0x099C, r25	; 0x80099c <redroom_dir+0x1>
    7a3c:	80 93 9b 09 	sts	0x099B, r24	; 0x80099b <redroom_dir>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3331

                    }
                }
              get_out();
    7a40:	0e 94 05 0f 	call	0x1e0a	; 0x1e0a <get_out()>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3227
                        {move(Left,T90*1.55); /*pich_sakoo=1; */ redroom_dir=Left;}
                    no_side=1;//change0
                }
                else
                {
                    if(ball_num>0||s_ball>0||b_ball>0)
    7a44:	80 91 8b 09 	lds	r24, 0x098B	; 0x80098b <s_ball>
    7a48:	90 91 8c 09 	lds	r25, 0x098C	; 0x80098c <s_ball+0x1>
    7a4c:	18 16       	cp	r1, r24
    7a4e:	19 06       	cpc	r1, r25
    7a50:	0c f4       	brge	.+2      	; 0x7a54 <main+0x1dd0>
    7a52:	85 ce       	rjmp	.-758    	; 0x775e <main+0x1ada>
    7a54:	80 91 93 09 	lds	r24, 0x0993	; 0x800993 <b_ball>
    7a58:	90 91 94 09 	lds	r25, 0x0994	; 0x800994 <b_ball+0x1>
    7a5c:	18 16       	cp	r1, r24
    7a5e:	19 06       	cpc	r1, r25
    7a60:	0c f4       	brge	.+2      	; 0x7a64 <main+0x1de0>
    7a62:	7d ce       	rjmp	.-774    	; 0x775e <main+0x1ada>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3323

                    }
                            
                        }
                    else{
                      move(Back,25);
    7a64:	44 eb       	ldi	r20, 0xB4	; 180
    7a66:	50 e0       	ldi	r21, 0x00	; 0
    7a68:	69 e1       	ldi	r22, 0x19	; 25
    7a6a:	70 e0       	ldi	r23, 0x00	; 0
    7a6c:	8d e0       	ldi	r24, 0x0D	; 13
    7a6e:	90 e0       	ldi	r25, 0x00	; 0
    7a70:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3324
                      if(first_touched==Left)
    7a74:	80 91 8f 09 	lds	r24, 0x098F	; 0x80098f <first_touched>
    7a78:	90 91 90 09 	lds	r25, 0x0990	; 0x800990 <first_touched+0x1>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3325
                          {move(Right,T90);redroom_dir=Right;}
    7a7c:	44 eb       	ldi	r20, 0xB4	; 180
    7a7e:	50 e0       	ldi	r21, 0x00	; 0
    7a80:	68 85       	ldd	r22, Y+8	; 0x08
    7a82:	79 85       	ldd	r23, Y+9	; 0x09
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3324
                    }
                            
                        }
                    else{
                      move(Back,25);
                      if(first_touched==Left)
    7a84:	0b 97       	sbiw	r24, 0x0b	; 11
    7a86:	09 f0       	breq	.+2      	; 0x7a8a <main+0x1e06>
    7a88:	cc c0       	rjmp	.+408    	; 0x7c22 <main+0x1f9e>
    7a8a:	d0 cf       	rjmp	.-96     	; 0x7a2c <main+0x1da8>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3234
                            delay(20);
                            if((VL_Front>102) && color_F==GREEN && s_ball>0)
                            {
                                while(1)
                                    {
                                    if(fifth==1)
    7a8c:	80 91 83 09 	lds	r24, 0x0983	; 0x800983 <fifth>
    7a90:	90 91 84 09 	lds	r25, 0x0984	; 0x800984 <fifth+0x1>
    7a94:	01 97       	sbiw	r24, 0x01	; 1
    7a96:	09 f0       	breq	.+2      	; 0x7a9a <main+0x1e16>
    7a98:	66 c0       	rjmp	.+204    	; 0x7b66 <main+0x1ee2>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3238
                                    {
                                        if(conductive==1)
                                            {
                                            ev_s_ball++;s_ball--;
    7a9a:	0f 5f       	subi	r16, 0xFF	; 255
    7a9c:	1f 4f       	sbci	r17, 0xFF	; 255
    7a9e:	80 91 8b 09 	lds	r24, 0x098B	; 0x80098b <s_ball>
    7aa2:	90 91 8c 09 	lds	r25, 0x098C	; 0x80098c <s_ball+0x1>
    7aa6:	01 97       	sbiw	r24, 0x01	; 1
    7aa8:	90 93 8c 09 	sts	0x098C, r25	; 0x80098c <s_ball+0x1>
    7aac:	80 93 8b 09 	sts	0x098B, r24	; 0x80098b <s_ball>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3239
                                            EEPROM_write_int(DW_address, ev_s_ball);
    7ab0:	b8 01       	movw	r22, r16
    7ab2:	82 ea       	ldi	r24, 0xA2	; 162
    7ab4:	90 e0       	ldi	r25, 0x00	; 0
    7ab6:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3240
                                            ball_num--;
    7aba:	80 91 a1 09 	lds	r24, 0x09A1	; 0x8009a1 <ball_num>
    7abe:	90 91 a2 09 	lds	r25, 0x09A2	; 0x8009a2 <ball_num+0x1>
    7ac2:	01 97       	sbiw	r24, 0x01	; 1
    7ac4:	90 93 a2 09 	sts	0x09A2, r25	; 0x8009a2 <ball_num+0x1>
    7ac8:	80 93 a1 09 	sts	0x09A1, r24	; 0x8009a1 <ball_num>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3241
                                            move(Back,30);
    7acc:	44 eb       	ldi	r20, 0xB4	; 180
    7ace:	50 e0       	ldi	r21, 0x00	; 0
    7ad0:	6e e1       	ldi	r22, 0x1E	; 30
    7ad2:	70 e0       	ldi	r23, 0x00	; 0
    7ad4:	8d e0       	ldi	r24, 0x0D	; 13
    7ad6:	90 e0       	ldi	r25, 0x00	; 0
    7ad8:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3242
                                            move_arm(500,600);delay(300);
    7adc:	68 e5       	ldi	r22, 0x58	; 88
    7ade:	72 e0       	ldi	r23, 0x02	; 2
    7ae0:	84 ef       	ldi	r24, 0xF4	; 244
    7ae2:	91 e0       	ldi	r25, 0x01	; 1
    7ae4:	0e 94 3f 08 	call	0x107e	; 0x107e <move_arm(int, int)>
    7ae8:	6c e2       	ldi	r22, 0x2C	; 44
    7aea:	71 e0       	ldi	r23, 0x01	; 1
    7aec:	80 e0       	ldi	r24, 0x00	; 0
    7aee:	90 e0       	ldi	r25, 0x00	; 0
    7af0:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3243
                                            move(forward,50);
    7af4:	44 eb       	ldi	r20, 0xB4	; 180
    7af6:	50 e0       	ldi	r21, 0x00	; 0
    7af8:	62 e3       	ldi	r22, 0x32	; 50
    7afa:	70 e0       	ldi	r23, 0x00	; 0
    7afc:	8a e0       	ldi	r24, 0x0A	; 10
    7afe:	90 e0       	ldi	r25, 0x00	; 0
    7b00:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3244
                                            move_gripper(gripper_open,700);delay(500);
    7b04:	6c eb       	ldi	r22, 0xBC	; 188
    7b06:	72 e0       	ldi	r23, 0x02	; 2
    7b08:	c5 01       	movw	r24, r10
    7b0a:	0e 94 b5 08 	call	0x116a	; 0x116a <move_gripper(int, int)>
    7b0e:	64 ef       	ldi	r22, 0xF4	; 244
    7b10:	71 e0       	ldi	r23, 0x01	; 1
    7b12:	80 e0       	ldi	r24, 0x00	; 0
    7b14:	90 e0       	ldi	r25, 0x00	; 0
    7b16:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3245
                                            move(Back,70);go(0,0);
    7b1a:	44 eb       	ldi	r20, 0xB4	; 180
    7b1c:	50 e0       	ldi	r21, 0x00	; 0
    7b1e:	66 e4       	ldi	r22, 0x46	; 70
    7b20:	70 e0       	ldi	r23, 0x00	; 0
    7b22:	8d e0       	ldi	r24, 0x0D	; 13
    7b24:	90 e0       	ldi	r25, 0x00	; 0
    7b26:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
    7b2a:	70 e0       	ldi	r23, 0x00	; 0
    7b2c:	60 e0       	ldi	r22, 0x00	; 0
    7b2e:	90 e0       	ldi	r25, 0x00	; 0
    7b30:	80 e0       	ldi	r24, 0x00	; 0
    7b32:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3246
                                            move_arm(arm_down,500);delay(200);correction(forward);go(0,0);
    7b36:	64 ef       	ldi	r22, 0xF4	; 244
    7b38:	71 e0       	ldi	r23, 0x01	; 1
    7b3a:	c3 01       	movw	r24, r6
    7b3c:	0e 94 3f 08 	call	0x107e	; 0x107e <move_arm(int, int)>
    7b40:	68 ec       	ldi	r22, 0xC8	; 200
    7b42:	70 e0       	ldi	r23, 0x00	; 0
    7b44:	80 e0       	ldi	r24, 0x00	; 0
    7b46:	90 e0       	ldi	r25, 0x00	; 0
    7b48:	0e 94 24 03 	call	0x648	; 0x648 <delay>
    7b4c:	8a e0       	ldi	r24, 0x0A	; 10
    7b4e:	0e 94 69 0d 	call	0x1ad2	; 0x1ad2 <correction(char)>
    7b52:	70 e0       	ldi	r23, 0x00	; 0
    7b54:	60 e0       	ldi	r22, 0x00	; 0
    7b56:	90 e0       	ldi	r25, 0x00	; 0
    7b58:	80 e0       	ldi	r24, 0x00	; 0
    7b5a:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3247
                                           fifth=0;
    7b5e:	10 92 84 09 	sts	0x0984, r1	; 0x800984 <fifth+0x1>
    7b62:	10 92 83 09 	sts	0x0983, r1	; 0x800983 <fifth>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3251
                                            }
                                        
                                        }
                                    if(rotate(1)!=10)
    7b66:	81 e0       	ldi	r24, 0x01	; 1
    7b68:	90 e0       	ldi	r25, 0x00	; 0
    7b6a:	0e 94 0c 08 	call	0x1018	; 0x1018 <rotate(int)>
    7b6e:	0a 97       	sbiw	r24, 0x0a	; 10
    7b70:	09 f4       	brne	.+2      	; 0x7b74 <main+0x1ef0>
    7b72:	44 c0       	rjmp	.+136    	; 0x7bfc <main+0x1f78>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3253
                                        {
                                        delay(50);
    7b74:	62 e3       	ldi	r22, 0x32	; 50
    7b76:	70 e0       	ldi	r23, 0x00	; 0
    7b78:	80 e0       	ldi	r24, 0x00	; 0
    7b7a:	90 e0       	ldi	r25, 0x00	; 0
    7b7c:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3254
                                        ev_s_ball++;
    7b80:	0f 5f       	subi	r16, 0xFF	; 255
    7b82:	1f 4f       	sbci	r17, 0xFF	; 255
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3255
                                        EEPROM_write_int(DW_address, ev_s_ball);
    7b84:	b8 01       	movw	r22, r16
    7b86:	82 ea       	ldi	r24, 0xA2	; 162
    7b88:	90 e0       	ldi	r25, 0x00	; 0
    7b8a:	0e 94 4b 0a 	call	0x1496	; 0x1496 <EEPROM_write_int(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3256
                                        s_ball--;
    7b8e:	80 91 8b 09 	lds	r24, 0x098B	; 0x80098b <s_ball>
    7b92:	90 91 8c 09 	lds	r25, 0x098C	; 0x80098c <s_ball+0x1>
    7b96:	01 97       	sbiw	r24, 0x01	; 1
    7b98:	90 93 8c 09 	sts	0x098C, r25	; 0x80098c <s_ball+0x1>
    7b9c:	80 93 8b 09 	sts	0x098B, r24	; 0x80098b <s_ball>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3257
                                        ball_num--;
    7ba0:	80 91 a1 09 	lds	r24, 0x09A1	; 0x8009a1 <ball_num>
    7ba4:	90 91 a2 09 	lds	r25, 0x09A2	; 0x8009a2 <ball_num+0x1>
    7ba8:	01 97       	sbiw	r24, 0x01	; 1
    7baa:	90 93 a2 09 	sts	0x09A2, r25	; 0x8009a2 <ball_num+0x1>
    7bae:	80 93 a1 09 	sts	0x09A1, r24	; 0x8009a1 <ball_num>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3258
                                        barband[rotate(1)]=0; delay(700);
    7bb2:	81 e0       	ldi	r24, 0x01	; 1
    7bb4:	90 e0       	ldi	r25, 0x00	; 0
    7bb6:	0e 94 0c 08 	call	0x1018	; 0x1018 <rotate(int)>
    7bba:	8b 57       	subi	r24, 0x7B	; 123
    7bbc:	96 4f       	sbci	r25, 0xF6	; 246
    7bbe:	fc 01       	movw	r30, r24
    7bc0:	10 82       	st	Z, r1
    7bc2:	6c eb       	ldi	r22, 0xBC	; 188
    7bc4:	72 e0       	ldi	r23, 0x02	; 2
    7bc6:	80 e0       	ldi	r24, 0x00	; 0
    7bc8:	90 e0       	ldi	r25, 0x00	; 0
    7bca:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3259
                                        move_basket(basket_up,500); delay(800);
    7bce:	64 ef       	ldi	r22, 0xF4	; 244
    7bd0:	71 e0       	ldi	r23, 0x01	; 1
    7bd2:	c6 01       	movw	r24, r12
    7bd4:	0e 94 8c 1b 	call	0x3718	; 0x3718 <move_basket(int, int)>
    7bd8:	60 e2       	ldi	r22, 0x20	; 32
    7bda:	73 e0       	ldi	r23, 0x03	; 3
    7bdc:	80 e0       	ldi	r24, 0x00	; 0
    7bde:	90 e0       	ldi	r25, 0x00	; 0
    7be0:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3260
                                        move_basket(basket_normal,350); delay(300);
    7be4:	6e e5       	ldi	r22, 0x5E	; 94
    7be6:	71 e0       	ldi	r23, 0x01	; 1
    7be8:	c7 01       	movw	r24, r14
    7bea:	0e 94 8c 1b 	call	0x3718	; 0x3718 <move_basket(int, int)>
    7bee:	6c e2       	ldi	r22, 0x2C	; 44
    7bf0:	71 e0       	ldi	r23, 0x01	; 1
    7bf2:	80 e0       	ldi	r24, 0x00	; 0
    7bf4:	90 e0       	ldi	r25, 0x00	; 0
    7bf6:	0e 94 24 03 	call	0x648	; 0x648 <delay>
    7bfa:	48 cf       	rjmp	.-368    	; 0x7a8c <main+0x1e08>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3264
                                        }
                                    else break;
                                    }
                                ev_ball=ev_s_ball+ev_b_ball;
    7bfc:	80 91 89 09 	lds	r24, 0x0989	; 0x800989 <ev_b_ball>
    7c00:	90 91 8a 09 	lds	r25, 0x098A	; 0x80098a <ev_b_ball+0x1>
    7c04:	08 0f       	add	r16, r24
    7c06:	19 1f       	adc	r17, r25
    7c08:	eb ce       	rjmp	.-554    	; 0x79e0 <main+0x1d5c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3269
                                move(Back,25);
                                if(first_touched==Left)
                                    {move(Right,T90*1.55);redroom_dir=Right;}
                                else
                                    {move(Left,T90*1.55); /*pich_sakoo=1; */ redroom_dir=Left;}
    7c0a:	0e 94 ac 45 	call	0x8b58	; 0x8b58 <__floatsisf>
    7c0e:	26 e6       	ldi	r18, 0x66	; 102
    7c10:	36 e6       	ldi	r19, 0x66	; 102
    7c12:	46 ec       	ldi	r20, 0xC6	; 198
    7c14:	5f e3       	ldi	r21, 0x3F	; 63
    7c16:	0e 94 5c 46 	call	0x8cb8	; 0x8cb8 <__mulsf3>
    7c1a:	0e 94 74 45 	call	0x8ae8	; 0x8ae8 <__fixsfsi>
    7c1e:	44 eb       	ldi	r20, 0xB4	; 180
    7c20:	50 e0       	ldi	r21, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3327
                    else{
                      move(Back,25);
                      if(first_touched==Left)
                          {move(Right,T90);redroom_dir=Right;}
                      else
                          {move(Left,T90); /*pich_sakoo=1; */ redroom_dir=Left;}
    7c22:	8b e0       	ldi	r24, 0x0B	; 11
    7c24:	90 e0       	ldi	r25, 0x00	; 0
    7c26:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
    7c2a:	8b e0       	ldi	r24, 0x0B	; 11
    7c2c:	90 e0       	ldi	r25, 0x00	; 0
    7c2e:	04 cf       	rjmp	.-504    	; 0x7a38 <main+0x1db4>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3272
                                    {move(Right,T90*1.55);redroom_dir=Right;}
                                else
                                    {move(Left,T90*1.55); /*pich_sakoo=1; */ redroom_dir=Left;}
                                no_side=1;
                            }
                            else if((VL_Front>102) && color_F==RED && b_ball>0 && ev_s_ball>1)
    7c30:	83 e0       	ldi	r24, 0x03	; 3
    7c32:	0e 94 a8 10 	call	0x2150	; 0x2150 <color(char)>
    7c36:	81 11       	cpse	r24, r1
    7c38:	b2 cd       	rjmp	.-1180   	; 0x779e <main+0x1b1a>
    7c3a:	80 91 93 09 	lds	r24, 0x0993	; 0x800993 <b_ball>
    7c3e:	90 91 94 09 	lds	r25, 0x0994	; 0x800994 <b_ball+0x1>
    7c42:	18 16       	cp	r1, r24
    7c44:	19 06       	cpc	r1, r25
    7c46:	0c f0       	brlt	.+2      	; 0x7c4a <main+0x1fc6>
    7c48:	aa cd       	rjmp	.-1196   	; 0x779e <main+0x1b1a>
    7c4a:	02 30       	cpi	r16, 0x02	; 2
    7c4c:	11 05       	cpc	r17, r1
    7c4e:	0c f4       	brge	.+2      	; 0x7c52 <main+0x1fce>
    7c50:	a6 cd       	rjmp	.-1204   	; 0x779e <main+0x1b1a>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3276
                            {
                                while(1)
                                    {
                                    if(fifth==1)
    7c52:	80 91 83 09 	lds	r24, 0x0983	; 0x800983 <fifth>
    7c56:	90 91 84 09 	lds	r25, 0x0984	; 0x800984 <fifth+0x1>
    7c5a:	01 97       	sbiw	r24, 0x01	; 1
    7c5c:	21 f4       	brne	.+8      	; 0x7c66 <main+0x1fe2>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3291
                                                move_gripper(gripper_open,600);delay(500);
                                                move(Back,60);go(0,0);
                                                move_arm(arm_down,500);delay(200);correction(forward);go(0,0);

                                            }
                                        fifth=0;
    7c5e:	10 92 84 09 	sts	0x0984, r1	; 0x800984 <fifth+0x1>
    7c62:	10 92 83 09 	sts	0x0983, r1	; 0x800983 <fifth>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3293
                                        }
                                    if(rotate(2)!=10)
    7c66:	82 e0       	ldi	r24, 0x02	; 2
    7c68:	90 e0       	ldi	r25, 0x00	; 0
    7c6a:	0e 94 0c 08 	call	0x1018	; 0x1018 <rotate(int)>
    7c6e:	a0 90 89 09 	lds	r10, 0x0989	; 0x800989 <ev_b_ball>
    7c72:	b0 90 8a 09 	lds	r11, 0x098A	; 0x80098a <ev_b_ball+0x1>
    7c76:	0a 97       	sbiw	r24, 0x0a	; 10
    7c78:	09 f4       	brne	.+2      	; 0x7c7c <main+0x1ff8>
    7c7a:	44 c0       	rjmp	.+136    	; 0x7d04 <main+0x2080>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3295
                                        {
                                        delay(50);
    7c7c:	62 e3       	ldi	r22, 0x32	; 50
    7c7e:	70 e0       	ldi	r23, 0x00	; 0
    7c80:	80 e0       	ldi	r24, 0x00	; 0
    7c82:	90 e0       	ldi	r25, 0x00	; 0
    7c84:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3296
                                        ev_b_ball++;
    7c88:	5f ef       	ldi	r21, 0xFF	; 255
    7c8a:	a5 1a       	sub	r10, r21
    7c8c:	b5 0a       	sbc	r11, r21
    7c8e:	b0 92 8a 09 	sts	0x098A, r11	; 0x80098a <ev_b_ball+0x1>
    7c92:	a0 92 89 09 	sts	0x0989, r10	; 0x800989 <ev_b_ball>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3297
                                        b_ball--;
    7c96:	80 91 93 09 	lds	r24, 0x0993	; 0x800993 <b_ball>
    7c9a:	90 91 94 09 	lds	r25, 0x0994	; 0x800994 <b_ball+0x1>
    7c9e:	01 97       	sbiw	r24, 0x01	; 1
    7ca0:	90 93 94 09 	sts	0x0994, r25	; 0x800994 <b_ball+0x1>
    7ca4:	80 93 93 09 	sts	0x0993, r24	; 0x800993 <b_ball>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3298
                                        ball_num--;
    7ca8:	80 91 a1 09 	lds	r24, 0x09A1	; 0x8009a1 <ball_num>
    7cac:	90 91 a2 09 	lds	r25, 0x09A2	; 0x8009a2 <ball_num+0x1>
    7cb0:	01 97       	sbiw	r24, 0x01	; 1
    7cb2:	90 93 a2 09 	sts	0x09A2, r25	; 0x8009a2 <ball_num+0x1>
    7cb6:	80 93 a1 09 	sts	0x09A1, r24	; 0x8009a1 <ball_num>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3299
                                        barband[rotate(2)]=0; delay(700);
    7cba:	82 e0       	ldi	r24, 0x02	; 2
    7cbc:	90 e0       	ldi	r25, 0x00	; 0
    7cbe:	0e 94 0c 08 	call	0x1018	; 0x1018 <rotate(int)>
    7cc2:	8b 57       	subi	r24, 0x7B	; 123
    7cc4:	96 4f       	sbci	r25, 0xF6	; 246
    7cc6:	fc 01       	movw	r30, r24
    7cc8:	10 82       	st	Z, r1
    7cca:	6c eb       	ldi	r22, 0xBC	; 188
    7ccc:	72 e0       	ldi	r23, 0x02	; 2
    7cce:	80 e0       	ldi	r24, 0x00	; 0
    7cd0:	90 e0       	ldi	r25, 0x00	; 0
    7cd2:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3300
                                        move_basket(basket_up,500); delay(800);
    7cd6:	64 ef       	ldi	r22, 0xF4	; 244
    7cd8:	71 e0       	ldi	r23, 0x01	; 1
    7cda:	c6 01       	movw	r24, r12
    7cdc:	0e 94 8c 1b 	call	0x3718	; 0x3718 <move_basket(int, int)>
    7ce0:	60 e2       	ldi	r22, 0x20	; 32
    7ce2:	73 e0       	ldi	r23, 0x03	; 3
    7ce4:	80 e0       	ldi	r24, 0x00	; 0
    7ce6:	90 e0       	ldi	r25, 0x00	; 0
    7ce8:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3301
                                        move_basket(basket_normal,350); delay(300);
    7cec:	6e e5       	ldi	r22, 0x5E	; 94
    7cee:	71 e0       	ldi	r23, 0x01	; 1
    7cf0:	c7 01       	movw	r24, r14
    7cf2:	0e 94 8c 1b 	call	0x3718	; 0x3718 <move_basket(int, int)>
    7cf6:	6c e2       	ldi	r22, 0x2C	; 44
    7cf8:	71 e0       	ldi	r23, 0x01	; 1
    7cfa:	80 e0       	ldi	r24, 0x00	; 0
    7cfc:	90 e0       	ldi	r25, 0x00	; 0
    7cfe:	0e 94 24 03 	call	0x648	; 0x648 <delay>
    7d02:	a7 cf       	rjmp	.-178    	; 0x7c52 <main+0x1fce>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3305
                                        }
                                    else break;
                                    }
                                ev_ball=ev_s_ball+ev_b_ball;
    7d04:	0a 0d       	add	r16, r10
    7d06:	1b 1d       	adc	r17, r11
    7d08:	10 93 96 09 	sts	0x0996, r17	; 0x800996 <ev_ball+0x1>
    7d0c:	00 93 95 09 	sts	0x0995, r16	; 0x800995 <ev_ball>
    7d10:	a9 ce       	rjmp	.-686    	; 0x7a64 <main+0x1de0>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3346
                        {
                        move(Right,T90*0.9);
                        }
                    else
                    {
                        if(VL_Right<=120 && VL_Right!=20) 
    7d12:	81 e0       	ldi	r24, 0x01	; 1
    7d14:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    7d18:	89 37       	cpi	r24, 0x79	; 121
    7d1a:	91 05       	cpc	r25, r1
    7d1c:	78 f1       	brcs	.+94     	; 0x7d7c <main+0x20f8>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3353
                                redroom_dir=Left;
                                correction(sides);
                                move(Back,15);
                                move(Left,T90);
                            }
                        else{move(Right,T90);}
    7d1e:	44 eb       	ldi	r20, 0xB4	; 180
    7d20:	50 e0       	ldi	r21, 0x00	; 0
    7d22:	68 85       	ldd	r22, Y+8	; 0x08
    7d24:	79 85       	ldd	r23, Y+9	; 0x09
    7d26:	8c e0       	ldi	r24, 0x0C	; 12
    7d28:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3351
                        if(VL_Right<=120 && VL_Right!=20) 
                            {
                                redroom_dir=Left;
                                correction(sides);
                                move(Back,15);
                                move(Left,T90);
    7d2a:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3354
                            }
                        else{move(Right,T90);}
                        go(spd,spd);check_while();
    7d2e:	80 91 99 09 	lds	r24, 0x0999	; 0x800999 <spd>
    7d32:	90 91 9a 09 	lds	r25, 0x099A	; 0x80099a <spd+0x1>
    7d36:	bc 01       	movw	r22, r24
    7d38:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
    7d3c:	0e 94 2b 1f 	call	0x3e56	; 0x3e56 <check_while()>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3355
                        if(check_while_finished==0){
    7d40:	80 91 91 09 	lds	r24, 0x0991	; 0x800991 <check_while_finished>
    7d44:	90 91 92 09 	lds	r25, 0x0992	; 0x800992 <check_while_finished+0x1>
    7d48:	89 2b       	or	r24, r25
    7d4a:	99 f4       	brne	.+38     	; 0x7d72 <main+0x20ee>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3356
                          if(redroom_dir==Left){move(Left,T90);redroom_dir=Right;}
    7d4c:	80 91 9b 09 	lds	r24, 0x099B	; 0x80099b <redroom_dir>
    7d50:	90 91 9c 09 	lds	r25, 0x099C	; 0x80099c <redroom_dir+0x1>
    7d54:	44 eb       	ldi	r20, 0xB4	; 180
    7d56:	50 e0       	ldi	r21, 0x00	; 0
    7d58:	68 85       	ldd	r22, Y+8	; 0x08
    7d5a:	79 85       	ldd	r23, Y+9	; 0x09
    7d5c:	0b 97       	sbiw	r24, 0x0b	; 11
    7d5e:	09 f0       	breq	.+2      	; 0x7d62 <main+0x20de>
    7d60:	77 c0       	rjmp	.+238    	; 0x7e50 <main+0x21cc>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3381
                            }
                        else{move(Left,T90);}
                        go(spd,spd);check_while();
                        if(check_while_finished==0){
                          if(redroom_dir==Right){move(Right,T90);redroom_dir=Left;}
                          else {move(Left,T90);redroom_dir=Right;}
    7d62:	8b e0       	ldi	r24, 0x0B	; 11
    7d64:	90 e0       	ldi	r25, 0x00	; 0
    7d66:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
    7d6a:	90 92 9c 09 	sts	0x099C, r9	; 0x80099c <redroom_dir+0x1>
    7d6e:	80 92 9b 09 	sts	0x099B, r8	; 0x80099b <redroom_dir>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3385
                        }
                    }
                }
                check_while_finished=0;
    7d72:	10 92 92 09 	sts	0x0992, r1	; 0x800992 <check_while_finished+0x1>
    7d76:	10 92 91 09 	sts	0x0991, r1	; 0x800991 <check_while_finished>
    7d7a:	cb cb       	rjmp	.-2154   	; 0x7512 <main+0x188e>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3346
                        {
                        move(Right,T90*0.9);
                        }
                    else
                    {
                        if(VL_Right<=120 && VL_Right!=20) 
    7d7c:	81 e0       	ldi	r24, 0x01	; 1
    7d7e:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    7d82:	44 97       	sbiw	r24, 0x14	; 20
    7d84:	61 f2       	breq	.-104    	; 0x7d1e <main+0x209a>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3348
                            {
                                redroom_dir=Left;
    7d86:	8b e0       	ldi	r24, 0x0B	; 11
    7d88:	90 e0       	ldi	r25, 0x00	; 0
    7d8a:	90 93 9c 09 	sts	0x099C, r25	; 0x80099c <redroom_dir+0x1>
    7d8e:	80 93 9b 09 	sts	0x099B, r24	; 0x80099b <redroom_dir>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3349
                                correction(sides);
    7d92:	83 e0       	ldi	r24, 0x03	; 3
    7d94:	0e 94 69 0d 	call	0x1ad2	; 0x1ad2 <correction(char)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3350
                                move(Back,15);
    7d98:	44 eb       	ldi	r20, 0xB4	; 180
    7d9a:	50 e0       	ldi	r21, 0x00	; 0
    7d9c:	6f e0       	ldi	r22, 0x0F	; 15
    7d9e:	70 e0       	ldi	r23, 0x00	; 0
    7da0:	8d e0       	ldi	r24, 0x0D	; 13
    7da2:	90 e0       	ldi	r25, 0x00	; 0
    7da4:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3351
                                move(Left,T90);
    7da8:	44 eb       	ldi	r20, 0xB4	; 180
    7daa:	50 e0       	ldi	r21, 0x00	; 0
    7dac:	68 85       	ldd	r22, Y+8	; 0x08
    7dae:	79 85       	ldd	r23, Y+9	; 0x09
    7db0:	8b e0       	ldi	r24, 0x0B	; 11
    7db2:	90 e0       	ldi	r25, 0x00	; 0
    7db4:	ba cf       	rjmp	.-140    	; 0x7d2a <main+0x20a6>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3362
                          else {move(Right,T90);redroom_dir=Left;}
                        }

                    }
                }
                else if(redroom_dir==Left)
    7db6:	0b 97       	sbiw	r24, 0x0b	; 11
    7db8:	e1 f6       	brne	.-72     	; 0x7d72 <main+0x20ee>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3364
                {
                    if(ev_ball>=2 && b_ball>=1)//(s_ball>=2 || b_ball>=2)change
    7dba:	80 91 95 09 	lds	r24, 0x0995	; 0x800995 <ev_ball>
    7dbe:	90 91 96 09 	lds	r25, 0x0996	; 0x800996 <ev_ball+0x1>
    7dc2:	02 97       	sbiw	r24, 0x02	; 2
    7dc4:	e4 f0       	brlt	.+56     	; 0x7dfe <main+0x217a>
    7dc6:	80 91 93 09 	lds	r24, 0x0993	; 0x800993 <b_ball>
    7dca:	90 91 94 09 	lds	r25, 0x0994	; 0x800994 <b_ball+0x1>
    7dce:	18 16       	cp	r1, r24
    7dd0:	19 06       	cpc	r1, r25
    7dd2:	ac f4       	brge	.+42     	; 0x7dfe <main+0x217a>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3366
                        {
                        move(Left,T90*0.9);
    7dd4:	48 85       	ldd	r20, Y+8	; 0x08
    7dd6:	59 85       	ldd	r21, Y+9	; 0x09
    7dd8:	ba 01       	movw	r22, r20
    7dda:	55 0f       	add	r21, r21
    7ddc:	88 0b       	sbc	r24, r24
    7dde:	99 0b       	sbc	r25, r25
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3550
            }
            else if(redroom_dir==Left)
            {
                if(ev_ball>=2 && b_ball>=1)//(s_ball>=2 || b_ball>=2)change
                    {
                    move(Left,T90*0.9);
    7de0:	0e 94 ac 45 	call	0x8b58	; 0x8b58 <__floatsisf>
    7de4:	26 e6       	ldi	r18, 0x66	; 102
    7de6:	36 e6       	ldi	r19, 0x66	; 102
    7de8:	46 e6       	ldi	r20, 0x66	; 102
    7dea:	5f e3       	ldi	r21, 0x3F	; 63
    7dec:	0e 94 5c 46 	call	0x8cb8	; 0x8cb8 <__mulsf3>
    7df0:	0e 94 74 45 	call	0x8ae8	; 0x8ae8 <__fixsfsi>
    7df4:	44 eb       	ldi	r20, 0xB4	; 180
    7df6:	50 e0       	ldi	r21, 0x00	; 0
    7df8:	8b e0       	ldi	r24, 0x0B	; 11
    7dfa:	90 e0       	ldi	r25, 0x00	; 0
    7dfc:	f3 cb       	rjmp	.-2074   	; 0x75e4 <main+0x1960>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3370
                        {
                        move(Left,T90*0.9);
                        }
                    else
                    {
                        if(VL_Left<=120 && VL_Left!=20) 
    7dfe:	82 e0       	ldi	r24, 0x02	; 2
    7e00:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    7e04:	89 37       	cpi	r24, 0x79	; 121
    7e06:	91 05       	cpc	r25, r1
    7e08:	70 f1       	brcs	.+92     	; 0x7e66 <main+0x21e2>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3377
                                redroom_dir=Right;
                                correction(sides);
                                move(Back,15);
                                move(Right,T90);
                            }
                        else{move(Left,T90);}
    7e0a:	44 eb       	ldi	r20, 0xB4	; 180
    7e0c:	50 e0       	ldi	r21, 0x00	; 0
    7e0e:	68 85       	ldd	r22, Y+8	; 0x08
    7e10:	79 85       	ldd	r23, Y+9	; 0x09
    7e12:	8b e0       	ldi	r24, 0x0B	; 11
    7e14:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3375
                        if(VL_Left<=120 && VL_Left!=20) 
                            {
                                redroom_dir=Right;
                                correction(sides);
                                move(Back,15);
                                move(Right,T90);
    7e16:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3378
                            }
                        else{move(Left,T90);}
                        go(spd,spd);check_while();
    7e1a:	80 91 99 09 	lds	r24, 0x0999	; 0x800999 <spd>
    7e1e:	90 91 9a 09 	lds	r25, 0x099A	; 0x80099a <spd+0x1>
    7e22:	bc 01       	movw	r22, r24
    7e24:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
    7e28:	0e 94 2b 1f 	call	0x3e56	; 0x3e56 <check_while()>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3379
                        if(check_while_finished==0){
    7e2c:	80 91 91 09 	lds	r24, 0x0991	; 0x800991 <check_while_finished>
    7e30:	90 91 92 09 	lds	r25, 0x0992	; 0x800992 <check_while_finished+0x1>
    7e34:	89 2b       	or	r24, r25
    7e36:	09 f0       	breq	.+2      	; 0x7e3a <main+0x21b6>
    7e38:	9c cf       	rjmp	.-200    	; 0x7d72 <main+0x20ee>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3380
                          if(redroom_dir==Right){move(Right,T90);redroom_dir=Left;}
    7e3a:	80 91 9b 09 	lds	r24, 0x099B	; 0x80099b <redroom_dir>
    7e3e:	90 91 9c 09 	lds	r25, 0x099C	; 0x80099c <redroom_dir+0x1>
    7e42:	44 eb       	ldi	r20, 0xB4	; 180
    7e44:	50 e0       	ldi	r21, 0x00	; 0
    7e46:	68 85       	ldd	r22, Y+8	; 0x08
    7e48:	79 85       	ldd	r23, Y+9	; 0x09
    7e4a:	0c 97       	sbiw	r24, 0x0c	; 12
    7e4c:	09 f0       	breq	.+2      	; 0x7e50 <main+0x21cc>
    7e4e:	89 cf       	rjmp	.-238    	; 0x7d62 <main+0x20de>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3564
                            move(Right,T90);
                        }
                    else{move(Left,T90);}
                    go(spd,spd);check_while();
                    if(check_while_finished==0){
                          if(redroom_dir==Right){move(Right,T90);redroom_dir=Left;}
    7e50:	8c e0       	ldi	r24, 0x0C	; 12
    7e52:	90 e0       	ldi	r25, 0x00	; 0
    7e54:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
    7e58:	8b e0       	ldi	r24, 0x0B	; 11
    7e5a:	90 e0       	ldi	r25, 0x00	; 0
    7e5c:	90 93 9c 09 	sts	0x099C, r25	; 0x80099c <redroom_dir+0x1>
    7e60:	80 93 9b 09 	sts	0x099B, r24	; 0x80099b <redroom_dir>
    7e64:	86 cf       	rjmp	.-244    	; 0x7d72 <main+0x20ee>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3370
                        {
                        move(Left,T90*0.9);
                        }
                    else
                    {
                        if(VL_Left<=120 && VL_Left!=20) 
    7e66:	82 e0       	ldi	r24, 0x02	; 2
    7e68:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    7e6c:	44 97       	sbiw	r24, 0x14	; 20
    7e6e:	69 f2       	breq	.-102    	; 0x7e0a <main+0x2186>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3372
                            {
                                redroom_dir=Right;
    7e70:	90 92 9c 09 	sts	0x099C, r9	; 0x80099c <redroom_dir+0x1>
    7e74:	80 92 9b 09 	sts	0x099B, r8	; 0x80099b <redroom_dir>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3373
                                correction(sides);
    7e78:	83 e0       	ldi	r24, 0x03	; 3
    7e7a:	0e 94 69 0d 	call	0x1ad2	; 0x1ad2 <correction(char)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3374
                                move(Back,15);
    7e7e:	44 eb       	ldi	r20, 0xB4	; 180
    7e80:	50 e0       	ldi	r21, 0x00	; 0
    7e82:	6f e0       	ldi	r22, 0x0F	; 15
    7e84:	70 e0       	ldi	r23, 0x00	; 0
    7e86:	8d e0       	ldi	r24, 0x0D	; 13
    7e88:	90 e0       	ldi	r25, 0x00	; 0
    7e8a:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3375
                                move(Right,T90);
    7e8e:	44 eb       	ldi	r20, 0xB4	; 180
    7e90:	50 e0       	ldi	r21, 0x00	; 0
    7e92:	68 85       	ldd	r22, Y+8	; 0x08
    7e94:	79 85       	ldd	r23, Y+9	; 0x09
    7e96:	8c e0       	ldi	r24, 0x0C	; 12
    7e98:	90 e0       	ldi	r25, 0x00	; 0
    7e9a:	bd cf       	rjmp	.-134    	; 0x7e16 <main+0x2192>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3389
                }
                check_while_finished=0;
            }

        }
        else if(!its_not_obs) //obstacle
    7e9c:	80 91 81 09 	lds	r24, 0x0981	; 0x800981 <its_not_obs>
    7ea0:	90 91 82 09 	lds	r25, 0x0982	; 0x800982 <its_not_obs+0x1>
    7ea4:	89 2b       	or	r24, r25
    7ea6:	09 f0       	breq	.+2      	; 0x7eaa <main+0x2226>
    7ea8:	fd c1       	rjmp	.+1018   	; 0x82a4 <main+0x2620>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3391
        {
           victim();
    7eaa:	0e 94 3c 0b 	call	0x1678	; 0x1678 <victim()>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3392
            if(SFL==0 && SFR==0){
    7eae:	40 e0       	ldi	r20, 0x00	; 0
    7eb0:	62 e0       	ldi	r22, 0x02	; 2
    7eb2:	84 e0       	ldi	r24, 0x04	; 4
    7eb4:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    7eb8:	89 2b       	or	r24, r25
    7eba:	09 f0       	breq	.+2      	; 0x7ebe <main+0x223a>
    7ebc:	2a cb       	rjmp	.-2476   	; 0x7512 <main+0x188e>
    7ebe:	40 e0       	ldi	r20, 0x00	; 0
    7ec0:	63 e0       	ldi	r22, 0x03	; 3
    7ec2:	84 e0       	ldi	r24, 0x04	; 4
    7ec4:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    7ec8:	89 2b       	or	r24, r25
    7eca:	09 f0       	breq	.+2      	; 0x7ece <main+0x224a>
    7ecc:	22 cb       	rjmp	.-2492   	; 0x7512 <main+0x188e>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3393
                move(Back,30);
    7ece:	44 eb       	ldi	r20, 0xB4	; 180
    7ed0:	50 e0       	ldi	r21, 0x00	; 0
    7ed2:	6e e1       	ldi	r22, 0x1E	; 30
    7ed4:	70 e0       	ldi	r23, 0x00	; 0
    7ed6:	8d e0       	ldi	r24, 0x0D	; 13
    7ed8:	90 e0       	ldi	r25, 0x00	; 0
    7eda:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3394
                if(redroom_dir==Right)
    7ede:	80 91 9b 09 	lds	r24, 0x099B	; 0x80099b <redroom_dir>
    7ee2:	90 91 9c 09 	lds	r25, 0x099C	; 0x80099c <redroom_dir+0x1>
    7ee6:	8c 30       	cpi	r24, 0x0C	; 12
    7ee8:	91 05       	cpc	r25, r1
    7eea:	09 f0       	breq	.+2      	; 0x7eee <main+0x226a>
    7eec:	f9 c0       	rjmp	.+498    	; 0x80e0 <main+0x245c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3396
                {
                    move(Right,T90,spd);
    7eee:	00 91 99 09 	lds	r16, 0x0999	; 0x800999 <spd>
    7ef2:	10 91 9a 09 	lds	r17, 0x099A	; 0x80099a <spd+0x1>
    7ef6:	a8 01       	movw	r20, r16
    7ef8:	68 85       	ldd	r22, Y+8	; 0x08
    7efa:	79 85       	ldd	r23, Y+9	; 0x09
    7efc:	8c e0       	ldi	r24, 0x0C	; 12
    7efe:	90 e0       	ldi	r25, 0x00	; 0
    7f00:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3397
                    go(spd,spd);
    7f04:	b8 01       	movw	r22, r16
    7f06:	c8 01       	movw	r24, r16
    7f08:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3398
                    if(ev_ball>=2 && b_ball>=1)//(s_ball>=2|| b_ball>=2 || fifth==1)change
    7f0c:	80 91 95 09 	lds	r24, 0x0995	; 0x800995 <ev_ball>
    7f10:	90 91 96 09 	lds	r25, 0x0996	; 0x800996 <ev_ball+0x1>
    7f14:	02 97       	sbiw	r24, 0x02	; 2
    7f16:	0c f4       	brge	.+2      	; 0x7f1a <main+0x2296>
    7f18:	c9 c0       	rjmp	.+402    	; 0x80ac <main+0x2428>
    7f1a:	80 91 93 09 	lds	r24, 0x0993	; 0x800993 <b_ball>
    7f1e:	90 91 94 09 	lds	r25, 0x0994	; 0x800994 <b_ball+0x1>
    7f22:	18 16       	cp	r1, r24
    7f24:	19 06       	cpc	r1, r25
    7f26:	0c f0       	brlt	.+2      	; 0x7f2a <main+0x22a6>
    7f28:	c1 c0       	rjmp	.+386    	; 0x80ac <main+0x2428>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3400
                    {
                        if(VL_Left<135 && VL_Left!=20)
    7f2a:	82 e0       	ldi	r24, 0x02	; 2
    7f2c:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    7f30:	87 38       	cpi	r24, 0x87	; 135
    7f32:	91 05       	cpc	r25, r1
    7f34:	08 f4       	brcc	.+2      	; 0x7f38 <main+0x22b4>
    7f36:	59 c0       	rjmp	.+178    	; 0x7fea <main+0x2366>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3424
                                move(Back,20);move(Left,T90*2);
                                }
                        }
                        else
                        {
                            go(150,150);
    7f38:	66 e9       	ldi	r22, 0x96	; 150
    7f3a:	70 e0       	ldi	r23, 0x00	; 0
    7f3c:	86 e9       	ldi	r24, 0x96	; 150
    7f3e:	90 e0       	ldi	r25, 0x00	; 0
    7f40:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3425
                            cnt=0;
    7f44:	1d bc       	out	0x2d, r1	; 45
    7f46:	1c bc       	out	0x2c, r1	; 44
    7f48:	09 ec       	ldi	r16, 0xC9	; 201
    7f4a:	10 e0       	ldi	r17, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3427
                            i=0;
                            while(cnt/100<=40 && i<200)
    7f4c:	8c b5       	in	r24, 0x2c	; 44
    7f4e:	9d b5       	in	r25, 0x2d	; 45
    7f50:	84 30       	cpi	r24, 0x04	; 4
    7f52:	90 41       	sbci	r25, 0x10	; 16
    7f54:	58 f5       	brcc	.+86     	; 0x7fac <main+0x2328>
    7f56:	01 50       	subi	r16, 0x01	; 1
    7f58:	11 09       	sbc	r17, r1
    7f5a:	41 f1       	breq	.+80     	; 0x7fac <main+0x2328>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3430
                            {
                                i++;
                                delay(3);
    7f5c:	63 e0       	ldi	r22, 0x03	; 3
    7f5e:	70 e0       	ldi	r23, 0x00	; 0
    7f60:	80 e0       	ldi	r24, 0x00	; 0
    7f62:	90 e0       	ldi	r25, 0x00	; 0
    7f64:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3431
                                victim();
    7f68:	0e 94 3c 0b 	call	0x1678	; 0x1678 <victim()>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3432
                                if(VSR10<=silver_voltage_R||VSL10<=silver_voltage_L||SM){move(Back,75);break;}
    7f6c:	41 e0       	ldi	r20, 0x01	; 1
    7f6e:	63 e0       	ldi	r22, 0x03	; 3
    7f70:	82 e0       	ldi	r24, 0x02	; 2
    7f72:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    7f76:	04 97       	sbiw	r24, 0x04	; 4
    7f78:	0c f4       	brge	.+2      	; 0x7f7c <main+0x22f8>
    7f7a:	86 c0       	rjmp	.+268    	; 0x8088 <main+0x2404>
    7f7c:	41 e0       	ldi	r20, 0x01	; 1
    7f7e:	62 e0       	ldi	r22, 0x02	; 2
    7f80:	82 e0       	ldi	r24, 0x02	; 2
    7f82:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    7f86:	04 97       	sbiw	r24, 0x04	; 4
    7f88:	0c f4       	brge	.+2      	; 0x7f8c <main+0x2308>
    7f8a:	7e c0       	rjmp	.+252    	; 0x8088 <main+0x2404>
    7f8c:	40 e0       	ldi	r20, 0x00	; 0
    7f8e:	60 e0       	ldi	r22, 0x00	; 0
    7f90:	80 e0       	ldi	r24, 0x00	; 0
    7f92:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    7f96:	89 2b       	or	r24, r25
    7f98:	09 f0       	breq	.+2      	; 0x7f9c <main+0x2318>
    7f9a:	76 c0       	rjmp	.+236    	; 0x8088 <main+0x2404>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3433
                                if(SFL||SFR)break;
    7f9c:	40 e0       	ldi	r20, 0x00	; 0
    7f9e:	62 e0       	ldi	r22, 0x02	; 2
    7fa0:	84 e0       	ldi	r24, 0x04	; 4
    7fa2:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    7fa6:	89 2b       	or	r24, r25
    7fa8:	09 f4       	brne	.+2      	; 0x7fac <main+0x2328>
    7faa:	77 c0       	rjmp	.+238    	; 0x809a <main+0x2416>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3435
                            }
                            if(SFL==1||SFR==1)
    7fac:	40 e0       	ldi	r20, 0x00	; 0
    7fae:	62 e0       	ldi	r22, 0x02	; 2
    7fb0:	84 e0       	ldi	r24, 0x04	; 4
    7fb2:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    7fb6:	01 97       	sbiw	r24, 0x01	; 1
    7fb8:	41 f0       	breq	.+16     	; 0x7fca <main+0x2346>
    7fba:	40 e0       	ldi	r20, 0x00	; 0
    7fbc:	63 e0       	ldi	r22, 0x03	; 3
    7fbe:	84 e0       	ldi	r24, 0x04	; 4
    7fc0:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    7fc4:	01 97       	sbiw	r24, 0x01	; 1
    7fc6:	09 f0       	breq	.+2      	; 0x7fca <main+0x2346>
    7fc8:	d0 c8       	rjmp	.-3680   	; 0x716a <main+0x14e6>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3437
                            {
                                go(spd,spd);check_while();
    7fca:	80 91 99 09 	lds	r24, 0x0999	; 0x800999 <spd>
    7fce:	90 91 9a 09 	lds	r25, 0x099A	; 0x80099a <spd+0x1>
    7fd2:	bc 01       	movw	r22, r24
    7fd4:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
    7fd8:	0e 94 2b 1f 	call	0x3e56	; 0x3e56 <check_while()>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3438
                                move(Left,T90*0.85);
    7fdc:	e8 85       	ldd	r30, Y+8	; 0x08
    7fde:	f9 85       	ldd	r31, Y+9	; 0x09
    7fe0:	bf 01       	movw	r22, r30
    7fe2:	ff 0f       	add	r31, r31
    7fe4:	88 0b       	sbc	r24, r24
    7fe6:	99 0b       	sbc	r25, r25
    7fe8:	5c c9       	rjmp	.-3400   	; 0x72a2 <main+0x161e>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3400
                {
                    move(Right,T90,spd);
                    go(spd,spd);
                    if(ev_ball>=2 && b_ball>=1)//(s_ball>=2|| b_ball>=2 || fifth==1)change
                    {
                        if(VL_Left<135 && VL_Left!=20)
    7fea:	82 e0       	ldi	r24, 0x02	; 2
    7fec:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    7ff0:	44 97       	sbiw	r24, 0x14	; 20
    7ff2:	09 f4       	brne	.+2      	; 0x7ff6 <main+0x2372>
    7ff4:	a1 cf       	rjmp	.-190    	; 0x7f38 <main+0x22b4>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3402
                        {
                            go(100,100); 
    7ff6:	64 e6       	ldi	r22, 0x64	; 100
    7ff8:	70 e0       	ldi	r23, 0x00	; 0
    7ffa:	84 e6       	ldi	r24, 0x64	; 100
    7ffc:	90 e0       	ldi	r25, 0x00	; 0
    7ffe:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
    8002:	09 ec       	ldi	r16, 0xC9	; 201
    8004:	10 e0       	ldi	r17, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3404
                            i=0;
                            while(VL_Left<135 && i<200)
    8006:	82 e0       	ldi	r24, 0x02	; 2
    8008:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    800c:	87 38       	cpi	r24, 0x87	; 135
    800e:	91 05       	cpc	r25, r1
    8010:	08 f0       	brcs	.+2      	; 0x8014 <main+0x2390>
    8012:	ee c8       	rjmp	.-3620   	; 0x71f0 <main+0x156c>
    8014:	01 50       	subi	r16, 0x01	; 1
    8016:	11 09       	sbc	r17, r1
    8018:	09 f4       	brne	.+2      	; 0x801c <main+0x2398>
    801a:	ea c8       	rjmp	.-3628   	; 0x71f0 <main+0x156c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3407
                            {
                                i++;
                                delay(3);
    801c:	63 e0       	ldi	r22, 0x03	; 3
    801e:	70 e0       	ldi	r23, 0x00	; 0
    8020:	80 e0       	ldi	r24, 0x00	; 0
    8022:	90 e0       	ldi	r25, 0x00	; 0
    8024:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3408
                                victim();
    8028:	0e 94 3c 0b 	call	0x1678	; 0x1678 <victim()>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3409
                                if(VSR10<=silver_voltage_R||VSL10<=silver_voltage_L||SM){move(Back,75);break;}
    802c:	41 e0       	ldi	r20, 0x01	; 1
    802e:	63 e0       	ldi	r22, 0x03	; 3
    8030:	82 e0       	ldi	r24, 0x02	; 2
    8032:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    8036:	04 97       	sbiw	r24, 0x04	; 4
    8038:	f4 f0       	brlt	.+60     	; 0x8076 <main+0x23f2>
    803a:	41 e0       	ldi	r20, 0x01	; 1
    803c:	62 e0       	ldi	r22, 0x02	; 2
    803e:	82 e0       	ldi	r24, 0x02	; 2
    8040:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    8044:	04 97       	sbiw	r24, 0x04	; 4
    8046:	bc f0       	brlt	.+46     	; 0x8076 <main+0x23f2>
    8048:	40 e0       	ldi	r20, 0x00	; 0
    804a:	60 e0       	ldi	r22, 0x00	; 0
    804c:	80 e0       	ldi	r24, 0x00	; 0
    804e:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    8052:	89 2b       	or	r24, r25
    8054:	81 f4       	brne	.+32     	; 0x8076 <main+0x23f2>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3410
                                if(SFL||SFR)break;
    8056:	40 e0       	ldi	r20, 0x00	; 0
    8058:	62 e0       	ldi	r22, 0x02	; 2
    805a:	84 e0       	ldi	r24, 0x04	; 4
    805c:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    8060:	89 2b       	or	r24, r25
    8062:	09 f0       	breq	.+2      	; 0x8066 <main+0x23e2>
    8064:	c5 c8       	rjmp	.-3702   	; 0x71f0 <main+0x156c>
    8066:	40 e0       	ldi	r20, 0x00	; 0
    8068:	63 e0       	ldi	r22, 0x03	; 3
    806a:	84 e0       	ldi	r24, 0x04	; 4
    806c:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    8070:	89 2b       	or	r24, r25
    8072:	49 f2       	breq	.-110    	; 0x8006 <main+0x2382>
    8074:	bd c8       	rjmp	.-3718   	; 0x71f0 <main+0x156c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3409
                            while(VL_Left<135 && i<200)
                            {
                                i++;
                                delay(3);
                                victim();
                                if(VSR10<=silver_voltage_R||VSL10<=silver_voltage_L||SM){move(Back,75);break;}
    8076:	44 eb       	ldi	r20, 0xB4	; 180
    8078:	50 e0       	ldi	r21, 0x00	; 0
    807a:	6b e4       	ldi	r22, 0x4B	; 75
    807c:	70 e0       	ldi	r23, 0x00	; 0
    807e:	8d e0       	ldi	r24, 0x0D	; 13
    8080:	90 e0       	ldi	r25, 0x00	; 0
    8082:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
    8086:	b4 c8       	rjmp	.-3736   	; 0x71f0 <main+0x156c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3432
                            while(cnt/100<=40 && i<200)
                            {
                                i++;
                                delay(3);
                                victim();
                                if(VSR10<=silver_voltage_R||VSL10<=silver_voltage_L||SM){move(Back,75);break;}
    8088:	44 eb       	ldi	r20, 0xB4	; 180
    808a:	50 e0       	ldi	r21, 0x00	; 0
    808c:	6b e4       	ldi	r22, 0x4B	; 75
    808e:	70 e0       	ldi	r23, 0x00	; 0
    8090:	8d e0       	ldi	r24, 0x0D	; 13
    8092:	90 e0       	ldi	r25, 0x00	; 0
    8094:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
    8098:	89 cf       	rjmp	.-238    	; 0x7fac <main+0x2328>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3433
                                if(SFL||SFR)break;
    809a:	40 e0       	ldi	r20, 0x00	; 0
    809c:	63 e0       	ldi	r22, 0x03	; 3
    809e:	84 e0       	ldi	r24, 0x04	; 4
    80a0:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    80a4:	89 2b       	or	r24, r25
    80a6:	09 f4       	brne	.+2      	; 0x80aa <main+0x2426>
    80a8:	51 cf       	rjmp	.-350    	; 0x7f4c <main+0x22c8>
    80aa:	80 cf       	rjmp	.-256    	; 0x7fac <main+0x2328>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3448
                            }
                        }
                    }
                    else
                    {
                        check_while();
    80ac:	0e 94 2b 1f 	call	0x3e56	; 0x3e56 <check_while()>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3449
                        if(check_while_finished==0){move(Right,T90,spd);redroom_dir=Left;}
    80b0:	80 91 91 09 	lds	r24, 0x0991	; 0x800991 <check_while_finished>
    80b4:	90 91 92 09 	lds	r25, 0x0992	; 0x800992 <check_while_finished+0x1>
    80b8:	89 2b       	or	r24, r25
    80ba:	09 f0       	breq	.+2      	; 0x80be <main+0x243a>
    80bc:	2a ca       	rjmp	.-2988   	; 0x7512 <main+0x188e>
    80be:	40 91 99 09 	lds	r20, 0x0999	; 0x800999 <spd>
    80c2:	50 91 9a 09 	lds	r21, 0x099A	; 0x80099a <spd+0x1>
    80c6:	68 85       	ldd	r22, Y+8	; 0x08
    80c8:	79 85       	ldd	r23, Y+9	; 0x09
    80ca:	8c e0       	ldi	r24, 0x0C	; 12
    80cc:	90 e0       	ldi	r25, 0x00	; 0
    80ce:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
    80d2:	8b e0       	ldi	r24, 0x0B	; 11
    80d4:	90 e0       	ldi	r25, 0x00	; 0
    80d6:	90 93 9c 09 	sts	0x099C, r25	; 0x80099c <redroom_dir+0x1>
    80da:	80 93 9b 09 	sts	0x099B, r24	; 0x80099b <redroom_dir>
    80de:	19 ca       	rjmp	.-3022   	; 0x7512 <main+0x188e>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3453
                    }

                }
                else if(redroom_dir==Left)
    80e0:	0b 97       	sbiw	r24, 0x0b	; 11
    80e2:	09 f0       	breq	.+2      	; 0x80e6 <main+0x2462>
    80e4:	16 ca       	rjmp	.-3028   	; 0x7512 <main+0x188e>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3455
                {
                    move(Left,T90,spd);
    80e6:	00 91 99 09 	lds	r16, 0x0999	; 0x800999 <spd>
    80ea:	10 91 9a 09 	lds	r17, 0x099A	; 0x80099a <spd+0x1>
    80ee:	a8 01       	movw	r20, r16
    80f0:	68 85       	ldd	r22, Y+8	; 0x08
    80f2:	79 85       	ldd	r23, Y+9	; 0x09
    80f4:	8b e0       	ldi	r24, 0x0B	; 11
    80f6:	90 e0       	ldi	r25, 0x00	; 0
    80f8:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3456
                    go(spd,spd);
    80fc:	b8 01       	movw	r22, r16
    80fe:	c8 01       	movw	r24, r16
    8100:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3457
                    if(ev_ball>=2 && b_ball>=1)//(s_ball>=2|| b_ball>=2 || fifth==1)change
    8104:	80 91 95 09 	lds	r24, 0x0995	; 0x800995 <ev_ball>
    8108:	90 91 96 09 	lds	r25, 0x0996	; 0x800996 <ev_ball+0x1>
    810c:	02 97       	sbiw	r24, 0x02	; 2
    810e:	0c f4       	brge	.+2      	; 0x8112 <main+0x248e>
    8110:	ea c9       	rjmp	.-3116   	; 0x74e6 <main+0x1862>
    8112:	80 91 93 09 	lds	r24, 0x0993	; 0x800993 <b_ball>
    8116:	90 91 94 09 	lds	r25, 0x0994	; 0x800994 <b_ball+0x1>
    811a:	18 16       	cp	r1, r24
    811c:	19 06       	cpc	r1, r25
    811e:	0c f0       	brlt	.+2      	; 0x8122 <main+0x249e>
    8120:	e2 c9       	rjmp	.-3132   	; 0x74e6 <main+0x1862>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3459
                    {
                        if(VL_Right<135 && VL_Right!=20)
    8122:	81 e0       	ldi	r24, 0x01	; 1
    8124:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    8128:	87 38       	cpi	r24, 0x87	; 135
    812a:	91 05       	cpc	r25, r1
    812c:	08 f4       	brcc	.+2      	; 0x8130 <main+0x24ac>
    812e:	59 c0       	rjmp	.+178    	; 0x81e2 <main+0x255e>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3483
                                move(Back,20);move(Right,T90*2);
                                }
                        }
                        else
                        {
                            go(150,150);
    8130:	66 e9       	ldi	r22, 0x96	; 150
    8132:	70 e0       	ldi	r23, 0x00	; 0
    8134:	86 e9       	ldi	r24, 0x96	; 150
    8136:	90 e0       	ldi	r25, 0x00	; 0
    8138:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3484
                            cnt=0;
    813c:	1d bc       	out	0x2d, r1	; 45
    813e:	1c bc       	out	0x2c, r1	; 44
    8140:	09 ec       	ldi	r16, 0xC9	; 201
    8142:	10 e0       	ldi	r17, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3486
                            i=0;
                            while(cnt/100<=40 && i<200)
    8144:	8c b5       	in	r24, 0x2c	; 44
    8146:	9d b5       	in	r25, 0x2d	; 45
    8148:	84 30       	cpi	r24, 0x04	; 4
    814a:	90 41       	sbci	r25, 0x10	; 16
    814c:	58 f5       	brcc	.+86     	; 0x81a4 <main+0x2520>
    814e:	01 50       	subi	r16, 0x01	; 1
    8150:	11 09       	sbc	r17, r1
    8152:	41 f1       	breq	.+80     	; 0x81a4 <main+0x2520>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3489
                            {
                                i++;
                                delay(3);
    8154:	63 e0       	ldi	r22, 0x03	; 3
    8156:	70 e0       	ldi	r23, 0x00	; 0
    8158:	80 e0       	ldi	r24, 0x00	; 0
    815a:	90 e0       	ldi	r25, 0x00	; 0
    815c:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3490
                                victim();
    8160:	0e 94 3c 0b 	call	0x1678	; 0x1678 <victim()>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3491
                                if(VSR10<=silver_voltage_R||VSL10<=silver_voltage_L||SM){move(Back,75);break;}
    8164:	41 e0       	ldi	r20, 0x01	; 1
    8166:	63 e0       	ldi	r22, 0x03	; 3
    8168:	82 e0       	ldi	r24, 0x02	; 2
    816a:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    816e:	04 97       	sbiw	r24, 0x04	; 4
    8170:	0c f4       	brge	.+2      	; 0x8174 <main+0x24f0>
    8172:	86 c0       	rjmp	.+268    	; 0x8280 <main+0x25fc>
    8174:	41 e0       	ldi	r20, 0x01	; 1
    8176:	62 e0       	ldi	r22, 0x02	; 2
    8178:	82 e0       	ldi	r24, 0x02	; 2
    817a:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    817e:	04 97       	sbiw	r24, 0x04	; 4
    8180:	0c f4       	brge	.+2      	; 0x8184 <main+0x2500>
    8182:	7e c0       	rjmp	.+252    	; 0x8280 <main+0x25fc>
    8184:	40 e0       	ldi	r20, 0x00	; 0
    8186:	60 e0       	ldi	r22, 0x00	; 0
    8188:	80 e0       	ldi	r24, 0x00	; 0
    818a:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    818e:	89 2b       	or	r24, r25
    8190:	09 f0       	breq	.+2      	; 0x8194 <main+0x2510>
    8192:	76 c0       	rjmp	.+236    	; 0x8280 <main+0x25fc>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3492
                                if(SFL||SFR)break;
    8194:	40 e0       	ldi	r20, 0x00	; 0
    8196:	62 e0       	ldi	r22, 0x02	; 2
    8198:	84 e0       	ldi	r24, 0x04	; 4
    819a:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    819e:	89 2b       	or	r24, r25
    81a0:	09 f4       	brne	.+2      	; 0x81a4 <main+0x2520>
    81a2:	77 c0       	rjmp	.+238    	; 0x8292 <main+0x260e>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3494
                            }
                            if(SFL==1||SFR==1)
    81a4:	40 e0       	ldi	r20, 0x00	; 0
    81a6:	62 e0       	ldi	r22, 0x02	; 2
    81a8:	84 e0       	ldi	r24, 0x04	; 4
    81aa:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    81ae:	01 97       	sbiw	r24, 0x01	; 1
    81b0:	41 f0       	breq	.+16     	; 0x81c2 <main+0x253e>
    81b2:	40 e0       	ldi	r20, 0x00	; 0
    81b4:	63 e0       	ldi	r22, 0x03	; 3
    81b6:	84 e0       	ldi	r24, 0x04	; 4
    81b8:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    81bc:	01 97       	sbiw	r24, 0x01	; 1
    81be:	09 f0       	breq	.+2      	; 0x81c2 <main+0x253e>
    81c0:	ed c8       	rjmp	.-3622   	; 0x739c <main+0x1718>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3496
                            {
                                go(spd,spd);check_while();
    81c2:	80 91 99 09 	lds	r24, 0x0999	; 0x800999 <spd>
    81c6:	90 91 9a 09 	lds	r25, 0x099A	; 0x80099a <spd+0x1>
    81ca:	bc 01       	movw	r22, r24
    81cc:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
    81d0:	0e 94 2b 1f 	call	0x3e56	; 0x3e56 <check_while()>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3497
                                move(Right,T90*0.85);
    81d4:	28 85       	ldd	r18, Y+8	; 0x08
    81d6:	39 85       	ldd	r19, Y+9	; 0x09
    81d8:	b9 01       	movw	r22, r18
    81da:	33 0f       	add	r19, r19
    81dc:	88 0b       	sbc	r24, r24
    81de:	99 0b       	sbc	r25, r25
    81e0:	77 c9       	rjmp	.-3346   	; 0x74d0 <main+0x184c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3459
                {
                    move(Left,T90,spd);
                    go(spd,spd);
                    if(ev_ball>=2 && b_ball>=1)//(s_ball>=2|| b_ball>=2 || fifth==1)change
                    {
                        if(VL_Right<135 && VL_Right!=20)
    81e2:	81 e0       	ldi	r24, 0x01	; 1
    81e4:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    81e8:	44 97       	sbiw	r24, 0x14	; 20
    81ea:	09 f4       	brne	.+2      	; 0x81ee <main+0x256a>
    81ec:	a1 cf       	rjmp	.-190    	; 0x8130 <main+0x24ac>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3461
                        {
                            go(100,100); 
    81ee:	64 e6       	ldi	r22, 0x64	; 100
    81f0:	70 e0       	ldi	r23, 0x00	; 0
    81f2:	84 e6       	ldi	r24, 0x64	; 100
    81f4:	90 e0       	ldi	r25, 0x00	; 0
    81f6:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
    81fa:	09 ec       	ldi	r16, 0xC9	; 201
    81fc:	10 e0       	ldi	r17, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3463
                            i=0;
                            while(VL_Right<135 && i<200)
    81fe:	81 e0       	ldi	r24, 0x01	; 1
    8200:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    8204:	87 38       	cpi	r24, 0x87	; 135
    8206:	91 05       	cpc	r25, r1
    8208:	08 f0       	brcs	.+2      	; 0x820c <main+0x2588>
    820a:	15 c9       	rjmp	.-3542   	; 0x7436 <main+0x17b2>
    820c:	01 50       	subi	r16, 0x01	; 1
    820e:	11 09       	sbc	r17, r1
    8210:	09 f4       	brne	.+2      	; 0x8214 <main+0x2590>
    8212:	11 c9       	rjmp	.-3550   	; 0x7436 <main+0x17b2>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3466
                            {
                                i++;
                                delay(3);
    8214:	63 e0       	ldi	r22, 0x03	; 3
    8216:	70 e0       	ldi	r23, 0x00	; 0
    8218:	80 e0       	ldi	r24, 0x00	; 0
    821a:	90 e0       	ldi	r25, 0x00	; 0
    821c:	0e 94 24 03 	call	0x648	; 0x648 <delay>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3467
                                victim();
    8220:	0e 94 3c 0b 	call	0x1678	; 0x1678 <victim()>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3468
                                if(VSR10<=silver_voltage_R||VSL10<=silver_voltage_L||SM){move(Back,75);break;}
    8224:	41 e0       	ldi	r20, 0x01	; 1
    8226:	63 e0       	ldi	r22, 0x03	; 3
    8228:	82 e0       	ldi	r24, 0x02	; 2
    822a:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    822e:	04 97       	sbiw	r24, 0x04	; 4
    8230:	f4 f0       	brlt	.+60     	; 0x826e <main+0x25ea>
    8232:	41 e0       	ldi	r20, 0x01	; 1
    8234:	62 e0       	ldi	r22, 0x02	; 2
    8236:	82 e0       	ldi	r24, 0x02	; 2
    8238:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    823c:	04 97       	sbiw	r24, 0x04	; 4
    823e:	bc f0       	brlt	.+46     	; 0x826e <main+0x25ea>
    8240:	40 e0       	ldi	r20, 0x00	; 0
    8242:	60 e0       	ldi	r22, 0x00	; 0
    8244:	80 e0       	ldi	r24, 0x00	; 0
    8246:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    824a:	89 2b       	or	r24, r25
    824c:	81 f4       	brne	.+32     	; 0x826e <main+0x25ea>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3469
                                if(SFL||SFR)break;
    824e:	40 e0       	ldi	r20, 0x00	; 0
    8250:	62 e0       	ldi	r22, 0x02	; 2
    8252:	84 e0       	ldi	r24, 0x04	; 4
    8254:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    8258:	89 2b       	or	r24, r25
    825a:	09 f0       	breq	.+2      	; 0x825e <main+0x25da>
    825c:	ec c8       	rjmp	.-3624   	; 0x7436 <main+0x17b2>
    825e:	40 e0       	ldi	r20, 0x00	; 0
    8260:	63 e0       	ldi	r22, 0x03	; 3
    8262:	84 e0       	ldi	r24, 0x04	; 4
    8264:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    8268:	89 2b       	or	r24, r25
    826a:	49 f2       	breq	.-110    	; 0x81fe <main+0x257a>
    826c:	e4 c8       	rjmp	.-3640   	; 0x7436 <main+0x17b2>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3468
                            while(VL_Right<135 && i<200)
                            {
                                i++;
                                delay(3);
                                victim();
                                if(VSR10<=silver_voltage_R||VSL10<=silver_voltage_L||SM){move(Back,75);break;}
    826e:	44 eb       	ldi	r20, 0xB4	; 180
    8270:	50 e0       	ldi	r21, 0x00	; 0
    8272:	6b e4       	ldi	r22, 0x4B	; 75
    8274:	70 e0       	ldi	r23, 0x00	; 0
    8276:	8d e0       	ldi	r24, 0x0D	; 13
    8278:	90 e0       	ldi	r25, 0x00	; 0
    827a:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
    827e:	db c8       	rjmp	.-3658   	; 0x7436 <main+0x17b2>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3491
                            while(cnt/100<=40 && i<200)
                            {
                                i++;
                                delay(3);
                                victim();
                                if(VSR10<=silver_voltage_R||VSL10<=silver_voltage_L||SM){move(Back,75);break;}
    8280:	44 eb       	ldi	r20, 0xB4	; 180
    8282:	50 e0       	ldi	r21, 0x00	; 0
    8284:	6b e4       	ldi	r22, 0x4B	; 75
    8286:	70 e0       	ldi	r23, 0x00	; 0
    8288:	8d e0       	ldi	r24, 0x0D	; 13
    828a:	90 e0       	ldi	r25, 0x00	; 0
    828c:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
    8290:	89 cf       	rjmp	.-238    	; 0x81a4 <main+0x2520>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3492
                                if(SFL||SFR)break;
    8292:	40 e0       	ldi	r20, 0x00	; 0
    8294:	63 e0       	ldi	r22, 0x03	; 3
    8296:	84 e0       	ldi	r24, 0x04	; 4
    8298:	0e 94 88 06 	call	0xd10	; 0xd10 <read_sensor(char, char, char)>
    829c:	89 2b       	or	r24, r25
    829e:	09 f4       	brne	.+2      	; 0x82a2 <main+0x261e>
    82a0:	51 cf       	rjmp	.-350    	; 0x8144 <main+0x24c0>
    82a2:	80 cf       	rjmp	.-256    	; 0x81a4 <main+0x2520>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3518
            redroom_time=0; 

        }
        else //wall
        {   
            lcd.clear();
    82a4:	0e 94 c4 05 	call	0xb88	; 0xb88 <LiquidCrystal::clear() [clone .constprop.32]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3519
            lcd.print("wall 2");
    82a8:	85 ef       	ldi	r24, 0xF5	; 245
    82aa:	98 e0       	ldi	r25, 0x08	; 8
    82ac:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3521
            //if(side_check==1){correction(forward);}
            move(Back,50);
    82b0:	44 eb       	ldi	r20, 0xB4	; 180
    82b2:	50 e0       	ldi	r21, 0x00	; 0
    82b4:	62 e3       	ldi	r22, 0x32	; 50
    82b6:	70 e0       	ldi	r23, 0x00	; 0
    82b8:	8d e0       	ldi	r24, 0x0D	; 13
    82ba:	90 e0       	ldi	r25, 0x00	; 0
    82bc:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3522
            if(redroom_dir==Right)
    82c0:	80 91 9b 09 	lds	r24, 0x099B	; 0x80099b <redroom_dir>
    82c4:	90 91 9c 09 	lds	r25, 0x099C	; 0x80099c <redroom_dir+0x1>
    82c8:	8c 30       	cpi	r24, 0x0C	; 12
    82ca:	91 05       	cpc	r25, r1
    82cc:	09 f0       	breq	.+2      	; 0x82d0 <main+0x264c>
    82ce:	5b c0       	rjmp	.+182    	; 0x8386 <main+0x2702>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3524
            {
                if(ev_ball>=2 && b_ball>=1)//(s_ball>=2 || b_ball>=2)
    82d0:	80 91 95 09 	lds	r24, 0x0995	; 0x800995 <ev_ball>
    82d4:	90 91 96 09 	lds	r25, 0x0996	; 0x800996 <ev_ball+0x1>
    82d8:	02 97       	sbiw	r24, 0x02	; 2
    82da:	74 f0       	brlt	.+28     	; 0x82f8 <main+0x2674>
    82dc:	80 91 93 09 	lds	r24, 0x0993	; 0x800993 <b_ball>
    82e0:	90 91 94 09 	lds	r25, 0x0994	; 0x800994 <b_ball+0x1>
    82e4:	18 16       	cp	r1, r24
    82e6:	19 06       	cpc	r1, r25
    82e8:	3c f4       	brge	.+14     	; 0x82f8 <main+0x2674>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3526
                    {
                    move(Right,T90*0.9);
    82ea:	48 85       	ldd	r20, Y+8	; 0x08
    82ec:	59 85       	ldd	r21, Y+9	; 0x09
    82ee:	ba 01       	movw	r22, r20
    82f0:	55 0f       	add	r21, r21
    82f2:	88 0b       	sbc	r24, r24
    82f4:	99 0b       	sbc	r25, r25
    82f6:	68 c9       	rjmp	.-3376   	; 0x75c8 <main+0x1944>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3530
                    }
                else
                {
                    if(VL_Right<=120 && VL_Right!=20) 
    82f8:	81 e0       	ldi	r24, 0x01	; 1
    82fa:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    82fe:	89 37       	cpi	r24, 0x79	; 121
    8300:	91 05       	cpc	r25, r1
    8302:	20 f1       	brcs	.+72     	; 0x834c <main+0x26c8>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3537
                            redroom_dir=Left;
                            correction(sides);
                            move(Back,15);
                            move(Left,T90);
                        }
                    else{move(Right,T90);}
    8304:	44 eb       	ldi	r20, 0xB4	; 180
    8306:	50 e0       	ldi	r21, 0x00	; 0
    8308:	68 85       	ldd	r22, Y+8	; 0x08
    830a:	79 85       	ldd	r23, Y+9	; 0x09
    830c:	8c e0       	ldi	r24, 0x0C	; 12
    830e:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3535
                    if(VL_Right<=120 && VL_Right!=20) 
                        {
                            redroom_dir=Left;
                            correction(sides);
                            move(Back,15);
                            move(Left,T90);
    8310:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3538
                        }
                    else{move(Right,T90);}
                    go(spd,spd);check_while();
    8314:	80 91 99 09 	lds	r24, 0x0999	; 0x800999 <spd>
    8318:	90 91 9a 09 	lds	r25, 0x099A	; 0x80099a <spd+0x1>
    831c:	bc 01       	movw	r22, r24
    831e:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
    8322:	0e 94 2b 1f 	call	0x3e56	; 0x3e56 <check_while()>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3539
                    if(check_while_finished==0){
    8326:	80 91 91 09 	lds	r24, 0x0991	; 0x800991 <check_while_finished>
    832a:	90 91 92 09 	lds	r25, 0x0992	; 0x800992 <check_while_finished+0x1>
    832e:	89 2b       	or	r24, r25
    8330:	09 f0       	breq	.+2      	; 0x8334 <main+0x26b0>
    8332:	1f cd       	rjmp	.-1474   	; 0x7d72 <main+0x20ee>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3540
                          if(redroom_dir==Left){move(Left,T90);redroom_dir=Right;}
    8334:	80 91 9b 09 	lds	r24, 0x099B	; 0x80099b <redroom_dir>
    8338:	90 91 9c 09 	lds	r25, 0x099C	; 0x80099c <redroom_dir+0x1>
    833c:	0b 97       	sbiw	r24, 0x0b	; 11
    833e:	09 f0       	breq	.+2      	; 0x8342 <main+0x26be>
    8340:	5e c0       	rjmp	.+188    	; 0x83fe <main+0x277a>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3565
                        }
                    else{move(Left,T90);}
                    go(spd,spd);check_while();
                    if(check_while_finished==0){
                          if(redroom_dir==Right){move(Right,T90);redroom_dir=Left;}
                          else {move(Left,T90);redroom_dir=Right;}
    8342:	44 eb       	ldi	r20, 0xB4	; 180
    8344:	50 e0       	ldi	r21, 0x00	; 0
    8346:	68 85       	ldd	r22, Y+8	; 0x08
    8348:	79 85       	ldd	r23, Y+9	; 0x09
    834a:	0b cd       	rjmp	.-1514   	; 0x7d62 <main+0x20de>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3530
                    {
                    move(Right,T90*0.9);
                    }
                else
                {
                    if(VL_Right<=120 && VL_Right!=20) 
    834c:	81 e0       	ldi	r24, 0x01	; 1
    834e:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    8352:	44 97       	sbiw	r24, 0x14	; 20
    8354:	b9 f2       	breq	.-82     	; 0x8304 <main+0x2680>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3532
                        {
                            redroom_dir=Left;
    8356:	8b e0       	ldi	r24, 0x0B	; 11
    8358:	90 e0       	ldi	r25, 0x00	; 0
    835a:	90 93 9c 09 	sts	0x099C, r25	; 0x80099c <redroom_dir+0x1>
    835e:	80 93 9b 09 	sts	0x099B, r24	; 0x80099b <redroom_dir>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3533
                            correction(sides);
    8362:	83 e0       	ldi	r24, 0x03	; 3
    8364:	0e 94 69 0d 	call	0x1ad2	; 0x1ad2 <correction(char)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3534
                            move(Back,15);
    8368:	44 eb       	ldi	r20, 0xB4	; 180
    836a:	50 e0       	ldi	r21, 0x00	; 0
    836c:	6f e0       	ldi	r22, 0x0F	; 15
    836e:	70 e0       	ldi	r23, 0x00	; 0
    8370:	8d e0       	ldi	r24, 0x0D	; 13
    8372:	90 e0       	ldi	r25, 0x00	; 0
    8374:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3535
                            move(Left,T90);
    8378:	44 eb       	ldi	r20, 0xB4	; 180
    837a:	50 e0       	ldi	r21, 0x00	; 0
    837c:	68 85       	ldd	r22, Y+8	; 0x08
    837e:	79 85       	ldd	r23, Y+9	; 0x09
    8380:	8b e0       	ldi	r24, 0x0B	; 11
    8382:	90 e0       	ldi	r25, 0x00	; 0
    8384:	c5 cf       	rjmp	.-118    	; 0x8310 <main+0x268c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3546
                          else {move(Right,T90);redroom_dir=Left;}
                        }
                }
                
            }
            else if(redroom_dir==Left)
    8386:	0b 97       	sbiw	r24, 0x0b	; 11
    8388:	09 f0       	breq	.+2      	; 0x838c <main+0x2708>
    838a:	f3 cc       	rjmp	.-1562   	; 0x7d72 <main+0x20ee>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3548
            {
                if(ev_ball>=2 && b_ball>=1)//(s_ball>=2 || b_ball>=2)change
    838c:	80 91 95 09 	lds	r24, 0x0995	; 0x800995 <ev_ball>
    8390:	90 91 96 09 	lds	r25, 0x0996	; 0x800996 <ev_ball+0x1>
    8394:	02 97       	sbiw	r24, 0x02	; 2
    8396:	74 f0       	brlt	.+28     	; 0x83b4 <main+0x2730>
    8398:	80 91 93 09 	lds	r24, 0x0993	; 0x800993 <b_ball>
    839c:	90 91 94 09 	lds	r25, 0x0994	; 0x800994 <b_ball+0x1>
    83a0:	18 16       	cp	r1, r24
    83a2:	19 06       	cpc	r1, r25
    83a4:	3c f4       	brge	.+14     	; 0x83b4 <main+0x2730>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3550
                    {
                    move(Left,T90*0.9);
    83a6:	e8 85       	ldd	r30, Y+8	; 0x08
    83a8:	f9 85       	ldd	r31, Y+9	; 0x09
    83aa:	bf 01       	movw	r22, r30
    83ac:	ff 0f       	add	r31, r31
    83ae:	88 0b       	sbc	r24, r24
    83b0:	99 0b       	sbc	r25, r25
    83b2:	16 cd       	rjmp	.-1492   	; 0x7de0 <main+0x215c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3554
                    }
                else
                {
                    if(VL_Left<=120 && VL_Left!=20) 
    83b4:	82 e0       	ldi	r24, 0x02	; 2
    83b6:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    83ba:	89 37       	cpi	r24, 0x79	; 121
    83bc:	91 05       	cpc	r25, r1
    83be:	20 f1       	brcs	.+72     	; 0x8408 <main+0x2784>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3561
                            redroom_dir=Right;
                            correction(sides);
                            move(Back,15);
                            move(Right,T90);
                        }
                    else{move(Left,T90);}
    83c0:	44 eb       	ldi	r20, 0xB4	; 180
    83c2:	50 e0       	ldi	r21, 0x00	; 0
    83c4:	68 85       	ldd	r22, Y+8	; 0x08
    83c6:	79 85       	ldd	r23, Y+9	; 0x09
    83c8:	8b e0       	ldi	r24, 0x0B	; 11
    83ca:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3559
                    if(VL_Left<=120 && VL_Left!=20) 
                        {
                            redroom_dir=Right;
                            correction(sides);
                            move(Back,15);
                            move(Right,T90);
    83cc:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3562
                        }
                    else{move(Left,T90);}
                    go(spd,spd);check_while();
    83d0:	80 91 99 09 	lds	r24, 0x0999	; 0x800999 <spd>
    83d4:	90 91 9a 09 	lds	r25, 0x099A	; 0x80099a <spd+0x1>
    83d8:	bc 01       	movw	r22, r24
    83da:	0e 94 d5 06 	call	0xdaa	; 0xdaa <go(int, int)>
    83de:	0e 94 2b 1f 	call	0x3e56	; 0x3e56 <check_while()>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3563
                    if(check_while_finished==0){
    83e2:	80 91 91 09 	lds	r24, 0x0991	; 0x800991 <check_while_finished>
    83e6:	90 91 92 09 	lds	r25, 0x0992	; 0x800992 <check_while_finished+0x1>
    83ea:	89 2b       	or	r24, r25
    83ec:	09 f0       	breq	.+2      	; 0x83f0 <main+0x276c>
    83ee:	c1 cc       	rjmp	.-1662   	; 0x7d72 <main+0x20ee>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3564
                          if(redroom_dir==Right){move(Right,T90);redroom_dir=Left;}
    83f0:	80 91 9b 09 	lds	r24, 0x099B	; 0x80099b <redroom_dir>
    83f4:	90 91 9c 09 	lds	r25, 0x099C	; 0x80099c <redroom_dir+0x1>
    83f8:	0c 97       	sbiw	r24, 0x0c	; 12
    83fa:	09 f0       	breq	.+2      	; 0x83fe <main+0x277a>
    83fc:	a2 cf       	rjmp	.-188    	; 0x8342 <main+0x26be>
    83fe:	44 eb       	ldi	r20, 0xB4	; 180
    8400:	50 e0       	ldi	r21, 0x00	; 0
    8402:	68 85       	ldd	r22, Y+8	; 0x08
    8404:	79 85       	ldd	r23, Y+9	; 0x09
    8406:	24 cd       	rjmp	.-1464   	; 0x7e50 <main+0x21cc>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3554
                    {
                    move(Left,T90*0.9);
                    }
                else
                {
                    if(VL_Left<=120 && VL_Left!=20) 
    8408:	82 e0       	ldi	r24, 0x02	; 2
    840a:	0e 94 41 09 	call	0x1282	; 0x1282 <vl(char)>
    840e:	44 97       	sbiw	r24, 0x14	; 20
    8410:	b9 f2       	breq	.-82     	; 0x83c0 <main+0x273c>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3556
                        {
                            redroom_dir=Right;
    8412:	90 92 9c 09 	sts	0x099C, r9	; 0x80099c <redroom_dir+0x1>
    8416:	80 92 9b 09 	sts	0x099B, r8	; 0x80099b <redroom_dir>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3557
                            correction(sides);
    841a:	83 e0       	ldi	r24, 0x03	; 3
    841c:	0e 94 69 0d 	call	0x1ad2	; 0x1ad2 <correction(char)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3558
                            move(Back,15);
    8420:	44 eb       	ldi	r20, 0xB4	; 180
    8422:	50 e0       	ldi	r21, 0x00	; 0
    8424:	6f e0       	ldi	r22, 0x0F	; 15
    8426:	70 e0       	ldi	r23, 0x00	; 0
    8428:	8d e0       	ldi	r24, 0x0D	; 13
    842a:	90 e0       	ldi	r25, 0x00	; 0
    842c:	0e 94 3a 07 	call	0xe74	; 0xe74 <move(int, int, int)>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:3559
                            move(Right,T90);
    8430:	44 eb       	ldi	r20, 0xB4	; 180
    8432:	50 e0       	ldi	r21, 0x00	; 0
    8434:	68 85       	ldd	r22, Y+8	; 0x08
    8436:	79 85       	ldd	r23, Y+9	; 0x09
    8438:	8c e0       	ldi	r24, 0x0C	; 12
    843a:	90 e0       	ldi	r25, 0x00	; 0
    843c:	c7 cf       	rjmp	.-114    	; 0x83cc <main+0x2748>
loop():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_main_code_2023.ino:52
  {ev_zone();}
  delay(20); 
    843e:	64 e1       	ldi	r22, 0x14	; 20
    8440:	70 e0       	ldi	r23, 0x00	; 0
    8442:	80 e0       	ldi	r24, 0x00	; 0
    8444:	90 e0       	ldi	r25, 0x00	; 0
    8446:	0e 94 24 03 	call	0x648	; 0x648 <delay>
main():
C:\Users\14377\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.2\cores\MCUdude_corefiles/main.cpp:47
  
  setup();
    
  for (;;) {
    loop();
    if (serialEventRun) serialEventRun();
    844a:	0e 94 65 04 	call	0x8ca	; 0x8ca <serialEventRun()>
    844e:	0c 94 df 30 	jmp	0x61be	; 0x61be <main+0x53a>
handle_color():
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2080
        deadend_detected = true;
      }
      
    }
    if (inter_detected) {
      move(forward, T90 / 4, 150);
    8452:	6a 81       	ldd	r22, Y+2	; 0x02
    8454:	7b 81       	ldd	r23, Y+3	; 0x03
    8456:	77 ff       	sbrs	r23, 7
    8458:	02 c0       	rjmp	.+4      	; 0x845e <main+0x27da>
    845a:	6d 5f       	subi	r22, 0xFD	; 253
    845c:	7f 4f       	sbci	r23, 0xFF	; 255
    845e:	75 95       	asr	r23
    8460:	67 95       	ror	r22
    8462:	75 95       	asr	r23
    8464:	67 95       	ror	r22
    8466:	0c 94 8b 36 	jmp	0x6d16	; 0x6d16 <main+0x1092>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2081
    } else if (deadend_detected) {
    846a:	01 2b       	or	r16, r17
    846c:	11 f0       	breq	.+4      	; 0x8472 <main+0x27ee>
    846e:	0c 94 05 36 	jmp	0x6c0a	; 0x6c0a <main+0xf86>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2099
        move(forward, T90 / 2, 150);
      }
      
    }
    else {
      lcd.clear();
    8472:	0e 94 c4 05 	call	0xb88	; 0xb88 <LiquidCrystal::clear() [clone .constprop.32]>
C:\Users\14377\Desktop\Robots\Rescue Line\codes\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:2100
      lcd.print("green left");
    8476:	87 ed       	ldi	r24, 0xD7	; 215
    8478:	98 e0       	ldi	r25, 0x08	; 8
    847a:	0e 94 3e 0a 	call	0x147c	; 0x147c <Print::print(char const*) [clone .constprop.3]>
    847e:	0c 94 0c 36 	jmp	0x6c18	; 0x6c18 <main+0xf94>

00008482 <vfprintf>:
vfprintf():
    8482:	2f 92       	push	r2
    8484:	3f 92       	push	r3
    8486:	4f 92       	push	r4
    8488:	5f 92       	push	r5
    848a:	6f 92       	push	r6
    848c:	7f 92       	push	r7
    848e:	8f 92       	push	r8
    8490:	9f 92       	push	r9
    8492:	af 92       	push	r10
    8494:	bf 92       	push	r11
    8496:	cf 92       	push	r12
    8498:	df 92       	push	r13
    849a:	ef 92       	push	r14
    849c:	ff 92       	push	r15
    849e:	0f 93       	push	r16
    84a0:	1f 93       	push	r17
    84a2:	cf 93       	push	r28
    84a4:	df 93       	push	r29
    84a6:	cd b7       	in	r28, 0x3d	; 61
    84a8:	de b7       	in	r29, 0x3e	; 62
    84aa:	2b 97       	sbiw	r28, 0x0b	; 11
    84ac:	0f b6       	in	r0, 0x3f	; 63
    84ae:	f8 94       	cli
    84b0:	de bf       	out	0x3e, r29	; 62
    84b2:	0f be       	out	0x3f, r0	; 63
    84b4:	cd bf       	out	0x3d, r28	; 61
    84b6:	7c 01       	movw	r14, r24
    84b8:	3b 01       	movw	r6, r22
    84ba:	8a 01       	movw	r16, r20
    84bc:	fc 01       	movw	r30, r24
    84be:	17 82       	std	Z+7, r1	; 0x07
    84c0:	16 82       	std	Z+6, r1	; 0x06
    84c2:	83 81       	ldd	r24, Z+3	; 0x03
    84c4:	81 ff       	sbrs	r24, 1
    84c6:	dd c1       	rjmp	.+954    	; 0x8882 <vfprintf+0x400>
    84c8:	ce 01       	movw	r24, r28
    84ca:	01 96       	adiw	r24, 0x01	; 1
    84cc:	5c 01       	movw	r10, r24
    84ce:	f7 01       	movw	r30, r14
    84d0:	93 81       	ldd	r25, Z+3	; 0x03
    84d2:	f3 01       	movw	r30, r6
    84d4:	93 fd       	sbrc	r25, 3
    84d6:	85 91       	lpm	r24, Z+
    84d8:	93 ff       	sbrs	r25, 3
    84da:	81 91       	ld	r24, Z+
    84dc:	3f 01       	movw	r6, r30
    84de:	88 23       	and	r24, r24
    84e0:	09 f4       	brne	.+2      	; 0x84e4 <vfprintf+0x62>
    84e2:	53 c1       	rjmp	.+678    	; 0x878a <vfprintf+0x308>
    84e4:	85 32       	cpi	r24, 0x25	; 37
    84e6:	39 f4       	brne	.+14     	; 0x84f6 <vfprintf+0x74>
    84e8:	93 fd       	sbrc	r25, 3
    84ea:	85 91       	lpm	r24, Z+
    84ec:	93 ff       	sbrs	r25, 3
    84ee:	81 91       	ld	r24, Z+
    84f0:	3f 01       	movw	r6, r30
    84f2:	85 32       	cpi	r24, 0x25	; 37
    84f4:	29 f4       	brne	.+10     	; 0x8500 <vfprintf+0x7e>
    84f6:	b7 01       	movw	r22, r14
    84f8:	90 e0       	ldi	r25, 0x00	; 0
    84fa:	0e 94 5a 44 	call	0x88b4	; 0x88b4 <fputc>
    84fe:	e7 cf       	rjmp	.-50     	; 0x84ce <vfprintf+0x4c>
    8500:	91 2c       	mov	r9, r1
    8502:	21 2c       	mov	r2, r1
    8504:	31 2c       	mov	r3, r1
    8506:	ff e1       	ldi	r31, 0x1F	; 31
    8508:	f3 15       	cp	r31, r3
    850a:	38 f0       	brcs	.+14     	; 0x851a <vfprintf+0x98>
    850c:	8b 32       	cpi	r24, 0x2B	; 43
    850e:	11 f1       	breq	.+68     	; 0x8554 <vfprintf+0xd2>
    8510:	90 f4       	brcc	.+36     	; 0x8536 <vfprintf+0xb4>
    8512:	80 32       	cpi	r24, 0x20	; 32
    8514:	09 f1       	breq	.+66     	; 0x8558 <vfprintf+0xd6>
    8516:	83 32       	cpi	r24, 0x23	; 35
    8518:	29 f1       	breq	.+74     	; 0x8564 <vfprintf+0xe2>
    851a:	37 fc       	sbrc	r3, 7
    851c:	3c c0       	rjmp	.+120    	; 0x8596 <vfprintf+0x114>
    851e:	20 ed       	ldi	r18, 0xD0	; 208
    8520:	28 0f       	add	r18, r24
    8522:	2a 30       	cpi	r18, 0x0A	; 10
    8524:	50 f5       	brcc	.+84     	; 0x857a <vfprintf+0xf8>
    8526:	36 fe       	sbrs	r3, 6
    8528:	20 c0       	rjmp	.+64     	; 0x856a <vfprintf+0xe8>
    852a:	8a e0       	ldi	r24, 0x0A	; 10
    852c:	98 9e       	mul	r9, r24
    852e:	20 0d       	add	r18, r0
    8530:	11 24       	eor	r1, r1
    8532:	92 2e       	mov	r9, r18
    8534:	06 c0       	rjmp	.+12     	; 0x8542 <vfprintf+0xc0>
    8536:	8d 32       	cpi	r24, 0x2D	; 45
    8538:	91 f0       	breq	.+36     	; 0x855e <vfprintf+0xdc>
    853a:	80 33       	cpi	r24, 0x30	; 48
    853c:	71 f7       	brne	.-36     	; 0x851a <vfprintf+0x98>
    853e:	68 94       	set
    8540:	30 f8       	bld	r3, 0
    8542:	f3 01       	movw	r30, r6
    8544:	93 fd       	sbrc	r25, 3
    8546:	85 91       	lpm	r24, Z+
    8548:	93 ff       	sbrs	r25, 3
    854a:	81 91       	ld	r24, Z+
    854c:	3f 01       	movw	r6, r30
    854e:	81 11       	cpse	r24, r1
    8550:	da cf       	rjmp	.-76     	; 0x8506 <vfprintf+0x84>
    8552:	21 c0       	rjmp	.+66     	; 0x8596 <vfprintf+0x114>
    8554:	68 94       	set
    8556:	31 f8       	bld	r3, 1
    8558:	68 94       	set
    855a:	32 f8       	bld	r3, 2
    855c:	f2 cf       	rjmp	.-28     	; 0x8542 <vfprintf+0xc0>
    855e:	68 94       	set
    8560:	33 f8       	bld	r3, 3
    8562:	ef cf       	rjmp	.-34     	; 0x8542 <vfprintf+0xc0>
    8564:	68 94       	set
    8566:	34 f8       	bld	r3, 4
    8568:	ec cf       	rjmp	.-40     	; 0x8542 <vfprintf+0xc0>
    856a:	ea e0       	ldi	r30, 0x0A	; 10
    856c:	2e 9e       	mul	r2, r30
    856e:	20 0d       	add	r18, r0
    8570:	11 24       	eor	r1, r1
    8572:	22 2e       	mov	r2, r18
    8574:	68 94       	set
    8576:	35 f8       	bld	r3, 5
    8578:	e4 cf       	rjmp	.-56     	; 0x8542 <vfprintf+0xc0>
    857a:	8e 32       	cpi	r24, 0x2E	; 46
    857c:	29 f4       	brne	.+10     	; 0x8588 <vfprintf+0x106>
    857e:	36 fc       	sbrc	r3, 6
    8580:	04 c1       	rjmp	.+520    	; 0x878a <vfprintf+0x308>
    8582:	68 94       	set
    8584:	36 f8       	bld	r3, 6
    8586:	dd cf       	rjmp	.-70     	; 0x8542 <vfprintf+0xc0>
    8588:	8c 36       	cpi	r24, 0x6C	; 108
    858a:	19 f4       	brne	.+6      	; 0x8592 <vfprintf+0x110>
    858c:	68 94       	set
    858e:	37 f8       	bld	r3, 7
    8590:	d8 cf       	rjmp	.-80     	; 0x8542 <vfprintf+0xc0>
    8592:	88 36       	cpi	r24, 0x68	; 104
    8594:	b1 f2       	breq	.-84     	; 0x8542 <vfprintf+0xc0>
    8596:	98 2f       	mov	r25, r24
    8598:	9f 7d       	andi	r25, 0xDF	; 223
    859a:	95 54       	subi	r25, 0x45	; 69
    859c:	93 30       	cpi	r25, 0x03	; 3
    859e:	e0 f0       	brcs	.+56     	; 0x85d8 <vfprintf+0x156>
    85a0:	83 36       	cpi	r24, 0x63	; 99
    85a2:	a1 f1       	breq	.+104    	; 0x860c <vfprintf+0x18a>
    85a4:	83 37       	cpi	r24, 0x73	; 115
    85a6:	c1 f1       	breq	.+112    	; 0x8618 <vfprintf+0x196>
    85a8:	83 35       	cpi	r24, 0x53	; 83
    85aa:	09 f0       	breq	.+2      	; 0x85ae <vfprintf+0x12c>
    85ac:	63 c0       	rjmp	.+198    	; 0x8674 <vfprintf+0x1f2>
    85ae:	28 01       	movw	r4, r16
    85b0:	f2 e0       	ldi	r31, 0x02	; 2
    85b2:	4f 0e       	add	r4, r31
    85b4:	51 1c       	adc	r5, r1
    85b6:	f8 01       	movw	r30, r16
    85b8:	c0 80       	ld	r12, Z
    85ba:	d1 80       	ldd	r13, Z+1	; 0x01
    85bc:	69 2d       	mov	r22, r9
    85be:	70 e0       	ldi	r23, 0x00	; 0
    85c0:	36 fc       	sbrc	r3, 6
    85c2:	02 c0       	rjmp	.+4      	; 0x85c8 <vfprintf+0x146>
    85c4:	6f ef       	ldi	r22, 0xFF	; 255
    85c6:	7f ef       	ldi	r23, 0xFF	; 255
    85c8:	c6 01       	movw	r24, r12
    85ca:	0e 94 44 44 	call	0x8888	; 0x8888 <strnlen_P>
    85ce:	4c 01       	movw	r8, r24
    85d0:	68 94       	set
    85d2:	37 f8       	bld	r3, 7
    85d4:	82 01       	movw	r16, r4
    85d6:	0a c0       	rjmp	.+20     	; 0x85ec <vfprintf+0x16a>
    85d8:	0c 5f       	subi	r16, 0xFC	; 252
    85da:	1f 4f       	sbci	r17, 0xFF	; 255
    85dc:	ff e3       	ldi	r31, 0x3F	; 63
    85de:	f9 83       	std	Y+1, r31	; 0x01
    85e0:	88 24       	eor	r8, r8
    85e2:	83 94       	inc	r8
    85e4:	91 2c       	mov	r9, r1
    85e6:	65 01       	movw	r12, r10
    85e8:	e8 94       	clt
    85ea:	37 f8       	bld	r3, 7
    85ec:	33 fe       	sbrs	r3, 3
    85ee:	2d c0       	rjmp	.+90     	; 0x864a <vfprintf+0x1c8>
    85f0:	52 2c       	mov	r5, r2
    85f2:	81 14       	cp	r8, r1
    85f4:	91 04       	cpc	r9, r1
    85f6:	71 f5       	brne	.+92     	; 0x8654 <vfprintf+0x1d2>
    85f8:	55 20       	and	r5, r5
    85fa:	09 f4       	brne	.+2      	; 0x85fe <vfprintf+0x17c>
    85fc:	68 cf       	rjmp	.-304    	; 0x84ce <vfprintf+0x4c>
    85fe:	b7 01       	movw	r22, r14
    8600:	80 e2       	ldi	r24, 0x20	; 32
    8602:	90 e0       	ldi	r25, 0x00	; 0
    8604:	0e 94 5a 44 	call	0x88b4	; 0x88b4 <fputc>
    8608:	5a 94       	dec	r5
    860a:	f6 cf       	rjmp	.-20     	; 0x85f8 <vfprintf+0x176>
    860c:	f8 01       	movw	r30, r16
    860e:	80 81       	ld	r24, Z
    8610:	89 83       	std	Y+1, r24	; 0x01
    8612:	0e 5f       	subi	r16, 0xFE	; 254
    8614:	1f 4f       	sbci	r17, 0xFF	; 255
    8616:	e4 cf       	rjmp	.-56     	; 0x85e0 <vfprintf+0x15e>
    8618:	28 01       	movw	r4, r16
    861a:	f2 e0       	ldi	r31, 0x02	; 2
    861c:	4f 0e       	add	r4, r31
    861e:	51 1c       	adc	r5, r1
    8620:	f8 01       	movw	r30, r16
    8622:	c0 80       	ld	r12, Z
    8624:	d1 80       	ldd	r13, Z+1	; 0x01
    8626:	69 2d       	mov	r22, r9
    8628:	70 e0       	ldi	r23, 0x00	; 0
    862a:	36 fc       	sbrc	r3, 6
    862c:	02 c0       	rjmp	.+4      	; 0x8632 <vfprintf+0x1b0>
    862e:	6f ef       	ldi	r22, 0xFF	; 255
    8630:	7f ef       	ldi	r23, 0xFF	; 255
    8632:	c6 01       	movw	r24, r12
    8634:	0e 94 4f 44 	call	0x889e	; 0x889e <strnlen>
    8638:	4c 01       	movw	r8, r24
    863a:	82 01       	movw	r16, r4
    863c:	d5 cf       	rjmp	.-86     	; 0x85e8 <vfprintf+0x166>
    863e:	b7 01       	movw	r22, r14
    8640:	80 e2       	ldi	r24, 0x20	; 32
    8642:	90 e0       	ldi	r25, 0x00	; 0
    8644:	0e 94 5a 44 	call	0x88b4	; 0x88b4 <fputc>
    8648:	2a 94       	dec	r2
    864a:	28 14       	cp	r2, r8
    864c:	19 04       	cpc	r1, r9
    864e:	09 f0       	breq	.+2      	; 0x8652 <vfprintf+0x1d0>
    8650:	b0 f7       	brcc	.-20     	; 0x863e <vfprintf+0x1bc>
    8652:	ce cf       	rjmp	.-100    	; 0x85f0 <vfprintf+0x16e>
    8654:	f6 01       	movw	r30, r12
    8656:	37 fc       	sbrc	r3, 7
    8658:	85 91       	lpm	r24, Z+
    865a:	37 fe       	sbrs	r3, 7
    865c:	81 91       	ld	r24, Z+
    865e:	6f 01       	movw	r12, r30
    8660:	b7 01       	movw	r22, r14
    8662:	90 e0       	ldi	r25, 0x00	; 0
    8664:	0e 94 5a 44 	call	0x88b4	; 0x88b4 <fputc>
    8668:	51 10       	cpse	r5, r1
    866a:	5a 94       	dec	r5
    866c:	f1 e0       	ldi	r31, 0x01	; 1
    866e:	8f 1a       	sub	r8, r31
    8670:	91 08       	sbc	r9, r1
    8672:	bf cf       	rjmp	.-130    	; 0x85f2 <vfprintf+0x170>
    8674:	84 36       	cpi	r24, 0x64	; 100
    8676:	19 f0       	breq	.+6      	; 0x867e <vfprintf+0x1fc>
    8678:	89 36       	cpi	r24, 0x69	; 105
    867a:	09 f0       	breq	.+2      	; 0x867e <vfprintf+0x1fc>
    867c:	77 c0       	rjmp	.+238    	; 0x876c <vfprintf+0x2ea>
    867e:	f8 01       	movw	r30, r16
    8680:	37 fe       	sbrs	r3, 7
    8682:	6b c0       	rjmp	.+214    	; 0x875a <vfprintf+0x2d8>
    8684:	60 81       	ld	r22, Z
    8686:	71 81       	ldd	r23, Z+1	; 0x01
    8688:	82 81       	ldd	r24, Z+2	; 0x02
    868a:	93 81       	ldd	r25, Z+3	; 0x03
    868c:	0c 5f       	subi	r16, 0xFC	; 252
    868e:	1f 4f       	sbci	r17, 0xFF	; 255
    8690:	f3 2d       	mov	r31, r3
    8692:	ff 76       	andi	r31, 0x6F	; 111
    8694:	3f 2e       	mov	r3, r31
    8696:	97 ff       	sbrs	r25, 7
    8698:	09 c0       	rjmp	.+18     	; 0x86ac <vfprintf+0x22a>
    869a:	90 95       	com	r25
    869c:	80 95       	com	r24
    869e:	70 95       	com	r23
    86a0:	61 95       	neg	r22
    86a2:	7f 4f       	sbci	r23, 0xFF	; 255
    86a4:	8f 4f       	sbci	r24, 0xFF	; 255
    86a6:	9f 4f       	sbci	r25, 0xFF	; 255
    86a8:	68 94       	set
    86aa:	37 f8       	bld	r3, 7
    86ac:	2a e0       	ldi	r18, 0x0A	; 10
    86ae:	30 e0       	ldi	r19, 0x00	; 0
    86b0:	a5 01       	movw	r20, r10
    86b2:	0e 94 8a 44 	call	0x8914	; 0x8914 <__ultoa_invert>
    86b6:	c8 2e       	mov	r12, r24
    86b8:	ca 18       	sub	r12, r10
    86ba:	8c 2c       	mov	r8, r12
    86bc:	43 2c       	mov	r4, r3
    86be:	36 fe       	sbrs	r3, 6
    86c0:	0c c0       	rjmp	.+24     	; 0x86da <vfprintf+0x258>
    86c2:	e8 94       	clt
    86c4:	40 f8       	bld	r4, 0
    86c6:	c9 14       	cp	r12, r9
    86c8:	40 f4       	brcc	.+16     	; 0x86da <vfprintf+0x258>
    86ca:	34 fe       	sbrs	r3, 4
    86cc:	05 c0       	rjmp	.+10     	; 0x86d8 <vfprintf+0x256>
    86ce:	32 fc       	sbrc	r3, 2
    86d0:	03 c0       	rjmp	.+6      	; 0x86d8 <vfprintf+0x256>
    86d2:	f3 2d       	mov	r31, r3
    86d4:	fe 7e       	andi	r31, 0xEE	; 238
    86d6:	4f 2e       	mov	r4, r31
    86d8:	89 2c       	mov	r8, r9
    86da:	44 fe       	sbrs	r4, 4
    86dc:	aa c0       	rjmp	.+340    	; 0x8832 <vfprintf+0x3b0>
    86de:	fe 01       	movw	r30, r28
    86e0:	ec 0d       	add	r30, r12
    86e2:	f1 1d       	adc	r31, r1
    86e4:	80 81       	ld	r24, Z
    86e6:	80 33       	cpi	r24, 0x30	; 48
    86e8:	09 f0       	breq	.+2      	; 0x86ec <vfprintf+0x26a>
    86ea:	9c c0       	rjmp	.+312    	; 0x8824 <vfprintf+0x3a2>
    86ec:	24 2d       	mov	r18, r4
    86ee:	29 7e       	andi	r18, 0xE9	; 233
    86f0:	42 2e       	mov	r4, r18
    86f2:	84 2d       	mov	r24, r4
    86f4:	88 70       	andi	r24, 0x08	; 8
    86f6:	58 2e       	mov	r5, r24
    86f8:	43 fc       	sbrc	r4, 3
    86fa:	aa c0       	rjmp	.+340    	; 0x8850 <vfprintf+0x3ce>
    86fc:	40 fe       	sbrs	r4, 0
    86fe:	a4 c0       	rjmp	.+328    	; 0x8848 <vfprintf+0x3c6>
    8700:	9c 2c       	mov	r9, r12
    8702:	82 14       	cp	r8, r2
    8704:	18 f4       	brcc	.+6      	; 0x870c <vfprintf+0x28a>
    8706:	2c 0c       	add	r2, r12
    8708:	92 2c       	mov	r9, r2
    870a:	98 18       	sub	r9, r8
    870c:	44 fe       	sbrs	r4, 4
    870e:	a6 c0       	rjmp	.+332    	; 0x885c <vfprintf+0x3da>
    8710:	b7 01       	movw	r22, r14
    8712:	80 e3       	ldi	r24, 0x30	; 48
    8714:	90 e0       	ldi	r25, 0x00	; 0
    8716:	0e 94 5a 44 	call	0x88b4	; 0x88b4 <fputc>
    871a:	42 fe       	sbrs	r4, 2
    871c:	09 c0       	rjmp	.+18     	; 0x8730 <vfprintf+0x2ae>
    871e:	88 e7       	ldi	r24, 0x78	; 120
    8720:	90 e0       	ldi	r25, 0x00	; 0
    8722:	41 fe       	sbrs	r4, 1
    8724:	02 c0       	rjmp	.+4      	; 0x872a <vfprintf+0x2a8>
    8726:	88 e5       	ldi	r24, 0x58	; 88
    8728:	90 e0       	ldi	r25, 0x00	; 0
    872a:	b7 01       	movw	r22, r14
    872c:	0e 94 5a 44 	call	0x88b4	; 0x88b4 <fputc>
    8730:	c9 14       	cp	r12, r9
    8732:	08 f4       	brcc	.+2      	; 0x8736 <vfprintf+0x2b4>
    8734:	9f c0       	rjmp	.+318    	; 0x8874 <vfprintf+0x3f2>
    8736:	ca 94       	dec	r12
    8738:	d1 2c       	mov	r13, r1
    873a:	9f ef       	ldi	r25, 0xFF	; 255
    873c:	c9 1a       	sub	r12, r25
    873e:	d9 0a       	sbc	r13, r25
    8740:	ca 0c       	add	r12, r10
    8742:	db 1c       	adc	r13, r11
    8744:	f6 01       	movw	r30, r12
    8746:	82 91       	ld	r24, -Z
    8748:	6f 01       	movw	r12, r30
    874a:	b7 01       	movw	r22, r14
    874c:	90 e0       	ldi	r25, 0x00	; 0
    874e:	0e 94 5a 44 	call	0x88b4	; 0x88b4 <fputc>
    8752:	ac 14       	cp	r10, r12
    8754:	bd 04       	cpc	r11, r13
    8756:	b1 f7       	brne	.-20     	; 0x8744 <vfprintf+0x2c2>
    8758:	4f cf       	rjmp	.-354    	; 0x85f8 <vfprintf+0x176>
    875a:	60 81       	ld	r22, Z
    875c:	71 81       	ldd	r23, Z+1	; 0x01
    875e:	07 2e       	mov	r0, r23
    8760:	00 0c       	add	r0, r0
    8762:	88 0b       	sbc	r24, r24
    8764:	99 0b       	sbc	r25, r25
    8766:	0e 5f       	subi	r16, 0xFE	; 254
    8768:	1f 4f       	sbci	r17, 0xFF	; 255
    876a:	92 cf       	rjmp	.-220    	; 0x8690 <vfprintf+0x20e>
    876c:	d3 2c       	mov	r13, r3
    876e:	e8 94       	clt
    8770:	d4 f8       	bld	r13, 4
    8772:	2a e0       	ldi	r18, 0x0A	; 10
    8774:	30 e0       	ldi	r19, 0x00	; 0
    8776:	85 37       	cpi	r24, 0x75	; 117
    8778:	e1 f1       	breq	.+120    	; 0x87f2 <vfprintf+0x370>
    877a:	23 2d       	mov	r18, r3
    877c:	29 7f       	andi	r18, 0xF9	; 249
    877e:	d2 2e       	mov	r13, r18
    8780:	8f 36       	cpi	r24, 0x6F	; 111
    8782:	a9 f1       	breq	.+106    	; 0x87ee <vfprintf+0x36c>
    8784:	f0 f4       	brcc	.+60     	; 0x87c2 <vfprintf+0x340>
    8786:	88 35       	cpi	r24, 0x58	; 88
    8788:	51 f1       	breq	.+84     	; 0x87de <vfprintf+0x35c>
    878a:	f7 01       	movw	r30, r14
    878c:	86 81       	ldd	r24, Z+6	; 0x06
    878e:	97 81       	ldd	r25, Z+7	; 0x07
    8790:	2b 96       	adiw	r28, 0x0b	; 11
    8792:	0f b6       	in	r0, 0x3f	; 63
    8794:	f8 94       	cli
    8796:	de bf       	out	0x3e, r29	; 62
    8798:	0f be       	out	0x3f, r0	; 63
    879a:	cd bf       	out	0x3d, r28	; 61
    879c:	df 91       	pop	r29
    879e:	cf 91       	pop	r28
    87a0:	1f 91       	pop	r17
    87a2:	0f 91       	pop	r16
    87a4:	ff 90       	pop	r15
    87a6:	ef 90       	pop	r14
    87a8:	df 90       	pop	r13
    87aa:	cf 90       	pop	r12
    87ac:	bf 90       	pop	r11
    87ae:	af 90       	pop	r10
    87b0:	9f 90       	pop	r9
    87b2:	8f 90       	pop	r8
    87b4:	7f 90       	pop	r7
    87b6:	6f 90       	pop	r6
    87b8:	5f 90       	pop	r5
    87ba:	4f 90       	pop	r4
    87bc:	3f 90       	pop	r3
    87be:	2f 90       	pop	r2
    87c0:	08 95       	ret
    87c2:	80 37       	cpi	r24, 0x70	; 112
    87c4:	49 f0       	breq	.+18     	; 0x87d8 <vfprintf+0x356>
    87c6:	88 37       	cpi	r24, 0x78	; 120
    87c8:	01 f7       	brne	.-64     	; 0x878a <vfprintf+0x308>
    87ca:	d4 fe       	sbrs	r13, 4
    87cc:	02 c0       	rjmp	.+4      	; 0x87d2 <vfprintf+0x350>
    87ce:	68 94       	set
    87d0:	d2 f8       	bld	r13, 2
    87d2:	20 e1       	ldi	r18, 0x10	; 16
    87d4:	30 e0       	ldi	r19, 0x00	; 0
    87d6:	0d c0       	rjmp	.+26     	; 0x87f2 <vfprintf+0x370>
    87d8:	68 94       	set
    87da:	d4 f8       	bld	r13, 4
    87dc:	f6 cf       	rjmp	.-20     	; 0x87ca <vfprintf+0x348>
    87de:	34 fe       	sbrs	r3, 4
    87e0:	03 c0       	rjmp	.+6      	; 0x87e8 <vfprintf+0x366>
    87e2:	82 2f       	mov	r24, r18
    87e4:	86 60       	ori	r24, 0x06	; 6
    87e6:	d8 2e       	mov	r13, r24
    87e8:	20 e1       	ldi	r18, 0x10	; 16
    87ea:	32 e0       	ldi	r19, 0x02	; 2
    87ec:	02 c0       	rjmp	.+4      	; 0x87f2 <vfprintf+0x370>
    87ee:	28 e0       	ldi	r18, 0x08	; 8
    87f0:	30 e0       	ldi	r19, 0x00	; 0
    87f2:	f8 01       	movw	r30, r16
    87f4:	d7 fe       	sbrs	r13, 7
    87f6:	0f c0       	rjmp	.+30     	; 0x8816 <vfprintf+0x394>
    87f8:	60 81       	ld	r22, Z
    87fa:	71 81       	ldd	r23, Z+1	; 0x01
    87fc:	82 81       	ldd	r24, Z+2	; 0x02
    87fe:	93 81       	ldd	r25, Z+3	; 0x03
    8800:	0c 5f       	subi	r16, 0xFC	; 252
    8802:	1f 4f       	sbci	r17, 0xFF	; 255
    8804:	a5 01       	movw	r20, r10
    8806:	0e 94 8a 44 	call	0x8914	; 0x8914 <__ultoa_invert>
    880a:	c8 2e       	mov	r12, r24
    880c:	ca 18       	sub	r12, r10
    880e:	3d 2c       	mov	r3, r13
    8810:	e8 94       	clt
    8812:	37 f8       	bld	r3, 7
    8814:	52 cf       	rjmp	.-348    	; 0x86ba <vfprintf+0x238>
    8816:	60 81       	ld	r22, Z
    8818:	71 81       	ldd	r23, Z+1	; 0x01
    881a:	90 e0       	ldi	r25, 0x00	; 0
    881c:	80 e0       	ldi	r24, 0x00	; 0
    881e:	0e 5f       	subi	r16, 0xFE	; 254
    8820:	1f 4f       	sbci	r17, 0xFF	; 255
    8822:	f0 cf       	rjmp	.-32     	; 0x8804 <vfprintf+0x382>
    8824:	42 fc       	sbrc	r4, 2
    8826:	02 c0       	rjmp	.+4      	; 0x882c <vfprintf+0x3aa>
    8828:	83 94       	inc	r8
    882a:	63 cf       	rjmp	.-314    	; 0x86f2 <vfprintf+0x270>
    882c:	83 94       	inc	r8
    882e:	83 94       	inc	r8
    8830:	60 cf       	rjmp	.-320    	; 0x86f2 <vfprintf+0x270>
    8832:	84 2d       	mov	r24, r4
    8834:	86 78       	andi	r24, 0x86	; 134
    8836:	09 f4       	brne	.+2      	; 0x883a <vfprintf+0x3b8>
    8838:	5c cf       	rjmp	.-328    	; 0x86f2 <vfprintf+0x270>
    883a:	f6 cf       	rjmp	.-20     	; 0x8828 <vfprintf+0x3a6>
    883c:	b7 01       	movw	r22, r14
    883e:	80 e2       	ldi	r24, 0x20	; 32
    8840:	90 e0       	ldi	r25, 0x00	; 0
    8842:	0e 94 5a 44 	call	0x88b4	; 0x88b4 <fputc>
    8846:	83 94       	inc	r8
    8848:	82 14       	cp	r8, r2
    884a:	c0 f3       	brcs	.-16     	; 0x883c <vfprintf+0x3ba>
    884c:	51 2c       	mov	r5, r1
    884e:	5e cf       	rjmp	.-324    	; 0x870c <vfprintf+0x28a>
    8850:	52 2c       	mov	r5, r2
    8852:	58 18       	sub	r5, r8
    8854:	82 14       	cp	r8, r2
    8856:	08 f4       	brcc	.+2      	; 0x885a <vfprintf+0x3d8>
    8858:	59 cf       	rjmp	.-334    	; 0x870c <vfprintf+0x28a>
    885a:	f8 cf       	rjmp	.-16     	; 0x884c <vfprintf+0x3ca>
    885c:	84 2d       	mov	r24, r4
    885e:	86 78       	andi	r24, 0x86	; 134
    8860:	09 f4       	brne	.+2      	; 0x8864 <vfprintf+0x3e2>
    8862:	66 cf       	rjmp	.-308    	; 0x8730 <vfprintf+0x2ae>
    8864:	8b e2       	ldi	r24, 0x2B	; 43
    8866:	41 fe       	sbrs	r4, 1
    8868:	80 e2       	ldi	r24, 0x20	; 32
    886a:	47 fc       	sbrc	r4, 7
    886c:	8d e2       	ldi	r24, 0x2D	; 45
    886e:	b7 01       	movw	r22, r14
    8870:	90 e0       	ldi	r25, 0x00	; 0
    8872:	5c cf       	rjmp	.-328    	; 0x872c <vfprintf+0x2aa>
    8874:	b7 01       	movw	r22, r14
    8876:	80 e3       	ldi	r24, 0x30	; 48
    8878:	90 e0       	ldi	r25, 0x00	; 0
    887a:	0e 94 5a 44 	call	0x88b4	; 0x88b4 <fputc>
    887e:	9a 94       	dec	r9
    8880:	57 cf       	rjmp	.-338    	; 0x8730 <vfprintf+0x2ae>
    8882:	8f ef       	ldi	r24, 0xFF	; 255
    8884:	9f ef       	ldi	r25, 0xFF	; 255
    8886:	84 cf       	rjmp	.-248    	; 0x8790 <vfprintf+0x30e>

00008888 <strnlen_P>:
strnlen_P():
    8888:	fc 01       	movw	r30, r24
    888a:	05 90       	lpm	r0, Z+
    888c:	61 50       	subi	r22, 0x01	; 1
    888e:	70 40       	sbci	r23, 0x00	; 0
    8890:	01 10       	cpse	r0, r1
    8892:	d8 f7       	brcc	.-10     	; 0x888a <strnlen_P+0x2>
    8894:	80 95       	com	r24
    8896:	90 95       	com	r25
    8898:	8e 0f       	add	r24, r30
    889a:	9f 1f       	adc	r25, r31
    889c:	08 95       	ret

0000889e <strnlen>:
strnlen():
    889e:	fc 01       	movw	r30, r24
    88a0:	61 50       	subi	r22, 0x01	; 1
    88a2:	70 40       	sbci	r23, 0x00	; 0
    88a4:	01 90       	ld	r0, Z+
    88a6:	01 10       	cpse	r0, r1
    88a8:	d8 f7       	brcc	.-10     	; 0x88a0 <strnlen+0x2>
    88aa:	80 95       	com	r24
    88ac:	90 95       	com	r25
    88ae:	8e 0f       	add	r24, r30
    88b0:	9f 1f       	adc	r25, r31
    88b2:	08 95       	ret

000088b4 <fputc>:
fputc():
    88b4:	0f 93       	push	r16
    88b6:	1f 93       	push	r17
    88b8:	cf 93       	push	r28
    88ba:	df 93       	push	r29
    88bc:	18 2f       	mov	r17, r24
    88be:	09 2f       	mov	r16, r25
    88c0:	eb 01       	movw	r28, r22
    88c2:	8b 81       	ldd	r24, Y+3	; 0x03
    88c4:	81 fd       	sbrc	r24, 1
    88c6:	09 c0       	rjmp	.+18     	; 0x88da <fputc+0x26>
    88c8:	1f ef       	ldi	r17, 0xFF	; 255
    88ca:	0f ef       	ldi	r16, 0xFF	; 255
    88cc:	81 2f       	mov	r24, r17
    88ce:	90 2f       	mov	r25, r16
    88d0:	df 91       	pop	r29
    88d2:	cf 91       	pop	r28
    88d4:	1f 91       	pop	r17
    88d6:	0f 91       	pop	r16
    88d8:	08 95       	ret
    88da:	82 ff       	sbrs	r24, 2
    88dc:	14 c0       	rjmp	.+40     	; 0x8906 <fputc+0x52>
    88de:	2e 81       	ldd	r18, Y+6	; 0x06
    88e0:	3f 81       	ldd	r19, Y+7	; 0x07
    88e2:	8c 81       	ldd	r24, Y+4	; 0x04
    88e4:	9d 81       	ldd	r25, Y+5	; 0x05
    88e6:	28 17       	cp	r18, r24
    88e8:	39 07       	cpc	r19, r25
    88ea:	3c f4       	brge	.+14     	; 0x88fa <fputc+0x46>
    88ec:	e8 81       	ld	r30, Y
    88ee:	f9 81       	ldd	r31, Y+1	; 0x01
    88f0:	cf 01       	movw	r24, r30
    88f2:	01 96       	adiw	r24, 0x01	; 1
    88f4:	99 83       	std	Y+1, r25	; 0x01
    88f6:	88 83       	st	Y, r24
    88f8:	10 83       	st	Z, r17
    88fa:	8e 81       	ldd	r24, Y+6	; 0x06
    88fc:	9f 81       	ldd	r25, Y+7	; 0x07
    88fe:	01 96       	adiw	r24, 0x01	; 1
    8900:	9f 83       	std	Y+7, r25	; 0x07
    8902:	8e 83       	std	Y+6, r24	; 0x06
    8904:	e3 cf       	rjmp	.-58     	; 0x88cc <fputc+0x18>
    8906:	e8 85       	ldd	r30, Y+8	; 0x08
    8908:	f9 85       	ldd	r31, Y+9	; 0x09
    890a:	81 2f       	mov	r24, r17
    890c:	09 95       	icall
    890e:	89 2b       	or	r24, r25
    8910:	a1 f3       	breq	.-24     	; 0x88fa <fputc+0x46>
    8912:	da cf       	rjmp	.-76     	; 0x88c8 <fputc+0x14>

00008914 <__ultoa_invert>:
__ultoa_invert():
    8914:	fa 01       	movw	r30, r20
    8916:	aa 27       	eor	r26, r26
    8918:	28 30       	cpi	r18, 0x08	; 8
    891a:	51 f1       	breq	.+84     	; 0x8970 <__ultoa_invert+0x5c>
    891c:	20 31       	cpi	r18, 0x10	; 16
    891e:	81 f1       	breq	.+96     	; 0x8980 <__ultoa_invert+0x6c>
    8920:	e8 94       	clt
    8922:	6f 93       	push	r22
    8924:	6e 7f       	andi	r22, 0xFE	; 254
    8926:	6e 5f       	subi	r22, 0xFE	; 254
    8928:	7f 4f       	sbci	r23, 0xFF	; 255
    892a:	8f 4f       	sbci	r24, 0xFF	; 255
    892c:	9f 4f       	sbci	r25, 0xFF	; 255
    892e:	af 4f       	sbci	r26, 0xFF	; 255
    8930:	b1 e0       	ldi	r27, 0x01	; 1
    8932:	3e d0       	rcall	.+124    	; 0x89b0 <__ultoa_invert+0x9c>
    8934:	b4 e0       	ldi	r27, 0x04	; 4
    8936:	3c d0       	rcall	.+120    	; 0x89b0 <__ultoa_invert+0x9c>
    8938:	67 0f       	add	r22, r23
    893a:	78 1f       	adc	r23, r24
    893c:	89 1f       	adc	r24, r25
    893e:	9a 1f       	adc	r25, r26
    8940:	a1 1d       	adc	r26, r1
    8942:	68 0f       	add	r22, r24
    8944:	79 1f       	adc	r23, r25
    8946:	8a 1f       	adc	r24, r26
    8948:	91 1d       	adc	r25, r1
    894a:	a1 1d       	adc	r26, r1
    894c:	6a 0f       	add	r22, r26
    894e:	71 1d       	adc	r23, r1
    8950:	81 1d       	adc	r24, r1
    8952:	91 1d       	adc	r25, r1
    8954:	a1 1d       	adc	r26, r1
    8956:	20 d0       	rcall	.+64     	; 0x8998 <__ultoa_invert+0x84>
    8958:	09 f4       	brne	.+2      	; 0x895c <__ultoa_invert+0x48>
    895a:	68 94       	set
    895c:	3f 91       	pop	r19
    895e:	2a e0       	ldi	r18, 0x0A	; 10
    8960:	26 9f       	mul	r18, r22
    8962:	11 24       	eor	r1, r1
    8964:	30 19       	sub	r19, r0
    8966:	30 5d       	subi	r19, 0xD0	; 208
    8968:	31 93       	st	Z+, r19
    896a:	de f6       	brtc	.-74     	; 0x8922 <__ultoa_invert+0xe>
    896c:	cf 01       	movw	r24, r30
    896e:	08 95       	ret
    8970:	46 2f       	mov	r20, r22
    8972:	47 70       	andi	r20, 0x07	; 7
    8974:	40 5d       	subi	r20, 0xD0	; 208
    8976:	41 93       	st	Z+, r20
    8978:	b3 e0       	ldi	r27, 0x03	; 3
    897a:	0f d0       	rcall	.+30     	; 0x899a <__ultoa_invert+0x86>
    897c:	c9 f7       	brne	.-14     	; 0x8970 <__ultoa_invert+0x5c>
    897e:	f6 cf       	rjmp	.-20     	; 0x896c <__ultoa_invert+0x58>
    8980:	46 2f       	mov	r20, r22
    8982:	4f 70       	andi	r20, 0x0F	; 15
    8984:	40 5d       	subi	r20, 0xD0	; 208
    8986:	4a 33       	cpi	r20, 0x3A	; 58
    8988:	18 f0       	brcs	.+6      	; 0x8990 <__ultoa_invert+0x7c>
    898a:	49 5d       	subi	r20, 0xD9	; 217
    898c:	31 fd       	sbrc	r19, 1
    898e:	40 52       	subi	r20, 0x20	; 32
    8990:	41 93       	st	Z+, r20
    8992:	02 d0       	rcall	.+4      	; 0x8998 <__ultoa_invert+0x84>
    8994:	a9 f7       	brne	.-22     	; 0x8980 <__ultoa_invert+0x6c>
    8996:	ea cf       	rjmp	.-44     	; 0x896c <__ultoa_invert+0x58>
    8998:	b4 e0       	ldi	r27, 0x04	; 4
    899a:	a6 95       	lsr	r26
    899c:	97 95       	ror	r25
    899e:	87 95       	ror	r24
    89a0:	77 95       	ror	r23
    89a2:	67 95       	ror	r22
    89a4:	ba 95       	dec	r27
    89a6:	c9 f7       	brne	.-14     	; 0x899a <__ultoa_invert+0x86>
    89a8:	00 97       	sbiw	r24, 0x00	; 0
    89aa:	61 05       	cpc	r22, r1
    89ac:	71 05       	cpc	r23, r1
    89ae:	08 95       	ret
    89b0:	9b 01       	movw	r18, r22
    89b2:	ac 01       	movw	r20, r24
    89b4:	0a 2e       	mov	r0, r26
    89b6:	06 94       	lsr	r0
    89b8:	57 95       	ror	r21
    89ba:	47 95       	ror	r20
    89bc:	37 95       	ror	r19
    89be:	27 95       	ror	r18
    89c0:	ba 95       	dec	r27
    89c2:	c9 f7       	brne	.-14     	; 0x89b6 <__ultoa_invert+0xa2>
    89c4:	62 0f       	add	r22, r18
    89c6:	73 1f       	adc	r23, r19
    89c8:	84 1f       	adc	r24, r20
    89ca:	95 1f       	adc	r25, r21
    89cc:	a0 1d       	adc	r26, r0
    89ce:	08 95       	ret

000089d0 <eeprom_read_byte>:
eeprom_read_byte():
    89d0:	e1 99       	sbic	0x1c, 1	; 28
    89d2:	fe cf       	rjmp	.-4      	; 0x89d0 <eeprom_read_byte>
    89d4:	9f bb       	out	0x1f, r25	; 31
    89d6:	8e bb       	out	0x1e, r24	; 30
    89d8:	e0 9a       	sbi	0x1c, 0	; 28
    89da:	99 27       	eor	r25, r25
    89dc:	8d b3       	in	r24, 0x1d	; 29
    89de:	08 95       	ret

000089e0 <eeprom_write_byte>:
eeprom_write_byte():
    89e0:	26 2f       	mov	r18, r22

000089e2 <eeprom_write_r18>:
    89e2:	e1 99       	sbic	0x1c, 1	; 28
    89e4:	fe cf       	rjmp	.-4      	; 0x89e2 <eeprom_write_r18>
    89e6:	9f bb       	out	0x1f, r25	; 31
    89e8:	8e bb       	out	0x1e, r24	; 30
    89ea:	2d bb       	out	0x1d, r18	; 29
    89ec:	0f b6       	in	r0, 0x3f	; 63
    89ee:	f8 94       	cli
    89f0:	e2 9a       	sbi	0x1c, 2	; 28
    89f2:	e1 9a       	sbi	0x1c, 1	; 28
    89f4:	0f be       	out	0x3f, r0	; 63
    89f6:	01 96       	adiw	r24, 0x01	; 1
    89f8:	08 95       	ret

000089fa <__cmpsf2>:
__cmpsf2():
    89fa:	0e 94 e7 45 	call	0x8bce	; 0x8bce <__fp_cmp>
    89fe:	08 f4       	brcc	.+2      	; 0x8a02 <__cmpsf2+0x8>
    8a00:	81 e0       	ldi	r24, 0x01	; 1
    8a02:	08 95       	ret

00008a04 <__divsf3>:
__divsf3():
    8a04:	0e 94 16 45 	call	0x8a2c	; 0x8a2c <__divsf3x>
    8a08:	0c 94 22 46 	jmp	0x8c44	; 0x8c44 <__fp_round>
    8a0c:	0e 94 1b 46 	call	0x8c36	; 0x8c36 <__fp_pscB>
    8a10:	58 f0       	brcs	.+22     	; 0x8a28 <__divsf3+0x24>
    8a12:	0e 94 14 46 	call	0x8c28	; 0x8c28 <__fp_pscA>
    8a16:	40 f0       	brcs	.+16     	; 0x8a28 <__divsf3+0x24>
    8a18:	29 f4       	brne	.+10     	; 0x8a24 <__divsf3+0x20>
    8a1a:	5f 3f       	cpi	r21, 0xFF	; 255
    8a1c:	29 f0       	breq	.+10     	; 0x8a28 <__divsf3+0x24>
    8a1e:	0c 94 0b 46 	jmp	0x8c16	; 0x8c16 <__fp_inf>
    8a22:	51 11       	cpse	r21, r1
    8a24:	0c 94 56 46 	jmp	0x8cac	; 0x8cac <__fp_szero>
    8a28:	0c 94 11 46 	jmp	0x8c22	; 0x8c22 <__fp_nan>

00008a2c <__divsf3x>:
__divsf3x():
    8a2c:	0e 94 33 46 	call	0x8c66	; 0x8c66 <__fp_split3>
    8a30:	68 f3       	brcs	.-38     	; 0x8a0c <__divsf3+0x8>

00008a32 <__divsf3_pse>:
    8a32:	99 23       	and	r25, r25
    8a34:	b1 f3       	breq	.-20     	; 0x8a22 <__divsf3+0x1e>
    8a36:	55 23       	and	r21, r21
    8a38:	91 f3       	breq	.-28     	; 0x8a1e <__divsf3+0x1a>
    8a3a:	95 1b       	sub	r25, r21
    8a3c:	55 0b       	sbc	r21, r21
    8a3e:	bb 27       	eor	r27, r27
    8a40:	aa 27       	eor	r26, r26
    8a42:	62 17       	cp	r22, r18
    8a44:	73 07       	cpc	r23, r19
    8a46:	84 07       	cpc	r24, r20
    8a48:	38 f0       	brcs	.+14     	; 0x8a58 <__divsf3_pse+0x26>
    8a4a:	9f 5f       	subi	r25, 0xFF	; 255
    8a4c:	5f 4f       	sbci	r21, 0xFF	; 255
    8a4e:	22 0f       	add	r18, r18
    8a50:	33 1f       	adc	r19, r19
    8a52:	44 1f       	adc	r20, r20
    8a54:	aa 1f       	adc	r26, r26
    8a56:	a9 f3       	breq	.-22     	; 0x8a42 <__divsf3_pse+0x10>
    8a58:	35 d0       	rcall	.+106    	; 0x8ac4 <__divsf3_pse+0x92>
    8a5a:	0e 2e       	mov	r0, r30
    8a5c:	3a f0       	brmi	.+14     	; 0x8a6c <__divsf3_pse+0x3a>
    8a5e:	e0 e8       	ldi	r30, 0x80	; 128
    8a60:	32 d0       	rcall	.+100    	; 0x8ac6 <__divsf3_pse+0x94>
    8a62:	91 50       	subi	r25, 0x01	; 1
    8a64:	50 40       	sbci	r21, 0x00	; 0
    8a66:	e6 95       	lsr	r30
    8a68:	00 1c       	adc	r0, r0
    8a6a:	ca f7       	brpl	.-14     	; 0x8a5e <__divsf3_pse+0x2c>
    8a6c:	2b d0       	rcall	.+86     	; 0x8ac4 <__divsf3_pse+0x92>
    8a6e:	fe 2f       	mov	r31, r30
    8a70:	29 d0       	rcall	.+82     	; 0x8ac4 <__divsf3_pse+0x92>
    8a72:	66 0f       	add	r22, r22
    8a74:	77 1f       	adc	r23, r23
    8a76:	88 1f       	adc	r24, r24
    8a78:	bb 1f       	adc	r27, r27
    8a7a:	26 17       	cp	r18, r22
    8a7c:	37 07       	cpc	r19, r23
    8a7e:	48 07       	cpc	r20, r24
    8a80:	ab 07       	cpc	r26, r27
    8a82:	b0 e8       	ldi	r27, 0x80	; 128
    8a84:	09 f0       	breq	.+2      	; 0x8a88 <__divsf3_pse+0x56>
    8a86:	bb 0b       	sbc	r27, r27
    8a88:	80 2d       	mov	r24, r0
    8a8a:	bf 01       	movw	r22, r30
    8a8c:	ff 27       	eor	r31, r31
    8a8e:	93 58       	subi	r25, 0x83	; 131
    8a90:	5f 4f       	sbci	r21, 0xFF	; 255
    8a92:	3a f0       	brmi	.+14     	; 0x8aa2 <__divsf3_pse+0x70>
    8a94:	9e 3f       	cpi	r25, 0xFE	; 254
    8a96:	51 05       	cpc	r21, r1
    8a98:	78 f0       	brcs	.+30     	; 0x8ab8 <__divsf3_pse+0x86>
    8a9a:	0c 94 0b 46 	jmp	0x8c16	; 0x8c16 <__fp_inf>
    8a9e:	0c 94 56 46 	jmp	0x8cac	; 0x8cac <__fp_szero>
    8aa2:	5f 3f       	cpi	r21, 0xFF	; 255
    8aa4:	e4 f3       	brlt	.-8      	; 0x8a9e <__divsf3_pse+0x6c>
    8aa6:	98 3e       	cpi	r25, 0xE8	; 232
    8aa8:	d4 f3       	brlt	.-12     	; 0x8a9e <__divsf3_pse+0x6c>
    8aaa:	86 95       	lsr	r24
    8aac:	77 95       	ror	r23
    8aae:	67 95       	ror	r22
    8ab0:	b7 95       	ror	r27
    8ab2:	f7 95       	ror	r31
    8ab4:	9f 5f       	subi	r25, 0xFF	; 255
    8ab6:	c9 f7       	brne	.-14     	; 0x8aaa <__divsf3_pse+0x78>
    8ab8:	88 0f       	add	r24, r24
    8aba:	91 1d       	adc	r25, r1
    8abc:	96 95       	lsr	r25
    8abe:	87 95       	ror	r24
    8ac0:	97 f9       	bld	r25, 7
    8ac2:	08 95       	ret
    8ac4:	e1 e0       	ldi	r30, 0x01	; 1
    8ac6:	66 0f       	add	r22, r22
    8ac8:	77 1f       	adc	r23, r23
    8aca:	88 1f       	adc	r24, r24
    8acc:	bb 1f       	adc	r27, r27
    8ace:	62 17       	cp	r22, r18
    8ad0:	73 07       	cpc	r23, r19
    8ad2:	84 07       	cpc	r24, r20
    8ad4:	ba 07       	cpc	r27, r26
    8ad6:	20 f0       	brcs	.+8      	; 0x8ae0 <__divsf3_pse+0xae>
    8ad8:	62 1b       	sub	r22, r18
    8ada:	73 0b       	sbc	r23, r19
    8adc:	84 0b       	sbc	r24, r20
    8ade:	ba 0b       	sbc	r27, r26
    8ae0:	ee 1f       	adc	r30, r30
    8ae2:	88 f7       	brcc	.-30     	; 0x8ac6 <__divsf3_pse+0x94>
    8ae4:	e0 95       	com	r30
    8ae6:	08 95       	ret

00008ae8 <__fixsfsi>:
    8ae8:	0e 94 7b 45 	call	0x8af6	; 0x8af6 <__fixunssfsi>
    8aec:	68 94       	set
    8aee:	b1 11       	cpse	r27, r1
    8af0:	0c 94 56 46 	jmp	0x8cac	; 0x8cac <__fp_szero>
    8af4:	08 95       	ret

00008af6 <__fixunssfsi>:
    8af6:	0e 94 3b 46 	call	0x8c76	; 0x8c76 <__fp_splitA>
    8afa:	88 f0       	brcs	.+34     	; 0x8b1e <__fixunssfsi+0x28>
    8afc:	9f 57       	subi	r25, 0x7F	; 127
    8afe:	98 f0       	brcs	.+38     	; 0x8b26 <__fixunssfsi+0x30>
    8b00:	b9 2f       	mov	r27, r25
    8b02:	99 27       	eor	r25, r25
    8b04:	b7 51       	subi	r27, 0x17	; 23
    8b06:	b0 f0       	brcs	.+44     	; 0x8b34 <__fixunssfsi+0x3e>
__fixunssfsi():
    8b08:	e1 f0       	breq	.+56     	; 0x8b42 <__fixunssfsi+0x4c>
    8b0a:	66 0f       	add	r22, r22
    8b0c:	77 1f       	adc	r23, r23
    8b0e:	88 1f       	adc	r24, r24
    8b10:	99 1f       	adc	r25, r25
    8b12:	1a f0       	brmi	.+6      	; 0x8b1a <__fixunssfsi+0x24>
    8b14:	ba 95       	dec	r27
    8b16:	c9 f7       	brne	.-14     	; 0x8b0a <__fixunssfsi+0x14>
    8b18:	14 c0       	rjmp	.+40     	; 0x8b42 <__fixunssfsi+0x4c>
    8b1a:	b1 30       	cpi	r27, 0x01	; 1
    8b1c:	91 f0       	breq	.+36     	; 0x8b42 <__fixunssfsi+0x4c>
    8b1e:	0e 94 55 46 	call	0x8caa	; 0x8caa <__fp_zero>
    8b22:	b1 e0       	ldi	r27, 0x01	; 1
    8b24:	08 95       	ret
    8b26:	0c 94 55 46 	jmp	0x8caa	; 0x8caa <__fp_zero>
    8b2a:	67 2f       	mov	r22, r23
    8b2c:	78 2f       	mov	r23, r24
    8b2e:	88 27       	eor	r24, r24
    8b30:	b8 5f       	subi	r27, 0xF8	; 248
    8b32:	39 f0       	breq	.+14     	; 0x8b42 <__fixunssfsi+0x4c>
    8b34:	b9 3f       	cpi	r27, 0xF9	; 249
    8b36:	cc f3       	brlt	.-14     	; 0x8b2a <__fixunssfsi+0x34>
    8b38:	86 95       	lsr	r24
    8b3a:	77 95       	ror	r23
    8b3c:	67 95       	ror	r22
    8b3e:	b3 95       	inc	r27
    8b40:	d9 f7       	brne	.-10     	; 0x8b38 <__fixunssfsi+0x42>
    8b42:	3e f4       	brtc	.+14     	; 0x8b52 <__fixunssfsi+0x5c>
    8b44:	90 95       	com	r25
    8b46:	80 95       	com	r24
    8b48:	70 95       	com	r23
    8b4a:	61 95       	neg	r22
    8b4c:	7f 4f       	sbci	r23, 0xFF	; 255
    8b4e:	8f 4f       	sbci	r24, 0xFF	; 255
    8b50:	9f 4f       	sbci	r25, 0xFF	; 255
    8b52:	08 95       	ret

00008b54 <__floatunsisf>:
__floatunsisf():
    8b54:	e8 94       	clt
    8b56:	09 c0       	rjmp	.+18     	; 0x8b6a <__floatsisf+0x12>

00008b58 <__floatsisf>:
    8b58:	97 fb       	bst	r25, 7
    8b5a:	3e f4       	brtc	.+14     	; 0x8b6a <__floatsisf+0x12>
    8b5c:	90 95       	com	r25
    8b5e:	80 95       	com	r24
    8b60:	70 95       	com	r23
    8b62:	61 95       	neg	r22
    8b64:	7f 4f       	sbci	r23, 0xFF	; 255
    8b66:	8f 4f       	sbci	r24, 0xFF	; 255
    8b68:	9f 4f       	sbci	r25, 0xFF	; 255
    8b6a:	99 23       	and	r25, r25
    8b6c:	a9 f0       	breq	.+42     	; 0x8b98 <__floatsisf+0x40>
    8b6e:	f9 2f       	mov	r31, r25
    8b70:	96 e9       	ldi	r25, 0x96	; 150
    8b72:	bb 27       	eor	r27, r27
    8b74:	93 95       	inc	r25
    8b76:	f6 95       	lsr	r31
    8b78:	87 95       	ror	r24
    8b7a:	77 95       	ror	r23
    8b7c:	67 95       	ror	r22
    8b7e:	b7 95       	ror	r27
    8b80:	f1 11       	cpse	r31, r1
    8b82:	f8 cf       	rjmp	.-16     	; 0x8b74 <__floatsisf+0x1c>
    8b84:	fa f4       	brpl	.+62     	; 0x8bc4 <__floatsisf+0x6c>
    8b86:	bb 0f       	add	r27, r27
    8b88:	11 f4       	brne	.+4      	; 0x8b8e <__floatsisf+0x36>
    8b8a:	60 ff       	sbrs	r22, 0
    8b8c:	1b c0       	rjmp	.+54     	; 0x8bc4 <__floatsisf+0x6c>
    8b8e:	6f 5f       	subi	r22, 0xFF	; 255
    8b90:	7f 4f       	sbci	r23, 0xFF	; 255
    8b92:	8f 4f       	sbci	r24, 0xFF	; 255
    8b94:	9f 4f       	sbci	r25, 0xFF	; 255
    8b96:	16 c0       	rjmp	.+44     	; 0x8bc4 <__floatsisf+0x6c>
    8b98:	88 23       	and	r24, r24
    8b9a:	11 f0       	breq	.+4      	; 0x8ba0 <__floatsisf+0x48>
    8b9c:	96 e9       	ldi	r25, 0x96	; 150
    8b9e:	11 c0       	rjmp	.+34     	; 0x8bc2 <__floatsisf+0x6a>
    8ba0:	77 23       	and	r23, r23
    8ba2:	21 f0       	breq	.+8      	; 0x8bac <__floatsisf+0x54>
    8ba4:	9e e8       	ldi	r25, 0x8E	; 142
    8ba6:	87 2f       	mov	r24, r23
    8ba8:	76 2f       	mov	r23, r22
    8baa:	05 c0       	rjmp	.+10     	; 0x8bb6 <__floatsisf+0x5e>
    8bac:	66 23       	and	r22, r22
    8bae:	71 f0       	breq	.+28     	; 0x8bcc <__floatsisf+0x74>
    8bb0:	96 e8       	ldi	r25, 0x86	; 134
    8bb2:	86 2f       	mov	r24, r22
    8bb4:	70 e0       	ldi	r23, 0x00	; 0
    8bb6:	60 e0       	ldi	r22, 0x00	; 0
    8bb8:	2a f0       	brmi	.+10     	; 0x8bc4 <__floatsisf+0x6c>
    8bba:	9a 95       	dec	r25
    8bbc:	66 0f       	add	r22, r22
    8bbe:	77 1f       	adc	r23, r23
    8bc0:	88 1f       	adc	r24, r24
    8bc2:	da f7       	brpl	.-10     	; 0x8bba <__floatsisf+0x62>
    8bc4:	88 0f       	add	r24, r24
    8bc6:	96 95       	lsr	r25
    8bc8:	87 95       	ror	r24
    8bca:	97 f9       	bld	r25, 7
    8bcc:	08 95       	ret

00008bce <__fp_cmp>:
__fp_cmp():
    8bce:	99 0f       	add	r25, r25
    8bd0:	00 08       	sbc	r0, r0
    8bd2:	55 0f       	add	r21, r21
    8bd4:	aa 0b       	sbc	r26, r26
    8bd6:	e0 e8       	ldi	r30, 0x80	; 128
    8bd8:	fe ef       	ldi	r31, 0xFE	; 254
    8bda:	16 16       	cp	r1, r22
    8bdc:	17 06       	cpc	r1, r23
    8bde:	e8 07       	cpc	r30, r24
    8be0:	f9 07       	cpc	r31, r25
    8be2:	c0 f0       	brcs	.+48     	; 0x8c14 <__fp_cmp+0x46>
    8be4:	12 16       	cp	r1, r18
    8be6:	13 06       	cpc	r1, r19
    8be8:	e4 07       	cpc	r30, r20
    8bea:	f5 07       	cpc	r31, r21
    8bec:	98 f0       	brcs	.+38     	; 0x8c14 <__fp_cmp+0x46>
    8bee:	62 1b       	sub	r22, r18
    8bf0:	73 0b       	sbc	r23, r19
    8bf2:	84 0b       	sbc	r24, r20
    8bf4:	95 0b       	sbc	r25, r21
    8bf6:	39 f4       	brne	.+14     	; 0x8c06 <__fp_cmp+0x38>
    8bf8:	0a 26       	eor	r0, r26
    8bfa:	61 f0       	breq	.+24     	; 0x8c14 <__fp_cmp+0x46>
    8bfc:	23 2b       	or	r18, r19
    8bfe:	24 2b       	or	r18, r20
    8c00:	25 2b       	or	r18, r21
    8c02:	21 f4       	brne	.+8      	; 0x8c0c <__fp_cmp+0x3e>
    8c04:	08 95       	ret
    8c06:	0a 26       	eor	r0, r26
    8c08:	09 f4       	brne	.+2      	; 0x8c0c <__fp_cmp+0x3e>
    8c0a:	a1 40       	sbci	r26, 0x01	; 1
    8c0c:	a6 95       	lsr	r26
    8c0e:	8f ef       	ldi	r24, 0xFF	; 255
    8c10:	81 1d       	adc	r24, r1
    8c12:	81 1d       	adc	r24, r1
    8c14:	08 95       	ret

00008c16 <__fp_inf>:
__fp_inf():
    8c16:	97 f9       	bld	r25, 7
    8c18:	9f 67       	ori	r25, 0x7F	; 127
    8c1a:	80 e8       	ldi	r24, 0x80	; 128
    8c1c:	70 e0       	ldi	r23, 0x00	; 0
    8c1e:	60 e0       	ldi	r22, 0x00	; 0
    8c20:	08 95       	ret

00008c22 <__fp_nan>:
__fp_nan():
    8c22:	9f ef       	ldi	r25, 0xFF	; 255
    8c24:	80 ec       	ldi	r24, 0xC0	; 192
    8c26:	08 95       	ret

00008c28 <__fp_pscA>:
__fp_pscA():
    8c28:	00 24       	eor	r0, r0
    8c2a:	0a 94       	dec	r0
    8c2c:	16 16       	cp	r1, r22
    8c2e:	17 06       	cpc	r1, r23
    8c30:	18 06       	cpc	r1, r24
    8c32:	09 06       	cpc	r0, r25
    8c34:	08 95       	ret

00008c36 <__fp_pscB>:
__fp_pscB():
    8c36:	00 24       	eor	r0, r0
    8c38:	0a 94       	dec	r0
    8c3a:	12 16       	cp	r1, r18
    8c3c:	13 06       	cpc	r1, r19
    8c3e:	14 06       	cpc	r1, r20
    8c40:	05 06       	cpc	r0, r21
    8c42:	08 95       	ret

00008c44 <__fp_round>:
__fp_round():
    8c44:	09 2e       	mov	r0, r25
    8c46:	03 94       	inc	r0
    8c48:	00 0c       	add	r0, r0
    8c4a:	11 f4       	brne	.+4      	; 0x8c50 <__fp_round+0xc>
    8c4c:	88 23       	and	r24, r24
    8c4e:	52 f0       	brmi	.+20     	; 0x8c64 <__fp_round+0x20>
    8c50:	bb 0f       	add	r27, r27
    8c52:	40 f4       	brcc	.+16     	; 0x8c64 <__fp_round+0x20>
    8c54:	bf 2b       	or	r27, r31
    8c56:	11 f4       	brne	.+4      	; 0x8c5c <__fp_round+0x18>
    8c58:	60 ff       	sbrs	r22, 0
    8c5a:	04 c0       	rjmp	.+8      	; 0x8c64 <__fp_round+0x20>
    8c5c:	6f 5f       	subi	r22, 0xFF	; 255
    8c5e:	7f 4f       	sbci	r23, 0xFF	; 255
    8c60:	8f 4f       	sbci	r24, 0xFF	; 255
    8c62:	9f 4f       	sbci	r25, 0xFF	; 255
    8c64:	08 95       	ret

00008c66 <__fp_split3>:
__fp_split3():
    8c66:	57 fd       	sbrc	r21, 7
    8c68:	90 58       	subi	r25, 0x80	; 128
    8c6a:	44 0f       	add	r20, r20
    8c6c:	55 1f       	adc	r21, r21
    8c6e:	59 f0       	breq	.+22     	; 0x8c86 <__fp_splitA+0x10>
    8c70:	5f 3f       	cpi	r21, 0xFF	; 255
    8c72:	71 f0       	breq	.+28     	; 0x8c90 <__fp_splitA+0x1a>
    8c74:	47 95       	ror	r20

00008c76 <__fp_splitA>:
    8c76:	88 0f       	add	r24, r24
    8c78:	97 fb       	bst	r25, 7
    8c7a:	99 1f       	adc	r25, r25
    8c7c:	61 f0       	breq	.+24     	; 0x8c96 <__fp_splitA+0x20>
    8c7e:	9f 3f       	cpi	r25, 0xFF	; 255
    8c80:	79 f0       	breq	.+30     	; 0x8ca0 <__fp_splitA+0x2a>
    8c82:	87 95       	ror	r24
    8c84:	08 95       	ret
    8c86:	12 16       	cp	r1, r18
    8c88:	13 06       	cpc	r1, r19
    8c8a:	14 06       	cpc	r1, r20
    8c8c:	55 1f       	adc	r21, r21
    8c8e:	f2 cf       	rjmp	.-28     	; 0x8c74 <__fp_split3+0xe>
    8c90:	46 95       	lsr	r20
    8c92:	f1 df       	rcall	.-30     	; 0x8c76 <__fp_splitA>
    8c94:	08 c0       	rjmp	.+16     	; 0x8ca6 <__fp_splitA+0x30>
    8c96:	16 16       	cp	r1, r22
    8c98:	17 06       	cpc	r1, r23
    8c9a:	18 06       	cpc	r1, r24
    8c9c:	99 1f       	adc	r25, r25
    8c9e:	f1 cf       	rjmp	.-30     	; 0x8c82 <__fp_splitA+0xc>
    8ca0:	86 95       	lsr	r24
    8ca2:	71 05       	cpc	r23, r1
    8ca4:	61 05       	cpc	r22, r1
    8ca6:	08 94       	sec
    8ca8:	08 95       	ret

00008caa <__fp_zero>:
__fp_zero():
    8caa:	e8 94       	clt

00008cac <__fp_szero>:
    8cac:	bb 27       	eor	r27, r27
    8cae:	66 27       	eor	r22, r22
    8cb0:	77 27       	eor	r23, r23
    8cb2:	cb 01       	movw	r24, r22
    8cb4:	97 f9       	bld	r25, 7
    8cb6:	08 95       	ret

00008cb8 <__mulsf3>:
__mulsf3():
    8cb8:	0e 94 6f 46 	call	0x8cde	; 0x8cde <__mulsf3x>
    8cbc:	0c 94 22 46 	jmp	0x8c44	; 0x8c44 <__fp_round>
    8cc0:	0e 94 14 46 	call	0x8c28	; 0x8c28 <__fp_pscA>
    8cc4:	38 f0       	brcs	.+14     	; 0x8cd4 <__mulsf3+0x1c>
    8cc6:	0e 94 1b 46 	call	0x8c36	; 0x8c36 <__fp_pscB>
    8cca:	20 f0       	brcs	.+8      	; 0x8cd4 <__mulsf3+0x1c>
    8ccc:	95 23       	and	r25, r21
    8cce:	11 f0       	breq	.+4      	; 0x8cd4 <__mulsf3+0x1c>
    8cd0:	0c 94 0b 46 	jmp	0x8c16	; 0x8c16 <__fp_inf>
    8cd4:	0c 94 11 46 	jmp	0x8c22	; 0x8c22 <__fp_nan>
    8cd8:	11 24       	eor	r1, r1
    8cda:	0c 94 56 46 	jmp	0x8cac	; 0x8cac <__fp_szero>

00008cde <__mulsf3x>:
__mulsf3x():
    8cde:	0e 94 33 46 	call	0x8c66	; 0x8c66 <__fp_split3>
    8ce2:	70 f3       	brcs	.-36     	; 0x8cc0 <__mulsf3+0x8>

00008ce4 <__mulsf3_pse>:
    8ce4:	95 9f       	mul	r25, r21
    8ce6:	c1 f3       	breq	.-16     	; 0x8cd8 <__mulsf3+0x20>
    8ce8:	95 0f       	add	r25, r21
    8cea:	50 e0       	ldi	r21, 0x00	; 0
    8cec:	55 1f       	adc	r21, r21
    8cee:	62 9f       	mul	r22, r18
    8cf0:	f0 01       	movw	r30, r0
    8cf2:	72 9f       	mul	r23, r18
    8cf4:	bb 27       	eor	r27, r27
    8cf6:	f0 0d       	add	r31, r0
    8cf8:	b1 1d       	adc	r27, r1
    8cfa:	63 9f       	mul	r22, r19
    8cfc:	aa 27       	eor	r26, r26
    8cfe:	f0 0d       	add	r31, r0
    8d00:	b1 1d       	adc	r27, r1
    8d02:	aa 1f       	adc	r26, r26
    8d04:	64 9f       	mul	r22, r20
    8d06:	66 27       	eor	r22, r22
    8d08:	b0 0d       	add	r27, r0
    8d0a:	a1 1d       	adc	r26, r1
    8d0c:	66 1f       	adc	r22, r22
    8d0e:	82 9f       	mul	r24, r18
    8d10:	22 27       	eor	r18, r18
    8d12:	b0 0d       	add	r27, r0
    8d14:	a1 1d       	adc	r26, r1
    8d16:	62 1f       	adc	r22, r18
    8d18:	73 9f       	mul	r23, r19
    8d1a:	b0 0d       	add	r27, r0
    8d1c:	a1 1d       	adc	r26, r1
    8d1e:	62 1f       	adc	r22, r18
    8d20:	83 9f       	mul	r24, r19
    8d22:	a0 0d       	add	r26, r0
    8d24:	61 1d       	adc	r22, r1
    8d26:	22 1f       	adc	r18, r18
    8d28:	74 9f       	mul	r23, r20
    8d2a:	33 27       	eor	r19, r19
    8d2c:	a0 0d       	add	r26, r0
    8d2e:	61 1d       	adc	r22, r1
    8d30:	23 1f       	adc	r18, r19
    8d32:	84 9f       	mul	r24, r20
    8d34:	60 0d       	add	r22, r0
    8d36:	21 1d       	adc	r18, r1
    8d38:	82 2f       	mov	r24, r18
    8d3a:	76 2f       	mov	r23, r22
    8d3c:	6a 2f       	mov	r22, r26
    8d3e:	11 24       	eor	r1, r1
    8d40:	9f 57       	subi	r25, 0x7F	; 127
    8d42:	50 40       	sbci	r21, 0x00	; 0
    8d44:	9a f0       	brmi	.+38     	; 0x8d6c <__mulsf3_pse+0x88>
    8d46:	f1 f0       	breq	.+60     	; 0x8d84 <__mulsf3_pse+0xa0>
    8d48:	88 23       	and	r24, r24
    8d4a:	4a f0       	brmi	.+18     	; 0x8d5e <__mulsf3_pse+0x7a>
    8d4c:	ee 0f       	add	r30, r30
    8d4e:	ff 1f       	adc	r31, r31
    8d50:	bb 1f       	adc	r27, r27
    8d52:	66 1f       	adc	r22, r22
    8d54:	77 1f       	adc	r23, r23
    8d56:	88 1f       	adc	r24, r24
    8d58:	91 50       	subi	r25, 0x01	; 1
    8d5a:	50 40       	sbci	r21, 0x00	; 0
    8d5c:	a9 f7       	brne	.-22     	; 0x8d48 <__mulsf3_pse+0x64>
    8d5e:	9e 3f       	cpi	r25, 0xFE	; 254
    8d60:	51 05       	cpc	r21, r1
    8d62:	80 f0       	brcs	.+32     	; 0x8d84 <__mulsf3_pse+0xa0>
    8d64:	0c 94 0b 46 	jmp	0x8c16	; 0x8c16 <__fp_inf>
    8d68:	0c 94 56 46 	jmp	0x8cac	; 0x8cac <__fp_szero>
    8d6c:	5f 3f       	cpi	r21, 0xFF	; 255
    8d6e:	e4 f3       	brlt	.-8      	; 0x8d68 <__mulsf3_pse+0x84>
    8d70:	98 3e       	cpi	r25, 0xE8	; 232
    8d72:	d4 f3       	brlt	.-12     	; 0x8d68 <__mulsf3_pse+0x84>
    8d74:	86 95       	lsr	r24
    8d76:	77 95       	ror	r23
    8d78:	67 95       	ror	r22
    8d7a:	b7 95       	ror	r27
    8d7c:	f7 95       	ror	r31
    8d7e:	e7 95       	ror	r30
    8d80:	9f 5f       	subi	r25, 0xFF	; 255
    8d82:	c1 f7       	brne	.-16     	; 0x8d74 <__mulsf3_pse+0x90>
    8d84:	fe 2b       	or	r31, r30
    8d86:	88 0f       	add	r24, r24
    8d88:	91 1d       	adc	r25, r1
    8d8a:	96 95       	lsr	r25
    8d8c:	87 95       	ror	r24
    8d8e:	97 f9       	bld	r25, 7
    8d90:	08 95       	ret

00008d92 <__udivmodhi4>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1408
    8d92:	aa 1b       	sub	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1409
    8d94:	bb 1b       	sub	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1410
    8d96:	51 e1       	ldi	r21, 0x11	; 17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1411
    8d98:	07 c0       	rjmp	.+14     	; 0x8da8 <__udivmodhi4_ep>

00008d9a <__udivmodhi4_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1413
    8d9a:	aa 1f       	adc	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1414
    8d9c:	bb 1f       	adc	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1415
    8d9e:	a6 17       	cp	r26, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1416
    8da0:	b7 07       	cpc	r27, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1417
    8da2:	10 f0       	brcs	.+4      	; 0x8da8 <__udivmodhi4_ep>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1418
    8da4:	a6 1b       	sub	r26, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1419
    8da6:	b7 0b       	sbc	r27, r23

00008da8 <__udivmodhi4_ep>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1421
    8da8:	88 1f       	adc	r24, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1422
    8daa:	99 1f       	adc	r25, r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1423
    8dac:	5a 95       	dec	r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1424
    8dae:	a9 f7       	brne	.-22     	; 0x8d9a <__udivmodhi4_loop>
__udivmodhi4_ep():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1425
    8db0:	80 95       	com	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1426
    8db2:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1428
    8db4:	bc 01       	movw	r22, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1430
    8db6:	cd 01       	movw	r24, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1432
    8db8:	08 95       	ret

00008dba <__divmodhi4>:
__divmodhi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1440
    8dba:	97 fb       	bst	r25, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1441
    8dbc:	07 2e       	mov	r0, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1442
    8dbe:	16 f4       	brtc	.+4      	; 0x8dc4 <__divmodhi4+0xa>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1443
    8dc0:	00 94       	com	r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1444
    8dc2:	07 d0       	rcall	.+14     	; 0x8dd2 <__divmodhi4_neg1>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1446
    8dc4:	77 fd       	sbrc	r23, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1447
    8dc6:	09 d0       	rcall	.+18     	; 0x8dda <__divmodhi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1448
    8dc8:	0e 94 c9 46 	call	0x8d92	; 0x8d92 <__udivmodhi4>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1449
    8dcc:	07 fc       	sbrc	r0, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1450
    8dce:	05 d0       	rcall	.+10     	; 0x8dda <__divmodhi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1451
    8dd0:	3e f4       	brtc	.+14     	; 0x8de0 <__divmodhi4_exit>

00008dd2 <__divmodhi4_neg1>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1454
    8dd2:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1455
    8dd4:	81 95       	neg	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1456
    8dd6:	9f 4f       	sbci	r25, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1457
    8dd8:	08 95       	ret

00008dda <__divmodhi4_neg2>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1460
    8dda:	70 95       	com	r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1461
    8ddc:	61 95       	neg	r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1462
    8dde:	7f 4f       	sbci	r23, 0xFF	; 255

00008de0 <__divmodhi4_exit>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1464
    8de0:	08 95       	ret

00008de2 <__divmodsi4>:
__divmodsi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1686
    8de2:	05 2e       	mov	r0, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1687
    8de4:	97 fb       	bst	r25, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1688
    8de6:	1e f4       	brtc	.+6      	; 0x8dee <__divmodsi4+0xc>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1689
    8de8:	00 94       	com	r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1690
    8dea:	0e 94 08 47 	call	0x8e10	; 0x8e10 <__negsi2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1692
    8dee:	57 fd       	sbrc	r21, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1693
    8df0:	07 d0       	rcall	.+14     	; 0x8e00 <__divmodsi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1694
    8df2:	0e 94 24 47 	call	0x8e48	; 0x8e48 <__udivmodsi4>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1695
    8df6:	07 fc       	sbrc	r0, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1696
    8df8:	03 d0       	rcall	.+6      	; 0x8e00 <__divmodsi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1697
    8dfa:	4e f4       	brtc	.+18     	; 0x8e0e <__divmodsi4_exit>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1698
    8dfc:	0c 94 08 47 	jmp	0x8e10	; 0x8e10 <__negsi2>

00008e00 <__divmodsi4_neg2>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1701
    8e00:	50 95       	com	r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1702
    8e02:	40 95       	com	r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1703
    8e04:	30 95       	com	r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1704
    8e06:	21 95       	neg	r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1705
    8e08:	3f 4f       	sbci	r19, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1706
    8e0a:	4f 4f       	sbci	r20, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1707
    8e0c:	5f 4f       	sbci	r21, 0xFF	; 255

00008e0e <__divmodsi4_exit>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1709
    8e0e:	08 95       	ret

00008e10 <__negsi2>:
__negsi2():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1718
    8e10:	90 95       	com	r25
    8e12:	80 95       	com	r24
    8e14:	70 95       	com	r23
    8e16:	61 95       	neg	r22
    8e18:	7f 4f       	sbci	r23, 0xFF	; 255
    8e1a:	8f 4f       	sbci	r24, 0xFF	; 255
    8e1c:	9f 4f       	sbci	r25, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1719
    8e1e:	08 95       	ret

00008e20 <__tablejump2__>:
__tablejump2__():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2296
    8e20:	ee 0f       	add	r30, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2297
    8e22:	ff 1f       	adc	r31, r31
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2304
    8e24:	00 24       	eor	r0, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2305
    8e26:	00 1c       	adc	r0, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2306
    8e28:	0b be       	out	0x3b, r0	; 59
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2312
    8e2a:	07 90       	elpm	r0, Z+
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2313
    8e2c:	f6 91       	elpm	r31, Z
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2314
    8e2e:	e0 2d       	mov	r30, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2319
    8e30:	09 94       	ijmp

00008e32 <__muluhisi3>:
__muluhisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:626
    8e32:	0e 94 46 47 	call	0x8e8c	; 0x8e8c <__umulhisi3>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:627
    8e36:	a5 9f       	mul	r26, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:628
    8e38:	90 0d       	add	r25, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:629
    8e3a:	b4 9f       	mul	r27, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:630
    8e3c:	90 0d       	add	r25, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:631
    8e3e:	a4 9f       	mul	r26, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:632
    8e40:	80 0d       	add	r24, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:633
    8e42:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:634
    8e44:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:635
    8e46:	08 95       	ret

00008e48 <__udivmodsi4>:
__udivmodsi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1638
    8e48:	a1 e2       	ldi	r26, 0x21	; 33
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1639
    8e4a:	1a 2e       	mov	r1, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1640
    8e4c:	aa 1b       	sub	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1641
    8e4e:	bb 1b       	sub	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1642
    8e50:	fd 01       	movw	r30, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1644
    8e52:	0d c0       	rjmp	.+26     	; 0x8e6e <__udivmodsi4_ep>

00008e54 <__udivmodsi4_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1646
    8e54:	aa 1f       	adc	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1647
    8e56:	bb 1f       	adc	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1648
    8e58:	ee 1f       	adc	r30, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1649
    8e5a:	ff 1f       	adc	r31, r31
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1650
    8e5c:	a2 17       	cp	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1651
    8e5e:	b3 07       	cpc	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1652
    8e60:	e4 07       	cpc	r30, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1653
    8e62:	f5 07       	cpc	r31, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1654
    8e64:	20 f0       	brcs	.+8      	; 0x8e6e <__udivmodsi4_ep>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1655
    8e66:	a2 1b       	sub	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1656
    8e68:	b3 0b       	sbc	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1657
    8e6a:	e4 0b       	sbc	r30, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1658
    8e6c:	f5 0b       	sbc	r31, r21

00008e6e <__udivmodsi4_ep>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1660
    8e6e:	66 1f       	adc	r22, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1661
    8e70:	77 1f       	adc	r23, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1662
    8e72:	88 1f       	adc	r24, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1663
    8e74:	99 1f       	adc	r25, r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1664
    8e76:	1a 94       	dec	r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1665
    8e78:	69 f7       	brne	.-38     	; 0x8e54 <__udivmodsi4_loop>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1667
    8e7a:	60 95       	com	r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1668
    8e7c:	70 95       	com	r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1669
    8e7e:	80 95       	com	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1670
    8e80:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1672
    8e82:	9b 01       	movw	r18, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1674
    8e84:	ac 01       	movw	r20, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1676
    8e86:	bd 01       	movw	r22, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1678
    8e88:	cf 01       	movw	r24, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1680
    8e8a:	08 95       	ret

00008e8c <__umulhisi3>:
__umulhisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:564
    8e8c:	a2 9f       	mul	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:565
    8e8e:	b0 01       	movw	r22, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:566
    8e90:	b3 9f       	mul	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:567
    8e92:	c0 01       	movw	r24, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:568
    8e94:	a3 9f       	mul	r26, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:573
    8e96:	70 0d       	add	r23, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:574
    8e98:	81 1d       	adc	r24, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:575
    8e9a:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:576
    8e9c:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:580
    8e9e:	b2 9f       	mul	r27, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:581
    8ea0:	70 0d       	add	r23, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:582
    8ea2:	81 1d       	adc	r24, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:583
    8ea4:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:584
    8ea6:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:585
    8ea8:	08 95       	ret

00008eaa <_exit>:
exit():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2278
    8eaa:	f8 94       	cli

00008eac <__stop_program>:
__stop_program():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2280
    8eac:	ff cf       	rjmp	.-2      	; 0x8eac <__stop_program>
