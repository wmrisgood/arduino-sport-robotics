
C:\Users\beibe\AppData\Local\Temp\arduino\sketches\15D0FF2C5FED7D38BA3D0B00D71051C9/sport_main_code_2023.ino.elf:     file format elf32-avr


Disassembly of section .text:

00000000 <__vectors>:
__vectors():
       0:	0c 94 af 00 	jmp	0x15e	; 0x15e <__ctors_end>
       4:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
       8:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
       c:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      10:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      14:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      18:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      1c:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      20:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      24:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      28:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      2c:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      30:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      34:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      38:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      3c:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      40:	0c 94 c1 13 	jmp	0x2782	; 0x2782 <__vector_16>
      44:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      48:	0c 94 92 14 	jmp	0x2924	; 0x2924 <__vector_18>
      4c:	0c 94 68 14 	jmp	0x28d0	; 0x28d0 <__vector_19>
      50:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      54:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      58:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      5c:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      60:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      64:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      68:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      6c:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      70:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      74:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      78:	0c 94 32 14 	jmp	0x2864	; 0x2864 <__vector_30>
      7c:	0c 94 08 14 	jmp	0x2810	; 0x2810 <__vector_31>
      80:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      84:	0c 94 c8 14 	jmp	0x2990	; 0x2990 <__vector_33>
      88:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>

0000008c <__trampolines_end>:
__trampolines_start():
      8c:	00 00       	nop
      8e:	3a 00       	.word	0x003a	; ????
      90:	37 00       	.word	0x0037	; ????
      92:	34 00       	.word	0x0034	; ????
      94:	31 00       	.word	0x0031	; ????
      96:	22 00       	.word	0x0022	; ????
      98:	61 00       	.word	0x0061	; ????
      9a:	64 00       	.word	0x0064	; ????

0000009c <port_to_output_PGM>:
      9c:	00 00 3b 00 38 00 35 00 32 00 23 00 62 00 65 00     ..;.8.5.2.#.b.e.

000000ac <port_to_input_PGM>:
      ac:	00 00 39 00 36 00 33 00 30 00 21 00 20 00 63 00     ..9.6.3.0.!. .c.

000000bc <digital_pin_to_port_PGM>:
      bc:	05 05 05 05 05 05 05 05 02 02 02 02 02 02 02 02     ................
      cc:	07 07 04 04 04 04 04 04 04 04 07 07 03 03 03 03     ................
      dc:	03 03 03 03 07 01 01 01 01 01 01 01 01 06 06 06     ................
      ec:	06 06 06 06 06                                      .....

000000f1 <digital_pin_to_bit_mask_PGM>:
      f1:	01 02 04 08 10 20 40 80 01 02 04 08 10 20 40 80     ..... @...... @.
     101:	08 10 01 02 04 08 10 20 40 80 01 02 01 02 04 08     ....... @.......
     111:	10 20 40 80 04 80 40 20 10 08 04 02 01 01 02 04     . @...@ ........
     121:	08 10 20 40 80                                      .. @.

00000126 <digital_pin_to_timer_PGM>:
     126:	00 00 00 0a 0b 0c 00 00 00 00 00 00 01 04 05 06     ................
	...

0000015c <__ctors_start>:
__ctors_start():
     15c:	b9 20       	and	r11, r9

0000015e <__ctors_end>:
__dtors_end():
     15e:	11 24       	eor	r1, r1
     160:	1f be       	out	0x3f, r1	; 63
     162:	cf ef       	ldi	r28, 0xFF	; 255
     164:	d0 e1       	ldi	r29, 0x10	; 16
     166:	de bf       	out	0x3e, r29	; 62
     168:	cd bf       	out	0x3d, r28	; 61

0000016a <__do_copy_data>:
__do_copy_data():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2373
     16a:	18 e0       	ldi	r17, 0x08	; 8
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2374
     16c:	a0 e0       	ldi	r26, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2375
     16e:	b1 e0       	ldi	r27, 0x01	; 1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2376
     170:	e2 e2       	ldi	r30, 0x22	; 34
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2377
     172:	fb e6       	ldi	r31, 0x6B	; 107
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2378
     174:	00 e0       	ldi	r16, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2379
     176:	0b bf       	out	0x3b, r16	; 59
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2380
     178:	02 c0       	rjmp	.+4      	; 0x17e <__do_copy_data+0x14>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2382
     17a:	07 90       	elpm	r0, Z+
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2383
     17c:	0d 92       	st	X+, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2385
     17e:	a0 36       	cpi	r26, 0x60	; 96
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2386
     180:	b1 07       	cpc	r27, r17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2387
     182:	d9 f7       	brne	.-10     	; 0x17a <__do_copy_data+0x10>

00000184 <__do_clear_bss>:
__do_clear_bss():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2441
     184:	2a e0       	ldi	r18, 0x0A	; 10
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2442
     186:	a0 e6       	ldi	r26, 0x60	; 96
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2443
     188:	b8 e0       	ldi	r27, 0x08	; 8
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2444
     18a:	01 c0       	rjmp	.+2      	; 0x18e <.do_clear_bss_start>

0000018c <.do_clear_bss_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2446
     18c:	1d 92       	st	X+, r1

0000018e <.do_clear_bss_start>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2448
     18e:	a2 3d       	cpi	r26, 0xD2	; 210
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2449
     190:	b2 07       	cpc	r27, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2450
     192:	e1 f7       	brne	.-8      	; 0x18c <.do_clear_bss_loop>

00000194 <__do_global_ctors>:
__do_global_ctors():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2466
     194:	10 e0       	ldi	r17, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2467
     196:	cf ea       	ldi	r28, 0xAF	; 175
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2468
     198:	d0 e0       	ldi	r29, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2472
     19a:	04 c0       	rjmp	.+8      	; 0x1a4 <__do_global_ctors+0x10>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2474
     19c:	21 97       	sbiw	r28, 0x01	; 1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2480
     19e:	fe 01       	movw	r30, r28
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2481
     1a0:	0e 94 6c 35 	call	0x6ad8	; 0x6ad8 <__tablejump2__>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2483
     1a4:	ce 3a       	cpi	r28, 0xAE	; 174
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2484
     1a6:	d1 07       	cpc	r29, r17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2489
     1a8:	c9 f7       	brne	.-14     	; 0x19c <__do_global_ctors+0x8>
     1aa:	0e 94 36 21 	call	0x426c	; 0x426c <main>
     1ae:	0c 94 8f 35 	jmp	0x6b1e	; 0x6b1e <_exit>

000001b2 <__bad_interrupt>:
__vector_22():
     1b2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001b6 <update_crc(unsigned short, unsigned short*, unsigned short) [clone .constprop.32]>:
update_crc():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:40
unsigned int puls_cnt;

unsigned char TxBuffer[20];
unsigned short gbpTxBuffer[20], gbpParameter[20], packet[30];

unsigned short update_crc(unsigned short crc_accum, unsigned short *data_blk_ptr, unsigned short data_blk_size)
     1b6:	cf 93       	push	r28
     1b8:	df 93       	push	r29
     1ba:	cd b7       	in	r28, 0x3d	; 61
     1bc:	de b7       	in	r29, 0x3e	; 62
     1be:	d2 50       	subi	r29, 0x02	; 2
     1c0:	0f b6       	in	r0, 0x3f	; 63
     1c2:	f8 94       	cli
     1c4:	de bf       	out	0x3e, r29	; 62
     1c6:	0f be       	out	0x3f, r0	; 63
     1c8:	cd bf       	out	0x3d, r28	; 61
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:43
{
    unsigned short i, j;
    unsigned short crc_table[256] = {
     1ca:	80 e0       	ldi	r24, 0x00	; 0
     1cc:	92 e0       	ldi	r25, 0x02	; 2
     1ce:	e8 e0       	ldi	r30, 0x08	; 8
     1d0:	f1 e0       	ldi	r31, 0x01	; 1
     1d2:	de 01       	movw	r26, r28
     1d4:	11 96       	adiw	r26, 0x01	; 1
     1d6:	01 90       	ld	r0, Z+
     1d8:	0d 92       	st	X+, r0
     1da:	01 97       	sbiw	r24, 0x01	; 1
     1dc:	e1 f7       	brne	.-8      	; 0x1d6 <update_crc(unsigned short, unsigned short*, unsigned short) [clone .constprop.32]+0x20>
     1de:	a8 e3       	ldi	r26, 0x38	; 56
     1e0:	b9 e0       	ldi	r27, 0x09	; 9
     1e2:	24 e5       	ldi	r18, 0x54	; 84
     1e4:	39 e0       	ldi	r19, 0x09	; 9
     1e6:	90 e0       	ldi	r25, 0x00	; 0
     1e8:	80 e0       	ldi	r24, 0x00	; 0
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:79
        0x0220, 0x8225, 0x822F, 0x022A, 0x823B, 0x023E, 0x0234, 0x8231,
        0x8213, 0x0216, 0x021C, 0x8219, 0x0208, 0x820D, 0x8207, 0x0202};

    for (j = 0; j < data_blk_size; j++)
    {
        i = ((unsigned short)(crc_accum >> 8) ^ data_blk_ptr[j]) & 0xFF;
     1ea:	6d 91       	ld	r22, X+
     1ec:	7d 91       	ld	r23, X+
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:80
        crc_accum = (crc_accum << 8) ^ crc_table[i];
     1ee:	58 2f       	mov	r21, r24
     1f0:	44 27       	eor	r20, r20
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:79
        0x0220, 0x8225, 0x822F, 0x022A, 0x823B, 0x023E, 0x0234, 0x8231,
        0x8213, 0x0216, 0x021C, 0x8219, 0x0208, 0x820D, 0x8207, 0x0202};

    for (j = 0; j < data_blk_size; j++)
    {
        i = ((unsigned short)(crc_accum >> 8) ^ data_blk_ptr[j]) & 0xFF;
     1f2:	e9 2f       	mov	r30, r25
     1f4:	ff 27       	eor	r31, r31
     1f6:	e6 27       	eor	r30, r22
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:80
        crc_accum = (crc_accum << 8) ^ crc_table[i];
     1f8:	ee 0f       	add	r30, r30
     1fa:	ff 1f       	adc	r31, r31
     1fc:	81 e0       	ldi	r24, 0x01	; 1
     1fe:	90 e0       	ldi	r25, 0x00	; 0
     200:	8c 0f       	add	r24, r28
     202:	9d 1f       	adc	r25, r29
     204:	e8 0f       	add	r30, r24
     206:	f9 1f       	adc	r31, r25
     208:	80 81       	ld	r24, Z
     20a:	91 81       	ldd	r25, Z+1	; 0x01
     20c:	84 27       	eor	r24, r20
     20e:	95 27       	eor	r25, r21
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:77
        0x8243, 0x0246, 0x024C, 0x8249, 0x0258, 0x825D, 0x8257, 0x0252,
        0x0270, 0x8275, 0x827F, 0x027A, 0x826B, 0x026E, 0x0264, 0x8261,
        0x0220, 0x8225, 0x822F, 0x022A, 0x823B, 0x023E, 0x0234, 0x8231,
        0x8213, 0x0216, 0x021C, 0x8219, 0x0208, 0x820D, 0x8207, 0x0202};

    for (j = 0; j < data_blk_size; j++)
     210:	2a 17       	cp	r18, r26
     212:	3b 07       	cpc	r19, r27
     214:	51 f7       	brne	.-44     	; 0x1ea <update_crc(unsigned short, unsigned short*, unsigned short) [clone .constprop.32]+0x34>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:83
    {
        i = ((unsigned short)(crc_accum >> 8) ^ data_blk_ptr[j]) & 0xFF;
        crc_accum = (crc_accum << 8) ^ crc_table[i];
    }
    return crc_accum;
}
     216:	de 5f       	subi	r29, 0xFE	; 254
     218:	0f b6       	in	r0, 0x3f	; 63
     21a:	f8 94       	cli
     21c:	de bf       	out	0x3e, r29	; 62
     21e:	0f be       	out	0x3f, r0	; 63
     220:	cd bf       	out	0x3d, r28	; 61
     222:	df 91       	pop	r29
     224:	cf 91       	pop	r28
     226:	08 95       	ret

00000228 <printf_putchar(char, __file*)>:
printf_putchar():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/Print.cpp:204
}

// Custom implementation of printf borrowed from the teensy core files
static int16_t printf_putchar(char c, FILE *fp)
{
  ((class Print *)(fdev_get_udata(fp)))->write((uint8_t)c);
     228:	fb 01       	movw	r30, r22
     22a:	a4 85       	ldd	r26, Z+12	; 0x0c
     22c:	b5 85       	ldd	r27, Z+13	; 0x0d
     22e:	ed 91       	ld	r30, X+
     230:	fc 91       	ld	r31, X
     232:	11 97       	sbiw	r26, 0x01	; 1
     234:	01 90       	ld	r0, Z+
     236:	f0 81       	ld	r31, Z
     238:	e0 2d       	mov	r30, r0
     23a:	68 2f       	mov	r22, r24
     23c:	cd 01       	movw	r24, r26
     23e:	09 95       	icall
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/Print.cpp:206
  return 0;
}
     240:	90 e0       	ldi	r25, 0x00	; 0
     242:	80 e0       	ldi	r24, 0x00	; 0
     244:	08 95       	ret

00000246 <TwoWire::read()>:
read():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:303
int TwoWire::read(void)
{
  int value = -1;

  // get each successive byte on each call
  if(rxBufferIndex < rxBufferLength){
     246:	90 91 37 09 	lds	r25, 0x0937	; 0x800937 <TwoWire::rxBufferIndex>
     24a:	80 91 36 09 	lds	r24, 0x0936	; 0x800936 <TwoWire::rxBufferLength>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:300
// must be called in:
// slave rx event callback
// or after requestFrom(address, numBytes)
int TwoWire::read(void)
{
  int value = -1;
     24e:	2f ef       	ldi	r18, 0xFF	; 255
     250:	3f ef       	ldi	r19, 0xFF	; 255
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:303

  // get each successive byte on each call
  if(rxBufferIndex < rxBufferLength){
     252:	98 17       	cp	r25, r24
     254:	48 f4       	brcc	.+18     	; 0x268 <TwoWire::read()+0x22>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:304
    value = rxBuffer[rxBufferIndex];
     256:	e9 2f       	mov	r30, r25
     258:	f0 e0       	ldi	r31, 0x00	; 0
     25a:	ea 5e       	subi	r30, 0xEA	; 234
     25c:	f6 4f       	sbci	r31, 0xF6	; 246
     25e:	20 81       	ld	r18, Z
     260:	30 e0       	ldi	r19, 0x00	; 0
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:305
    ++rxBufferIndex;
     262:	9f 5f       	subi	r25, 0xFF	; 255
     264:	90 93 37 09 	sts	0x0937, r25	; 0x800937 <TwoWire::rxBufferIndex>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:309
  }

  return value;
}
     268:	c9 01       	movw	r24, r18
     26a:	08 95       	ret

0000026c <TwoWire::read() [clone .constprop.22]>:
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:303
int TwoWire::read(void)
{
  int value = -1;

  // get each successive byte on each call
  if(rxBufferIndex < rxBufferLength){
     26c:	90 91 37 09 	lds	r25, 0x0937	; 0x800937 <TwoWire::rxBufferIndex>
     270:	80 91 36 09 	lds	r24, 0x0936	; 0x800936 <TwoWire::rxBufferLength>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:300
// must be called in:
// slave rx event callback
// or after requestFrom(address, numBytes)
int TwoWire::read(void)
{
  int value = -1;
     274:	2f ef       	ldi	r18, 0xFF	; 255
     276:	3f ef       	ldi	r19, 0xFF	; 255
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:303

  // get each successive byte on each call
  if(rxBufferIndex < rxBufferLength){
     278:	98 17       	cp	r25, r24
     27a:	48 f4       	brcc	.+18     	; 0x28e <TwoWire::read() [clone .constprop.22]+0x22>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:304
    value = rxBuffer[rxBufferIndex];
     27c:	e9 2f       	mov	r30, r25
     27e:	f0 e0       	ldi	r31, 0x00	; 0
     280:	ea 5e       	subi	r30, 0xEA	; 234
     282:	f6 4f       	sbci	r31, 0xF6	; 246
     284:	20 81       	ld	r18, Z
     286:	30 e0       	ldi	r19, 0x00	; 0
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:305
    ++rxBufferIndex;
     288:	9f 5f       	subi	r25, 0xFF	; 255
     28a:	90 93 37 09 	sts	0x0937, r25	; 0x800937 <TwoWire::rxBufferIndex>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:309
  }

  return value;
}
     28e:	c9 01       	movw	r24, r18
     290:	08 95       	ret

00000292 <TwoWire::endTransmission(unsigned char) [clone .constprop.18]>:
endTransmission():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:224
//  the bus tenure has been properly ended with a STOP. It
//  is very possible to leave the bus in a hung state if
//  no call to endTransmission(true) is made. Some I2C
//  devices will behave oddly if they do not see a STOP.
//
uint8_t TwoWire::endTransmission(uint8_t sendStop)
     292:	28 2f       	mov	r18, r24
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:227
{
  // transmit buffer (blocking)
  uint8_t ret = twi_writeTo(txAddress, txBuffer, txBufferLength, 1, sendStop);
     294:	90 91 15 09 	lds	r25, 0x0915	; 0x800915 <TwoWire::txBufferLength>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:263
 */
uint8_t twi_writeTo(uint8_t address, uint8_t* data, uint8_t length, uint8_t wait, uint8_t sendStop)
{
  // ensure data will fit into buffer
  if(TWI_BUFFER_SIZE < length){
    return 1;
     298:	81 e0       	ldi	r24, 0x01	; 1
twi_writeTo():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:262
 *          5 .. timeout
 */
uint8_t twi_writeTo(uint8_t address, uint8_t* data, uint8_t length, uint8_t wait, uint8_t sendStop)
{
  // ensure data will fit into buffer
  if(TWI_BUFFER_SIZE < length){
     29a:	91 32       	cpi	r25, 0x21	; 33
     29c:	08 f0       	brcs	.+2      	; 0x2a0 <TwoWire::endTransmission(unsigned char) [clone .constprop.18]+0xe>
     29e:	42 c0       	rjmp	.+132    	; 0x324 <TwoWire::endTransmission(unsigned char) [clone .constprop.18]+0x92>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:276
        twi_handleTimeout(twi_do_reset_on_timeout);
        return (5);
      }
    }
  #else
    while(TWI_READY != twi_state){
     2a0:	80 91 f1 08 	lds	r24, 0x08F1	; 0x8008f1 <twi_state>
     2a4:	81 11       	cpse	r24, r1
     2a6:	fc cf       	rjmp	.-8      	; 0x2a0 <TwoWire::endTransmission(unsigned char) [clone .constprop.18]+0xe>
endTransmission():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:227
     2a8:	80 91 14 09 	lds	r24, 0x0914	; 0x800914 <TwoWire::txAddress>
twi_writeTo():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:281
      continue;
    }
  #endif

  twi_state = TWI_MTX;
     2ac:	32 e0       	ldi	r19, 0x02	; 2
     2ae:	30 93 f1 08 	sts	0x08F1, r19	; 0x8008f1 <twi_state>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:282
  twi_sendStop = sendStop;
     2b2:	20 93 f0 08 	sts	0x08F0, r18	; 0x8008f0 <twi_sendStop>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:284
  // reset error state (0xFF.. no error occurred)
  twi_error = 0xFF;
     2b6:	2f ef       	ldi	r18, 0xFF	; 255
     2b8:	20 93 ef 08 	sts	0x08EF, r18	; 0x8008ef <twi_error>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:287

  // initialize buffer iteration vars
  twi_masterBuffer = data;
     2bc:	24 ef       	ldi	r18, 0xF4	; 244
     2be:	38 e0       	ldi	r19, 0x08	; 8
     2c0:	30 93 ee 08 	sts	0x08EE, r19	; 0x8008ee <twi_masterBuffer+0x1>
     2c4:	20 93 ed 08 	sts	0x08ED, r18	; 0x8008ed <twi_masterBuffer>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:288
  twi_masterBufferIndex = 0;
     2c8:	10 92 ec 08 	sts	0x08EC, r1	; 0x8008ec <twi_masterBufferIndex>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:289
  twi_masterBufferLength = length;
     2cc:	90 93 eb 08 	sts	0x08EB, r25	; 0x8008eb <twi_masterBufferLength>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:292

  // build sla+w, slave device address + w bit
  twi_slarw = TW_WRITE;
     2d0:	10 92 ea 08 	sts	0x08EA, r1	; 0x8008ea <twi_slarw>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:293
  twi_slarw |= address << 1;
     2d4:	90 91 ea 08 	lds	r25, 0x08EA	; 0x8008ea <twi_slarw>
     2d8:	88 0f       	add	r24, r24
     2da:	89 2b       	or	r24, r25
     2dc:	80 93 ea 08 	sts	0x08EA, r24	; 0x8008ea <twi_slarw>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:298

  // if we're in a repeated start, then we've already sent the START
  // in the ISR. Don't do it again.
  //
  if (true == twi_inRepStart) {
     2e0:	80 91 e9 08 	lds	r24, 0x08E9	; 0x8008e9 <twi_inRepStart>
     2e4:	81 30       	cpi	r24, 0x01	; 1
     2e6:	29 f5       	brne	.+74     	; 0x332 <TwoWire::endTransmission(unsigned char) [clone .constprop.18]+0xa0>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:305
    // (@@@ we hope), and the TWI statemachine is just waiting for the address byte.
    // We need to remove ourselves from the repeated start state before we enable interrupts,
    // since the ISR is ASYNC, and we could get confused if we hit the ISR before cleaning
    // up. Also, don't enable the START interrupt. There may be one pending from the
    // repeated start that we sent ourselves, and that would really confuse things.
    twi_inRepStart = false; // Remember, we're dealing with an ASYNC ISR
     2e8:	10 92 e9 08 	sts	0x08E9, r1	; 0x8008e9 <twi_inRepStart>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:316
          return (5);
        }
      } while(TWCR & _BV(TWWC));
    #else
      do {
        TWDR = twi_slarw;
     2ec:	80 91 ea 08 	lds	r24, 0x08EA	; 0x8008ea <twi_slarw>
     2f0:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:317
      } while(TWCR & _BV(TWWC));
     2f4:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
     2f8:	83 fd       	sbrc	r24, 3
     2fa:	f8 cf       	rjmp	.-16     	; 0x2ec <TwoWire::endTransmission(unsigned char) [clone .constprop.18]+0x5a>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:319
    #endif
    TWCR = _BV(TWINT) | _BV(TWEA) | _BV(TWEN) | _BV(TWIE);  // enable INTs, but not START
     2fc:	85 ec       	ldi	r24, 0xC5	; 197
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:323
  }
  else
    // send start condition
    TWCR = _BV(TWINT) | _BV(TWEA) | _BV(TWEN) | _BV(TWIE) | _BV(TWSTA); // enable INTs
     2fe:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:335
        twi_handleTimeout(twi_do_reset_on_timeout);
        return (5);
      }
    }
  #else
    while(wait && (TWI_MTX == twi_state)){
     302:	80 91 f1 08 	lds	r24, 0x08F1	; 0x8008f1 <twi_state>
     306:	82 30       	cpi	r24, 0x02	; 2
     308:	e1 f3       	breq	.-8      	; 0x302 <TwoWire::endTransmission(unsigned char) [clone .constprop.18]+0x70>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:340
      continue;
    }
  #endif

  if (twi_error == 0xFF)
     30a:	80 91 ef 08 	lds	r24, 0x08EF	; 0x8008ef <twi_error>
     30e:	8f 3f       	cpi	r24, 0xFF	; 255
     310:	91 f0       	breq	.+36     	; 0x336 <TwoWire::endTransmission(unsigned char) [clone .constprop.18]+0xa4>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:342
    return 0; // success
  else if (twi_error == TW_MT_SLA_NACK)
     312:	80 91 ef 08 	lds	r24, 0x08EF	; 0x8008ef <twi_error>
     316:	80 32       	cpi	r24, 0x20	; 32
     318:	81 f0       	breq	.+32     	; 0x33a <TwoWire::endTransmission(unsigned char) [clone .constprop.18]+0xa8>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:344
    return 2; // error: address send, nack received
  else if (twi_error == TW_MT_DATA_NACK)
     31a:	80 91 ef 08 	lds	r24, 0x08EF	; 0x8008ef <twi_error>
     31e:	80 33       	cpi	r24, 0x30	; 48
     320:	71 f0       	breq	.+28     	; 0x33e <TwoWire::endTransmission(unsigned char) [clone .constprop.18]+0xac>
endTransmission():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:347
    return 3; // error: data send, nack received
  else
    return 4; // other twi error
     322:	84 e0       	ldi	r24, 0x04	; 4
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:229
  // reset tx buffer iterator vars
  txBufferIndex = 0;
     324:	10 92 f3 08 	sts	0x08F3, r1	; 0x8008f3 <TwoWire::txBufferIndex>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:230
  txBufferLength = 0;
     328:	10 92 15 09 	sts	0x0915, r1	; 0x800915 <TwoWire::txBufferLength>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:232
  // indicate that we are done transmitting
  transmitting = 0;
     32c:	10 92 f2 08 	sts	0x08F2, r1	; 0x8008f2 <TwoWire::transmitting>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:234
  return ret;
}
     330:	08 95       	ret
twi_writeTo():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:323
    #endif
    TWCR = _BV(TWINT) | _BV(TWEA) | _BV(TWEN) | _BV(TWIE);  // enable INTs, but not START
  }
  else
    // send start condition
    TWCR = _BV(TWINT) | _BV(TWEA) | _BV(TWEN) | _BV(TWIE) | _BV(TWSTA); // enable INTs
     332:	85 ee       	ldi	r24, 0xE5	; 229
     334:	e4 cf       	rjmp	.-56     	; 0x2fe <TwoWire::endTransmission(unsigned char) [clone .constprop.18]+0x6c>
endTransmission():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:341
      continue;
    }
  #endif

  if (twi_error == 0xFF)
    return 0; // success
     336:	80 e0       	ldi	r24, 0x00	; 0
     338:	f5 cf       	rjmp	.-22     	; 0x324 <TwoWire::endTransmission(unsigned char) [clone .constprop.18]+0x92>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:343
  else if (twi_error == TW_MT_SLA_NACK)
    return 2; // error: address send, nack received
     33a:	82 e0       	ldi	r24, 0x02	; 2
     33c:	f3 cf       	rjmp	.-26     	; 0x324 <TwoWire::endTransmission(unsigned char) [clone .constprop.18]+0x92>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:345
  else if (twi_error == TW_MT_DATA_NACK)
    return 3; // error: data send, nack received
     33e:	83 e0       	ldi	r24, 0x03	; 3
     340:	f1 cf       	rjmp	.-30     	; 0x324 <TwoWire::endTransmission(unsigned char) [clone .constprop.18]+0x92>

00000342 <TwoWire::beginTransmission(unsigned char) [clone .constprop.17]>:
beginTransmission():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:198
}

void TwoWire::beginTransmission(uint8_t address)
{
  // indicate that we are transmitting
  transmitting = 1;
     342:	91 e0       	ldi	r25, 0x01	; 1
     344:	90 93 f2 08 	sts	0x08F2, r25	; 0x8008f2 <TwoWire::transmitting>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:200
  // set address of targeted slave
  txAddress = address;
     348:	80 93 14 09 	sts	0x0914, r24	; 0x800914 <TwoWire::txAddress>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:202
  // reset tx buffer iterator vars
  txBufferIndex = 0;
     34c:	10 92 f3 08 	sts	0x08F3, r1	; 0x8008f3 <TwoWire::txBufferIndex>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:203
  txBufferLength = 0;
     350:	10 92 15 09 	sts	0x0915, r1	; 0x800915 <TwoWire::txBufferLength>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:204
}
     354:	08 95       	ret

00000356 <TwoWire::endTransmission() [clone .constprop.13]>:
endTransmission():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:241
//  This provides backwards compatibility with the original
//  definition, and expected behaviour, of endTransmission
//
uint8_t TwoWire::endTransmission(void)
{
  return endTransmission(true);
     356:	81 e0       	ldi	r24, 0x01	; 1
     358:	0c 94 49 01 	jmp	0x292	; 0x292 <TwoWire::endTransmission(unsigned char) [clone .constprop.18]>

0000035c <turnOffPWM>:
turnOffPWM():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:77
//
//static inline void turnOffPWM(uint8_t timer) __attribute__ ((always_inline));
//static inline void turnOffPWM(uint8_t timer)
static void turnOffPWM(uint8_t timer)
{
  switch (timer)
     35c:	81 50       	subi	r24, 0x01	; 1
     35e:	8c 30       	cpi	r24, 0x0C	; 12
     360:	88 f5       	brcc	.+98     	; 0x3c4 <turnOffPWM+0x68>
     362:	e8 2f       	mov	r30, r24
     364:	f0 e0       	ldi	r31, 0x00	; 0
     366:	e9 54       	subi	r30, 0x49	; 73
     368:	fe 4f       	sbci	r31, 0xFE	; 254
     36a:	0c 94 6c 35 	jmp	0x6ad8	; 0x6ad8 <__tablejump2__>
     36e:	df 01       	movw	r26, r30
     370:	df 01       	movw	r26, r30
     372:	e2 01       	movw	r28, r4
     374:	c3 01       	movw	r24, r6
     376:	c7 01       	movw	r24, r14
     378:	ca 01       	movw	r24, r20
     37a:	cd 01       	movw	r24, r26
     37c:	e2 01       	movw	r28, r4
     37e:	e2 01       	movw	r28, r4
     380:	d1 01       	movw	r26, r2
     382:	d7 01       	movw	r26, r14
     384:	db 01       	movw	r26, r22
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:82
  {
    // Timer1
    #if defined(TCCR1A) && defined(COM1A1)
      case TIMER1A:
        TCCR1A &= ~_BV(COM1A1);
     386:	8f b5       	in	r24, 0x2f	; 47
     388:	8f 77       	andi	r24, 0x7F	; 127
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:87
        break;
    #endif
    #if defined(TCCR1A) && defined(COM1B1)
      case TIMER1B:
        TCCR1A &= ~_BV(COM1B1);
     38a:	8f bd       	out	0x2f, r24	; 47
     38c:	08 95       	ret
     38e:	8f b5       	in	r24, 0x2f	; 47
     390:	8f 7d       	andi	r24, 0xDF	; 223
     392:	fb cf       	rjmp	.-10     	; 0x38a <turnOffPWM+0x2e>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:92
        break;
    #endif
    #if defined(TCCR1A) && defined(COM1C1)
      case TIMER1C:
        TCCR1A &= ~_BV(COM1C1);
     394:	8f b5       	in	r24, 0x2f	; 47
     396:	87 7f       	andi	r24, 0xF7	; 247
     398:	f8 cf       	rjmp	.-16     	; 0x38a <turnOffPWM+0x2e>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:99
    #endif
    
    // Timer2
    #if defined(TCCR2) && defined(COM21)
      case TIMER2:
        TCCR2 &= ~_BV(COM21);
     39a:	85 b5       	in	r24, 0x25	; 37
     39c:	8f 7d       	andi	r24, 0xDF	; 223
     39e:	85 bd       	out	0x25, r24	; 37
     3a0:	08 95       	ret
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:116
    #endif

    // Timer3
    #if defined(TCCR3A) && defined(COM3A1)
      case TIMER3A:
        TCCR3A &= ~_BV(COM3A1);
     3a2:	80 91 8b 00 	lds	r24, 0x008B	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
     3a6:	8f 77       	andi	r24, 0x7F	; 127
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:126
        TCCR3A &= ~_BV(COM3B1);
        break;
    #endif
    #if defined(TCCR3A) && defined(COM3C1)
      case TIMER3C:
        TCCR3A &= ~_BV(COM3C1);
     3a8:	80 93 8b 00 	sts	0x008B, r24	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
     3ac:	08 95       	ret
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:121
        TCCR3A &= ~_BV(COM3A1);
        break;
    #endif
    #if defined(TCCR3A) && defined(COM3B1)
      case TIMER3B:
        TCCR3A &= ~_BV(COM3B1);
     3ae:	80 91 8b 00 	lds	r24, 0x008B	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
     3b2:	8f 7d       	andi	r24, 0xDF	; 223
     3b4:	f9 cf       	rjmp	.-14     	; 0x3a8 <turnOffPWM+0x4c>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:126
        break;
    #endif
    #if defined(TCCR3A) && defined(COM3C1)
      case TIMER3C:
        TCCR3A &= ~_BV(COM3C1);
     3b6:	80 91 8b 00 	lds	r24, 0x008B	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
     3ba:	87 7f       	andi	r24, 0xF7	; 247
     3bc:	f5 cf       	rjmp	.-22     	; 0x3a8 <turnOffPWM+0x4c>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:171
    #if defined(TCCR0) && defined(COM01)
      case TIMER0:
        TCCR0 &= ~_BV(COM01);
        break;
      case TIMER0A:
        TCCR0 &= ~_BV(COM01);
     3be:	83 b7       	in	r24, 0x33	; 51
     3c0:	8f 7d       	andi	r24, 0xDF	; 223
     3c2:	83 bf       	out	0x33, r24	; 51
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:185
      case TIMER0B:
        TCCR0A &= ~_BV(COM0B1);
        break;
    #endif
  }
}
     3c4:	08 95       	ret

000003c6 <digitalRead>:
digitalRead():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:215

  SREG = oldSREG;
}

int digitalRead(uint8_t pin)
{
     3c6:	cf 93       	push	r28
     3c8:	df 93       	push	r29
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:216
  uint8_t timer = digitalPinToTimer(pin);
     3ca:	28 2f       	mov	r18, r24
     3cc:	30 e0       	ldi	r19, 0x00	; 0
     3ce:	f9 01       	movw	r30, r18
     3d0:	ea 5d       	subi	r30, 0xDA	; 218
     3d2:	fe 4f       	sbci	r31, 0xFE	; 254
     3d4:	84 91       	lpm	r24, Z
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:217
  uint8_t bit = digitalPinToBitMask(pin);
     3d6:	f9 01       	movw	r30, r18
     3d8:	ef 50       	subi	r30, 0x0F	; 15
     3da:	ff 4f       	sbci	r31, 0xFF	; 255
     3dc:	d4 91       	lpm	r29, Z
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:218
  uint8_t port = digitalPinToPort(pin);
     3de:	f9 01       	movw	r30, r18
     3e0:	e4 54       	subi	r30, 0x44	; 68
     3e2:	ff 4f       	sbci	r31, 0xFF	; 255
     3e4:	c4 91       	lpm	r28, Z
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:220

  if (port == NOT_A_PIN) return LOW;
     3e6:	cc 23       	and	r28, r28
     3e8:	a1 f0       	breq	.+40     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:224

  // If the pin that support PWM output, we need to turn it off
  // before getting a digital reading.
  if (timer != NOT_ON_TIMER) turnOffPWM(timer);
     3ea:	81 11       	cpse	r24, r1
     3ec:	0e 94 ae 01 	call	0x35c	; 0x35c <turnOffPWM>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:226

  if (*portInputRegister(port) & bit) return HIGH;
     3f0:	ec 2f       	mov	r30, r28
     3f2:	f0 e0       	ldi	r31, 0x00	; 0
     3f4:	ee 0f       	add	r30, r30
     3f6:	ff 1f       	adc	r31, r31
     3f8:	e4 55       	subi	r30, 0x54	; 84
     3fa:	ff 4f       	sbci	r31, 0xFF	; 255
     3fc:	a5 91       	lpm	r26, Z+
     3fe:	b4 91       	lpm	r27, Z
     400:	ec 91       	ld	r30, X
     402:	ed 23       	and	r30, r29
     404:	81 e0       	ldi	r24, 0x01	; 1
     406:	90 e0       	ldi	r25, 0x00	; 0
     408:	09 f4       	brne	.+2      	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
     40a:	80 e0       	ldi	r24, 0x00	; 0
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:228
  return LOW;
}
     40c:	df 91       	pop	r29
     40e:	cf 91       	pop	r28
     410:	08 95       	ret
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:220
{
  uint8_t timer = digitalPinToTimer(pin);
  uint8_t bit = digitalPinToBitMask(pin);
  uint8_t port = digitalPinToPort(pin);

  if (port == NOT_A_PIN) return LOW;
     412:	80 e0       	ldi	r24, 0x00	; 0
     414:	90 e0       	ldi	r25, 0x00	; 0
     416:	fa cf       	rjmp	.-12     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>

00000418 <digitalWrite>:
digitalWrite():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:188
    #endif
  }
}

void digitalWrite(uint8_t pin, uint8_t val)
{
     418:	1f 93       	push	r17
     41a:	cf 93       	push	r28
     41c:	df 93       	push	r29
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:189
  uint8_t timer = digitalPinToTimer(pin);
     41e:	28 2f       	mov	r18, r24
     420:	30 e0       	ldi	r19, 0x00	; 0
     422:	f9 01       	movw	r30, r18
     424:	ea 5d       	subi	r30, 0xDA	; 218
     426:	fe 4f       	sbci	r31, 0xFE	; 254
     428:	84 91       	lpm	r24, Z
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:190
  uint8_t bit = digitalPinToBitMask(pin);
     42a:	f9 01       	movw	r30, r18
     42c:	ef 50       	subi	r30, 0x0F	; 15
     42e:	ff 4f       	sbci	r31, 0xFF	; 255
     430:	d4 91       	lpm	r29, Z
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:191
  uint8_t port = digitalPinToPort(pin);
     432:	f9 01       	movw	r30, r18
     434:	e4 54       	subi	r30, 0x44	; 68
     436:	ff 4f       	sbci	r31, 0xFF	; 255
     438:	c4 91       	lpm	r28, Z
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:194
  volatile uint8_t *out;

  if (port == NOT_A_PIN) return;
     43a:	cc 23       	and	r28, r28
     43c:	a9 f0       	breq	.+42     	; 0x468 <digitalWrite+0x50>
     43e:	16 2f       	mov	r17, r22
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:198

  // If the pin that support PWM output, we need to turn it off
  // before doing a digital write.
  if (timer != NOT_ON_TIMER) turnOffPWM(timer);
     440:	81 11       	cpse	r24, r1
     442:	0e 94 ae 01 	call	0x35c	; 0x35c <turnOffPWM>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:200

  out = portOutputRegister(port);
     446:	ec 2f       	mov	r30, r28
     448:	f0 e0       	ldi	r31, 0x00	; 0
     44a:	ee 0f       	add	r30, r30
     44c:	ff 1f       	adc	r31, r31
     44e:	e4 56       	subi	r30, 0x64	; 100
     450:	ff 4f       	sbci	r31, 0xFF	; 255
     452:	a5 91       	lpm	r26, Z+
     454:	b4 91       	lpm	r27, Z
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:202

  uint8_t oldSREG = SREG;
     456:	8f b7       	in	r24, 0x3f	; 63
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:203
  cli();
     458:	f8 94       	cli
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:206

  if (val == LOW) {
    *out &= ~bit;
     45a:	ec 91       	ld	r30, X
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:205
  out = portOutputRegister(port);

  uint8_t oldSREG = SREG;
  cli();

  if (val == LOW) {
     45c:	11 11       	cpse	r17, r1
     45e:	08 c0       	rjmp	.+16     	; 0x470 <digitalWrite+0x58>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:206
    *out &= ~bit;
     460:	d0 95       	com	r29
     462:	de 23       	and	r29, r30
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:208
  } else {
    *out |= bit;
     464:	dc 93       	st	X, r29
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:211
  }

  SREG = oldSREG;
     466:	8f bf       	out	0x3f, r24	; 63
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:212
}
     468:	df 91       	pop	r29
     46a:	cf 91       	pop	r28
     46c:	1f 91       	pop	r17
     46e:	08 95       	ret
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:208
  cli();

  if (val == LOW) {
    *out &= ~bit;
  } else {
    *out |= bit;
     470:	de 2b       	or	r29, r30
     472:	f8 cf       	rjmp	.-16     	; 0x464 <digitalWrite+0x4c>

00000474 <pinMode>:
pinMode():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:30
#define ARDUINO_MAIN
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
{
     474:	cf 93       	push	r28
     476:	df 93       	push	r29
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:31
  uint8_t bit = digitalPinToBitMask(pin);
     478:	90 e0       	ldi	r25, 0x00	; 0
     47a:	fc 01       	movw	r30, r24
     47c:	ef 50       	subi	r30, 0x0F	; 15
     47e:	ff 4f       	sbci	r31, 0xFF	; 255
     480:	24 91       	lpm	r18, Z
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:32
  uint8_t port = digitalPinToPort(pin);
     482:	84 54       	subi	r24, 0x44	; 68
     484:	9f 4f       	sbci	r25, 0xFF	; 255
     486:	fc 01       	movw	r30, r24
     488:	84 91       	lpm	r24, Z
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:35
  volatile uint8_t *reg, *out;

  if (port == NOT_A_PIN) return;
     48a:	88 23       	and	r24, r24
     48c:	c9 f0       	breq	.+50     	; 0x4c0 <pinMode+0x4c>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:38

  // JWS: can I let the optimizer do this?
  reg = portModeRegister(port);
     48e:	90 e0       	ldi	r25, 0x00	; 0
     490:	88 0f       	add	r24, r24
     492:	99 1f       	adc	r25, r25
     494:	fc 01       	movw	r30, r24
     496:	e4 57       	subi	r30, 0x74	; 116
     498:	ff 4f       	sbci	r31, 0xFF	; 255
     49a:	a5 91       	lpm	r26, Z+
     49c:	b4 91       	lpm	r27, Z
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:39
  out = portOutputRegister(port);
     49e:	fc 01       	movw	r30, r24
     4a0:	e4 56       	subi	r30, 0x64	; 100
     4a2:	ff 4f       	sbci	r31, 0xFF	; 255
     4a4:	c5 91       	lpm	r28, Z+
     4a6:	d4 91       	lpm	r29, Z
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:41

  if (mode == INPUT) { 
     4a8:	61 11       	cpse	r22, r1
     4aa:	0d c0       	rjmp	.+26     	; 0x4c6 <pinMode+0x52>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:42
    uint8_t oldSREG = SREG;
     4ac:	9f b7       	in	r25, 0x3f	; 63
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:43
    cli();
     4ae:	f8 94       	cli
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:44
    *reg &= ~bit;
     4b0:	8c 91       	ld	r24, X
     4b2:	20 95       	com	r18
     4b4:	82 23       	and	r24, r18
     4b6:	8c 93       	st	X, r24
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:45
    *out &= ~bit;
     4b8:	88 81       	ld	r24, Y
     4ba:	28 23       	and	r18, r24
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:51
    SREG = oldSREG;
  } else if (mode == INPUT_PULLUP) {
    uint8_t oldSREG = SREG;
    cli();
    *reg &= ~bit;
    *out |= bit;
     4bc:	28 83       	st	Y, r18
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:52
    SREG = oldSREG;
     4be:	9f bf       	out	0x3f, r25	; 63
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:59
    uint8_t oldSREG = SREG;
    cli();
    *reg |= bit;
    SREG = oldSREG;
  }
}
     4c0:	df 91       	pop	r29
     4c2:	cf 91       	pop	r28
     4c4:	08 95       	ret
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:47
    uint8_t oldSREG = SREG;
    cli();
    *reg &= ~bit;
    *out &= ~bit;
    SREG = oldSREG;
  } else if (mode == INPUT_PULLUP) {
     4c6:	62 30       	cpi	r22, 0x02	; 2
     4c8:	51 f4       	brne	.+20     	; 0x4de <pinMode+0x6a>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:48
    uint8_t oldSREG = SREG;
     4ca:	9f b7       	in	r25, 0x3f	; 63
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:49
    cli();
     4cc:	f8 94       	cli
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:50
    *reg &= ~bit;
     4ce:	3c 91       	ld	r19, X
     4d0:	82 2f       	mov	r24, r18
     4d2:	80 95       	com	r24
     4d4:	83 23       	and	r24, r19
     4d6:	8c 93       	st	X, r24
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:51
    *out |= bit;
     4d8:	e8 81       	ld	r30, Y
     4da:	2e 2b       	or	r18, r30
     4dc:	ef cf       	rjmp	.-34     	; 0x4bc <pinMode+0x48>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:54
    SREG = oldSREG;
  } else {
    uint8_t oldSREG = SREG;
     4de:	8f b7       	in	r24, 0x3f	; 63
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:55
    cli();
     4e0:	f8 94       	cli
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:56
    *reg |= bit;
     4e2:	ec 91       	ld	r30, X
     4e4:	2e 2b       	or	r18, r30
     4e6:	2c 93       	st	X, r18
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_digital.c:57
    SREG = oldSREG;
     4e8:	8f bf       	out	0x3f, r24	; 63
     4ea:	ea cf       	rjmp	.-44     	; 0x4c0 <pinMode+0x4c>

000004ec <analogWrite>:
analogWrite():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_analog.c:95
// Right now, PWM output only works on the pins with
// hardware support.  These are defined in the appropriate
// pins_*.c file.  For the rest of the pins, we default
// to digital output.
void analogWrite(uint8_t pin, int val)
{
     4ec:	1f 93       	push	r17
     4ee:	cf 93       	push	r28
     4f0:	df 93       	push	r29
     4f2:	18 2f       	mov	r17, r24
     4f4:	eb 01       	movw	r28, r22
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_analog.c:101
  // We need to make sure the PWM output is enabled for those pins
  // that support it, as we turn it off when digitally reading or
  // writing with them.  Also, make sure the pin is in output mode
  // for consistenty with Wiring, which doesn't require a pinMode
  // call for the analog output pins.
  pinMode(pin, OUTPUT);
     4f6:	61 e0       	ldi	r22, 0x01	; 1
     4f8:	0e 94 3a 02 	call	0x474	; 0x474 <pinMode>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_analog.c:102
  if (val == 0)
     4fc:	20 97       	sbiw	r28, 0x00	; 0
     4fe:	39 f4       	brne	.+14     	; 0x50e <analogWrite+0x22>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_analog.c:104
  {
    digitalWrite(pin, LOW);
     500:	60 e0       	ldi	r22, 0x00	; 0
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_analog.c:108
  }
  else if (val == 255)
  {
    digitalWrite(pin, HIGH);
     502:	81 2f       	mov	r24, r17
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_analog.c:299
        } else {
          digitalWrite(pin, HIGH);
        }
    }
  }
}
     504:	df 91       	pop	r29
     506:	cf 91       	pop	r28
     508:	1f 91       	pop	r17
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_analog.c:108
  {
    digitalWrite(pin, LOW);
  }
  else if (val == 255)
  {
    digitalWrite(pin, HIGH);
     50a:	0c 94 0c 02 	jmp	0x418	; 0x418 <digitalWrite>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_analog.c:106
  pinMode(pin, OUTPUT);
  if (val == 0)
  {
    digitalWrite(pin, LOW);
  }
  else if (val == 255)
     50e:	cf 3f       	cpi	r28, 0xFF	; 255
     510:	d1 05       	cpc	r29, r1
     512:	11 f4       	brne	.+4      	; 0x518 <analogWrite+0x2c>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_analog.c:108
  {
    digitalWrite(pin, HIGH);
     514:	61 e0       	ldi	r22, 0x01	; 1
     516:	f5 cf       	rjmp	.-22     	; 0x502 <analogWrite+0x16>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_analog.c:112
  }
  else
  {
    switch(digitalPinToTimer(pin))
     518:	e1 2f       	mov	r30, r17
     51a:	f0 e0       	ldi	r31, 0x00	; 0
     51c:	ea 5d       	subi	r30, 0xDA	; 218
     51e:	fe 4f       	sbci	r31, 0xFE	; 254
     520:	e4 91       	lpm	r30, Z
     522:	e1 50       	subi	r30, 0x01	; 1
     524:	ec 30       	cpi	r30, 0x0C	; 12
     526:	08 f0       	brcs	.+2      	; 0x52a <analogWrite+0x3e>
     528:	50 c0       	rjmp	.+160    	; 0x5ca <analogWrite+0xde>
     52a:	f0 e0       	ldi	r31, 0x00	; 0
     52c:	e6 56       	subi	r30, 0x66	; 102
     52e:	fd 4f       	sbci	r31, 0xFD	; 253
     530:	0c 94 6c 35 	jmp	0x6ad8	; 0x6ad8 <__tablejump2__>
     534:	a6 02       	muls	r26, r22
     536:	a6 02       	muls	r26, r22
     538:	e5 02       	muls	r30, r21
     53a:	ae 02       	muls	r26, r30
     53c:	b4 02       	muls	r27, r20
     53e:	ba 02       	muls	r27, r26
     540:	c2 02       	muls	r28, r18
     542:	e5 02       	muls	r30, r21
     544:	e5 02       	muls	r30, r21
     546:	c7 02       	muls	r28, r23
     548:	d1 02       	muls	r29, r17
     54a:	db 02       	muls	r29, r27
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_analog.c:124
        break;
        
      case TIMER0A:
        // connect pwm to pin on timer 0
        // this combination is for the ATmega8535, ATmega16 and ATmega32
        TCCR0 |= _BV(COM01);
     54c:	83 b7       	in	r24, 0x33	; 51
     54e:	80 62       	ori	r24, 0x20	; 32
     550:	83 bf       	out	0x33, r24	; 51
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_analog.c:125
        OCR0 = val; // set pwm duty
     552:	c1 bf       	out	0x31, r28	; 49
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_analog.c:299
        } else {
          digitalWrite(pin, HIGH);
        }
    }
  }
}
     554:	df 91       	pop	r29
     556:	cf 91       	pop	r28
     558:	1f 91       	pop	r17
     55a:	08 95       	ret
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_analog.c:148
      #endif

      #if defined(TCCR1A) && defined(COM1A1)
      case TIMER1A:
        // connect pwm to pin on timer 1, channel A
        TCCR1A |= _BV(COM1A1);
     55c:	8f b5       	in	r24, 0x2f	; 47
     55e:	80 68       	ori	r24, 0x80	; 128
     560:	8f bd       	out	0x2f, r24	; 47
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_analog.c:149
        OCR1A = val; // set pwm duty
     562:	db bd       	out	0x2b, r29	; 43
     564:	ca bd       	out	0x2a, r28	; 42
     566:	f6 cf       	rjmp	.-20     	; 0x554 <analogWrite+0x68>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_analog.c:156
      #endif

      #if defined(TCCR1A) && defined(COM1B1)
      case TIMER1B:
        // connect pwm to pin on timer 1, channel B
        TCCR1A |= _BV(COM1B1);
     568:	8f b5       	in	r24, 0x2f	; 47
     56a:	80 62       	ori	r24, 0x20	; 32
     56c:	8f bd       	out	0x2f, r24	; 47
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_analog.c:157
        OCR1B = val; // set pwm duty
     56e:	d9 bd       	out	0x29, r29	; 41
     570:	c8 bd       	out	0x28, r28	; 40
     572:	f0 cf       	rjmp	.-32     	; 0x554 <analogWrite+0x68>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_analog.c:164
      #endif

      #if defined(TCCR1A) && defined(COM1C1)
      case TIMER1C:
        // connect pwm to pin on timer 1, channel B
        TCCR1A |= _BV(COM1C1);
     574:	8f b5       	in	r24, 0x2f	; 47
     576:	88 60       	ori	r24, 0x08	; 8
     578:	8f bd       	out	0x2f, r24	; 47
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_analog.c:165
        OCR1C = val; // set pwm duty
     57a:	d0 93 79 00 	sts	0x0079, r29	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     57e:	c0 93 78 00 	sts	0x0078, r28	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     582:	e8 cf       	rjmp	.-48     	; 0x554 <analogWrite+0x68>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_analog.c:172
      #endif

      #if defined(TCCR2) && defined(COM21)
      case TIMER2:
        // connect pwm to pin on timer 2
        TCCR2 |= _BV(COM21);
     584:	85 b5       	in	r24, 0x25	; 37
     586:	80 62       	ori	r24, 0x20	; 32
     588:	85 bd       	out	0x25, r24	; 37
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_analog.c:173
        OCR2 = val; // set pwm duty
     58a:	c3 bd       	out	0x23, r28	; 35
     58c:	e3 cf       	rjmp	.-58     	; 0x554 <analogWrite+0x68>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_analog.c:196
      #endif

      #if defined(TCCR3A) && defined(COM3A1)
      case TIMER3A:
        // connect pwm to pin on timer 3, channel A
        TCCR3A |= _BV(COM3A1);
     58e:	80 91 8b 00 	lds	r24, 0x008B	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
     592:	80 68       	ori	r24, 0x80	; 128
     594:	80 93 8b 00 	sts	0x008B, r24	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_analog.c:197
        OCR3A = val; // set pwm duty
     598:	d0 93 87 00 	sts	0x0087, r29	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
     59c:	c0 93 86 00 	sts	0x0086, r28	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
     5a0:	d9 cf       	rjmp	.-78     	; 0x554 <analogWrite+0x68>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_analog.c:209
        #if defined(__AVR_ATmega328PB__) // Fix 324PB/328PB silicon bug
          PORTD |= _BV(PD2);
        #elif defined(__AVR_ATmega324PB__)
          PORTB |= _BV(PB7);
        #endif
        TCCR3A |= _BV(COM3B1);
     5a2:	80 91 8b 00 	lds	r24, 0x008B	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
     5a6:	80 62       	ori	r24, 0x20	; 32
     5a8:	80 93 8b 00 	sts	0x008B, r24	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_analog.c:210
        OCR3B = val; // set pwm duty
     5ac:	d0 93 85 00 	sts	0x0085, r29	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     5b0:	c0 93 84 00 	sts	0x0084, r28	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     5b4:	cf cf       	rjmp	.-98     	; 0x554 <analogWrite+0x68>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_analog.c:217
      #endif

      #if defined(TCCR3A) && defined(COM3C1)
      case TIMER3C:
        // connect pwm to pin on timer 3, channel C
        TCCR3A |= _BV(COM3C1);
     5b6:	80 91 8b 00 	lds	r24, 0x008B	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
     5ba:	88 60       	ori	r24, 0x08	; 8
     5bc:	80 93 8b 00 	sts	0x008B, r24	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_analog.c:218
        OCR3C = val; // set pwm duty
     5c0:	d0 93 83 00 	sts	0x0083, r29	; 0x800083 <__TEXT_REGION_LENGTH__+0x7e0083>
     5c4:	c0 93 82 00 	sts	0x0082, r28	; 0x800082 <__TEXT_REGION_LENGTH__+0x7e0082>
     5c8:	c5 cf       	rjmp	.-118    	; 0x554 <analogWrite+0x68>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_analog.c:292
        break;
      #endif

      case NOT_ON_TIMER:
      default:
        if (val < 128) {
     5ca:	c0 38       	cpi	r28, 0x80	; 128
     5cc:	d1 05       	cpc	r29, r1
     5ce:	0c f0       	brlt	.+2      	; 0x5d2 <analogWrite+0xe6>
     5d0:	a1 cf       	rjmp	.-190    	; 0x514 <analogWrite+0x28>
     5d2:	96 cf       	rjmp	.-212    	; 0x500 <analogWrite+0x14>

000005d4 <analogRead>:
analogRead():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_analog.c:49
int analogRead(uint8_t pin)
{

// Macro located in the pins_arduino.h file
#ifdef analogPinToChannel
  pin = analogPinToChannel(pin);
     5d4:	8d 52       	subi	r24, 0x2D	; 45
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_analog.c:68
  
  // set the analog reference (high two bits of ADMUX) and select the
  // channel (low 4 bits).  this also sets ADLAR (left-adjust result)
  // to 0 (the default).
#if defined(ADMUX)
  ADMUX = (analog_reference << 6) | (pin & 0x07);
     5d6:	80 64       	ori	r24, 0x40	; 64
     5d8:	87 b9       	out	0x07, r24	; 7
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_analog.c:76
  // without a delay, we seem to read from the wrong channel
  //delay(1);

#if defined(ADCSRA) && defined(ADC)
  // start the conversion
  ADCSRA |= _BV(ADSC);
     5da:	36 9a       	sbi	0x06, 6	; 6
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_analog.c:79

  // ADSC is cleared when the conversion finishes
  while (ADCSRA & _BV(ADSC)) {};
     5dc:	36 99       	sbic	0x06, 6	; 6
     5de:	fe cf       	rjmp	.-4      	; 0x5dc <analogRead+0x8>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_analog.c:83

  // ADC macro takes care of reading ADC register.
 	// avr-gcc implements the proper reading order: ADCL is read first.
 	return ADC;
     5e0:	84 b1       	in	r24, 0x04	; 4
     5e2:	95 b1       	in	r25, 0x05	; 5
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_analog.c:87
#else
  return 0;
#endif
}
     5e4:	08 95       	ret

000005e6 <delayMicroseconds>:
delayMicroseconds():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:679
  // us is at least 6 so we can substract 5
  us -= 5; // = 2 cycles

#elif F_CPU >= 11059200L
  // the overhead of the function call is 14 (16) cycles which is ~1.3 us
  if (us <= 2) return; // = 3 cycles, (4 when true)
     5e6:	83 30       	cpi	r24, 0x03	; 3
     5e8:	91 05       	cpc	r25, r1
     5ea:	88 f0       	brcs	.+34     	; 0x60e <delayMicroseconds+0x28>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:681

  us = (us << 1) + us; // x3 us, = 5 cycles
     5ec:	9c 01       	movw	r18, r24
     5ee:	22 0f       	add	r18, r18
     5f0:	33 1f       	adc	r19, r19
     5f2:	28 0f       	add	r18, r24
     5f4:	39 1f       	adc	r19, r25
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:703
    // account for the time taken in the preceeding commands.
    // we just burned 27 (29) cycles above, remove 7 (7*4=28),
    // us is at least 9, so we may subtract without rollunder

             // 1 cycle when if jump here
    us -= 7; // 2 cycles
     5f6:	c9 01       	movw	r24, r18
     5f8:	07 97       	sbiw	r24, 0x07	; 7
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:685

  us = (us << 1) + us; // x3 us, = 5 cycles

                       // +1 cycle (register save)
  // user wants to wait longer than 5 us
  if (us > 15) // = 3 cycles
     5fa:	20 31       	cpi	r18, 0x10	; 16
     5fc:	31 05       	cpc	r19, r1
     5fe:	28 f0       	brcs	.+10     	; 0x60a <delayMicroseconds+0x24>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:689
  {
    // since the loop is not accurately 1/3 of a microsecond we need
    // to multiply us by 0.9216 (11.0592 / 12)
    us = (us * 60398UL) >> 16;  // x0.9216 us = 29 cycles (60398 = 0.9216 x 0x10000L)
     600:	ae ee       	ldi	r26, 0xEE	; 238
     602:	bb ee       	ldi	r27, 0xEB	; 235
     604:	0e 94 75 35 	call	0x6aea	; 0x6aea <__umulhisi3>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:694
    // this drops us to at least 14

    // account for the time taken in the preceeding commands.
    // we just burned 53 (55) cycles above, remove 13, (13*4=52)
    us -= 13; // = 2 cycles
     608:	0d 97       	sbiw	r24, 0x0d	; 13
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:929
  us >>= 2; // us div 4, = 4 cycles

#endif

  // busy wait
  __asm__ __volatile__ (
     60a:	01 97       	sbiw	r24, 0x01	; 1
     60c:	f1 f7       	brne	.-4      	; 0x60a <delayMicroseconds+0x24>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:939
    "   brne 1b"                     // 2 cycles
    : /* no outputs */
    : "w" (us)
  );
  // return = 4 cycles
}
     60e:	08 95       	ret

00000610 <micros>:
micros():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:229
  SREG = oldSREG;

  return m;
}

unsigned long micros() {
     610:	cf 92       	push	r12
     612:	df 92       	push	r13
     614:	ef 92       	push	r14
     616:	ff 92       	push	r15
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:237
  unsigned char f; // temporary storage for millis fraction counter
  unsigned char q = 0; // record whether an overflow is flagged
#endif
  // t will be the number where the timer0 counter stopped
  uint8_t t;
  uint8_t oldSREG = SREG;
     618:	6f b7       	in	r22, 0x3f	; 63
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:240

  // Stop all interrupts
  cli();
     61a:	f8 94       	cli
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:244

#ifdef CORRECT_EXACT_MICROS
  // combine exact millisec and 8usec counters
  m = timer0_millis;
     61c:	80 91 e5 08 	lds	r24, 0x08E5	; 0x8008e5 <timer0_millis>
     620:	90 91 e6 08 	lds	r25, 0x08E6	; 0x8008e6 <timer0_millis+0x1>
     624:	a0 91 e7 08 	lds	r26, 0x08E7	; 0x8008e7 <timer0_millis+0x2>
     628:	b0 91 e8 08 	lds	r27, 0x08E8	; 0x8008e8 <timer0_millis+0x3>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:245
  f = timer0_fract;
     62c:	50 91 e4 08 	lds	r21, 0x08E4	; 0x8008e4 <timer0_fract>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:252
  m = timer0_overflow_count;
#endif

  // TCNT0 : The Timer Counter Register
#if defined(TCNT0)
  t = TCNT0;
     630:	22 b7       	in	r18, 0x32	; 50
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:268
    m++;
#else
    q = 1;
#endif
#else
  if ((TIFR & _BV(TOV0)) && (t < 255))
     632:	36 b7       	in	r19, 0x36	; 54
     634:	43 2f       	mov	r20, r19
     636:	41 70       	andi	r20, 0x01	; 1
     638:	30 ff       	sbrs	r19, 0
     63a:	04 c0       	rjmp	.+8      	; 0x644 <micros+0x34>
     63c:	41 e0       	ldi	r20, 0x01	; 1
     63e:	2f 3f       	cpi	r18, 0xFF	; 255
     640:	09 f4       	brne	.+2      	; 0x644 <micros+0x34>
     642:	40 e0       	ldi	r20, 0x00	; 0
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:276
#else
    q = 1;
#endif
#endif
  // Restore SREG
  SREG = oldSREG;
     644:	6f bf       	out	0x3f, r22	; 63
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:286
     Basically we multiply by 1000 and add the scaled timer.

     The leading part by m and f is long-term accurate.
     For the timer we just need to be close from below.
     Must never be too high, or micros jumps backwards. */
  m = (((m << 7) - (m << 1) - m + f) << 3) +
     646:	6c 01       	movw	r12, r24
     648:	7d 01       	movw	r14, r26
     64a:	37 e0       	ldi	r19, 0x07	; 7
     64c:	cc 0c       	add	r12, r12
     64e:	dd 1c       	adc	r13, r13
     650:	ee 1c       	adc	r14, r14
     652:	ff 1c       	adc	r15, r15
     654:	3a 95       	dec	r19
     656:	d1 f7       	brne	.-12     	; 0x64c <micros+0x3c>
     658:	c5 0e       	add	r12, r21
     65a:	d1 1c       	adc	r13, r1
     65c:	e1 1c       	adc	r14, r1
     65e:	f1 1c       	adc	r15, r1
     660:	c8 1a       	sub	r12, r24
     662:	d9 0a       	sbc	r13, r25
     664:	ea 0a       	sbc	r14, r26
     666:	fb 0a       	sbc	r15, r27
     668:	88 0f       	add	r24, r24
     66a:	99 1f       	adc	r25, r25
     66c:	aa 1f       	adc	r26, r26
     66e:	bb 1f       	adc	r27, r27
     670:	c8 1a       	sub	r12, r24
     672:	d9 0a       	sbc	r13, r25
     674:	ea 0a       	sbc	r14, r26
     676:	fb 0a       	sbc	r15, r27
     678:	63 e0       	ldi	r22, 0x03	; 3
     67a:	cc 0c       	add	r12, r12
     67c:	dd 1c       	adc	r13, r13
     67e:	ee 1c       	adc	r14, r14
     680:	ff 1c       	adc	r15, r15
     682:	6a 95       	dec	r22
     684:	d1 f7       	brne	.-12     	; 0x67a <micros+0x6a>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:287
      ((t * MICROSECONDS_PER_TIMER0_OVERFLOW) >> 8);
     686:	30 e0       	ldi	r19, 0x00	; 0
     688:	a9 ec       	ldi	r26, 0xC9	; 201
     68a:	b5 e0       	ldi	r27, 0x05	; 5
     68c:	0e 94 75 35 	call	0x6aea	; 0x6aea <__umulhisi3>
     690:	67 2f       	mov	r22, r23
     692:	78 2f       	mov	r23, r24
     694:	89 2f       	mov	r24, r25
     696:	99 27       	eor	r25, r25
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:286
     Basically we multiply by 1000 and add the scaled timer.

     The leading part by m and f is long-term accurate.
     For the timer we just need to be close from below.
     Must never be too high, or micros jumps backwards. */
  m = (((m << 7) - (m << 1) - m + f) << 3) +
     698:	6c 0d       	add	r22, r12
     69a:	7d 1d       	adc	r23, r13
     69c:	8e 1d       	adc	r24, r14
     69e:	9f 1d       	adc	r25, r15
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:288
      ((t * MICROSECONDS_PER_TIMER0_OVERFLOW) >> 8);
  return q ? m + MICROSECONDS_PER_TIMER0_OVERFLOW : m;
     6a0:	44 23       	and	r20, r20
     6a2:	21 f0       	breq	.+8      	; 0x6ac <micros+0x9c>
     6a4:	67 53       	subi	r22, 0x37	; 55
     6a6:	7a 4f       	sbci	r23, 0xFA	; 250
     6a8:	8f 4f       	sbci	r24, 0xFF	; 255
     6aa:	9f 4f       	sbci	r25, 0xFF	; 255
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:393
  // m & t are multiplied by 4 (since it was already multiplied by 256)
  // t is multiplied by 4
  return ((m << 8) + t) * (64 / clockCyclesPerMicrosecond());
#endif
#endif // 0
}
     6ac:	ff 90       	pop	r15
     6ae:	ef 90       	pop	r14
     6b0:	df 90       	pop	r13
     6b2:	cf 90       	pop	r12
     6b4:	08 95       	ret

000006b6 <delay>:
delay():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:396

void delay(unsigned long ms)
{
     6b6:	8f 92       	push	r8
     6b8:	9f 92       	push	r9
     6ba:	af 92       	push	r10
     6bc:	bf 92       	push	r11
     6be:	cf 92       	push	r12
     6c0:	df 92       	push	r13
     6c2:	ef 92       	push	r14
     6c4:	ff 92       	push	r15
     6c6:	4b 01       	movw	r8, r22
     6c8:	5c 01       	movw	r10, r24
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:397
  unsigned long start = micros();
     6ca:	0e 94 08 03 	call	0x610	; 0x610 <micros>
     6ce:	6b 01       	movw	r12, r22
     6d0:	7c 01       	movw	r14, r24
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:401

  while (ms > 0UL) {
    yield();
    while (ms > 0UL && (micros() - start) >= 1000UL) {
     6d2:	0e 94 08 03 	call	0x610	; 0x610 <micros>
     6d6:	6c 19       	sub	r22, r12
     6d8:	7d 09       	sbc	r23, r13
     6da:	8e 09       	sbc	r24, r14
     6dc:	9f 09       	sbc	r25, r15
     6de:	68 3e       	cpi	r22, 0xE8	; 232
     6e0:	73 40       	sbci	r23, 0x03	; 3
     6e2:	81 05       	cpc	r24, r1
     6e4:	91 05       	cpc	r25, r1
     6e6:	a8 f3       	brcs	.-22     	; 0x6d2 <delay+0x1c>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:402
      ms--;
     6e8:	21 e0       	ldi	r18, 0x01	; 1
     6ea:	82 1a       	sub	r8, r18
     6ec:	91 08       	sbc	r9, r1
     6ee:	a1 08       	sbc	r10, r1
     6f0:	b1 08       	sbc	r11, r1
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:403
      start += 1000UL;
     6f2:	88 ee       	ldi	r24, 0xE8	; 232
     6f4:	c8 0e       	add	r12, r24
     6f6:	83 e0       	ldi	r24, 0x03	; 3
     6f8:	d8 1e       	adc	r13, r24
     6fa:	e1 1c       	adc	r14, r1
     6fc:	f1 1c       	adc	r15, r1
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:401
{
  unsigned long start = micros();

  while (ms > 0UL) {
    yield();
    while (ms > 0UL && (micros() - start) >= 1000UL) {
     6fe:	81 14       	cp	r8, r1
     700:	91 04       	cpc	r9, r1
     702:	a1 04       	cpc	r10, r1
     704:	b1 04       	cpc	r11, r1
     706:	29 f7       	brne	.-54     	; 0x6d2 <delay+0x1c>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:406
      ms--;
      start += 1000UL;
    }
  }
}
     708:	ff 90       	pop	r15
     70a:	ef 90       	pop	r14
     70c:	df 90       	pop	r13
     70e:	cf 90       	pop	r12
     710:	bf 90       	pop	r11
     712:	af 90       	pop	r10
     714:	9f 90       	pop	r9
     716:	8f 90       	pop	r8
     718:	08 95       	ret

0000071a <TwoWire::onRequestService()>:
onRequestService():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:368
  // !!! this will kill any pending pre-master sendTo() activity
  txBufferIndex = 0;
  txBufferLength = 0;
  // alert user program
  user_onRequest();
}
     71a:	08 95       	ret

0000071c <TwoWire::onReceiveService(unsigned char*, int)>:
onReceiveService():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:353
  // set rx iterator vars
  rxBufferIndex = 0;
  rxBufferLength = numBytes;
  // alert user program
  user_onReceive(numBytes);
}
     71c:	08 95       	ret

0000071e <Print::write(unsigned char const*, unsigned int)>:
write():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/Print.cpp:35

// Public Methods //////////////////////////////////////////////////////////////

/* default implementation: may be overridden */
size_t Print::write(const uint8_t *buffer, size_t size)
{
     71e:	af 92       	push	r10
     720:	bf 92       	push	r11
     722:	cf 92       	push	r12
     724:	df 92       	push	r13
     726:	ef 92       	push	r14
     728:	ff 92       	push	r15
     72a:	0f 93       	push	r16
     72c:	1f 93       	push	r17
     72e:	cf 93       	push	r28
     730:	df 93       	push	r29
     732:	6c 01       	movw	r12, r24
     734:	7b 01       	movw	r14, r22
     736:	8b 01       	movw	r16, r22
     738:	04 0f       	add	r16, r20
     73a:	15 1f       	adc	r17, r21
     73c:	eb 01       	movw	r28, r22
     73e:	5e 01       	movw	r10, r28
     740:	ae 18       	sub	r10, r14
     742:	bf 08       	sbc	r11, r15
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/Print.cpp:37
  size_t n = 0;
  while (size--) {
     744:	c0 17       	cp	r28, r16
     746:	d1 07       	cpc	r29, r17
     748:	59 f0       	breq	.+22     	; 0x760 <Print::write(unsigned char const*, unsigned int)+0x42>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/Print.cpp:38
    if (write(*buffer++)) n++;
     74a:	69 91       	ld	r22, Y+
     74c:	d6 01       	movw	r26, r12
     74e:	ed 91       	ld	r30, X+
     750:	fc 91       	ld	r31, X
     752:	01 90       	ld	r0, Z+
     754:	f0 81       	ld	r31, Z
     756:	e0 2d       	mov	r30, r0
     758:	c6 01       	movw	r24, r12
     75a:	09 95       	icall
     75c:	89 2b       	or	r24, r25
     75e:	79 f7       	brne	.-34     	; 0x73e <Print::write(unsigned char const*, unsigned int)+0x20>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/Print.cpp:42
    else break;
  }
  return n;
}
     760:	c5 01       	movw	r24, r10
     762:	df 91       	pop	r29
     764:	cf 91       	pop	r28
     766:	1f 91       	pop	r17
     768:	0f 91       	pop	r16
     76a:	ff 90       	pop	r15
     76c:	ef 90       	pop	r14
     76e:	df 90       	pop	r13
     770:	cf 90       	pop	r12
     772:	bf 90       	pop	r11
     774:	af 90       	pop	r10
     776:	08 95       	ret

00000778 <HardwareSerial::availableForWrite()>:
availableForWrite():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:195
{
  tx_buffer_index_t head;
  tx_buffer_index_t tail;

  TX_BUFFER_ATOMIC {
    head = _tx_buffer_head;
     778:	fc 01       	movw	r30, r24
     77a:	53 8d       	ldd	r21, Z+27	; 0x1b
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:196
    tail = _tx_buffer_tail;
     77c:	44 8d       	ldd	r20, Z+28	; 0x1c
     77e:	25 2f       	mov	r18, r21
     780:	30 e0       	ldi	r19, 0x00	; 0
     782:	84 2f       	mov	r24, r20
     784:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:198
  }
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
     786:	82 1b       	sub	r24, r18
     788:	93 0b       	sbc	r25, r19
     78a:	54 17       	cp	r21, r20
     78c:	10 f0       	brcs	.+4      	; 0x792 <HardwareSerial::availableForWrite()+0x1a>
     78e:	cf 96       	adiw	r24, 0x3f	; 63
     790:	08 95       	ret
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:199
  return tail - head - 1;
     792:	01 97       	sbiw	r24, 0x01	; 1
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:200
}
     794:	08 95       	ret

00000796 <HardwareSerial::read()>:
read():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:178
    return _rx_buffer[_rx_buffer_tail];
  }
}

int HardwareSerial::read(void)
{
     796:	fc 01       	movw	r30, r24
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:180
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail) {
     798:	91 8d       	ldd	r25, Z+25	; 0x19
     79a:	82 8d       	ldd	r24, Z+26	; 0x1a
     79c:	98 17       	cp	r25, r24
     79e:	61 f0       	breq	.+24     	; 0x7b8 <HardwareSerial::read()+0x22>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:183
    return -1;
  } else {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
     7a0:	a2 8d       	ldd	r26, Z+26	; 0x1a
     7a2:	ae 0f       	add	r26, r30
     7a4:	bf 2f       	mov	r27, r31
     7a6:	b1 1d       	adc	r27, r1
     7a8:	5d 96       	adiw	r26, 0x1d	; 29
     7aa:	8c 91       	ld	r24, X
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:184
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
     7ac:	92 8d       	ldd	r25, Z+26	; 0x1a
     7ae:	9f 5f       	subi	r25, 0xFF	; 255
     7b0:	9f 73       	andi	r25, 0x3F	; 63
     7b2:	92 8f       	std	Z+26, r25	; 0x1a
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:185
    return c;
     7b4:	90 e0       	ldi	r25, 0x00	; 0
     7b6:	08 95       	ret
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:181

int HardwareSerial::read(void)
{
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail) {
    return -1;
     7b8:	8f ef       	ldi	r24, 0xFF	; 255
     7ba:	9f ef       	ldi	r25, 0xFF	; 255
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:187
  } else {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
    return c;
  }
}
     7bc:	08 95       	ret

000007be <HardwareSerial::peek()>:
peek():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:169
{
  return ((unsigned int)(SERIAL_RX_BUFFER_SIZE + _rx_buffer_head - _rx_buffer_tail)) % SERIAL_RX_BUFFER_SIZE;
}

int HardwareSerial::peek(void)
{
     7be:	fc 01       	movw	r30, r24
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:170
  if (_rx_buffer_head == _rx_buffer_tail) {
     7c0:	91 8d       	ldd	r25, Z+25	; 0x19
     7c2:	82 8d       	ldd	r24, Z+26	; 0x1a
     7c4:	98 17       	cp	r25, r24
     7c6:	31 f0       	breq	.+12     	; 0x7d4 <HardwareSerial::peek()+0x16>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:173
    return -1;
  } else {
    return _rx_buffer[_rx_buffer_tail];
     7c8:	82 8d       	ldd	r24, Z+26	; 0x1a
     7ca:	e8 0f       	add	r30, r24
     7cc:	f1 1d       	adc	r31, r1
     7ce:	85 8d       	ldd	r24, Z+29	; 0x1d
     7d0:	90 e0       	ldi	r25, 0x00	; 0
     7d2:	08 95       	ret
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:171
}

int HardwareSerial::peek(void)
{
  if (_rx_buffer_head == _rx_buffer_tail) {
    return -1;
     7d4:	8f ef       	ldi	r24, 0xFF	; 255
     7d6:	9f ef       	ldi	r25, 0xFF	; 255
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:175
  } else {
    return _rx_buffer[_rx_buffer_tail];
  }
}
     7d8:	08 95       	ret

000007da <HardwareSerial::available()>:
available():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:164
  // clear any received data
  _rx_buffer_head = _rx_buffer_tail;
}

int HardwareSerial::available(void)
{
     7da:	fc 01       	movw	r30, r24
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:165
  return ((unsigned int)(SERIAL_RX_BUFFER_SIZE + _rx_buffer_head - _rx_buffer_tail)) % SERIAL_RX_BUFFER_SIZE;
     7dc:	91 8d       	ldd	r25, Z+25	; 0x19
     7de:	22 8d       	ldd	r18, Z+26	; 0x1a
     7e0:	89 2f       	mov	r24, r25
     7e2:	90 e0       	ldi	r25, 0x00	; 0
     7e4:	80 5c       	subi	r24, 0xC0	; 192
     7e6:	9f 4f       	sbci	r25, 0xFF	; 255
     7e8:	82 1b       	sub	r24, r18
     7ea:	91 09       	sbc	r25, r1
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:166
}
     7ec:	8f 73       	andi	r24, 0x3F	; 63
     7ee:	99 27       	eor	r25, r25
     7f0:	08 95       	ret

000007f2 <Serial1_available()>:
Serial1_available():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial1.cpp:68
HardwareSerial Serial1(&UBRR1H, &UBRR1L, &UCSR1A, &UCSR1B, &UCSR1C, &UDR1);

// Function that can be weakly referenced by serialEventRun to prevent
// pulling in this file if it's not otherwise used.
bool Serial1_available() {
  return Serial1.available();
     7f2:	84 e7       	ldi	r24, 0x74	; 116
     7f4:	99 e0       	ldi	r25, 0x09	; 9
     7f6:	0e 94 ed 03 	call	0x7da	; 0x7da <HardwareSerial::available()>
     7fa:	21 e0       	ldi	r18, 0x01	; 1
     7fc:	89 2b       	or	r24, r25
     7fe:	09 f4       	brne	.+2      	; 0x802 <Serial1_available()+0x10>
     800:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial1.cpp:69
}
     802:	82 2f       	mov	r24, r18
     804:	08 95       	ret

00000806 <Serial0_available()>:
Serial0_available():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial0.cpp:76
#endif

// Function that can be weakly referenced by serialEventRun to prevent
// pulling in this file if it's not otherwise used.
bool Serial0_available() {
  return Serial.available();
     806:	81 e1       	ldi	r24, 0x11	; 17
     808:	9a e0       	ldi	r25, 0x0A	; 10
     80a:	0e 94 ed 03 	call	0x7da	; 0x7da <HardwareSerial::available()>
     80e:	21 e0       	ldi	r18, 0x01	; 1
     810:	89 2b       	or	r24, r25
     812:	09 f4       	brne	.+2      	; 0x816 <Serial0_available()+0x10>
     814:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial0.cpp:77
}
     816:	82 2f       	mov	r24, r18
     818:	08 95       	ret

0000081a <HardwareSerial::_tx_udr_empty_irq()>:
_tx_udr_empty_irq():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:90
#endif

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_tx_udr_empty_irq(void)
{
     81a:	fc 01       	movw	r30, r24
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:93
  // If interrupts are enabled, there must be more data in the output
  // buffer. Send the next byte
  unsigned char c = _tx_buffer[_tx_buffer_tail];
     81c:	a4 8d       	ldd	r26, Z+28	; 0x1c
     81e:	a8 0f       	add	r26, r24
     820:	b9 2f       	mov	r27, r25
     822:	b1 1d       	adc	r27, r1
     824:	a3 5a       	subi	r26, 0xA3	; 163
     826:	bf 4f       	sbci	r27, 0xFF	; 255
     828:	2c 91       	ld	r18, X
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:94
  _tx_buffer_tail = (_tx_buffer_tail + 1) % SERIAL_TX_BUFFER_SIZE;
     82a:	84 8d       	ldd	r24, Z+28	; 0x1c
     82c:	90 e0       	ldi	r25, 0x00	; 0
     82e:	01 96       	adiw	r24, 0x01	; 1
     830:	8f 73       	andi	r24, 0x3F	; 63
     832:	99 27       	eor	r25, r25
     834:	84 8f       	std	Z+28, r24	; 0x1c
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:96

  *_udr = c;
     836:	a6 89       	ldd	r26, Z+22	; 0x16
     838:	b7 89       	ldd	r27, Z+23	; 0x17
     83a:	2c 93       	st	X, r18
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:104
  // location". This makes sure flush() won't return until the bytes
  // actually got written. Other r/w bits are preserved, and zeroes
  // written to the rest.

  #ifdef MPCM0
    *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << MPCM0))) | (1 << TXC0);
     83c:	a0 89       	ldd	r26, Z+16	; 0x10
     83e:	b1 89       	ldd	r27, Z+17	; 0x11
     840:	8c 91       	ld	r24, X
     842:	83 70       	andi	r24, 0x03	; 3
     844:	80 64       	ori	r24, 0x40	; 64
     846:	8c 93       	st	X, r24
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:109
  #else
    *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << TXC0)));
  #endif

  if (_tx_buffer_head == _tx_buffer_tail) {
     848:	93 8d       	ldd	r25, Z+27	; 0x1b
     84a:	84 8d       	ldd	r24, Z+28	; 0x1c
     84c:	98 13       	cpse	r25, r24
     84e:	06 c0       	rjmp	.+12     	; 0x85c <HardwareSerial::_tx_udr_empty_irq()+0x42>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:111
    // Buffer empty, so disable interrupts
    *_ucsrb &= ~_BV(UDRIE0);
     850:	02 88       	ldd	r0, Z+18	; 0x12
     852:	f3 89       	ldd	r31, Z+19	; 0x13
     854:	e0 2d       	mov	r30, r0
     856:	80 81       	ld	r24, Z
     858:	8f 7d       	andi	r24, 0xDF	; 223
     85a:	80 83       	st	Z, r24
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:113
  }
}
     85c:	08 95       	ret

0000085e <HardwareSerial::write(unsigned char)>:
write():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:223
  // If we get here, nothing is queued anymore (DRIE is disabled) and
  // the hardware finished tranmission (TXC is set).
}

size_t HardwareSerial::write(uint8_t c)
{
     85e:	ef 92       	push	r14
     860:	ff 92       	push	r15
     862:	0f 93       	push	r16
     864:	1f 93       	push	r17
     866:	cf 93       	push	r28
     868:	df 93       	push	r29
     86a:	ec 01       	movw	r28, r24
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:224
  _written = true;
     86c:	81 e0       	ldi	r24, 0x01	; 1
     86e:	88 8f       	std	Y+24, r24	; 0x18
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:229
  // If the buffer and the data register is empty, just write the byte
  // to the data register and be done. This shortcut helps
  // significantly improve the effective datarate at high (>
  // 500kbit/s) bitrates, where interrupt overhead becomes a slowdown.
  if (_tx_buffer_head == _tx_buffer_tail && bit_is_set(*_ucsra, UDRE0)) {
     870:	9b 8d       	ldd	r25, Y+27	; 0x1b
     872:	8c 8d       	ldd	r24, Y+28	; 0x1c
     874:	98 13       	cpse	r25, r24
     876:	1a c0       	rjmp	.+52     	; 0x8ac <HardwareSerial::write(unsigned char)+0x4e>
     878:	e8 89       	ldd	r30, Y+16	; 0x10
     87a:	f9 89       	ldd	r31, Y+17	; 0x11
     87c:	80 81       	ld	r24, Z
     87e:	85 ff       	sbrs	r24, 5
     880:	15 c0       	rjmp	.+42     	; 0x8ac <HardwareSerial::write(unsigned char)+0x4e>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:238
    // So writing UDR must happen first.
    // Writing UDR and clearing TC must be done atomically, otherwise
    // interrupts might delay the TXC clear so the byte written to UDR
    // is transmitted (setting TXC) before clearing TXC. Then TXC will
    // be cleared when no bytes are left, causing flush() to hang
    ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
     882:	9f b7       	in	r25, 0x3f	; 63
__iCliRetVal():
c:\users\beibe\appdata\local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7\avr\include\util/atomic.h:50
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
     884:	f8 94       	cli
write():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:239
      *_udr = c;
     886:	ee 89       	ldd	r30, Y+22	; 0x16
     888:	ff 89       	ldd	r31, Y+23	; 0x17
     88a:	60 83       	st	Z, r22
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:241
      #ifdef MPCM0
        *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << MPCM0))) | (1 << TXC0);
     88c:	e8 89       	ldd	r30, Y+16	; 0x10
     88e:	f9 89       	ldd	r31, Y+17	; 0x11
     890:	80 81       	ld	r24, Z
     892:	83 70       	andi	r24, 0x03	; 3
     894:	80 64       	ori	r24, 0x40	; 64
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:271
  // make atomic to prevent execution of ISR between setting the
  // head pointer and setting the interrupt flag resulting in buffer
  // retransmission
  ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    _tx_buffer_head = i;
    *_ucsrb |= _BV(UDRIE0);
     896:	80 83       	st	Z, r24
__iRestore():
c:\users\beibe\appdata\local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7\avr\include\util/atomic.h:70
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
     898:	9f bf       	out	0x3f, r25	; 63
write():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:275
  }
  
  return 1;
}
     89a:	81 e0       	ldi	r24, 0x01	; 1
     89c:	90 e0       	ldi	r25, 0x00	; 0
     89e:	df 91       	pop	r29
     8a0:	cf 91       	pop	r28
     8a2:	1f 91       	pop	r17
     8a4:	0f 91       	pop	r16
     8a6:	ff 90       	pop	r15
     8a8:	ef 90       	pop	r14
     8aa:	08 95       	ret
     8ac:	f6 2e       	mov	r15, r22
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:248
        *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << TXC0)));
      #endif
    }
    return 1;
  }
  tx_buffer_index_t i = (_tx_buffer_head + 1) % SERIAL_TX_BUFFER_SIZE;
     8ae:	0b 8d       	ldd	r16, Y+27	; 0x1b
     8b0:	10 e0       	ldi	r17, 0x00	; 0
     8b2:	0f 5f       	subi	r16, 0xFF	; 255
     8b4:	1f 4f       	sbci	r17, 0xFF	; 255
     8b6:	0f 73       	andi	r16, 0x3F	; 63
     8b8:	11 27       	eor	r17, r17
     8ba:	e0 2e       	mov	r14, r16
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:252

  // If the output buffer is full, there's nothing for it other than to 
  // wait for the interrupt handler to empty it a bit
  while (i == _tx_buffer_tail) {
     8bc:	8c 8d       	ldd	r24, Y+28	; 0x1c
     8be:	8e 11       	cpse	r24, r14
     8c0:	0c c0       	rjmp	.+24     	; 0x8da <HardwareSerial::write(unsigned char)+0x7c>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:253
    if (bit_is_clear(SREG, SREG_I)) {
     8c2:	0f b6       	in	r0, 0x3f	; 63
     8c4:	07 fc       	sbrc	r0, 7
     8c6:	fa cf       	rjmp	.-12     	; 0x8bc <HardwareSerial::write(unsigned char)+0x5e>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:258
      // Interrupts are disabled, so we'll have to poll the data
      // register empty flag ourselves. If it is set, pretend an
      // interrupt has happened and call the handler to free up
      // space for us.
      if(bit_is_set(*_ucsra, UDRE0))
     8c8:	e8 89       	ldd	r30, Y+16	; 0x10
     8ca:	f9 89       	ldd	r31, Y+17	; 0x11
     8cc:	80 81       	ld	r24, Z
     8ce:	85 ff       	sbrs	r24, 5
     8d0:	f5 cf       	rjmp	.-22     	; 0x8bc <HardwareSerial::write(unsigned char)+0x5e>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:259
        _tx_udr_empty_irq();
     8d2:	ce 01       	movw	r24, r28
     8d4:	0e 94 0d 04 	call	0x81a	; 0x81a <HardwareSerial::_tx_udr_empty_irq()>
     8d8:	f1 cf       	rjmp	.-30     	; 0x8bc <HardwareSerial::write(unsigned char)+0x5e>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:265
    } else {
      // nop, the interrupt handler will free up space for us
    }
  }

  _tx_buffer[_tx_buffer_head] = c;
     8da:	eb 8d       	ldd	r30, Y+27	; 0x1b
     8dc:	ec 0f       	add	r30, r28
     8de:	fd 2f       	mov	r31, r29
     8e0:	f1 1d       	adc	r31, r1
     8e2:	e3 5a       	subi	r30, 0xA3	; 163
     8e4:	ff 4f       	sbci	r31, 0xFF	; 255
     8e6:	f0 82       	st	Z, r15
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:269
  // make atomic to prevent execution of ISR between setting the
  // head pointer and setting the interrupt flag resulting in buffer
  // retransmission
  ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
     8e8:	9f b7       	in	r25, 0x3f	; 63
__iCliRetVal():
c:\users\beibe\appdata\local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7\avr\include\util/atomic.h:50
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
     8ea:	f8 94       	cli
write():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:270
    _tx_buffer_head = i;
     8ec:	0b 8f       	std	Y+27, r16	; 0x1b
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:271
    *_ucsrb |= _BV(UDRIE0);
     8ee:	ea 89       	ldd	r30, Y+18	; 0x12
     8f0:	fb 89       	ldd	r31, Y+19	; 0x13
     8f2:	80 81       	ld	r24, Z
     8f4:	80 62       	ori	r24, 0x20	; 32
     8f6:	cf cf       	rjmp	.-98     	; 0x896 <HardwareSerial::write(unsigned char)+0x38>

000008f8 <HardwareSerial::flush()>:
flush():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:203
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
  return tail - head - 1;
}

void HardwareSerial::flush()
{
     8f8:	cf 93       	push	r28
     8fa:	df 93       	push	r29
     8fc:	ec 01       	movw	r28, r24
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:207
  // If we have never written a byte, no need to flush. This special
  // case is needed since there is no way to force the TXC (transmit
  // complete) bit to 1 during initialization
  if (!_written)
     8fe:	88 8d       	ldd	r24, Y+24	; 0x18
     900:	88 23       	and	r24, r24
     902:	b9 f0       	breq	.+46     	; 0x932 <HardwareSerial::flush()+0x3a>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:210
    return;

  while (bit_is_set(*_ucsrb, UDRIE0) || bit_is_clear(*_ucsra, TXC0)) {
     904:	aa 89       	ldd	r26, Y+18	; 0x12
     906:	bb 89       	ldd	r27, Y+19	; 0x13
     908:	e8 89       	ldd	r30, Y+16	; 0x10
     90a:	f9 89       	ldd	r31, Y+17	; 0x11
     90c:	8c 91       	ld	r24, X
     90e:	85 fd       	sbrc	r24, 5
     910:	03 c0       	rjmp	.+6      	; 0x918 <HardwareSerial::flush()+0x20>
     912:	80 81       	ld	r24, Z
     914:	86 fd       	sbrc	r24, 6
     916:	0d c0       	rjmp	.+26     	; 0x932 <HardwareSerial::flush()+0x3a>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:211
    if (bit_is_clear(SREG, SREG_I) && bit_is_set(*_ucsrb, UDRIE0))
     918:	0f b6       	in	r0, 0x3f	; 63
     91a:	07 fc       	sbrc	r0, 7
     91c:	f7 cf       	rjmp	.-18     	; 0x90c <HardwareSerial::flush()+0x14>
     91e:	8c 91       	ld	r24, X
     920:	85 ff       	sbrs	r24, 5
     922:	f2 cf       	rjmp	.-28     	; 0x908 <HardwareSerial::flush()+0x10>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:215
      // Interrupts are globally disabled, but the DR empty
      // interrupt should be enabled, so poll the DR empty flag to
      // prevent deadlock
      if (bit_is_set(*_ucsra, UDRE0))
     924:	80 81       	ld	r24, Z
     926:	85 ff       	sbrs	r24, 5
     928:	ed cf       	rjmp	.-38     	; 0x904 <HardwareSerial::flush()+0xc>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:216
        _tx_udr_empty_irq();
     92a:	ce 01       	movw	r24, r28
     92c:	0e 94 0d 04 	call	0x81a	; 0x81a <HardwareSerial::_tx_udr_empty_irq()>
     930:	e9 cf       	rjmp	.-46     	; 0x904 <HardwareSerial::flush()+0xc>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:220
  }
  // If we get here, nothing is queued anymore (DRIE is disabled) and
  // the hardware finished tranmission (TXC is set).
}
     932:	df 91       	pop	r29
     934:	cf 91       	pop	r28
     936:	08 95       	ret

00000938 <serialEventRun()>:
serialEventRun():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:67
#endif

void serialEventRun(void)
{
#if defined(HAVE_HWSERIAL0)
  if (Serial0_available && serialEvent && Serial0_available()) serialEvent();
     938:	80 e0       	ldi	r24, 0x00	; 0
     93a:	90 e0       	ldi	r25, 0x00	; 0
     93c:	89 2b       	or	r24, r25
     93e:	29 f0       	breq	.+10     	; 0x94a <serialEventRun()+0x12>
     940:	0e 94 03 04 	call	0x806	; 0x806 <Serial0_available()>
     944:	81 11       	cpse	r24, r1
     946:	0e 94 00 00 	call	0	; 0x0 <__vectors>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:70
#endif
#if defined(HAVE_HWSERIAL1)
  if (Serial1_available && serialEvent1 && Serial1_available()) serialEvent1();
     94a:	80 e0       	ldi	r24, 0x00	; 0
     94c:	90 e0       	ldi	r25, 0x00	; 0
     94e:	89 2b       	or	r24, r25
     950:	29 f0       	breq	.+10     	; 0x95c <serialEventRun()+0x24>
     952:	0e 94 f9 03 	call	0x7f2	; 0x7f2 <Serial1_available()>
     956:	81 11       	cpse	r24, r1
     958:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:78
  if (Serial2_available && serialEvent2 && Serial2_available()) serialEvent2();
#endif
#if defined(HAVE_HWSERIAL3)
  if (Serial3_available && serialEvent3 && Serial3_available()) serialEvent3();
#endif
}
     95c:	08 95       	ret

0000095e <twi_stop>:
twi_stop():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:430
 * Output   none
 */
void twi_stop(void)
{
  // send stop condition
  TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWEA) | _BV(TWINT) | _BV(TWSTO);
     95e:	85 ed       	ldi	r24, 0xD5	; 213
     960:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:450
          return;
        }
      }
    }
  #else
    while(TWCR & _BV(TWSTO)){
     964:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
     968:	84 fd       	sbrc	r24, 4
     96a:	fc cf       	rjmp	.-8      	; 0x964 <twi_stop+0x6>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:456
      continue;
    }
  #endif

  // update twi state
  twi_state = TWI_READY;
     96c:	10 92 f1 08 	sts	0x08F1, r1	; 0x8008f1 <twi_state>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:457
}
     970:	08 95       	ret

00000972 <twi_transmit>:
twi_transmit():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:365
uint8_t twi_transmit(const uint8_t* data, uint8_t length)
{
  uint8_t i;

  // ensure data will fit into buffer
  if(TWI_BUFFER_SIZE < (twi_txBufferLength+length)){
     972:	20 91 9c 08 	lds	r18, 0x089C	; 0x80089c <twi_txBufferLength>
     976:	26 0f       	add	r18, r22
     978:	33 27       	eor	r19, r19
     97a:	33 1f       	adc	r19, r19
     97c:	21 32       	cpi	r18, 0x21	; 33
     97e:	31 05       	cpc	r19, r1
     980:	ec f4       	brge	.+58     	; 0x9bc <twi_transmit+0x4a>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:370
    return 1;
  }

  // ensure we are currently a slave transmitter
  if(TWI_STX != twi_state){
     982:	20 91 f1 08 	lds	r18, 0x08F1	; 0x8008f1 <twi_state>
     986:	fc 01       	movw	r30, r24
     988:	90 e0       	ldi	r25, 0x00	; 0
     98a:	80 e0       	ldi	r24, 0x00	; 0
     98c:	24 30       	cpi	r18, 0x04	; 4
     98e:	69 f0       	breq	.+26     	; 0x9aa <twi_transmit+0x38>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:371
    return 2;
     990:	82 e0       	ldi	r24, 0x02	; 2
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:381
    twi_txBuffer[twi_txBufferLength+i] = data[i];
  }
  twi_txBufferLength += length;

  return 0;
}
     992:	08 95       	ret
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:376
    return 2;
  }

  // set length and copy data into tx buffer
  for(i = 0; i < length; ++i){
    twi_txBuffer[twi_txBufferLength+i] = data[i];
     994:	a0 91 9c 08 	lds	r26, 0x089C	; 0x80089c <twi_txBufferLength>
     998:	21 91       	ld	r18, Z+
     99a:	ac 01       	movw	r20, r24
     99c:	44 58       	subi	r20, 0x84	; 132
     99e:	57 4f       	sbci	r21, 0xF7	; 247
     9a0:	a4 0f       	add	r26, r20
     9a2:	b5 2f       	mov	r27, r21
     9a4:	b1 1d       	adc	r27, r1
     9a6:	2c 93       	st	X, r18
     9a8:	01 96       	adiw	r24, 0x01	; 1
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:375
  if(TWI_STX != twi_state){
    return 2;
  }

  // set length and copy data into tx buffer
  for(i = 0; i < length; ++i){
     9aa:	86 17       	cp	r24, r22
     9ac:	98 f3       	brcs	.-26     	; 0x994 <twi_transmit+0x22>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:378
    twi_txBuffer[twi_txBufferLength+i] = data[i];
  }
  twi_txBufferLength += length;
     9ae:	80 91 9c 08 	lds	r24, 0x089C	; 0x80089c <twi_txBufferLength>
     9b2:	68 0f       	add	r22, r24
     9b4:	60 93 9c 08 	sts	0x089C, r22	; 0x80089c <twi_txBufferLength>
     9b8:	80 e0       	ldi	r24, 0x00	; 0
     9ba:	08 95       	ret
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:366
{
  uint8_t i;

  // ensure data will fit into buffer
  if(TWI_BUFFER_SIZE < (twi_txBufferLength+length)){
    return 1;
     9bc:	81 e0       	ldi	r24, 0x01	; 1
     9be:	08 95       	ret

000009c0 <TwoWire::flush()>:
flush():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:328
}

void TwoWire::flush(void)
{
  // XXX: to be implemented.
}
     9c0:	08 95       	ret

000009c2 <TwoWire::peek()>:
peek():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:318
// or after requestFrom(address, numBytes)
int TwoWire::peek(void)
{
  int value = -1;

  if(rxBufferIndex < rxBufferLength){
     9c2:	e0 91 37 09 	lds	r30, 0x0937	; 0x800937 <TwoWire::rxBufferIndex>
     9c6:	80 91 36 09 	lds	r24, 0x0936	; 0x800936 <TwoWire::rxBufferLength>
     9ca:	e8 17       	cp	r30, r24
     9cc:	30 f4       	brcc	.+12     	; 0x9da <TwoWire::peek()+0x18>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:319
    value = rxBuffer[rxBufferIndex];
     9ce:	f0 e0       	ldi	r31, 0x00	; 0
     9d0:	ea 5e       	subi	r30, 0xEA	; 234
     9d2:	f6 4f       	sbci	r31, 0xF6	; 246
     9d4:	80 81       	ld	r24, Z
     9d6:	90 e0       	ldi	r25, 0x00	; 0
     9d8:	08 95       	ret
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:316
// must be called in:
// slave rx event callback
// or after requestFrom(address, numBytes)
int TwoWire::peek(void)
{
  int value = -1;
     9da:	8f ef       	ldi	r24, 0xFF	; 255
     9dc:	9f ef       	ldi	r25, 0xFF	; 255
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:323
  if(rxBufferIndex < rxBufferLength){
    value = rxBuffer[rxBufferIndex];
  }

  return value;
}
     9de:	08 95       	ret

000009e0 <TwoWire::available()>:
available():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:292
// must be called in:
// slave rx event callback
// or after requestFrom(address, numBytes)
int TwoWire::available(void)
{
  return rxBufferLength - rxBufferIndex;
     9e0:	80 91 36 09 	lds	r24, 0x0936	; 0x800936 <TwoWire::rxBufferLength>
     9e4:	90 91 37 09 	lds	r25, 0x0937	; 0x800937 <TwoWire::rxBufferIndex>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:293
}
     9e8:	89 1b       	sub	r24, r25
     9ea:	99 0b       	sbc	r25, r25
     9ec:	08 95       	ret

000009ee <TwoWire::write(unsigned char const*, unsigned int)>:
write():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:273

// must be called in:
// slave tx event callback
// or after beginTransmission(address)
size_t TwoWire::write(const uint8_t *data, size_t quantity)
{
     9ee:	cf 92       	push	r12
     9f0:	df 92       	push	r13
     9f2:	ef 92       	push	r14
     9f4:	ff 92       	push	r15
     9f6:	0f 93       	push	r16
     9f8:	1f 93       	push	r17
     9fa:	cf 93       	push	r28
     9fc:	df 93       	push	r29
     9fe:	7c 01       	movw	r14, r24
     a00:	cb 01       	movw	r24, r22
     a02:	8a 01       	movw	r16, r20
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:274
  if(transmitting){
     a04:	20 91 f2 08 	lds	r18, 0x08F2	; 0x8008f2 <TwoWire::transmitting>
     a08:	22 23       	and	r18, r18
     a0a:	89 f0       	breq	.+34     	; 0xa2e <TwoWire::write(unsigned char const*, unsigned int)+0x40>
     a0c:	eb 01       	movw	r28, r22
     a0e:	6b 01       	movw	r12, r22
     a10:	c4 0e       	add	r12, r20
     a12:	d5 1e       	adc	r13, r21
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:276
  // in master transmitter mode
    for(size_t i = 0; i < quantity; ++i){
     a14:	cc 15       	cp	r28, r12
     a16:	dd 05       	cpc	r29, r13
     a18:	69 f0       	breq	.+26     	; 0xa34 <TwoWire::write(unsigned char const*, unsigned int)+0x46>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:277
      write(data[i]);
     a1a:	69 91       	ld	r22, Y+
     a1c:	d7 01       	movw	r26, r14
     a1e:	ed 91       	ld	r30, X+
     a20:	fc 91       	ld	r31, X
     a22:	01 90       	ld	r0, Z+
     a24:	f0 81       	ld	r31, Z
     a26:	e0 2d       	mov	r30, r0
     a28:	c7 01       	movw	r24, r14
     a2a:	09 95       	icall
     a2c:	f3 cf       	rjmp	.-26     	; 0xa14 <TwoWire::write(unsigned char const*, unsigned int)+0x26>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:282
    }
  }else{
  // in slave send mode
    // reply to master
    twi_transmit(data, quantity);
     a2e:	64 2f       	mov	r22, r20
     a30:	0e 94 b9 04 	call	0x972	; 0x972 <twi_transmit>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:285
  }
  return quantity;
}
     a34:	c8 01       	movw	r24, r16
     a36:	df 91       	pop	r29
     a38:	cf 91       	pop	r28
     a3a:	1f 91       	pop	r17
     a3c:	0f 91       	pop	r16
     a3e:	ff 90       	pop	r15
     a40:	ef 90       	pop	r14
     a42:	df 90       	pop	r13
     a44:	cf 90       	pop	r12
     a46:	08 95       	ret

00000a48 <TwoWire::write(unsigned char)>:
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:248

// must be called in:
// slave tx event callback
// or after beginTransmission(address)
size_t TwoWire::write(uint8_t data)
{
     a48:	cf 93       	push	r28
     a4a:	df 93       	push	r29
     a4c:	1f 92       	push	r1
     a4e:	cd b7       	in	r28, 0x3d	; 61
     a50:	de b7       	in	r29, 0x3e	; 62
     a52:	69 83       	std	Y+1, r22	; 0x01
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:249
  if(transmitting){
     a54:	20 91 f2 08 	lds	r18, 0x08F2	; 0x8008f2 <TwoWire::transmitting>
     a58:	22 23       	and	r18, r18
     a5a:	f9 f0       	breq	.+62     	; 0xa9a <TwoWire::write(unsigned char)+0x52>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:252
  // in master transmitter mode
    // don't bother if buffer is full
    if(txBufferLength >= TWI_BUFFER_SIZE){
     a5c:	20 91 15 09 	lds	r18, 0x0915	; 0x800915 <TwoWire::txBufferLength>
     a60:	20 32       	cpi	r18, 0x20	; 32
     a62:	58 f0       	brcs	.+22     	; 0xa7a <TwoWire::write(unsigned char)+0x32>
_ZN5Print13setWriteErrorEi():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/Print.h:44
  private:
    int write_error;
    size_t printNumber(unsigned long, uint8_t);
    size_t printFloat(double, uint8_t);
  protected:
    void setWriteError(int err = 1) { write_error = err; }
     a64:	21 e0       	ldi	r18, 0x01	; 1
     a66:	30 e0       	ldi	r19, 0x00	; 0
     a68:	fc 01       	movw	r30, r24
     a6a:	33 83       	std	Z+3, r19	; 0x03
     a6c:	22 83       	std	Z+2, r18	; 0x02
write():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:254
      setWriteError();
      return 0;
     a6e:	90 e0       	ldi	r25, 0x00	; 0
     a70:	80 e0       	ldi	r24, 0x00	; 0
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:267
  // in slave send mode
    // reply to master
    twi_transmit(&data, 1);
  }
  return 1;
}
     a72:	0f 90       	pop	r0
     a74:	df 91       	pop	r29
     a76:	cf 91       	pop	r28
     a78:	08 95       	ret
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:257
    if(txBufferLength >= TWI_BUFFER_SIZE){
      setWriteError();
      return 0;
    }
    // put byte in tx buffer
    txBuffer[txBufferIndex] = data;
     a7a:	80 91 f3 08 	lds	r24, 0x08F3	; 0x8008f3 <TwoWire::txBufferIndex>
     a7e:	e8 2f       	mov	r30, r24
     a80:	f0 e0       	ldi	r31, 0x00	; 0
     a82:	ec 50       	subi	r30, 0x0C	; 12
     a84:	f7 4f       	sbci	r31, 0xF7	; 247
     a86:	99 81       	ldd	r25, Y+1	; 0x01
     a88:	90 83       	st	Z, r25
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:258
    ++txBufferIndex;
     a8a:	8f 5f       	subi	r24, 0xFF	; 255
     a8c:	80 93 f3 08 	sts	0x08F3, r24	; 0x8008f3 <TwoWire::txBufferIndex>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:260
    // update amount in buffer
    txBufferLength = txBufferIndex;
     a90:	80 93 15 09 	sts	0x0915, r24	; 0x800915 <TwoWire::txBufferLength>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:266
  }else{
  // in slave send mode
    // reply to master
    twi_transmit(&data, 1);
  }
  return 1;
     a94:	81 e0       	ldi	r24, 0x01	; 1
     a96:	90 e0       	ldi	r25, 0x00	; 0
     a98:	ec cf       	rjmp	.-40     	; 0xa72 <TwoWire::write(unsigned char)+0x2a>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:264
    // update amount in buffer
    txBufferLength = txBufferIndex;
  }else{
  // in slave send mode
    // reply to master
    twi_transmit(&data, 1);
     a9a:	61 e0       	ldi	r22, 0x01	; 1
     a9c:	ce 01       	movw	r24, r28
     a9e:	01 96       	adiw	r24, 0x01	; 1
     aa0:	0e 94 b9 04 	call	0x972	; 0x972 <twi_transmit>
     aa4:	f7 cf       	rjmp	.-18     	; 0xa94 <TwoWire::write(unsigned char)+0x4c>

00000aa6 <LiquidCrystal::pulseEnable()>:
pulseEnable():
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:303
    write4bits(value>>4);
    write4bits(value);
  }
}

void LiquidCrystal::pulseEnable(void) {
     aa6:	cf 93       	push	r28
     aa8:	df 93       	push	r29
     aaa:	ec 01       	movw	r28, r24
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:304
  digitalWrite(_enable_pin, LOW);
     aac:	60 e0       	ldi	r22, 0x00	; 0
     aae:	8e 81       	ldd	r24, Y+6	; 0x06
     ab0:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:305
  delayMicroseconds(1);    
     ab4:	81 e0       	ldi	r24, 0x01	; 1
     ab6:	90 e0       	ldi	r25, 0x00	; 0
     ab8:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <delayMicroseconds>
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:306
  digitalWrite(_enable_pin, HIGH);
     abc:	61 e0       	ldi	r22, 0x01	; 1
     abe:	8e 81       	ldd	r24, Y+6	; 0x06
     ac0:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:307
  delayMicroseconds(1);    // enable pulse must be >450ns
     ac4:	81 e0       	ldi	r24, 0x01	; 1
     ac6:	90 e0       	ldi	r25, 0x00	; 0
     ac8:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <delayMicroseconds>
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:308
  digitalWrite(_enable_pin, LOW);
     acc:	60 e0       	ldi	r22, 0x00	; 0
     ace:	8e 81       	ldd	r24, Y+6	; 0x06
     ad0:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:309
  delayMicroseconds(100);   // commands need > 37us to settle
     ad4:	84 e6       	ldi	r24, 0x64	; 100
     ad6:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:310
}
     ad8:	df 91       	pop	r29
     ada:	cf 91       	pop	r28
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:309
  digitalWrite(_enable_pin, LOW);
  delayMicroseconds(1);    
  digitalWrite(_enable_pin, HIGH);
  delayMicroseconds(1);    // enable pulse must be >450ns
  digitalWrite(_enable_pin, LOW);
  delayMicroseconds(100);   // commands need > 37us to settle
     adc:	0c 94 f3 02 	jmp	0x5e6	; 0x5e6 <delayMicroseconds>

00000ae0 <LiquidCrystal::write4bits(unsigned char)>:
write4bits():
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:312
}

void LiquidCrystal::write4bits(uint8_t value) {
     ae0:	cf 92       	push	r12
     ae2:	df 92       	push	r13
     ae4:	ef 92       	push	r14
     ae6:	ff 92       	push	r15
     ae8:	0f 93       	push	r16
     aea:	1f 93       	push	r17
     aec:	cf 93       	push	r28
     aee:	df 93       	push	r29
     af0:	6c 01       	movw	r12, r24
     af2:	7c 01       	movw	r14, r24
     af4:	87 e0       	ldi	r24, 0x07	; 7
     af6:	e8 0e       	add	r14, r24
     af8:	f1 1c       	adc	r15, r1
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:313
  for (int i = 0; i < 4; i++) {
     afa:	d0 e0       	ldi	r29, 0x00	; 0
     afc:	c0 e0       	ldi	r28, 0x00	; 0
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:314
    digitalWrite(_data_pins[i], (value >> i) & 0x01);
     afe:	06 2f       	mov	r16, r22
     b00:	10 e0       	ldi	r17, 0x00	; 0
     b02:	b8 01       	movw	r22, r16
     b04:	0c 2e       	mov	r0, r28
     b06:	02 c0       	rjmp	.+4      	; 0xb0c <LiquidCrystal::write4bits(unsigned char)+0x2c>
     b08:	75 95       	asr	r23
     b0a:	67 95       	ror	r22
     b0c:	0a 94       	dec	r0
     b0e:	e2 f7       	brpl	.-8      	; 0xb08 <LiquidCrystal::write4bits(unsigned char)+0x28>
     b10:	61 70       	andi	r22, 0x01	; 1
     b12:	f7 01       	movw	r30, r14
     b14:	81 91       	ld	r24, Z+
     b16:	7f 01       	movw	r14, r30
     b18:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:313
  digitalWrite(_enable_pin, LOW);
  delayMicroseconds(100);   // commands need > 37us to settle
}

void LiquidCrystal::write4bits(uint8_t value) {
  for (int i = 0; i < 4; i++) {
     b1c:	21 96       	adiw	r28, 0x01	; 1
     b1e:	c4 30       	cpi	r28, 0x04	; 4
     b20:	d1 05       	cpc	r29, r1
     b22:	79 f7       	brne	.-34     	; 0xb02 <LiquidCrystal::write4bits(unsigned char)+0x22>
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:317
    digitalWrite(_data_pins[i], (value >> i) & 0x01);
  }

  pulseEnable();
     b24:	c6 01       	movw	r24, r12
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:318
}
     b26:	df 91       	pop	r29
     b28:	cf 91       	pop	r28
     b2a:	1f 91       	pop	r17
     b2c:	0f 91       	pop	r16
     b2e:	ff 90       	pop	r15
     b30:	ef 90       	pop	r14
     b32:	df 90       	pop	r13
     b34:	cf 90       	pop	r12
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:317
void LiquidCrystal::write4bits(uint8_t value) {
  for (int i = 0; i < 4; i++) {
    digitalWrite(_data_pins[i], (value >> i) & 0x01);
  }

  pulseEnable();
     b36:	0c 94 53 05 	jmp	0xaa6	; 0xaa6 <LiquidCrystal::pulseEnable()>

00000b3a <LiquidCrystal::send(unsigned char, unsigned char)>:
send():
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:287
}

/************ low level data pushing commands **********/

// write either command or data, with automatic 4/8-bit selection
void LiquidCrystal::send(uint8_t value, uint8_t mode) {
     b3a:	cf 92       	push	r12
     b3c:	df 92       	push	r13
     b3e:	ef 92       	push	r14
     b40:	ff 92       	push	r15
     b42:	0f 93       	push	r16
     b44:	1f 93       	push	r17
     b46:	cf 93       	push	r28
     b48:	df 93       	push	r29
     b4a:	ec 01       	movw	r28, r24
     b4c:	f6 2e       	mov	r15, r22
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:288
  digitalWrite(_rs_pin, mode);
     b4e:	64 2f       	mov	r22, r20
     b50:	8c 81       	ldd	r24, Y+4	; 0x04
     b52:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:291

  // if there is a RW pin indicated, set it low to Write
  if (_rw_pin != 255) { 
     b56:	8d 81       	ldd	r24, Y+5	; 0x05
     b58:	8f 3f       	cpi	r24, 0xFF	; 255
     b5a:	19 f0       	breq	.+6      	; 0xb62 <LiquidCrystal::send(unsigned char, unsigned char)+0x28>
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:292
    digitalWrite(_rw_pin, LOW);
     b5c:	60 e0       	ldi	r22, 0x00	; 0
     b5e:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
     b62:	0f 2d       	mov	r16, r15
     b64:	10 e0       	ldi	r17, 0x00	; 0
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:295
  }
  
  if (_displayfunction & LCD_8BITMODE) {
     b66:	8f 85       	ldd	r24, Y+15	; 0x0f
     b68:	84 ff       	sbrs	r24, 4
     b6a:	25 c0       	rjmp	.+74     	; 0xbb6 <LiquidCrystal::send(unsigned char, unsigned char)+0x7c>
     b6c:	6e 01       	movw	r12, r28
     b6e:	87 e0       	ldi	r24, 0x07	; 7
     b70:	c8 0e       	add	r12, r24
     b72:	d1 1c       	adc	r13, r1
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:321

  pulseEnable();
}

void LiquidCrystal::write8bits(uint8_t value) {
  for (int i = 0; i < 8; i++) {
     b74:	f1 2c       	mov	r15, r1
     b76:	e1 2c       	mov	r14, r1
write8bits():
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:322
    digitalWrite(_data_pins[i], (value >> i) & 0x01);
     b78:	b8 01       	movw	r22, r16
     b7a:	0e 2c       	mov	r0, r14
     b7c:	02 c0       	rjmp	.+4      	; 0xb82 <LiquidCrystal::send(unsigned char, unsigned char)+0x48>
     b7e:	75 95       	asr	r23
     b80:	67 95       	ror	r22
     b82:	0a 94       	dec	r0
     b84:	e2 f7       	brpl	.-8      	; 0xb7e <LiquidCrystal::send(unsigned char, unsigned char)+0x44>
     b86:	61 70       	andi	r22, 0x01	; 1
     b88:	f6 01       	movw	r30, r12
     b8a:	81 91       	ld	r24, Z+
     b8c:	6f 01       	movw	r12, r30
     b8e:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:321

  pulseEnable();
}

void LiquidCrystal::write8bits(uint8_t value) {
  for (int i = 0; i < 8; i++) {
     b92:	ff ef       	ldi	r31, 0xFF	; 255
     b94:	ef 1a       	sub	r14, r31
     b96:	ff 0a       	sbc	r15, r31
     b98:	88 e0       	ldi	r24, 0x08	; 8
     b9a:	e8 16       	cp	r14, r24
     b9c:	f1 04       	cpc	r15, r1
     b9e:	61 f7       	brne	.-40     	; 0xb78 <LiquidCrystal::send(unsigned char, unsigned char)+0x3e>
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:325
    digitalWrite(_data_pins[i], (value >> i) & 0x01);
  }
  
  pulseEnable();
     ba0:	ce 01       	movw	r24, r28
send():
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:301
    write8bits(value); 
  } else {
    write4bits(value>>4);
    write4bits(value);
  }
}
     ba2:	df 91       	pop	r29
     ba4:	cf 91       	pop	r28
     ba6:	1f 91       	pop	r17
     ba8:	0f 91       	pop	r16
     baa:	ff 90       	pop	r15
     bac:	ef 90       	pop	r14
     bae:	df 90       	pop	r13
     bb0:	cf 90       	pop	r12
write8bits():
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:325
void LiquidCrystal::write8bits(uint8_t value) {
  for (int i = 0; i < 8; i++) {
    digitalWrite(_data_pins[i], (value >> i) & 0x01);
  }
  
  pulseEnable();
     bb2:	0c 94 53 05 	jmp	0xaa6	; 0xaa6 <LiquidCrystal::pulseEnable()>
send():
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:298
  }
  
  if (_displayfunction & LCD_8BITMODE) {
    write8bits(value); 
  } else {
    write4bits(value>>4);
     bb6:	b8 01       	movw	r22, r16
     bb8:	84 e0       	ldi	r24, 0x04	; 4
     bba:	75 95       	asr	r23
     bbc:	67 95       	ror	r22
     bbe:	8a 95       	dec	r24
     bc0:	e1 f7       	brne	.-8      	; 0xbba <LiquidCrystal::send(unsigned char, unsigned char)+0x80>
     bc2:	ce 01       	movw	r24, r28
     bc4:	0e 94 70 05 	call	0xae0	; 0xae0 <LiquidCrystal::write4bits(unsigned char)>
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:299
    write4bits(value);
     bc8:	6f 2d       	mov	r22, r15
     bca:	ce 01       	movw	r24, r28
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:301
  }
}
     bcc:	df 91       	pop	r29
     bce:	cf 91       	pop	r28
     bd0:	1f 91       	pop	r17
     bd2:	0f 91       	pop	r16
     bd4:	ff 90       	pop	r15
     bd6:	ef 90       	pop	r14
     bd8:	df 90       	pop	r13
     bda:	cf 90       	pop	r12
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:299
  
  if (_displayfunction & LCD_8BITMODE) {
    write8bits(value); 
  } else {
    write4bits(value>>4);
    write4bits(value);
     bdc:	0c 94 70 05 	jmp	0xae0	; 0xae0 <LiquidCrystal::write4bits(unsigned char)>

00000be0 <LiquidCrystal::command(unsigned char) [clone .constprop.39]>:
command():
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:276
}

/*********** mid level commands, for sending data/cmds */

inline void LiquidCrystal::command(uint8_t value) {
  send(value, LOW);
     be0:	40 e0       	ldi	r20, 0x00	; 0
     be2:	68 2f       	mov	r22, r24
     be4:	8a eb       	ldi	r24, 0xBA	; 186
     be6:	9a e0       	ldi	r25, 0x0A	; 10
     be8:	0c 94 9d 05 	jmp	0xb3a	; 0xb3a <LiquidCrystal::send(unsigned char, unsigned char)>

00000bec <LiquidCrystal::clear() [clone .constprop.38]>:
clear():
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:178
}

/********** high level commands, for the user! */
void LiquidCrystal::clear()
{
  command(LCD_CLEARDISPLAY);  // clear display, set cursor position to zero
     bec:	81 e0       	ldi	r24, 0x01	; 1
     bee:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <LiquidCrystal::command(unsigned char) [clone .constprop.39]>
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:179
  delayMicroseconds(2000);  // this command takes a long time!
     bf2:	80 ed       	ldi	r24, 0xD0	; 208
     bf4:	97 e0       	ldi	r25, 0x07	; 7
     bf6:	0c 94 f3 02 	jmp	0x5e6	; 0x5e6 <delayMicroseconds>

00000bfa <LiquidCrystal::begin(unsigned char, unsigned char, unsigned char) [clone .constprop.36]>:
begin():
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:78
    _displayfunction = LCD_8BITMODE | LCD_1LINE | LCD_5x8DOTS;
  
  begin(16, 1);  
}

void LiquidCrystal::begin(uint8_t cols, uint8_t lines, uint8_t dotsize) {
     bfa:	cf 93       	push	r28
     bfc:	df 93       	push	r29
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:79
  if (lines > 1) {
     bfe:	61 30       	cpi	r22, 0x01	; 1
     c00:	29 f0       	breq	.+10     	; 0xc0c <LiquidCrystal::begin(unsigned char, unsigned char, unsigned char) [clone .constprop.36]+0x12>
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:80
    _displayfunction |= LCD_2LINE;
     c02:	90 91 c9 0a 	lds	r25, 0x0AC9	; 0x800ac9 <lcd+0xf>
     c06:	98 60       	ori	r25, 0x08	; 8
     c08:	90 93 c9 0a 	sts	0x0AC9, r25	; 0x800ac9 <lcd+0xf>
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:82
  }
  _numlines = lines;
     c0c:	60 93 cd 0a 	sts	0x0ACD, r22	; 0x800acd <lcd+0x13>
setRowOffsets():
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:169

}

void LiquidCrystal::setRowOffsets(int row0, int row1, int row2, int row3)
{
  _row_offsets[0] = row0;
     c10:	10 92 ce 0a 	sts	0x0ACE, r1	; 0x800ace <lcd+0x14>
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:170
  _row_offsets[1] = row1;
     c14:	90 e4       	ldi	r25, 0x40	; 64
     c16:	90 93 cf 0a 	sts	0x0ACF, r25	; 0x800acf <lcd+0x15>
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:171
  _row_offsets[2] = row2;
     c1a:	80 93 d0 0a 	sts	0x0AD0, r24	; 0x800ad0 <lcd+0x16>
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:172
  _row_offsets[3] = row3;
     c1e:	80 5c       	subi	r24, 0xC0	; 192
     c20:	80 93 d1 0a 	sts	0x0AD1, r24	; 0x800ad1 <lcd+0x17>
begin():
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:91
  // for some 1 line displays you can select a 10 pixel high font
  if ((dotsize != LCD_5x8DOTS) && (lines == 1)) {
    _displayfunction |= LCD_5x10DOTS;
  }

  pinMode(_rs_pin, OUTPUT);
     c24:	61 e0       	ldi	r22, 0x01	; 1
     c26:	80 91 be 0a 	lds	r24, 0x0ABE	; 0x800abe <lcd+0x4>
     c2a:	0e 94 3a 02 	call	0x474	; 0x474 <pinMode>
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:93
  // we can save 1 pin by not using RW. Indicate by passing 255 instead of pin#
  if (_rw_pin != 255) { 
     c2e:	80 91 bf 0a 	lds	r24, 0x0ABF	; 0x800abf <lcd+0x5>
     c32:	8f 3f       	cpi	r24, 0xFF	; 255
     c34:	19 f0       	breq	.+6      	; 0xc3c <LiquidCrystal::begin(unsigned char, unsigned char, unsigned char) [clone .constprop.36]+0x42>
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:94
    pinMode(_rw_pin, OUTPUT);
     c36:	61 e0       	ldi	r22, 0x01	; 1
     c38:	0e 94 3a 02 	call	0x474	; 0x474 <pinMode>
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:96
  }
  pinMode(_enable_pin, OUTPUT);
     c3c:	61 e0       	ldi	r22, 0x01	; 1
     c3e:	80 91 c0 0a 	lds	r24, 0x0AC0	; 0x800ac0 <lcd+0x6>
     c42:	0e 94 3a 02 	call	0x474	; 0x474 <pinMode>
     c46:	ca eb       	ldi	r28, 0xBA	; 186
     c48:	da e0       	ldi	r29, 0x0A	; 10
     c4a:	9e 01       	movw	r18, r28
     c4c:	2a 5b       	subi	r18, 0xBA	; 186
     c4e:	3a 40       	sbci	r19, 0x0A	; 10
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:99
  
  // Do these once, instead of every time a character is drawn for speed reasons.
  for (int i=0; i<((_displayfunction & LCD_8BITMODE) ? 8 : 4); ++i)
     c50:	80 91 c9 0a 	lds	r24, 0x0AC9	; 0x800ac9 <lcd+0xf>
     c54:	84 fd       	sbrc	r24, 4
     c56:	0b c0       	rjmp	.+22     	; 0xc6e <LiquidCrystal::begin(unsigned char, unsigned char, unsigned char) [clone .constprop.36]+0x74>
     c58:	84 e0       	ldi	r24, 0x04	; 4
     c5a:	90 e0       	ldi	r25, 0x00	; 0
     c5c:	21 96       	adiw	r28, 0x01	; 1
     c5e:	28 17       	cp	r18, r24
     c60:	39 07       	cpc	r19, r25
     c62:	44 f4       	brge	.+16     	; 0xc74 <LiquidCrystal::begin(unsigned char, unsigned char, unsigned char) [clone .constprop.36]+0x7a>
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:101
  {
    pinMode(_data_pins[i], OUTPUT);
     c64:	61 e0       	ldi	r22, 0x01	; 1
     c66:	8e 81       	ldd	r24, Y+6	; 0x06
     c68:	0e 94 3a 02 	call	0x474	; 0x474 <pinMode>
     c6c:	ee cf       	rjmp	.-36     	; 0xc4a <LiquidCrystal::begin(unsigned char, unsigned char, unsigned char) [clone .constprop.36]+0x50>
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:99
    pinMode(_rw_pin, OUTPUT);
  }
  pinMode(_enable_pin, OUTPUT);
  
  // Do these once, instead of every time a character is drawn for speed reasons.
  for (int i=0; i<((_displayfunction & LCD_8BITMODE) ? 8 : 4); ++i)
     c6e:	88 e0       	ldi	r24, 0x08	; 8
     c70:	90 e0       	ldi	r25, 0x00	; 0
     c72:	f4 cf       	rjmp	.-24     	; 0xc5c <LiquidCrystal::begin(unsigned char, unsigned char, unsigned char) [clone .constprop.36]+0x62>
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:107
   } 

  // SEE PAGE 45/46 FOR INITIALIZATION SPECIFICATION!
  // according to datasheet, we need at least 40ms after power rises above 2.7V
  // before sending commands. Arduino can turn on way before 4.5V so we'll wait 50
  delayMicroseconds(50000); 
     c74:	80 e5       	ldi	r24, 0x50	; 80
     c76:	93 ec       	ldi	r25, 0xC3	; 195
     c78:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <delayMicroseconds>
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:109
  // Now we pull both RS and R/W low to begin commands
  digitalWrite(_rs_pin, LOW);
     c7c:	60 e0       	ldi	r22, 0x00	; 0
     c7e:	80 91 be 0a 	lds	r24, 0x0ABE	; 0x800abe <lcd+0x4>
     c82:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:110
  digitalWrite(_enable_pin, LOW);
     c86:	60 e0       	ldi	r22, 0x00	; 0
     c88:	80 91 c0 0a 	lds	r24, 0x0AC0	; 0x800ac0 <lcd+0x6>
     c8c:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:111
  if (_rw_pin != 255) { 
     c90:	80 91 bf 0a 	lds	r24, 0x0ABF	; 0x800abf <lcd+0x5>
     c94:	8f 3f       	cpi	r24, 0xFF	; 255
     c96:	19 f0       	breq	.+6      	; 0xc9e <LiquidCrystal::begin(unsigned char, unsigned char, unsigned char) [clone .constprop.36]+0xa4>
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:112
    digitalWrite(_rw_pin, LOW);
     c98:	60 e0       	ldi	r22, 0x00	; 0
     c9a:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:116
  }
  
  //put the LCD into 4 bit or 8 bit mode
  if (! (_displayfunction & LCD_8BITMODE)) {
     c9e:	80 91 c9 0a 	lds	r24, 0x0AC9	; 0x800ac9 <lcd+0xf>
     ca2:	84 fd       	sbrc	r24, 4
     ca4:	35 c0       	rjmp	.+106    	; 0xd10 <LiquidCrystal::begin(unsigned char, unsigned char, unsigned char) [clone .constprop.36]+0x116>
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:121
    // this is according to the hitachi HD44780 datasheet
    // figure 24, pg 46

    // we start in 8bit mode, try to set 4 bit mode
    write4bits(0x03);
     ca6:	63 e0       	ldi	r22, 0x03	; 3
     ca8:	8a eb       	ldi	r24, 0xBA	; 186
     caa:	9a e0       	ldi	r25, 0x0A	; 10
     cac:	0e 94 70 05 	call	0xae0	; 0xae0 <LiquidCrystal::write4bits(unsigned char)>
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:122
    delayMicroseconds(4500); // wait min 4.1ms
     cb0:	84 e9       	ldi	r24, 0x94	; 148
     cb2:	91 e1       	ldi	r25, 0x11	; 17
     cb4:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <delayMicroseconds>
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:125

    // second try
    write4bits(0x03);
     cb8:	63 e0       	ldi	r22, 0x03	; 3
     cba:	8a eb       	ldi	r24, 0xBA	; 186
     cbc:	9a e0       	ldi	r25, 0x0A	; 10
     cbe:	0e 94 70 05 	call	0xae0	; 0xae0 <LiquidCrystal::write4bits(unsigned char)>
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:126
    delayMicroseconds(4500); // wait min 4.1ms
     cc2:	84 e9       	ldi	r24, 0x94	; 148
     cc4:	91 e1       	ldi	r25, 0x11	; 17
     cc6:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <delayMicroseconds>
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:129
    
    // third go!
    write4bits(0x03); 
     cca:	63 e0       	ldi	r22, 0x03	; 3
     ccc:	8a eb       	ldi	r24, 0xBA	; 186
     cce:	9a e0       	ldi	r25, 0x0A	; 10
     cd0:	0e 94 70 05 	call	0xae0	; 0xae0 <LiquidCrystal::write4bits(unsigned char)>
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:130
    delayMicroseconds(150);
     cd4:	86 e9       	ldi	r24, 0x96	; 150
     cd6:	90 e0       	ldi	r25, 0x00	; 0
     cd8:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <delayMicroseconds>
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:133

    // finally, set to 4-bit interface
    write4bits(0x02); 
     cdc:	62 e0       	ldi	r22, 0x02	; 2
     cde:	8a eb       	ldi	r24, 0xBA	; 186
     ce0:	9a e0       	ldi	r25, 0x0A	; 10
     ce2:	0e 94 70 05 	call	0xae0	; 0xae0 <LiquidCrystal::write4bits(unsigned char)>
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:151
    // third go
    command(LCD_FUNCTIONSET | _displayfunction);
  }

  // finally, set # lines, font size, etc.
  command(LCD_FUNCTIONSET | _displayfunction);  
     ce6:	80 91 c9 0a 	lds	r24, 0x0AC9	; 0x800ac9 <lcd+0xf>
     cea:	80 62       	ori	r24, 0x20	; 32
     cec:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <LiquidCrystal::command(unsigned char) [clone .constprop.39]>
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:154

  // turn the display on with no cursor or blinking default
  _displaycontrol = LCD_DISPLAYON | LCD_CURSOROFF | LCD_BLINKOFF;  
     cf0:	84 e0       	ldi	r24, 0x04	; 4
     cf2:	80 93 ca 0a 	sts	0x0ACA, r24	; 0x800aca <lcd+0x10>
display():
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:208
  _displaycontrol &= ~LCD_DISPLAYON;
  command(LCD_DISPLAYCONTROL | _displaycontrol);
}
void LiquidCrystal::display() {
  _displaycontrol |= LCD_DISPLAYON;
  command(LCD_DISPLAYCONTROL | _displaycontrol);
     cf6:	8c e0       	ldi	r24, 0x0C	; 12
     cf8:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <LiquidCrystal::command(unsigned char) [clone .constprop.39]>
begin():
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:158
  // turn the display on with no cursor or blinking default
  _displaycontrol = LCD_DISPLAYON | LCD_CURSOROFF | LCD_BLINKOFF;  
  display();

  // clear it off
  clear();
     cfc:	0e 94 f6 05 	call	0xbec	; 0xbec <LiquidCrystal::clear() [clone .constprop.38]>
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:161

  // Initialize to default text direction (for romance languages)
  _displaymode = LCD_ENTRYLEFT | LCD_ENTRYSHIFTDECREMENT;
     d00:	82 e0       	ldi	r24, 0x02	; 2
     d02:	80 93 cb 0a 	sts	0x0ACB, r24	; 0x800acb <lcd+0x11>
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:163
  // set the entry mode
  command(LCD_ENTRYMODESET | _displaymode);
     d06:	86 e0       	ldi	r24, 0x06	; 6
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:165

}
     d08:	df 91       	pop	r29
     d0a:	cf 91       	pop	r28
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:163
  clear();

  // Initialize to default text direction (for romance languages)
  _displaymode = LCD_ENTRYLEFT | LCD_ENTRYSHIFTDECREMENT;
  // set the entry mode
  command(LCD_ENTRYMODESET | _displaymode);
     d0c:	0c 94 f0 05 	jmp	0xbe0	; 0xbe0 <LiquidCrystal::command(unsigned char) [clone .constprop.39]>
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:139
  } else {
    // this is according to the hitachi HD44780 datasheet
    // page 45 figure 23

    // Send function set command sequence
    command(LCD_FUNCTIONSET | _displayfunction);
     d10:	80 62       	ori	r24, 0x20	; 32
     d12:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <LiquidCrystal::command(unsigned char) [clone .constprop.39]>
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:140
    delayMicroseconds(4500);  // wait more than 4.1ms
     d16:	84 e9       	ldi	r24, 0x94	; 148
     d18:	91 e1       	ldi	r25, 0x11	; 17
     d1a:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <delayMicroseconds>
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:143

    // second try
    command(LCD_FUNCTIONSET | _displayfunction);
     d1e:	80 91 c9 0a 	lds	r24, 0x0AC9	; 0x800ac9 <lcd+0xf>
     d22:	80 62       	ori	r24, 0x20	; 32
     d24:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <LiquidCrystal::command(unsigned char) [clone .constprop.39]>
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:144
    delayMicroseconds(150);
     d28:	86 e9       	ldi	r24, 0x96	; 150
     d2a:	90 e0       	ldi	r25, 0x00	; 0
     d2c:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <delayMicroseconds>
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:147

    // third go
    command(LCD_FUNCTIONSET | _displayfunction);
     d30:	80 91 c9 0a 	lds	r24, 0x0AC9	; 0x800ac9 <lcd+0xf>
     d34:	80 62       	ori	r24, 0x20	; 32
     d36:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <LiquidCrystal::command(unsigned char) [clone .constprop.39]>
     d3a:	d5 cf       	rjmp	.-86     	; 0xce6 <LiquidCrystal::begin(unsigned char, unsigned char, unsigned char) [clone .constprop.36]+0xec>

00000d3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>:
setCursor():
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:188
{
  command(LCD_RETURNHOME);  // set cursor position to zero
  delayMicroseconds(2000);  // this command takes a long time!
}

void LiquidCrystal::setCursor(uint8_t col, uint8_t row)
     d3c:	64 30       	cpi	r22, 0x04	; 4
     d3e:	08 f0       	brcs	.+2      	; 0xd42 <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]+0x6>
     d40:	63 e0       	ldi	r22, 0x03	; 3
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:194
{
  const size_t max_lines = sizeof(_row_offsets) / sizeof(*_row_offsets);
  if ( row >= max_lines ) {
    row = max_lines - 1;    // we count rows starting w/0
  }
  if ( row >= _numlines ) {
     d42:	90 91 cd 0a 	lds	r25, 0x0ACD	; 0x800acd <lcd+0x13>
     d46:	69 17       	cp	r22, r25
     d48:	10 f0       	brcs	.+4      	; 0xd4e <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]+0x12>
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:195
    row = _numlines - 1;    // we count rows starting w/0
     d4a:	6f ef       	ldi	r22, 0xFF	; 255
     d4c:	69 0f       	add	r22, r25
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:198
  }
  
  command(LCD_SETDDRAMADDR | (col + _row_offsets[row]));
     d4e:	e6 2f       	mov	r30, r22
     d50:	f0 e0       	ldi	r31, 0x00	; 0
     d52:	e6 54       	subi	r30, 0x46	; 70
     d54:	f5 4f       	sbci	r31, 0xF5	; 245
     d56:	94 89       	ldd	r25, Z+20	; 0x14
     d58:	89 0f       	add	r24, r25
     d5a:	80 68       	ori	r24, 0x80	; 128
     d5c:	0c 94 f0 05 	jmp	0xbe0	; 0xbe0 <LiquidCrystal::command(unsigned char) [clone .constprop.39]>

00000d60 <LiquidCrystal::write(unsigned char)>:
write():
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:280
inline void LiquidCrystal::command(uint8_t value) {
  send(value, LOW);
}

inline size_t LiquidCrystal::write(uint8_t value) {
  send(value, HIGH);
     d60:	41 e0       	ldi	r20, 0x01	; 1
     d62:	0e 94 9d 05 	call	0xb3a	; 0xb3a <LiquidCrystal::send(unsigned char, unsigned char)>
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:282
  return 1; // assume sucess
}
     d66:	81 e0       	ldi	r24, 0x01	; 1
     d68:	90 e0       	ldi	r25, 0x00	; 0
     d6a:	08 95       	ret

00000d6c <Print::flush()>:
flush():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/Print.h:65

    // default to zero, meaning "a single write may block"
    // should be overriden by subclasses with buffering
    virtual int availableForWrite() { return 0; }

    virtual void flush() { /* Empty implementation for backward compatibility */ }
     d6c:	08 95       	ret

00000d6e <Print::availableForWrite()>:
availableForWrite():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/Print.h:63
      return write((const uint8_t *)buffer, size);
    }

    // default to zero, meaning "a single write may block"
    // should be overriden by subclasses with buffering
    virtual int availableForWrite() { return 0; }
     d6e:	90 e0       	ldi	r25, 0x00	; 0
     d70:	80 e0       	ldi	r24, 0x00	; 0
     d72:	08 95       	ret

00000d74 <read_sensor(char, char, char)>:
read_sensor():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:205
  int result = 0;
  result = (EEPROM.read(address) << 8) + EEPROM.read(address + 1);
  return result;
}

int read_sensor(char sensorNum, char pinNum, char outputMode) {
     d74:	1f 93       	push	r17
     d76:	cf 93       	push	r28
     d78:	df 93       	push	r29
     d7a:	d8 2f       	mov	r29, r24
     d7c:	c6 2f       	mov	r28, r22
     d7e:	14 2f       	mov	r17, r20
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:207
  int output = 0;
  byte n1 = sensorNum & 0b0001;
     d80:	68 2f       	mov	r22, r24
     d82:	61 70       	andi	r22, 0x01	; 1
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:211
  byte n2 = (sensorNum & 0b0010) / 2;
  byte n3 = (sensorNum & 0b0100) / 4;

  digitalWrite(MUX_A, n1);
     d84:	8c e2       	ldi	r24, 0x2C	; 44
     d86:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:208
}

int read_sensor(char sensorNum, char pinNum, char outputMode) {
  int output = 0;
  byte n1 = sensorNum & 0b0001;
  byte n2 = (sensorNum & 0b0010) / 2;
     d8a:	d1 fb       	bst	r29, 1
     d8c:	66 27       	eor	r22, r22
     d8e:	60 f9       	bld	r22, 0
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:212
  byte n3 = (sensorNum & 0b0100) / 4;

  digitalWrite(MUX_A, n1);
  digitalWrite(MUX_B, n2);
     d90:	8b e2       	ldi	r24, 0x2B	; 43
     d92:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:209

int read_sensor(char sensorNum, char pinNum, char outputMode) {
  int output = 0;
  byte n1 = sensorNum & 0b0001;
  byte n2 = (sensorNum & 0b0010) / 2;
  byte n3 = (sensorNum & 0b0100) / 4;
     d96:	6d 2f       	mov	r22, r29
     d98:	65 95       	asr	r22
     d9a:	65 95       	asr	r22
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:213

  digitalWrite(MUX_A, n1);
  digitalWrite(MUX_B, n2);
  digitalWrite(MUX_C, n3);
     d9c:	8a e2       	ldi	r24, 0x2A	; 42
     d9e:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:214
  if (outputMode == 0)  // digital Mode
     da2:	11 11       	cpse	r17, r1
     da4:	0f c0       	rjmp	.+30     	; 0xdc4 <read_sensor(char, char, char)+0x50>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:217
  {
    if (pinNum == 0)
      output = digitalRead(A0);
     da6:	8d e2       	ldi	r24, 0x2D	; 45
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:216
  digitalWrite(MUX_A, n1);
  digitalWrite(MUX_B, n2);
  digitalWrite(MUX_C, n3);
  if (outputMode == 0)  // digital Mode
  {
    if (pinNum == 0)
     da8:	cc 23       	and	r28, r28
     daa:	39 f0       	breq	.+14     	; 0xdba <read_sensor(char, char, char)+0x46>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:219
      output = digitalRead(A0);
    else if (pinNum == 1)
      output = digitalRead(A1);
     dac:	8e e2       	ldi	r24, 0x2E	; 46
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:218
  digitalWrite(MUX_C, n3);
  if (outputMode == 0)  // digital Mode
  {
    if (pinNum == 0)
      output = digitalRead(A0);
    else if (pinNum == 1)
     dae:	c1 30       	cpi	r28, 0x01	; 1
     db0:	21 f0       	breq	.+8      	; 0xdba <read_sensor(char, char, char)+0x46>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:221
      output = digitalRead(A1);
    else if (pinNum == 2)
      output = digitalRead(A2);
     db2:	8f e2       	ldi	r24, 0x2F	; 47
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:220
  {
    if (pinNum == 0)
      output = digitalRead(A0);
    else if (pinNum == 1)
      output = digitalRead(A1);
    else if (pinNum == 2)
     db4:	c2 30       	cpi	r28, 0x02	; 2
     db6:	09 f0       	breq	.+2      	; 0xdba <read_sensor(char, char, char)+0x46>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:223
      output = digitalRead(A2);
    else if (pinNum == 3)
      output = digitalRead(A3);
     db8:	80 e3       	ldi	r24, 0x30	; 48
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:237
    else if (pinNum == 3)
      output = analogRead(A3);
    output = output * 5 / 102.3;
  }
  return output;
}
     dba:	df 91       	pop	r29
     dbc:	cf 91       	pop	r28
     dbe:	1f 91       	pop	r17
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:223
    else if (pinNum == 1)
      output = digitalRead(A1);
    else if (pinNum == 2)
      output = digitalRead(A2);
    else if (pinNum == 3)
      output = digitalRead(A3);
     dc0:	0c 94 e3 01 	jmp	0x3c6	; 0x3c6 <digitalRead>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:227
  } else if (outputMode == 1)  // analog Mode
  {
    if (pinNum == 0)
      output = analogRead(A0);
     dc4:	8d e2       	ldi	r24, 0x2D	; 45
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:226
      output = digitalRead(A2);
    else if (pinNum == 3)
      output = digitalRead(A3);
  } else if (outputMode == 1)  // analog Mode
  {
    if (pinNum == 0)
     dc6:	cc 23       	and	r28, r28
     dc8:	39 f0       	breq	.+14     	; 0xdd8 <read_sensor(char, char, char)+0x64>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:229
      output = analogRead(A0);
    else if (pinNum == 1)
      output = analogRead(A1);
     dca:	8e e2       	ldi	r24, 0x2E	; 46
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:228
      output = digitalRead(A3);
  } else if (outputMode == 1)  // analog Mode
  {
    if (pinNum == 0)
      output = analogRead(A0);
    else if (pinNum == 1)
     dcc:	c1 30       	cpi	r28, 0x01	; 1
     dce:	21 f0       	breq	.+8      	; 0xdd8 <read_sensor(char, char, char)+0x64>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:231
      output = analogRead(A1);
    else if (pinNum == 2)
      output = analogRead(A2);
     dd0:	8f e2       	ldi	r24, 0x2F	; 47
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:230
  {
    if (pinNum == 0)
      output = analogRead(A0);
    else if (pinNum == 1)
      output = analogRead(A1);
    else if (pinNum == 2)
     dd2:	c2 30       	cpi	r28, 0x02	; 2
     dd4:	09 f0       	breq	.+2      	; 0xdd8 <read_sensor(char, char, char)+0x64>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:233
      output = analogRead(A2);
    else if (pinNum == 3)
      output = analogRead(A3);
     dd6:	80 e3       	ldi	r24, 0x30	; 48
     dd8:	0e 94 ea 02 	call	0x5d4	; 0x5d4 <analogRead>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:234
    output = output * 5 / 102.3;
     ddc:	25 e0       	ldi	r18, 0x05	; 5
     dde:	28 9f       	mul	r18, r24
     de0:	b0 01       	movw	r22, r0
     de2:	29 9f       	mul	r18, r25
     de4:	70 0d       	add	r23, r0
     de6:	11 24       	eor	r1, r1
     de8:	07 2e       	mov	r0, r23
     dea:	00 0c       	add	r0, r0
     dec:	88 0b       	sbc	r24, r24
     dee:	99 0b       	sbc	r25, r25
     df0:	0e 94 e6 33 	call	0x67cc	; 0x67cc <__floatsisf>
     df4:	2a e9       	ldi	r18, 0x9A	; 154
     df6:	39 e9       	ldi	r19, 0x99	; 153
     df8:	4c ec       	ldi	r20, 0xCC	; 204
     dfa:	52 e4       	ldi	r21, 0x42	; 66
     dfc:	0e 94 3c 33 	call	0x6678	; 0x6678 <__divsf3>
     e00:	0e 94 ae 33 	call	0x675c	; 0x675c <__fixsfsi>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:237
  }
  return output;
}
     e04:	cb 01       	movw	r24, r22
     e06:	df 91       	pop	r29
     e08:	cf 91       	pop	r28
     e0a:	1f 91       	pop	r17
     e0c:	08 95       	ret

00000e0e <go(int, int)>:
go():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:161
  else if (SR8) go(spd, -spd);

  else if (SL9) go(-spd, spd);
  else if (SR9) go(spd, -spd);
}
void go(int left, int right) {
     e0e:	0f 93       	push	r16
     e10:	1f 93       	push	r17
     e12:	cf 93       	push	r28
     e14:	df 93       	push	r29
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:163
  left = -left;
  right = -right;
     e16:	00 27       	eor	r16, r16
     e18:	11 27       	eor	r17, r17
     e1a:	06 1b       	sub	r16, r22
     e1c:	17 0b       	sbc	r17, r23
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:165

  if (left > 255)
     e1e:	81 30       	cpi	r24, 0x01	; 1
     e20:	2f ef       	ldi	r18, 0xFF	; 255
     e22:	92 07       	cpc	r25, r18
     e24:	0c f4       	brge	.+2      	; 0xe28 <go(int, int)+0x1a>
     e26:	46 c0       	rjmp	.+140    	; 0xeb4 <go(int, int)+0xa6>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:167
    left = 255;
  if (left < -255)
     e28:	8f 3f       	cpi	r24, 0xFF	; 255
     e2a:	91 05       	cpc	r25, r1
     e2c:	09 f0       	breq	.+2      	; 0xe30 <go(int, int)+0x22>
     e2e:	cc f5       	brge	.+114    	; 0xea2 <go(int, int)+0x94>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:162

  else if (SL9) go(-spd, spd);
  else if (SR9) go(spd, -spd);
}
void go(int left, int right) {
  left = -left;
     e30:	cc 27       	eor	r28, r28
     e32:	dd 27       	eor	r29, r29
     e34:	c8 1b       	sub	r28, r24
     e36:	d9 0b       	sbc	r29, r25
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:169

  if (left > 255)
    left = 255;
  if (left < -255)
    left = -255;
  if (right > 255)
     e38:	61 30       	cpi	r22, 0x01	; 1
     e3a:	2f ef       	ldi	r18, 0xFF	; 255
     e3c:	72 07       	cpc	r23, r18
     e3e:	2c f1       	brlt	.+74     	; 0xe8a <go(int, int)+0x7c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:171
    right = 255;
  if (right < -255)
     e40:	6f 3f       	cpi	r22, 0xFF	; 255
     e42:	71 05       	cpc	r23, r1
     e44:	09 f0       	breq	.+2      	; 0xe48 <go(int, int)+0x3a>
     e46:	24 f5       	brge	.+72     	; 0xe90 <go(int, int)+0x82>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:174
    right = -255;

  if (left <= 0) {
     e48:	97 fd       	sbrc	r25, 7
     e4a:	29 c0       	rjmp	.+82     	; 0xe9e <go(int, int)+0x90>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:175
    digitalWrite(2, LOW);
     e4c:	60 e0       	ldi	r22, 0x00	; 0
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:178
    analogWrite(3, -left);
  } else if (left > 0) {
    digitalWrite(2, HIGH);
     e4e:	82 e0       	ldi	r24, 0x02	; 2
     e50:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:179
    analogWrite(3, -left);
     e54:	66 27       	eor	r22, r22
     e56:	77 27       	eor	r23, r23
     e58:	6c 1b       	sub	r22, r28
     e5a:	7d 0b       	sbc	r23, r29
     e5c:	83 e0       	ldi	r24, 0x03	; 3
     e5e:	0e 94 76 02 	call	0x4ec	; 0x4ec <analogWrite>
     e62:	cc 27       	eor	r28, r28
     e64:	dd 27       	eor	r29, r29
     e66:	c0 1b       	sub	r28, r16
     e68:	d1 0b       	sbc	r29, r17
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:183
  }

  if (right <= 0) {
    digitalWrite(4, LOW);
     e6a:	60 e0       	ldi	r22, 0x00	; 0
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:182
  } else if (left > 0) {
    digitalWrite(2, HIGH);
    analogWrite(3, -left);
  }

  if (right <= 0) {
     e6c:	10 16       	cp	r1, r16
     e6e:	11 06       	cpc	r1, r17
     e70:	0c f4       	brge	.+2      	; 0xe74 <go(int, int)+0x66>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:188
    digitalWrite(4, LOW);
    analogWrite(5, -right);
  }

  else if (right > 0) {
    digitalWrite(4, HIGH);
     e72:	61 e0       	ldi	r22, 0x01	; 1
     e74:	84 e0       	ldi	r24, 0x04	; 4
     e76:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:189
    analogWrite(5, -right);
     e7a:	be 01       	movw	r22, r28
     e7c:	85 e0       	ldi	r24, 0x05	; 5
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:191
  }
}
     e7e:	df 91       	pop	r29
     e80:	cf 91       	pop	r28
     e82:	1f 91       	pop	r17
     e84:	0f 91       	pop	r16
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:189
    analogWrite(5, -right);
  }

  else if (right > 0) {
    digitalWrite(4, HIGH);
    analogWrite(5, -right);
     e86:	0c 94 76 02 	jmp	0x4ec	; 0x4ec <analogWrite>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:170
  if (left > 255)
    left = 255;
  if (left < -255)
    left = -255;
  if (right > 255)
    right = 255;
     e8a:	0f ef       	ldi	r16, 0xFF	; 255
     e8c:	10 e0       	ldi	r17, 0x00	; 0
     e8e:	dc cf       	rjmp	.-72     	; 0xe48 <go(int, int)+0x3a>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:172
  if (right < -255)
    right = -255;
     e90:	01 e0       	ldi	r16, 0x01	; 1
     e92:	1f ef       	ldi	r17, 0xFF	; 255
     e94:	d9 cf       	rjmp	.-78     	; 0xe48 <go(int, int)+0x3a>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:170
  if (left > 255)
    left = 255;
  if (left < -255)
    left = -255;
  if (right > 255)
    right = 255;
     e96:	0f ef       	ldi	r16, 0xFF	; 255
     e98:	10 e0       	ldi	r17, 0x00	; 0
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:166
void go(int left, int right) {
  left = -left;
  right = -right;

  if (left > 255)
    left = 255;
     e9a:	cf ef       	ldi	r28, 0xFF	; 255
     e9c:	d0 e0       	ldi	r29, 0x00	; 0
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:178

  if (left <= 0) {
    digitalWrite(2, LOW);
    analogWrite(3, -left);
  } else if (left > 0) {
    digitalWrite(2, HIGH);
     e9e:	61 e0       	ldi	r22, 0x01	; 1
     ea0:	d6 cf       	rjmp	.-84     	; 0xe4e <go(int, int)+0x40>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:169

  if (left > 255)
    left = 255;
  if (left < -255)
    left = -255;
  if (right > 255)
     ea2:	61 30       	cpi	r22, 0x01	; 1
     ea4:	8f ef       	ldi	r24, 0xFF	; 255
     ea6:	78 07       	cpc	r23, r24
     ea8:	84 f4       	brge	.+32     	; 0xeca <go(int, int)+0xbc>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:170
    right = 255;
     eaa:	0f ef       	ldi	r16, 0xFF	; 255
     eac:	10 e0       	ldi	r17, 0x00	; 0
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:168
  right = -right;

  if (left > 255)
    left = 255;
  if (left < -255)
    left = -255;
     eae:	c1 e0       	ldi	r28, 0x01	; 1
     eb0:	df ef       	ldi	r29, 0xFF	; 255
     eb2:	cc cf       	rjmp	.-104    	; 0xe4c <go(int, int)+0x3e>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:169
  if (right > 255)
     eb4:	61 30       	cpi	r22, 0x01	; 1
     eb6:	2f ef       	ldi	r18, 0xFF	; 255
     eb8:	72 07       	cpc	r23, r18
     eba:	6c f3       	brlt	.-38     	; 0xe96 <go(int, int)+0x88>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:171
    right = 255;
  if (right < -255)
     ebc:	6f 3f       	cpi	r22, 0xFF	; 255
     ebe:	71 05       	cpc	r23, r1
     ec0:	61 f3       	breq	.-40     	; 0xe9a <go(int, int)+0x8c>
     ec2:	5c f3       	brlt	.-42     	; 0xe9a <go(int, int)+0x8c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:172
    right = -255;
     ec4:	01 e0       	ldi	r16, 0x01	; 1
     ec6:	1f ef       	ldi	r17, 0xFF	; 255
     ec8:	e8 cf       	rjmp	.-48     	; 0xe9a <go(int, int)+0x8c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:171
    left = 255;
  if (left < -255)
    left = -255;
  if (right > 255)
    right = 255;
  if (right < -255)
     eca:	6f 3f       	cpi	r22, 0xFF	; 255
     ecc:	71 05       	cpc	r23, r1
     ece:	79 f3       	breq	.-34     	; 0xeae <go(int, int)+0xa0>
     ed0:	74 f3       	brlt	.-36     	; 0xeae <go(int, int)+0xa0>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:172
    right = -255;
     ed2:	01 e0       	ldi	r16, 0x01	; 1
     ed4:	1f ef       	ldi	r17, 0xFF	; 255
     ed6:	eb cf       	rjmp	.-42     	; 0xeae <go(int, int)+0xa0>

00000ed8 <move(int, int, int)>:
move():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1869
      break;
    }
  }
  get_back();
}
void move(int direction, int lenth, int speed = 180) {
     ed8:	cf 92       	push	r12
     eda:	df 92       	push	r13
     edc:	ef 92       	push	r14
     ede:	ff 92       	push	r15
     ee0:	0f 93       	push	r16
     ee2:	1f 93       	push	r17
     ee4:	cf 93       	push	r28
     ee6:	df 93       	push	r29
     ee8:	8b 01       	movw	r16, r22
     eea:	ea 01       	movw	r28, r20
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1886
        go(-speed, speed);
      }
      go(0, 0);
      break;
    case Right:
      cnt = 0;
     eec:	1d bc       	out	0x2d, r1	; 45
     eee:	1c bc       	out	0x2c, r1	; 44
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1870
    }
  }
  get_back();
}
void move(int direction, int lenth, int speed = 180) {
  switch (direction) {
     ef0:	8c 30       	cpi	r24, 0x0C	; 12
     ef2:	91 05       	cpc	r25, r1
     ef4:	c1 f1       	breq	.+112    	; 0xf66 <move(int, int, int)+0x8e>
     ef6:	8d 30       	cpi	r24, 0x0D	; 13
     ef8:	91 05       	cpc	r25, r1
     efa:	09 f4       	brne	.+2      	; 0xefe <move(int, int, int)+0x26>
     efc:	48 c0       	rjmp	.+144    	; 0xf8e <move(int, int, int)+0xb6>
     efe:	0b 97       	sbiw	r24, 0x0b	; 11
     f00:	f1 f0       	breq	.+60     	; 0xf3e <move(int, int, int)+0x66>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1873
    case forward:
      cnt = 0;
      while (cnt / 100 < lenth) {
     f02:	34 e6       	ldi	r19, 0x64	; 100
     f04:	e3 2e       	mov	r14, r19
     f06:	f1 2c       	mov	r15, r1
     f08:	8c b5       	in	r24, 0x2c	; 44
     f0a:	9d b5       	in	r25, 0x2d	; 45
     f0c:	b7 01       	movw	r22, r14
     f0e:	0e 94 03 35 	call	0x6a06	; 0x6a06 <__udivmodhi4>
     f12:	60 17       	cp	r22, r16
     f14:	71 07       	cpc	r23, r17
     f16:	28 f4       	brcc	.+10     	; 0xf22 <move(int, int, int)+0x4a>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1874
        go(speed, speed);
     f18:	be 01       	movw	r22, r28
     f1a:	ce 01       	movw	r24, r28
     f1c:	0e 94 07 07 	call	0xe0e	; 0xe0e <go(int, int)>
     f20:	f3 cf       	rjmp	.-26     	; 0xf08 <move(int, int, int)+0x30>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1876
      }
      go(0, 0);
     f22:	70 e0       	ldi	r23, 0x00	; 0
     f24:	60 e0       	ldi	r22, 0x00	; 0
     f26:	90 e0       	ldi	r25, 0x00	; 0
     f28:	80 e0       	ldi	r24, 0x00	; 0
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1900
        go(-speed, -speed);
      }
      go(0, 0);
      break;
  }
}
     f2a:	df 91       	pop	r29
     f2c:	cf 91       	pop	r28
     f2e:	1f 91       	pop	r17
     f30:	0f 91       	pop	r16
     f32:	ff 90       	pop	r15
     f34:	ef 90       	pop	r14
     f36:	df 90       	pop	r13
     f38:	cf 90       	pop	r12
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1876
    case forward:
      cnt = 0;
      while (cnt / 100 < lenth) {
        go(speed, speed);
      }
      go(0, 0);
     f3a:	0c 94 07 07 	jmp	0xe0e	; 0xe0e <go(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1880
      break;
    case Left:
      cnt = 0;
      while (cnt / 100 < lenth) {
     f3e:	24 e6       	ldi	r18, 0x64	; 100
     f40:	c2 2e       	mov	r12, r18
     f42:	d1 2c       	mov	r13, r1
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1881
        go(-speed, speed);
     f44:	ee 24       	eor	r14, r14
     f46:	ff 24       	eor	r15, r15
     f48:	e4 1a       	sub	r14, r20
     f4a:	f5 0a       	sbc	r15, r21
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1880
      }
      go(0, 0);
      break;
    case Left:
      cnt = 0;
      while (cnt / 100 < lenth) {
     f4c:	8c b5       	in	r24, 0x2c	; 44
     f4e:	9d b5       	in	r25, 0x2d	; 45
     f50:	b6 01       	movw	r22, r12
     f52:	0e 94 03 35 	call	0x6a06	; 0x6a06 <__udivmodhi4>
     f56:	60 17       	cp	r22, r16
     f58:	71 07       	cpc	r23, r17
     f5a:	18 f7       	brcc	.-58     	; 0xf22 <move(int, int, int)+0x4a>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1881
        go(-speed, speed);
     f5c:	be 01       	movw	r22, r28
     f5e:	c7 01       	movw	r24, r14
     f60:	0e 94 07 07 	call	0xe0e	; 0xe0e <go(int, int)>
     f64:	f3 cf       	rjmp	.-26     	; 0xf4c <move(int, int, int)+0x74>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1887
      }
      go(0, 0);
      break;
    case Right:
      cnt = 0;
      while (cnt / 100 < lenth) {
     f66:	94 e6       	ldi	r25, 0x64	; 100
     f68:	c9 2e       	mov	r12, r25
     f6a:	d1 2c       	mov	r13, r1
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1888
        go(speed, -speed);
     f6c:	ee 24       	eor	r14, r14
     f6e:	ff 24       	eor	r15, r15
     f70:	e4 1a       	sub	r14, r20
     f72:	f5 0a       	sbc	r15, r21
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1887
      }
      go(0, 0);
      break;
    case Right:
      cnt = 0;
      while (cnt / 100 < lenth) {
     f74:	8c b5       	in	r24, 0x2c	; 44
     f76:	9d b5       	in	r25, 0x2d	; 45
     f78:	b6 01       	movw	r22, r12
     f7a:	0e 94 03 35 	call	0x6a06	; 0x6a06 <__udivmodhi4>
     f7e:	60 17       	cp	r22, r16
     f80:	71 07       	cpc	r23, r17
     f82:	78 f6       	brcc	.-98     	; 0xf22 <move(int, int, int)+0x4a>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1888
        go(speed, -speed);
     f84:	b7 01       	movw	r22, r14
     f86:	ce 01       	movw	r24, r28
     f88:	0e 94 07 07 	call	0xe0e	; 0xe0e <go(int, int)>
     f8c:	f3 cf       	rjmp	.-26     	; 0xf74 <move(int, int, int)+0x9c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1894
      }
      go(0, 0);
      break;
    case Back:
      cnt = 0;
      while (cnt / 100 < lenth) {
     f8e:	84 e6       	ldi	r24, 0x64	; 100
     f90:	e8 2e       	mov	r14, r24
     f92:	f1 2c       	mov	r15, r1
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1895
        go(-speed, -speed);
     f94:	d1 95       	neg	r29
     f96:	c1 95       	neg	r28
     f98:	d1 09       	sbc	r29, r1
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1894
      }
      go(0, 0);
      break;
    case Back:
      cnt = 0;
      while (cnt / 100 < lenth) {
     f9a:	8c b5       	in	r24, 0x2c	; 44
     f9c:	9d b5       	in	r25, 0x2d	; 45
     f9e:	b7 01       	movw	r22, r14
     fa0:	0e 94 03 35 	call	0x6a06	; 0x6a06 <__udivmodhi4>
     fa4:	60 17       	cp	r22, r16
     fa6:	71 07       	cpc	r23, r17
     fa8:	08 f0       	brcs	.+2      	; 0xfac <move(int, int, int)+0xd4>
     faa:	bb cf       	rjmp	.-138    	; 0xf22 <move(int, int, int)+0x4a>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1895
        go(-speed, -speed);
     fac:	be 01       	movw	r22, r28
     fae:	ce 01       	movw	r24, r28
     fb0:	0e 94 07 07 	call	0xe0e	; 0xe0e <go(int, int)>
     fb4:	f2 cf       	rjmp	.-28     	; 0xf9a <move(int, int, int)+0xc2>

00000fb6 <linefollow()>:
linefollow():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:79
    }
  }
  */
}
void linefollow() {
  if (SM == HIGH) {
     fb6:	40 e0       	ldi	r20, 0x00	; 0
     fb8:	60 e0       	ldi	r22, 0x00	; 0
     fba:	80 e0       	ldi	r24, 0x00	; 0
     fbc:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
     fc0:	01 97       	sbiw	r24, 0x01	; 1
     fc2:	29 f4       	brne	.+10     	; 0xfce <linefollow()+0x18>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:80
    go(255, 255);
     fc4:	6f ef       	ldi	r22, 0xFF	; 255
     fc6:	70 e0       	ldi	r23, 0x00	; 0
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:90
  } else if (SR3 == HIGH) {
    go(255, -105);
  } else if (SR4 == HIGH) {
    go(255, -175);
  } else if (SR5 == HIGH) {
    go(255, -255);
     fc8:	8f ef       	ldi	r24, 0xFF	; 255
     fca:	90 e0       	ldi	r25, 0x00	; 0
     fcc:	0b c0       	rjmp	.+22     	; 0xfe4 <linefollow()+0x2e>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:81
  */
}
void linefollow() {
  if (SM == HIGH) {
    go(255, 255);
  } else if (SR1 == HIGH) {
     fce:	40 e0       	ldi	r20, 0x00	; 0
     fd0:	61 e0       	ldi	r22, 0x01	; 1
     fd2:	81 e0       	ldi	r24, 0x01	; 1
     fd4:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
     fd8:	01 97       	sbiw	r24, 0x01	; 1
     fda:	31 f4       	brne	.+12     	; 0xfe8 <linefollow()+0x32>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:82
    go(220, 120);
     fdc:	68 e7       	ldi	r22, 0x78	; 120
     fde:	70 e0       	ldi	r23, 0x00	; 0
     fe0:	8c ed       	ldi	r24, 0xDC	; 220
     fe2:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:102
  } else if (SL3 == HIGH) {
    go(-105, 255);
  } else if (SL4 == HIGH) {
    go(-175, 255);
  } else if (SL5 == HIGH) {
    go(-255, 255);
     fe4:	0c 94 07 07 	jmp	0xe0e	; 0xe0e <go(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:83
void linefollow() {
  if (SM == HIGH) {
    go(255, 255);
  } else if (SR1 == HIGH) {
    go(220, 120);
  } else if (SR2 == HIGH) {
     fe8:	40 e0       	ldi	r20, 0x00	; 0
     fea:	61 e0       	ldi	r22, 0x01	; 1
     fec:	82 e0       	ldi	r24, 0x02	; 2
     fee:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:84
    go(255, 85);
     ff2:	65 e5       	ldi	r22, 0x55	; 85
     ff4:	70 e0       	ldi	r23, 0x00	; 0
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:83
void linefollow() {
  if (SM == HIGH) {
    go(255, 255);
  } else if (SR1 == HIGH) {
    go(220, 120);
  } else if (SR2 == HIGH) {
     ff6:	01 97       	sbiw	r24, 0x01	; 1
     ff8:	39 f3       	breq	.-50     	; 0xfc8 <linefollow()+0x12>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:85
    go(255, 85);
  } else if (SR3 == HIGH) {
     ffa:	40 e0       	ldi	r20, 0x00	; 0
     ffc:	61 e0       	ldi	r22, 0x01	; 1
     ffe:	83 e0       	ldi	r24, 0x03	; 3
    1000:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:86
    go(255, -105);
    1004:	67 e9       	ldi	r22, 0x97	; 151
    1006:	7f ef       	ldi	r23, 0xFF	; 255
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:85
    go(255, 255);
  } else if (SR1 == HIGH) {
    go(220, 120);
  } else if (SR2 == HIGH) {
    go(255, 85);
  } else if (SR3 == HIGH) {
    1008:	01 97       	sbiw	r24, 0x01	; 1
    100a:	f1 f2       	breq	.-68     	; 0xfc8 <linefollow()+0x12>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:87
    go(255, -105);
  } else if (SR4 == HIGH) {
    100c:	40 e0       	ldi	r20, 0x00	; 0
    100e:	61 e0       	ldi	r22, 0x01	; 1
    1010:	84 e0       	ldi	r24, 0x04	; 4
    1012:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:88
    go(255, -175);
    1016:	61 e5       	ldi	r22, 0x51	; 81
    1018:	7f ef       	ldi	r23, 0xFF	; 255
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:87
    go(220, 120);
  } else if (SR2 == HIGH) {
    go(255, 85);
  } else if (SR3 == HIGH) {
    go(255, -105);
  } else if (SR4 == HIGH) {
    101a:	01 97       	sbiw	r24, 0x01	; 1
    101c:	a9 f2       	breq	.-86     	; 0xfc8 <linefollow()+0x12>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:89
    go(255, -175);
  } else if (SR5 == HIGH) {
    101e:	40 e0       	ldi	r20, 0x00	; 0
    1020:	61 e0       	ldi	r22, 0x01	; 1
    1022:	85 e0       	ldi	r24, 0x05	; 5
    1024:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    1028:	01 97       	sbiw	r24, 0x01	; 1
    102a:	19 f4       	brne	.+6      	; 0x1032 <linefollow()+0x7c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:90
    go(255, -255);
    102c:	61 e0       	ldi	r22, 0x01	; 1
    102e:	7f ef       	ldi	r23, 0xFF	; 255
    1030:	cb cf       	rjmp	.-106    	; 0xfc8 <linefollow()+0x12>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:91
  } else if (SR6 == HIGH) {
    1032:	40 e0       	ldi	r20, 0x00	; 0
    1034:	61 e0       	ldi	r22, 0x01	; 1
    1036:	86 e0       	ldi	r24, 0x06	; 6
    1038:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    103c:	01 97       	sbiw	r24, 0x01	; 1
    103e:	b1 f3       	breq	.-20     	; 0x102c <linefollow()+0x76>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:93
    go(255, -255);
  } else if (SL1 == HIGH) {
    1040:	40 e0       	ldi	r20, 0x00	; 0
    1042:	60 e0       	ldi	r22, 0x00	; 0
    1044:	81 e0       	ldi	r24, 0x01	; 1
    1046:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    104a:	01 97       	sbiw	r24, 0x01	; 1
    104c:	29 f4       	brne	.+10     	; 0x1058 <linefollow()+0xa2>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:94
    go(155, 255);
    104e:	6f ef       	ldi	r22, 0xFF	; 255
    1050:	70 e0       	ldi	r23, 0x00	; 0
    1052:	8b e9       	ldi	r24, 0x9B	; 155
    1054:	90 e0       	ldi	r25, 0x00	; 0
    1056:	c6 cf       	rjmp	.-116    	; 0xfe4 <linefollow()+0x2e>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:95
  } else if (SL2 == HIGH) {
    1058:	40 e0       	ldi	r20, 0x00	; 0
    105a:	60 e0       	ldi	r22, 0x00	; 0
    105c:	82 e0       	ldi	r24, 0x02	; 2
    105e:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    1062:	01 97       	sbiw	r24, 0x01	; 1
    1064:	29 f4       	brne	.+10     	; 0x1070 <linefollow()+0xba>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:96
    go(85, 255);
    1066:	6f ef       	ldi	r22, 0xFF	; 255
    1068:	70 e0       	ldi	r23, 0x00	; 0
    106a:	85 e5       	ldi	r24, 0x55	; 85
    106c:	90 e0       	ldi	r25, 0x00	; 0
    106e:	ba cf       	rjmp	.-140    	; 0xfe4 <linefollow()+0x2e>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:97
  } else if (SL3 == HIGH) {
    1070:	40 e0       	ldi	r20, 0x00	; 0
    1072:	60 e0       	ldi	r22, 0x00	; 0
    1074:	83 e0       	ldi	r24, 0x03	; 3
    1076:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    107a:	01 97       	sbiw	r24, 0x01	; 1
    107c:	29 f4       	brne	.+10     	; 0x1088 <linefollow()+0xd2>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:98
    go(-105, 255);
    107e:	6f ef       	ldi	r22, 0xFF	; 255
    1080:	70 e0       	ldi	r23, 0x00	; 0
    1082:	87 e9       	ldi	r24, 0x97	; 151
    1084:	9f ef       	ldi	r25, 0xFF	; 255
    1086:	ae cf       	rjmp	.-164    	; 0xfe4 <linefollow()+0x2e>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:99
  } else if (SL4 == HIGH) {
    1088:	40 e0       	ldi	r20, 0x00	; 0
    108a:	60 e0       	ldi	r22, 0x00	; 0
    108c:	84 e0       	ldi	r24, 0x04	; 4
    108e:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    1092:	01 97       	sbiw	r24, 0x01	; 1
    1094:	29 f4       	brne	.+10     	; 0x10a0 <linefollow()+0xea>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:100
    go(-175, 255);
    1096:	6f ef       	ldi	r22, 0xFF	; 255
    1098:	70 e0       	ldi	r23, 0x00	; 0
    109a:	81 e5       	ldi	r24, 0x51	; 81
    109c:	9f ef       	ldi	r25, 0xFF	; 255
    109e:	a2 cf       	rjmp	.-188    	; 0xfe4 <linefollow()+0x2e>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:101
  } else if (SL5 == HIGH) {
    10a0:	40 e0       	ldi	r20, 0x00	; 0
    10a2:	60 e0       	ldi	r22, 0x00	; 0
    10a4:	85 e0       	ldi	r24, 0x05	; 5
    10a6:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    10aa:	01 97       	sbiw	r24, 0x01	; 1
    10ac:	29 f4       	brne	.+10     	; 0x10b8 <linefollow()+0x102>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:102
    go(-255, 255);
    10ae:	6f ef       	ldi	r22, 0xFF	; 255
    10b0:	70 e0       	ldi	r23, 0x00	; 0
    10b2:	81 e0       	ldi	r24, 0x01	; 1
    10b4:	9f ef       	ldi	r25, 0xFF	; 255
    10b6:	96 cf       	rjmp	.-212    	; 0xfe4 <linefollow()+0x2e>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:103
  } else if (SL6 == HIGH) {
    10b8:	40 e0       	ldi	r20, 0x00	; 0
    10ba:	60 e0       	ldi	r22, 0x00	; 0
    10bc:	86 e0       	ldi	r24, 0x06	; 6
    10be:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    10c2:	01 97       	sbiw	r24, 0x01	; 1
    10c4:	09 f0       	breq	.+2      	; 0x10c8 <linefollow()+0x112>
    10c6:	7e cf       	rjmp	.-260    	; 0xfc4 <linefollow()+0xe>
    10c8:	f2 cf       	rjmp	.-28     	; 0x10ae <linefollow()+0xf8>

000010ca <beep(int)>:
beep():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:7
void move(int direction, int lenth, int speed);
unsigned int vl(char xv);
void handle_color();
void get_out();

void beep(int num) {
    10ca:	0f 93       	push	r16
    10cc:	1f 93       	push	r17
    10ce:	cf 93       	push	r28
    10d0:	df 93       	push	r29
    10d2:	8c 01       	movw	r16, r24
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:8
  for (int i = 0; i < num; i++) {
    10d4:	d0 e0       	ldi	r29, 0x00	; 0
    10d6:	c0 e0       	ldi	r28, 0x00	; 0
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:9
    buz_on;
    10d8:	61 e0       	ldi	r22, 0x01	; 1
    10da:	83 e2       	ldi	r24, 0x23	; 35
    10dc:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:10
    delay(50);
    10e0:	62 e3       	ldi	r22, 0x32	; 50
    10e2:	70 e0       	ldi	r23, 0x00	; 0
    10e4:	80 e0       	ldi	r24, 0x00	; 0
    10e6:	90 e0       	ldi	r25, 0x00	; 0
    10e8:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <delay>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:11
    buz_off;
    10ec:	60 e0       	ldi	r22, 0x00	; 0
    10ee:	83 e2       	ldi	r24, 0x23	; 35
    10f0:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:12
    delay(50);
    10f4:	62 e3       	ldi	r22, 0x32	; 50
    10f6:	70 e0       	ldi	r23, 0x00	; 0
    10f8:	80 e0       	ldi	r24, 0x00	; 0
    10fa:	90 e0       	ldi	r25, 0x00	; 0
    10fc:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <delay>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:8
unsigned int vl(char xv);
void handle_color();
void get_out();

void beep(int num) {
  for (int i = 0; i < num; i++) {
    1100:	21 96       	adiw	r28, 0x01	; 1
    1102:	0c 17       	cp	r16, r28
    1104:	1d 07       	cpc	r17, r29
    1106:	41 f7       	brne	.-48     	; 0x10d8 <beep(int)+0xe>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:14
    buz_on;
    delay(50);
    buz_off;
    delay(50);
  }
}
    1108:	df 91       	pop	r29
    110a:	cf 91       	pop	r28
    110c:	1f 91       	pop	r17
    110e:	0f 91       	pop	r16
    1110:	08 95       	ret

00001112 <AX(char, int, int)>:
AX():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:284
    delay(10); // bayad bashe hatman    hade aghal=10  // 1 bazi vaghta error mideh
               //    RXD;
}
void AX(char ID, int position, int speed)
{
    TxBuffer[0] = 0xff;
    1112:	9f ef       	ldi	r25, 0xFF	; 255
    1114:	90 93 66 08 	sts	0x0866, r25	; 0x800866 <TxBuffer>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:285
    TxBuffer[1] = 0xff;
    1118:	90 93 67 08 	sts	0x0867, r25	; 0x800867 <TxBuffer+0x1>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:286
    TxBuffer[2] = ID; // ID
    111c:	80 93 68 08 	sts	0x0868, r24	; 0x800868 <TxBuffer+0x2>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:287
    TxBuffer[3] = 7;  // Length(Paramter=5,Instruction=1,Checksum=1)
    1120:	87 e0       	ldi	r24, 0x07	; 7
    1122:	80 93 69 08 	sts	0x0869, r24	; 0x800869 <TxBuffer+0x3>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:288
    TxBuffer[4] = 3;  // bInstruction;
    1126:	83 e0       	ldi	r24, 0x03	; 3
    1128:	80 93 6a 08 	sts	0x086A, r24	; 0x80086a <TxBuffer+0x4>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:290

    TxBuffer[5] = 30;             // Address of position
    112c:	8e e1       	ldi	r24, 0x1E	; 30
    112e:	80 93 6b 08 	sts	0x086B, r24	; 0x80086b <TxBuffer+0x5>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:291
    TxBuffer[6] = position & 255; // Writing Data P_GOAL_POSITION_L2
    1132:	60 93 6c 08 	sts	0x086C, r22	; 0x80086c <TxBuffer+0x6>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:292
    TxBuffer[7] = position >> 8;  // Writing Data P_GOAL_POSITION_H
    1136:	70 93 6d 08 	sts	0x086D, r23	; 0x80086d <TxBuffer+0x7>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:293
    TxBuffer[8] = speed & 255;    // Writing Data P_GOAL_SPEED_L2
    113a:	40 93 6e 08 	sts	0x086E, r20	; 0x80086e <TxBuffer+0x8>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:294
    TxBuffer[9] = speed >> 8;     // Writing Data P_GOAL_SPEED_H
    113e:	50 93 6f 08 	sts	0x086F, r21	; 0x80086f <TxBuffer+0x9>
_TXsend():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:262
void _TXsend(char last_TXBuffer)
{
    unsigned char CheckSum, Count;
    //    TXD;
    //    DDRD.3=1; ready to send
    send_mode;
    1142:	61 e0       	ldi	r22, 0x01	; 1
    1144:	86 e1       	ldi	r24, 0x16	; 22
    1146:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
    114a:	e8 e6       	ldi	r30, 0x68	; 104
    114c:	f8 e0       	ldi	r31, 0x08	; 8
AX():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:263
    CheckSum = 0;
    114e:	80 e0       	ldi	r24, 0x00	; 0
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:264
    for (Count = 2; Count <= last_TXBuffer; Count++) // except 0xff,checksum
    1150:	92 e0       	ldi	r25, 0x02	; 2
_TXsend():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:265
        CheckSum += TxBuffer[Count];
    1152:	21 91       	ld	r18, Z+
    1154:	82 0f       	add	r24, r18
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:264
    unsigned char CheckSum, Count;
    //    TXD;
    //    DDRD.3=1; ready to send
    send_mode;
    CheckSum = 0;
    for (Count = 2; Count <= last_TXBuffer; Count++) // except 0xff,checksum
    1156:	9f 5f       	subi	r25, 0xFF	; 255
    1158:	9a 30       	cpi	r25, 0x0A	; 10
    115a:	d9 f7       	brne	.-10     	; 0x1152 <AX(char, int, int)+0x40>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:266
        CheckSum += TxBuffer[Count];
    TxBuffer[last_TXBuffer + 1] = ~CheckSum; // Writing Checksum with Bit Inversion
    115c:	80 95       	com	r24
    115e:	80 93 70 08 	sts	0x0870, r24	; 0x800870 <TxBuffer+0xa>
    1162:	e6 e6       	ldi	r30, 0x66	; 102
    1164:	f8 e0       	ldi	r31, 0x08	; 8
AX():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:267
    for (Count = 0; Count <= last_TXBuffer + 1; Count++)
    1166:	80 e0       	ldi	r24, 0x00	; 0
_TXsend():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:271
    {
        // Serial1.write(TxBuffer[Count]);
        // delayMicroseconds(100);
        while (!TXD_READY)
    1168:	90 91 9b 00 	lds	r25, 0x009B	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
    116c:	95 ff       	sbrs	r25, 5
    116e:	fc cf       	rjmp	.-8      	; 0x1168 <AX(char, int, int)+0x56>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:273
            ;
        M_UDR = TxBuffer[Count];
    1170:	91 91       	ld	r25, Z+
    1172:	90 93 9c 00 	sts	0x009C, r25	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:267
    send_mode;
    CheckSum = 0;
    for (Count = 2; Count <= last_TXBuffer; Count++) // except 0xff,checksum
        CheckSum += TxBuffer[Count];
    TxBuffer[last_TXBuffer + 1] = ~CheckSum; // Writing Checksum with Bit Inversion
    for (Count = 0; Count <= last_TXBuffer + 1; Count++)
    1176:	8f 5f       	subi	r24, 0xFF	; 255
    1178:	8b 30       	cpi	r24, 0x0B	; 11
    117a:	b1 f7       	brne	.-20     	; 0x1168 <AX(char, int, int)+0x56>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:275
        // delayMicroseconds(100);
        while (!TXD_READY)
            ;
        M_UDR = TxBuffer[Count];
    }
    while (!CHECK_TXD_FINISH)
    117c:	80 91 9b 00 	lds	r24, 0x009B	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
    1180:	86 ff       	sbrs	r24, 6
    1182:	fc cf       	rjmp	.-8      	; 0x117c <AX(char, int, int)+0x6a>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:279
        ; // Wait until TXD Shift register empty

    //    DDRD.3=0;
    delay(10); // bayad bashe hatman    hade aghal=10  // 1 bazi vaghta error mideh
    1184:	6a e0       	ldi	r22, 0x0A	; 10
    1186:	70 e0       	ldi	r23, 0x00	; 0
    1188:	80 e0       	ldi	r24, 0x00	; 0
    118a:	90 e0       	ldi	r25, 0x00	; 0
    118c:	0c 94 5b 03 	jmp	0x6b6	; 0x6b6 <delay>

00001190 <move_arm(int, int)>:
move_arm():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:15
void move_arm(int pos, int speed) {
    1190:	0f 93       	push	r16
    1192:	1f 93       	push	r17
    1194:	cf 93       	push	r28
    1196:	df 93       	push	r29
    1198:	8c 01       	movw	r16, r24
    119a:	eb 01       	movw	r28, r22
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:16
  AX(11, pos, speed);
    119c:	ab 01       	movw	r20, r22
    119e:	bc 01       	movw	r22, r24
    11a0:	8b e0       	ldi	r24, 0x0B	; 11
    11a2:	0e 94 89 08 	call	0x1112	; 0x1112 <AX(char, int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:17
  AX(10, 1023 - pos, speed);
    11a6:	6f ef       	ldi	r22, 0xFF	; 255
    11a8:	73 e0       	ldi	r23, 0x03	; 3
    11aa:	60 1b       	sub	r22, r16
    11ac:	71 0b       	sbc	r23, r17
    11ae:	ae 01       	movw	r20, r28
    11b0:	8a e0       	ldi	r24, 0x0A	; 10
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:18
}
    11b2:	df 91       	pop	r29
    11b4:	cf 91       	pop	r28
    11b6:	1f 91       	pop	r17
    11b8:	0f 91       	pop	r16
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:17
    delay(50);
  }
}
void move_arm(int pos, int speed) {
  AX(11, pos, speed);
  AX(10, 1023 - pos, speed);
    11ba:	0c 94 89 08 	jmp	0x1112	; 0x1112 <AX(char, int, int)>

000011be <XL_Gripper(char, int, int)>:
XL_Gripper():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:151
void XL_Gripper(char ID, int position, int speed)
{
    char Count;
    unsigned short CRC;

    packet[0] = 0xFF;
    11be:	2f ef       	ldi	r18, 0xFF	; 255
    11c0:	30 e0       	ldi	r19, 0x00	; 0
    11c2:	30 93 39 09 	sts	0x0939, r19	; 0x800939 <packet+0x1>
    11c6:	20 93 38 09 	sts	0x0938, r18	; 0x800938 <packet>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:152
    packet[1] = 0xFF;
    11ca:	30 93 3b 09 	sts	0x093B, r19	; 0x80093b <packet+0x3>
    11ce:	20 93 3a 09 	sts	0x093A, r18	; 0x80093a <packet+0x2>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:153
    packet[2] = 0xFD;
    11d2:	2d ef       	ldi	r18, 0xFD	; 253
    11d4:	30 e0       	ldi	r19, 0x00	; 0
    11d6:	30 93 3d 09 	sts	0x093D, r19	; 0x80093d <packet+0x5>
    11da:	20 93 3c 09 	sts	0x093C, r18	; 0x80093c <packet+0x4>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:154
    packet[3] = 0x00;                   // RESERVED
    11de:	10 92 3f 09 	sts	0x093F, r1	; 0x80093f <packet+0x7>
    11e2:	10 92 3e 09 	sts	0x093E, r1	; 0x80093e <packet+0x6>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:155
    packet[4] = ID;                     // id
    11e6:	08 2e       	mov	r0, r24
    11e8:	00 0c       	add	r0, r0
    11ea:	99 0b       	sbc	r25, r25
    11ec:	90 93 41 09 	sts	0x0941, r25	; 0x800941 <packet+0x9>
    11f0:	80 93 40 09 	sts	0x0940, r24	; 0x800940 <packet+0x8>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:156
    packet[5] = 7 + 2;                  // packet lengh L  : packet lengh after packet lengh
    11f4:	89 e0       	ldi	r24, 0x09	; 9
    11f6:	90 e0       	ldi	r25, 0x00	; 0
    11f8:	90 93 43 09 	sts	0x0943, r25	; 0x800943 <packet+0xb>
    11fc:	80 93 42 09 	sts	0x0942, r24	; 0x800942 <packet+0xa>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:157
    packet[6] = 0;                      // packet lengh H
    1200:	10 92 45 09 	sts	0x0945, r1	; 0x800945 <packet+0xd>
    1204:	10 92 44 09 	sts	0x0944, r1	; 0x800944 <packet+0xc>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:158
    packet[7] = 3;                      // Instraction
    1208:	83 e0       	ldi	r24, 0x03	; 3
    120a:	90 e0       	ldi	r25, 0x00	; 0
    120c:	90 93 47 09 	sts	0x0947, r25	; 0x800947 <packet+0xf>
    1210:	80 93 46 09 	sts	0x0946, r24	; 0x800946 <packet+0xe>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:159
    packet[8] = 30;                     // address L
    1214:	8e e1       	ldi	r24, 0x1E	; 30
    1216:	90 e0       	ldi	r25, 0x00	; 0
    1218:	90 93 49 09 	sts	0x0949, r25	; 0x800949 <packet+0x11>
    121c:	80 93 48 09 	sts	0x0948, r24	; 0x800948 <packet+0x10>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:160
    packet[9] = 0;                      // address H
    1220:	10 92 4b 09 	sts	0x094B, r1	; 0x80094b <packet+0x13>
    1224:	10 92 4a 09 	sts	0x094A, r1	; 0x80094a <packet+0x12>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:161
    packet[10] = position & 255;        // parameter
    1228:	cb 01       	movw	r24, r22
    122a:	99 27       	eor	r25, r25
    122c:	90 93 4d 09 	sts	0x094D, r25	; 0x80094d <packet+0x15>
    1230:	80 93 4c 09 	sts	0x094C, r24	; 0x80094c <packet+0x14>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:162
    packet[11] = (position >> 8) & 255; // parameter
    1234:	70 93 4e 09 	sts	0x094E, r23	; 0x80094e <packet+0x16>
    1238:	10 92 4f 09 	sts	0x094F, r1	; 0x80094f <packet+0x17>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:163
    packet[12] = speed & 255;           // parameter
    123c:	ca 01       	movw	r24, r20
    123e:	99 27       	eor	r25, r25
    1240:	90 93 51 09 	sts	0x0951, r25	; 0x800951 <packet+0x19>
    1244:	80 93 50 09 	sts	0x0950, r24	; 0x800950 <packet+0x18>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:164
    packet[13] = (speed >> 8) & 255;    // parameter
    1248:	50 93 52 09 	sts	0x0952, r21	; 0x800952 <packet+0x1a>
    124c:	10 92 53 09 	sts	0x0953, r1	; 0x800953 <packet+0x1b>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:166

    CRC = update_crc(0, packet, 14);
    1250:	0e 94 db 00 	call	0x1b6	; 0x1b6 <update_crc(unsigned short, unsigned short*, unsigned short) [clone .constprop.32]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:167
    packet[14] = CRC & 0xFF;        // CRC_L
    1254:	9c 01       	movw	r18, r24
    1256:	33 27       	eor	r19, r19
    1258:	30 93 55 09 	sts	0x0955, r19	; 0x800955 <packet+0x1d>
    125c:	20 93 54 09 	sts	0x0954, r18	; 0x800954 <packet+0x1c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:168
    packet[15] = (CRC >> 8) & 0xFF; // CRC_H
    1260:	90 93 56 09 	sts	0x0956, r25	; 0x800956 <packet+0x1e>
    1264:	10 92 57 09 	sts	0x0957, r1	; 0x800957 <packet+0x1f>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:169
    send_mode;
    1268:	61 e0       	ldi	r22, 0x01	; 1
    126a:	86 e1       	ldi	r24, 0x16	; 22
    126c:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
    1270:	e8 e3       	ldi	r30, 0x38	; 56
    1272:	f9 e0       	ldi	r31, 0x09	; 9
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:172
    for (Count = 0; Count < 16; Count++)
    {
        while (!TXD_READY)
    1274:	80 91 9b 00 	lds	r24, 0x009B	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
    1278:	85 ff       	sbrs	r24, 5
    127a:	fc cf       	rjmp	.-8      	; 0x1274 <XL_Gripper(char, int, int)+0xb6>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:174
            ;
        M_UDR = packet[Count];
    127c:	80 81       	ld	r24, Z
    127e:	32 96       	adiw	r30, 0x02	; 2
    1280:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:170

    CRC = update_crc(0, packet, 14);
    packet[14] = CRC & 0xFF;        // CRC_L
    packet[15] = (CRC >> 8) & 0xFF; // CRC_H
    send_mode;
    for (Count = 0; Count < 16; Count++)
    1284:	89 e0       	ldi	r24, 0x09	; 9
    1286:	e8 35       	cpi	r30, 0x58	; 88
    1288:	f8 07       	cpc	r31, r24
    128a:	a1 f7       	brne	.-24     	; 0x1274 <XL_Gripper(char, int, int)+0xb6>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:176
    {
        while (!TXD_READY)
            ;
        M_UDR = packet[Count];
    }
    while (!CHECK_TXD_FINISH)
    128c:	80 91 9b 00 	lds	r24, 0x009B	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
    1290:	86 ff       	sbrs	r24, 6
    1292:	fc cf       	rjmp	.-8      	; 0x128c <XL_Gripper(char, int, int)+0xce>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:178
        ; // Wait until TXD Shift register empty
    delay(15);
    1294:	6f e0       	ldi	r22, 0x0F	; 15
    1296:	70 e0       	ldi	r23, 0x00	; 0
    1298:	80 e0       	ldi	r24, 0x00	; 0
    129a:	90 e0       	ldi	r25, 0x00	; 0
    129c:	0c 94 5b 03 	jmp	0x6b6	; 0x6b6 <delay>

000012a0 <Print::printf(char const*, ...) [clone .constprop.28]>:
printf():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/Print.cpp:208
{
  ((class Print *)(fdev_get_udata(fp)))->write((uint8_t)c);
  return 0;
}

int16_t Print::printf(const char *format, ...)
    12a0:	cf 93       	push	r28
    12a2:	df 93       	push	r29
    12a4:	cd b7       	in	r28, 0x3d	; 61
    12a6:	de b7       	in	r29, 0x3e	; 62
    12a8:	2e 97       	sbiw	r28, 0x0e	; 14
    12aa:	0f b6       	in	r0, 0x3f	; 63
    12ac:	f8 94       	cli
    12ae:	de bf       	out	0x3e, r29	; 62
    12b0:	0f be       	out	0x3f, r0	; 63
    12b2:	cd bf       	out	0x3d, r28	; 61
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/Print.cpp:213
{
  FILE f;
  va_list ap;

  fdev_setup_stream(&f, printf_putchar, NULL, _FDEV_SETUP_WRITE);
    12b4:	84 e1       	ldi	r24, 0x14	; 20
    12b6:	91 e0       	ldi	r25, 0x01	; 1
    12b8:	9a 87       	std	Y+10, r25	; 0x0a
    12ba:	89 87       	std	Y+9, r24	; 0x09
    12bc:	1c 86       	std	Y+12, r1	; 0x0c
    12be:	1b 86       	std	Y+11, r1	; 0x0b
    12c0:	82 e0       	ldi	r24, 0x02	; 2
    12c2:	8c 83       	std	Y+4, r24	; 0x04
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/Print.cpp:214
  fdev_set_udata(&f, this);
    12c4:	8a eb       	ldi	r24, 0xBA	; 186
    12c6:	9a e0       	ldi	r25, 0x0A	; 10
    12c8:	9e 87       	std	Y+14, r25	; 0x0e
    12ca:	8d 87       	std	Y+13, r24	; 0x0d
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/Print.cpp:216
  va_start(ap, format);
  return vfprintf(&f, format, ap);
    12cc:	ae 01       	movw	r20, r28
    12ce:	49 5e       	subi	r20, 0xE9	; 233
    12d0:	5f 4f       	sbci	r21, 0xFF	; 255
    12d2:	6d 89       	ldd	r22, Y+21	; 0x15
    12d4:	7e 89       	ldd	r23, Y+22	; 0x16
    12d6:	ce 01       	movw	r24, r28
    12d8:	01 96       	adiw	r24, 0x01	; 1
    12da:	0e 94 7b 30 	call	0x60f6	; 0x60f6 <vfprintf>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/Print.cpp:217
}
    12de:	2e 96       	adiw	r28, 0x0e	; 14
    12e0:	0f b6       	in	r0, 0x3f	; 63
    12e2:	f8 94       	cli
    12e4:	de bf       	out	0x3e, r29	; 62
    12e6:	0f be       	out	0x3f, r0	; 63
    12e8:	cd bf       	out	0x3d, r28	; 61
    12ea:	df 91       	pop	r29
    12ec:	cf 91       	pop	r28
    12ee:	08 95       	ret

000012f0 <TwoWire::requestFrom(int, int) [clone .constprop.14]>:
requestFrom():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:185
uint8_t TwoWire::requestFrom(uint8_t address, uint8_t quantity)
{
  return requestFrom((uint8_t)address, (uint8_t)quantity, (uint8_t)true);
}

uint8_t TwoWire::requestFrom(int address, int quantity)
    12f0:	ac 01       	movw	r20, r24
twi_readFrom():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:171
        twi_handleTimeout(twi_do_reset_on_timeout);
        return 0;
      }
    }
  #else
    while(TWI_READY != twi_state){
    12f2:	80 91 f1 08 	lds	r24, 0x08F1	; 0x8008f1 <twi_state>
    12f6:	81 11       	cpse	r24, r1
    12f8:	fc cf       	rjmp	.-8      	; 0x12f2 <TwoWire::requestFrom(int, int) [clone .constprop.14]+0x2>
requestFrom():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:187
{
  return requestFrom((uint8_t)address, (uint8_t)quantity, (uint8_t)true);
    12fa:	96 2f       	mov	r25, r22
twi_readFrom():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:175
      continue;
    }
  #endif
  twi_state = TWI_MRX;
    12fc:	81 e0       	ldi	r24, 0x01	; 1
    12fe:	80 93 f1 08 	sts	0x08F1, r24	; 0x8008f1 <twi_state>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:176
  twi_sendStop = sendStop;
    1302:	80 93 f0 08 	sts	0x08F0, r24	; 0x8008f0 <twi_sendStop>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:178
  // reset error state (0xFF.. no error occurred)
  twi_error = 0xFF;
    1306:	2f ef       	ldi	r18, 0xFF	; 255
    1308:	20 93 ef 08 	sts	0x08EF, r18	; 0x8008ef <twi_error>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:181

  // initialize buffer iteration vars
  twi_masterBuffer = data;
    130c:	26 e1       	ldi	r18, 0x16	; 22
    130e:	39 e0       	ldi	r19, 0x09	; 9
    1310:	30 93 ee 08 	sts	0x08EE, r19	; 0x8008ee <twi_masterBuffer+0x1>
    1314:	20 93 ed 08 	sts	0x08ED, r18	; 0x8008ed <twi_masterBuffer>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:182
  twi_masterBufferIndex = 0;
    1318:	10 92 ec 08 	sts	0x08EC, r1	; 0x8008ec <twi_masterBufferIndex>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:183
  twi_masterBufferLength = length-1;  // This is not intuitive, read on...
    131c:	2f ef       	ldi	r18, 0xFF	; 255
    131e:	26 0f       	add	r18, r22
    1320:	20 93 eb 08 	sts	0x08EB, r18	; 0x8008eb <twi_masterBufferLength>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:191
  // Therefore we must actually set NACK when the _next_ to last byte is
  // received, causing that NACK to be sent in response to receiving the last
  // expected byte of data.

  // build sla+w, slave device address + w bit
  twi_slarw = TW_READ;
    1324:	80 93 ea 08 	sts	0x08EA, r24	; 0x8008ea <twi_slarw>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:192
  twi_slarw |= address << 1;
    1328:	20 91 ea 08 	lds	r18, 0x08EA	; 0x8008ea <twi_slarw>
    132c:	44 0f       	add	r20, r20
    132e:	55 1f       	adc	r21, r21
    1330:	82 2f       	mov	r24, r18
    1332:	84 2b       	or	r24, r20
    1334:	80 93 ea 08 	sts	0x08EA, r24	; 0x8008ea <twi_slarw>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:194

  if (true == twi_inRepStart) {
    1338:	80 91 e9 08 	lds	r24, 0x08E9	; 0x8008e9 <twi_inRepStart>
    133c:	81 30       	cpi	r24, 0x01	; 1
    133e:	e9 f4       	brne	.+58     	; 0x137a <TwoWire::requestFrom(int, int) [clone .constprop.14]+0x8a>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:201
    // (@@@ we hope), and the TWI statemachine is just waiting for the address byte.
    // We need to remove ourselves from the repeated start state before we enable interrupts,
    // since the ISR is ASYNC, and we could get confused if we hit the ISR before cleaning
    // up. Also, don't enable the START interrupt. There may be one pending from the
    // repeated start that we sent ourselves, and that would really confuse things.
    twi_inRepStart = false; // Remember, we're dealing with an ASYNC ISR
    1340:	10 92 e9 08 	sts	0x08E9, r1	; 0x8008e9 <twi_inRepStart>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:213
          return 0;
        }
      } while(TWCR & _BV(TWWC));
    #else
      do {
        TWDR = twi_slarw;
    1344:	80 91 ea 08 	lds	r24, 0x08EA	; 0x8008ea <twi_slarw>
    1348:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:214
      } while(TWCR & _BV(TWWC));
    134c:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1350:	83 fd       	sbrc	r24, 3
    1352:	f8 cf       	rjmp	.-16     	; 0x1344 <TwoWire::requestFrom(int, int) [clone .constprop.14]+0x54>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:216
    #endif
    TWCR = _BV(TWINT) | _BV(TWEA) | _BV(TWEN) | _BV(TWIE);  // enable INTs, but not START
    1354:	85 ec       	ldi	r24, 0xC5	; 197
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:220
  }
  else
    // send start condition
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWEA) | _BV(TWINT) | _BV(TWSTA);
    1356:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:232
        twi_handleTimeout(twi_do_reset_on_timeout);
        return 0;
      }
    }
  #else
    while(TWI_MRX == twi_state){
    135a:	80 91 f1 08 	lds	r24, 0x08F1	; 0x8008f1 <twi_state>
    135e:	81 30       	cpi	r24, 0x01	; 1
    1360:	e1 f3       	breq	.-8      	; 0x135a <TwoWire::requestFrom(int, int) [clone .constprop.14]+0x6a>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:237
      continue;
    }
  #endif

  if (twi_masterBufferIndex < length)
    1362:	80 91 ec 08 	lds	r24, 0x08EC	; 0x8008ec <twi_masterBufferIndex>
    1366:	86 17       	cp	r24, r22
    1368:	10 f4       	brcc	.+4      	; 0x136e <TwoWire::requestFrom(int, int) [clone .constprop.14]+0x7e>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:238
    length = twi_masterBufferIndex;
    136a:	90 91 ec 08 	lds	r25, 0x08EC	; 0x8008ec <twi_masterBufferIndex>
requestFrom():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:122
    quantity = TWI_BUFFER_SIZE;
  }
  // perform blocking read into buffer
  uint8_t read = twi_readFrom(address, rxBuffer, quantity, sendStop);
  // set rx buffer iterator vars
  rxBufferIndex = 0;
    136e:	10 92 37 09 	sts	0x0937, r1	; 0x800937 <TwoWire::rxBufferIndex>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:123
  rxBufferLength = read;
    1372:	90 93 36 09 	sts	0x0936, r25	; 0x800936 <TwoWire::rxBufferLength>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:188
}

uint8_t TwoWire::requestFrom(int address, int quantity)
{
  return requestFrom((uint8_t)address, (uint8_t)quantity, (uint8_t)true);
}
    1376:	89 2f       	mov	r24, r25
    1378:	08 95       	ret
twi_readFrom():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:220
    #endif
    TWCR = _BV(TWINT) | _BV(TWEA) | _BV(TWEN) | _BV(TWIE);  // enable INTs, but not START
  }
  else
    // send start condition
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWEA) | _BV(TWINT) | _BV(TWSTA);
    137a:	85 ee       	ldi	r24, 0xE5	; 229
    137c:	ec cf       	rjmp	.-40     	; 0x1356 <TwoWire::requestFrom(int, int) [clone .constprop.14]+0x66>

0000137e <Print::printNumber(unsigned long, unsigned char) [clone .constprop.8]>:
printNumber():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/Print.cpp:232
  return vfprintf_P(&f, (const char *)format, ap);
}

// Private Methods /////////////////////////////////////////////////////////////

size_t Print::printNumber(unsigned long n, uint8_t base)
    137e:	8f 92       	push	r8
    1380:	9f 92       	push	r9
    1382:	af 92       	push	r10
    1384:	bf 92       	push	r11
    1386:	0f 93       	push	r16
    1388:	1f 93       	push	r17
    138a:	cf 93       	push	r28
    138c:	df 93       	push	r29
    138e:	cd b7       	in	r28, 0x3d	; 61
    1390:	de b7       	in	r29, 0x3e	; 62
    1392:	a1 97       	sbiw	r28, 0x21	; 33
    1394:	0f b6       	in	r0, 0x3f	; 63
    1396:	f8 94       	cli
    1398:	de bf       	out	0x3e, r29	; 62
    139a:	0f be       	out	0x3f, r0	; 63
    139c:	cd bf       	out	0x3d, r28	; 61
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/Print.cpp:237
{
  char buf[8 * sizeof(long) + 1]; // Assumes 8-bit chars plus zero byte.
  char *str = &buf[sizeof(buf) - 1];

  *str = '\0';
    139e:	19 a2       	std	Y+33, r1	; 0x21
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/Print.cpp:240

  // prevent crash if called with base == 1
  if (base < 2) base = 10;
    13a0:	42 30       	cpi	r20, 0x02	; 2
    13a2:	08 f4       	brcc	.+2      	; 0x13a6 <Print::printNumber(unsigned long, unsigned char) [clone .constprop.8]+0x28>
    13a4:	4a e0       	ldi	r20, 0x0A	; 10
    13a6:	8e 01       	movw	r16, r28
    13a8:	0f 5d       	subi	r16, 0xDF	; 223
    13aa:	1f 4f       	sbci	r17, 0xFF	; 255
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/Print.cpp:243

  do {
    char c = n % base;
    13ac:	84 2e       	mov	r8, r20
    13ae:	91 2c       	mov	r9, r1
    13b0:	b1 2c       	mov	r11, r1
    13b2:	a1 2c       	mov	r10, r1
    13b4:	a5 01       	movw	r20, r10
    13b6:	94 01       	movw	r18, r8
    13b8:	0e 94 2b 35 	call	0x6a56	; 0x6a56 <__udivmodsi4>
    13bc:	e6 2f       	mov	r30, r22
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/Print.cpp:244
    n /= base;
    13be:	b9 01       	movw	r22, r18
    13c0:	ca 01       	movw	r24, r20
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/Print.cpp:246

    *--str = c < 10 ? c + '0' : c + 'A' - 10;
    13c2:	ea 30       	cpi	r30, 0x0A	; 10
    13c4:	44 f5       	brge	.+80     	; 0x1416 <Print::printNumber(unsigned long, unsigned char) [clone .constprop.8]+0x98>
    13c6:	e0 5d       	subi	r30, 0xD0	; 208
    13c8:	d8 01       	movw	r26, r16
    13ca:	ee 93       	st	-X, r30
    13cc:	8d 01       	movw	r16, r26
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/Print.cpp:247
  } while(n);
    13ce:	23 2b       	or	r18, r19
    13d0:	24 2b       	or	r18, r20
    13d2:	25 2b       	or	r18, r21
    13d4:	79 f7       	brne	.-34     	; 0x13b4 <Print::printNumber(unsigned long, unsigned char) [clone .constprop.8]+0x36>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/Print.h:53
    int getWriteError() { return write_error; }
    void clearWriteError() { setWriteError(0); }

    virtual size_t write(uint8_t) = 0;
    size_t write(const char *str) {
      if (str == NULL) return 0;
    13d6:	90 e0       	ldi	r25, 0x00	; 0
    13d8:	80 e0       	ldi	r24, 0x00	; 0
write():
    13da:	10 97       	sbiw	r26, 0x00	; 0
    13dc:	69 f0       	breq	.+26     	; 0x13f8 <Print::printNumber(unsigned long, unsigned char) [clone .constprop.8]+0x7a>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/Print.h:54
      return write((const uint8_t *)str, strlen(str));
    13de:	fd 01       	movw	r30, r26
    13e0:	01 90       	ld	r0, Z+
    13e2:	00 20       	and	r0, r0
    13e4:	e9 f7       	brne	.-6      	; 0x13e0 <Print::printNumber(unsigned long, unsigned char) [clone .constprop.8]+0x62>
    13e6:	31 97       	sbiw	r30, 0x01	; 1
    13e8:	af 01       	movw	r20, r30
    13ea:	4a 1b       	sub	r20, r26
    13ec:	5b 0b       	sbc	r21, r27
    13ee:	bd 01       	movw	r22, r26
    13f0:	8a eb       	ldi	r24, 0xBA	; 186
    13f2:	9a e0       	ldi	r25, 0x0A	; 10
    13f4:	0e 94 8f 03 	call	0x71e	; 0x71e <Print::write(unsigned char const*, unsigned int)>
printNumber():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/Print.cpp:250

  return write(str);
}
    13f8:	a1 96       	adiw	r28, 0x21	; 33
    13fa:	0f b6       	in	r0, 0x3f	; 63
    13fc:	f8 94       	cli
    13fe:	de bf       	out	0x3e, r29	; 62
    1400:	0f be       	out	0x3f, r0	; 63
    1402:	cd bf       	out	0x3d, r28	; 61
    1404:	df 91       	pop	r29
    1406:	cf 91       	pop	r28
    1408:	1f 91       	pop	r17
    140a:	0f 91       	pop	r16
    140c:	bf 90       	pop	r11
    140e:	af 90       	pop	r10
    1410:	9f 90       	pop	r9
    1412:	8f 90       	pop	r8
    1414:	08 95       	ret
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/Print.cpp:246

  do {
    char c = n % base;
    n /= base;

    *--str = c < 10 ? c + '0' : c + 'A' - 10;
    1416:	e9 5c       	subi	r30, 0xC9	; 201
    1418:	d7 cf       	rjmp	.-82     	; 0x13c8 <Print::printNumber(unsigned long, unsigned char) [clone .constprop.8]+0x4a>

0000141a <Print::print(int, int) [clone .constprop.4]>:
print():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/Print.cpp:77
size_t Print::print(unsigned char b, int base)
{
  return print((unsigned long) b, base);
}

size_t Print::print(int n, int base)
    141a:	cf 92       	push	r12
    141c:	df 92       	push	r13
    141e:	ef 92       	push	r14
    1420:	ff 92       	push	r15
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/Print.cpp:79
{
  return print((long) n, base);
    1422:	6c 01       	movw	r12, r24
    1424:	99 0f       	add	r25, r25
    1426:	ee 08       	sbc	r14, r14
    1428:	ff 08       	sbc	r15, r15
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/Print.cpp:92
size_t Print::print(long n, int base)
{
  if (base == 0) {
    return write(n);
  } else if (base == 10) {
    if (n < 0) {
    142a:	f7 fe       	sbrs	r15, 7
    142c:	16 c0       	rjmp	.+44     	; 0x145a <Print::print(int, int) [clone .constprop.4]+0x40>
write():
C:\Users\beibe\AppData\Local\Arduino15\libraries\LiquidCrystal\src/LiquidCrystal.cpp:280
inline void LiquidCrystal::command(uint8_t value) {
  send(value, LOW);
}

inline size_t LiquidCrystal::write(uint8_t value) {
  send(value, HIGH);
    142e:	41 e0       	ldi	r20, 0x01	; 1
    1430:	6d e2       	ldi	r22, 0x2D	; 45
    1432:	8a eb       	ldi	r24, 0xBA	; 186
    1434:	9a e0       	ldi	r25, 0x0A	; 10
    1436:	0e 94 9d 05 	call	0xb3a	; 0xb3a <LiquidCrystal::send(unsigned char, unsigned char)>
print():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/Print.cpp:94
      int t = print('-');
      n = -n;
    143a:	66 27       	eor	r22, r22
    143c:	77 27       	eor	r23, r23
    143e:	cb 01       	movw	r24, r22
    1440:	6c 19       	sub	r22, r12
    1442:	7d 09       	sbc	r23, r13
    1444:	8e 09       	sbc	r24, r14
    1446:	9f 09       	sbc	r25, r15
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/Print.cpp:95
      return printNumber(n, 10) + t;
    1448:	4a e0       	ldi	r20, 0x0A	; 10
    144a:	0e 94 bf 09 	call	0x137e	; 0x137e <Print::printNumber(unsigned long, unsigned char) [clone .constprop.8]>
    144e:	01 96       	adiw	r24, 0x01	; 1
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/Print.cpp:80
}

size_t Print::print(int n, int base)
{
  return print((long) n, base);
}
    1450:	ff 90       	pop	r15
    1452:	ef 90       	pop	r14
    1454:	df 90       	pop	r13
    1456:	cf 90       	pop	r12
    1458:	08 95       	ret
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/Print.cpp:97
    if (n < 0) {
      int t = print('-');
      n = -n;
      return printNumber(n, 10) + t;
    }
    return printNumber(n, 10);
    145a:	4a e0       	ldi	r20, 0x0A	; 10
    145c:	c7 01       	movw	r24, r14
    145e:	b6 01       	movw	r22, r12
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/Print.cpp:80
}

size_t Print::print(int n, int base)
{
  return print((long) n, base);
}
    1460:	ff 90       	pop	r15
    1462:	ef 90       	pop	r14
    1464:	df 90       	pop	r13
    1466:	cf 90       	pop	r12
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/Print.cpp:97
    if (n < 0) {
      int t = print('-');
      n = -n;
      return printNumber(n, 10) + t;
    }
    return printNumber(n, 10);
    1468:	0c 94 bf 09 	jmp	0x137e	; 0x137e <Print::printNumber(unsigned long, unsigned char) [clone .constprop.8]>

0000146c <Print::print(char const*) [clone .constprop.9]>:
write():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/Print.h:54
    146c:	fc 01       	movw	r30, r24
    146e:	01 90       	ld	r0, Z+
    1470:	00 20       	and	r0, r0
    1472:	e9 f7       	brne	.-6      	; 0x146e <Print::print(char const*) [clone .constprop.9]+0x2>
    1474:	31 97       	sbiw	r30, 0x01	; 1
    1476:	af 01       	movw	r20, r30
    1478:	48 1b       	sub	r20, r24
    147a:	59 0b       	sbc	r21, r25
    147c:	bc 01       	movw	r22, r24
    147e:	8a eb       	ldi	r24, 0xBA	; 186
    1480:	9a e0       	ldi	r25, 0x0A	; 10
    1482:	0c 94 8f 03 	jmp	0x71e	; 0x71e <Print::write(unsigned char const*, unsigned int)>

00001486 <EEPROM_write_int(int, int)>:
EEPROM_write_int():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:194
    analogWrite(5, -right);
  }
}


void EEPROM_write_int(int address, int number) {
    1486:	1f 93       	push	r17
    1488:	cf 93       	push	r28
    148a:	df 93       	push	r29
    148c:	ec 01       	movw	r28, r24
    148e:	16 2f       	mov	r17, r22
    1490:	67 2f       	mov	r22, r23
operator=():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\EEPROM\src/EEPROM.h:47
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }

    //Assignment/write members.
    EERef &operator=( const EERef &ref ) { return *this = *ref; }
    EERef &operator=( uint8_t in )       { return eeprom_write_byte( (uint8_t*) index, in ), *this;  }
    1492:	0e 94 2a 33 	call	0x6654	; 0x6654 <eeprom_write_byte>
    1496:	61 2f       	mov	r22, r17
    1498:	ce 01       	movw	r24, r28
    149a:	01 96       	adiw	r24, 0x01	; 1
EEPROM_write_int():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:197
  EEPROM.write(address, number >> 8);
  EEPROM.write(address + 1, number & 0xFF);
}
    149c:	df 91       	pop	r29
    149e:	cf 91       	pop	r28
    14a0:	1f 91       	pop	r17
operator=():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\EEPROM\src/EEPROM.h:47
    14a2:	0c 94 2a 33 	jmp	0x6654	; 0x6654 <eeprom_write_byte>

000014a6 <EEPROM_read_int(int)>:
EEPROM_read_int():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:199

int EEPROM_read_int(int address) {
    14a6:	0f 93       	push	r16
    14a8:	1f 93       	push	r17
    14aa:	cf 93       	push	r28
    14ac:	8c 01       	movw	r16, r24
operator*():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\EEPROM\src/EEPROM.h:42

    EERef( const int index )
        : index( index )                 {}

    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    14ae:	0e 94 22 33 	call	0x6644	; 0x6644 <eeprom_read_byte>
    14b2:	c8 2f       	mov	r28, r24
    14b4:	c8 01       	movw	r24, r16
    14b6:	01 96       	adiw	r24, 0x01	; 1
    14b8:	0e 94 22 33 	call	0x6644	; 0x6644 <eeprom_read_byte>
EEPROM_read_int():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:201
  int result = 0;
  result = (EEPROM.read(address) << 8) + EEPROM.read(address + 1);
    14bc:	2c 2f       	mov	r18, r28
    14be:	30 e0       	ldi	r19, 0x00	; 0
    14c0:	32 2f       	mov	r19, r18
    14c2:	22 27       	eor	r18, r18
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:203
  return result;
}
    14c4:	82 0f       	add	r24, r18
    14c6:	93 2f       	mov	r25, r19
    14c8:	91 1d       	adc	r25, r1
    14ca:	cf 91       	pop	r28
    14cc:	1f 91       	pop	r17
    14ce:	0f 91       	pop	r16
    14d0:	08 95       	ret

000014d2 <color(char)>:
color():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:289
    delay(1000);
  }
  delay(500);
}

char color(char select) {
    14d2:	af 92       	push	r10
    14d4:	bf 92       	push	r11
    14d6:	cf 92       	push	r12
    14d8:	df 92       	push	r13
    14da:	ef 92       	push	r14
    14dc:	ff 92       	push	r15
    14de:	0f 93       	push	r16
    14e0:	1f 93       	push	r17
    14e2:	cf 93       	push	r28
    14e4:	df 93       	push	r29
    14e6:	d8 2e       	mov	r13, r24
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:291
  unsigned char low_byte, high_byte;
  if (select == 1)  // left
    14e8:	81 e0       	ldi	r24, 0x01	; 1
    14ea:	d8 12       	cpse	r13, r24
    14ec:	f5 c0       	rjmp	.+490    	; 0x16d8 <color(char)+0x206>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:293
  {
    digitalWrite(MUX_C, LOW);
    14ee:	60 e0       	ldi	r22, 0x00	; 0
    14f0:	8a e2       	ldi	r24, 0x2A	; 42
    14f2:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:294
    digitalWrite(MUX_B, LOW);
    14f6:	60 e0       	ldi	r22, 0x00	; 0
    14f8:	8b e2       	ldi	r24, 0x2B	; 43
    14fa:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:295
    digitalWrite(MUX_A, LOW);
    14fe:	60 e0       	ldi	r22, 0x00	; 0
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:301
    //  Serial.print("left color:  ");
  } else if (select == 2)  // right
  {
    digitalWrite(MUX_C, LOW);
    digitalWrite(MUX_B, LOW);
    digitalWrite(MUX_A, HIGH);
    1500:	8c e2       	ldi	r24, 0x2C	; 44
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:306
    //  Serial.print("right color:  ");
  } else {
    digitalWrite(MUX_A, HIGH);  //front
    digitalWrite(MUX_B, HIGH);
    digitalWrite(MUX_C, LOW);
    1502:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:308
  }
  delayMicroseconds(10);
    1506:	8a e0       	ldi	r24, 0x0A	; 10
    1508:	90 e0       	ldi	r25, 0x00	; 0
    150a:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <delayMicroseconds>
beginTransmission():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:208
  txBufferLength = 0;
}

void TwoWire::beginTransmission(int address)
{
  beginTransmission((uint8_t)address);
    150e:	89 e3       	ldi	r24, 0x39	; 57
    1510:	0e 94 a1 01 	call	0x342	; 0x342 <TwoWire::beginTransmission(unsigned char) [clone .constprop.17]>
color():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:311

  Wire.beginTransmission(57);  // transmit to device #57 (0x39)
  Wire.write(byte(0x80));
    1514:	60 e8       	ldi	r22, 0x80	; 128
    1516:	8e ea       	ldi	r24, 0xAE	; 174
    1518:	9a e0       	ldi	r25, 0x0A	; 10
    151a:	0e 94 24 05 	call	0xa48	; 0xa48 <TwoWire::write(unsigned char)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:312
  Wire.write(byte(3));  // power
    151e:	63 e0       	ldi	r22, 0x03	; 3
    1520:	8e ea       	ldi	r24, 0xAE	; 174
    1522:	9a e0       	ldi	r25, 0x0A	; 10
    1524:	0e 94 24 05 	call	0xa48	; 0xa48 <TwoWire::write(unsigned char)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:313
  Wire.endTransmission();
    1528:	0e 94 ab 01 	call	0x356	; 0x356 <TwoWire::endTransmission() [clone .constprop.13]>
beginTransmission():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:208
    152c:	89 e3       	ldi	r24, 0x39	; 57
    152e:	0e 94 a1 01 	call	0x342	; 0x342 <TwoWire::beginTransmission(unsigned char) [clone .constprop.17]>
color():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:316

  Wire.beginTransmission(57);  // transmit to device #57 (0x39)
  Wire.write(byte(0x8F));
    1532:	6f e8       	ldi	r22, 0x8F	; 143
    1534:	8e ea       	ldi	r24, 0xAE	; 174
    1536:	9a e0       	ldi	r25, 0x0A	; 10
    1538:	0e 94 24 05 	call	0xa48	; 0xa48 <TwoWire::write(unsigned char)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:317
  Wire.write(byte(1));  // gain
    153c:	61 e0       	ldi	r22, 0x01	; 1
    153e:	8e ea       	ldi	r24, 0xAE	; 174
    1540:	9a e0       	ldi	r25, 0x0A	; 10
    1542:	0e 94 24 05 	call	0xa48	; 0xa48 <TwoWire::write(unsigned char)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:318
  Wire.endTransmission();
    1546:	0e 94 ab 01 	call	0x356	; 0x356 <TwoWire::endTransmission() [clone .constprop.13]>
beginTransmission():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:208
    154a:	89 e3       	ldi	r24, 0x39	; 57
    154c:	0e 94 a1 01 	call	0x342	; 0x342 <TwoWire::beginTransmission(unsigned char) [clone .constprop.17]>
color():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:321

  Wire.beginTransmission(57);  // transmit to device #57 (0x39)
  Wire.write(byte(0x94));      // address of first data
    1550:	64 e9       	ldi	r22, 0x94	; 148
    1552:	8e ea       	ldi	r24, 0xAE	; 174
    1554:	9a e0       	ldi	r25, 0x0A	; 10
    1556:	0e 94 24 05 	call	0xa48	; 0xa48 <TwoWire::write(unsigned char)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:322
  Wire.endTransmission();
    155a:	0e 94 ab 01 	call	0x356	; 0x356 <TwoWire::endTransmission() [clone .constprop.13]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:324

  Wire.requestFrom(57, 8);
    155e:	68 e0       	ldi	r22, 0x08	; 8
    1560:	70 e0       	ldi	r23, 0x00	; 0
    1562:	89 e3       	ldi	r24, 0x39	; 57
    1564:	90 e0       	ldi	r25, 0x00	; 0
    1566:	0e 94 78 09 	call	0x12f0	; 0x12f0 <TwoWire::requestFrom(int, int) [clone .constprop.14]>
available():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:292
// must be called in:
// slave rx event callback
// or after requestFrom(address, numBytes)
int TwoWire::available(void)
{
  return rxBufferLength - rxBufferIndex;
    156a:	80 91 36 09 	lds	r24, 0x0936	; 0x800936 <TwoWire::rxBufferLength>
    156e:	90 91 37 09 	lds	r25, 0x0937	; 0x800937 <TwoWire::rxBufferIndex>
    1572:	89 1b       	sub	r24, r25
    1574:	99 0b       	sbc	r25, r25
color():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:325
  if (8 <= Wire.available())  // if 8 bytes were received
    1576:	08 97       	sbiw	r24, 0x08	; 8
    1578:	d4 f1       	brlt	.+116    	; 0x15ee <color(char)+0x11c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:327
  {
    low_byte = Wire.read();
    157a:	0e 94 36 01 	call	0x26c	; 0x26c <TwoWire::read() [clone .constprop.22]>
    157e:	ec 01       	movw	r28, r24
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:328
    high_byte = Wire.read();
    1580:	0e 94 36 01 	call	0x26c	; 0x26c <TwoWire::read() [clone .constprop.22]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:329
    clear = high_byte * 255 + low_byte;
    1584:	1f ef       	ldi	r17, 0xFF	; 255
    1586:	dd 27       	eor	r29, r29
    1588:	81 9f       	mul	r24, r17
    158a:	c0 0d       	add	r28, r0
    158c:	d1 1d       	adc	r29, r1
    158e:	11 24       	eor	r1, r1
    1590:	d0 93 c4 08 	sts	0x08C4, r29	; 0x8008c4 <clear+0x1>
    1594:	c0 93 c3 08 	sts	0x08C3, r28	; 0x8008c3 <clear>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:331

    low_byte = Wire.read();
    1598:	0e 94 36 01 	call	0x26c	; 0x26c <TwoWire::read() [clone .constprop.22]>
    159c:	ec 01       	movw	r28, r24
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:332
    high_byte = Wire.read();
    159e:	0e 94 36 01 	call	0x26c	; 0x26c <TwoWire::read() [clone .constprop.22]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:333
    red = high_byte * 255 + low_byte;
    15a2:	dd 27       	eor	r29, r29
    15a4:	81 9f       	mul	r24, r17
    15a6:	c0 0d       	add	r28, r0
    15a8:	d1 1d       	adc	r29, r1
    15aa:	11 24       	eor	r1, r1
    15ac:	d0 93 ca 08 	sts	0x08CA, r29	; 0x8008ca <red+0x1>
    15b0:	c0 93 c9 08 	sts	0x08C9, r28	; 0x8008c9 <red>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:335

    low_byte = Wire.read();
    15b4:	0e 94 36 01 	call	0x26c	; 0x26c <TwoWire::read() [clone .constprop.22]>
    15b8:	ec 01       	movw	r28, r24
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:336
    high_byte = Wire.read();
    15ba:	0e 94 36 01 	call	0x26c	; 0x26c <TwoWire::read() [clone .constprop.22]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:337
    green = high_byte * 255 + low_byte;
    15be:	dd 27       	eor	r29, r29
    15c0:	81 9f       	mul	r24, r17
    15c2:	c0 0d       	add	r28, r0
    15c4:	d1 1d       	adc	r29, r1
    15c6:	11 24       	eor	r1, r1
    15c8:	d0 93 c8 08 	sts	0x08C8, r29	; 0x8008c8 <green+0x1>
    15cc:	c0 93 c7 08 	sts	0x08C7, r28	; 0x8008c7 <green>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:339

    low_byte = Wire.read();
    15d0:	0e 94 36 01 	call	0x26c	; 0x26c <TwoWire::read() [clone .constprop.22]>
    15d4:	ec 01       	movw	r28, r24
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:340
    high_byte = Wire.read();
    15d6:	0e 94 36 01 	call	0x26c	; 0x26c <TwoWire::read() [clone .constprop.22]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:341
    blue = (high_byte * 255 + low_byte) - 10;
    15da:	dd 27       	eor	r29, r29
    15dc:	81 9f       	mul	r24, r17
    15de:	c0 0d       	add	r28, r0
    15e0:	d1 1d       	adc	r29, r1
    15e2:	11 24       	eor	r1, r1
    15e4:	2a 97       	sbiw	r28, 0x0a	; 10
    15e6:	d0 93 c6 08 	sts	0x08C6, r29	; 0x8008c6 <blue+0x1>
    15ea:	c0 93 c5 08 	sts	0x08C5, r28	; 0x8008c5 <blue>
    15ee:	e0 90 c9 08 	lds	r14, 0x08C9	; 0x8008c9 <red>
    15f2:	f0 90 ca 08 	lds	r15, 0x08CA	; 0x8008ca <red+0x1>
    15f6:	00 91 c7 08 	lds	r16, 0x08C7	; 0x8008c7 <green>
    15fa:	10 91 c8 08 	lds	r17, 0x08C8	; 0x8008c8 <green+0x1>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:344
  }

  if (select == 1)  // left
    15fe:	81 e0       	ldi	r24, 0x01	; 1
    1600:	d8 12       	cpse	r13, r24
    1602:	b1 c1       	rjmp	.+866    	; 0x1966 <color(char)+0x494>
    1604:	c0 90 c5 08 	lds	r12, 0x08C5	; 0x8008c5 <blue>
    1608:	d0 90 c6 08 	lds	r13, 0x08C6	; 0x8008c6 <blue+0x1>
    160c:	8a e9       	ldi	r24, 0x9A	; 154
    160e:	90 e0       	ldi	r25, 0x00	; 0
    1610:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    1614:	ec 01       	movw	r28, r24
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:346
  {
    if (red > green && red > blue && red < EEPROM_read_int(red_left_r) + range && red > EEPROM_read_int(red_left_r) - range && green < EEPROM_read_int(red_left_g) + range && green > EEPROM_read_int(red_left_g) - range && blue < EEPROM_read_int(red_left_b) + range && blue > EEPROM_read_int(red_left_b) - range && clear < EEPROM_read_int(red_left_c) + range && clear > EEPROM_read_int(red_left_c) - range)
    1616:	0e 15       	cp	r16, r14
    1618:	1f 05       	cpc	r17, r15
    161a:	0c f0       	brlt	.+2      	; 0x161e <color(char)+0x14c>
    161c:	75 c0       	rjmp	.+234    	; 0x1708 <color(char)+0x236>
    161e:	ce 14       	cp	r12, r14
    1620:	df 04       	cpc	r13, r15
    1622:	0c f0       	brlt	.+2      	; 0x1626 <color(char)+0x154>
    1624:	ba c0       	rjmp	.+372    	; 0x179a <color(char)+0x2c8>
    1626:	84 e1       	ldi	r24, 0x14	; 20
    1628:	90 e0       	ldi	r25, 0x00	; 0
    162a:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    162e:	9c 01       	movw	r18, r24
    1630:	2c 0f       	add	r18, r28
    1632:	3d 1f       	adc	r19, r29
    1634:	e2 16       	cp	r14, r18
    1636:	f3 06       	cpc	r15, r19
    1638:	0c f0       	brlt	.+2      	; 0x163c <color(char)+0x16a>
    163a:	b3 c0       	rjmp	.+358    	; 0x17a2 <color(char)+0x2d0>
    163c:	8c 1b       	sub	r24, r28
    163e:	9d 0b       	sbc	r25, r29
    1640:	8e 15       	cp	r24, r14
    1642:	9f 05       	cpc	r25, r15
    1644:	0c f0       	brlt	.+2      	; 0x1648 <color(char)+0x176>
    1646:	ad c0       	rjmp	.+346    	; 0x17a2 <color(char)+0x2d0>
    1648:	86 e1       	ldi	r24, 0x16	; 22
    164a:	90 e0       	ldi	r25, 0x00	; 0
    164c:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    1650:	9c 01       	movw	r18, r24
    1652:	2c 0f       	add	r18, r28
    1654:	3d 1f       	adc	r19, r29
    1656:	02 17       	cp	r16, r18
    1658:	13 07       	cpc	r17, r19
    165a:	0c f0       	brlt	.+2      	; 0x165e <color(char)+0x18c>
    165c:	a2 c0       	rjmp	.+324    	; 0x17a2 <color(char)+0x2d0>
    165e:	8c 1b       	sub	r24, r28
    1660:	9d 0b       	sbc	r25, r29
    1662:	80 17       	cp	r24, r16
    1664:	91 07       	cpc	r25, r17
    1666:	0c f0       	brlt	.+2      	; 0x166a <color(char)+0x198>
    1668:	9c c0       	rjmp	.+312    	; 0x17a2 <color(char)+0x2d0>
    166a:	88 e1       	ldi	r24, 0x18	; 24
    166c:	90 e0       	ldi	r25, 0x00	; 0
    166e:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    1672:	9c 01       	movw	r18, r24
    1674:	2c 0f       	add	r18, r28
    1676:	3d 1f       	adc	r19, r29
    1678:	c2 16       	cp	r12, r18
    167a:	d3 06       	cpc	r13, r19
    167c:	0c f0       	brlt	.+2      	; 0x1680 <color(char)+0x1ae>
    167e:	91 c0       	rjmp	.+290    	; 0x17a2 <color(char)+0x2d0>
    1680:	8c 1b       	sub	r24, r28
    1682:	9d 0b       	sbc	r25, r29
    1684:	8c 15       	cp	r24, r12
    1686:	9d 05       	cpc	r25, r13
    1688:	0c f0       	brlt	.+2      	; 0x168c <color(char)+0x1ba>
    168a:	8b c0       	rjmp	.+278    	; 0x17a2 <color(char)+0x2d0>
    168c:	8a e1       	ldi	r24, 0x1A	; 26
    168e:	90 e0       	ldi	r25, 0x00	; 0
    1690:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    1694:	20 91 c3 08 	lds	r18, 0x08C3	; 0x8008c3 <clear>
    1698:	30 91 c4 08 	lds	r19, 0x08C4	; 0x8008c4 <clear+0x1>
    169c:	ac 01       	movw	r20, r24
    169e:	4c 0f       	add	r20, r28
    16a0:	5d 1f       	adc	r21, r29
    16a2:	24 17       	cp	r18, r20
    16a4:	35 07       	cpc	r19, r21
    16a6:	0c f0       	brlt	.+2      	; 0x16aa <color(char)+0x1d8>
    16a8:	7c c0       	rjmp	.+248    	; 0x17a2 <color(char)+0x2d0>
    16aa:	8c 1b       	sub	r24, r28
    16ac:	9d 0b       	sbc	r25, r29
    16ae:	82 17       	cp	r24, r18
    16b0:	93 07       	cpc	r25, r19
    16b2:	0c f0       	brlt	.+2      	; 0x16b6 <color(char)+0x1e4>
    16b4:	76 c0       	rjmp	.+236    	; 0x17a2 <color(char)+0x2d0>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:393

    return color_out;
  } else if (select == 3)  // front
  {
    if (red > green && red > blue && red < EEPROM_read_int(red_front_r) + range && red > EEPROM_read_int(red_front_r) - range && green < EEPROM_read_int(red_front_g) + range && green > EEPROM_read_int(red_front_g) - range && blue < EEPROM_read_int(red_front_b) + range && blue > EEPROM_read_int(red_front_b) - range && clear < EEPROM_read_int(red_front_c) + range && clear > EEPROM_read_int(red_front_c) - range)
      color_out = RED;
    16b6:	10 92 7b 08 	sts	0x087B, r1	; 0x80087b <color_out+0x1>
    16ba:	10 92 7a 08 	sts	0x087A, r1	; 0x80087a <color_out>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:401
      color_out = GREEN;

    else
      color_out = WHITE;

    return color_out;
    16be:	80 91 7a 08 	lds	r24, 0x087A	; 0x80087a <color_out>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:404
  }
  // delay(5);
}
    16c2:	df 91       	pop	r29
    16c4:	cf 91       	pop	r28
    16c6:	1f 91       	pop	r17
    16c8:	0f 91       	pop	r16
    16ca:	ff 90       	pop	r15
    16cc:	ef 90       	pop	r14
    16ce:	df 90       	pop	r13
    16d0:	cf 90       	pop	r12
    16d2:	bf 90       	pop	r11
    16d4:	af 90       	pop	r10
    16d6:	08 95       	ret
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:297
  {
    digitalWrite(MUX_C, LOW);
    digitalWrite(MUX_B, LOW);
    digitalWrite(MUX_A, LOW);
    //  Serial.print("left color:  ");
  } else if (select == 2)  // right
    16d8:	82 e0       	ldi	r24, 0x02	; 2
    16da:	d8 12       	cpse	r13, r24
    16dc:	0a c0       	rjmp	.+20     	; 0x16f2 <color(char)+0x220>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:299
  {
    digitalWrite(MUX_C, LOW);
    16de:	60 e0       	ldi	r22, 0x00	; 0
    16e0:	8a e2       	ldi	r24, 0x2A	; 42
    16e2:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:300
    digitalWrite(MUX_B, LOW);
    16e6:	60 e0       	ldi	r22, 0x00	; 0
    16e8:	8b e2       	ldi	r24, 0x2B	; 43
    16ea:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:301
    digitalWrite(MUX_A, HIGH);
    16ee:	61 e0       	ldi	r22, 0x01	; 1
    16f0:	07 cf       	rjmp	.-498    	; 0x1500 <color(char)+0x2e>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:304
    //  Serial.print("right color:  ");
  } else {
    digitalWrite(MUX_A, HIGH);  //front
    16f2:	61 e0       	ldi	r22, 0x01	; 1
    16f4:	8c e2       	ldi	r24, 0x2C	; 44
    16f6:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:305
    digitalWrite(MUX_B, HIGH);
    16fa:	61 e0       	ldi	r22, 0x01	; 1
    16fc:	8b e2       	ldi	r24, 0x2B	; 43
    16fe:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:306
    digitalWrite(MUX_C, LOW);
    1702:	60 e0       	ldi	r22, 0x00	; 0
    1704:	8a e2       	ldi	r24, 0x2A	; 42
    1706:	fd ce       	rjmp	.-518    	; 0x1502 <color(char)+0x30>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:350
  {
    if (red > green && red > blue && red < EEPROM_read_int(red_left_r) + range && red > EEPROM_read_int(red_left_r) - range && green < EEPROM_read_int(red_left_g) + range && green > EEPROM_read_int(red_left_g) - range && blue < EEPROM_read_int(red_left_b) + range && blue > EEPROM_read_int(red_left_b) - range && clear < EEPROM_read_int(red_left_c) + range && clear > EEPROM_read_int(red_left_c) - range)
      color_out = RED;

    //else if (green > red && green > blue && red < EEPROM_read_int(green_left_r) + range && red > EEPROM_read_int(green_left_r) - range && green > EEPROM_read_int(green_left_g)-range/2 && green < EEPROM_read_int(green_left_g) + range && blue < EEPROM_read_int(green_left_b) + range && blue > EEPROM_read_int(green_left_b) - range /*&& clear < EEPROM_read_int(green_left_c) + range*/ && clear > EEPROM_read_int(green_left_c) - range/2)
    else if (green > red && green > blue && red < EEPROM_read_int(green_left_r) + range && red > EEPROM_read_int(green_left_r) - range && green < EEPROM_read_int(green_left_g) + range && green > EEPROM_read_int(green_left_g) - range && blue < EEPROM_read_int(green_left_b) + range && blue > EEPROM_read_int(green_left_b) - range && clear < EEPROM_read_int(green_left_c) + range && clear > EEPROM_read_int(green_left_c) - range) { color_out = GREEN; }  //beep(1);}
    1708:	e0 16       	cp	r14, r16
    170a:	f1 06       	cpc	r15, r17
    170c:	0c f0       	brlt	.+2      	; 0x1710 <color(char)+0x23e>
    170e:	45 c0       	rjmp	.+138    	; 0x179a <color(char)+0x2c8>
    1710:	c0 16       	cp	r12, r16
    1712:	d1 06       	cpc	r13, r17
    1714:	0c f0       	brlt	.+2      	; 0x1718 <color(char)+0x246>
    1716:	41 c0       	rjmp	.+130    	; 0x179a <color(char)+0x2c8>
    1718:	8c e1       	ldi	r24, 0x1C	; 28
    171a:	90 e0       	ldi	r25, 0x00	; 0
    171c:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    1720:	9c 01       	movw	r18, r24
    1722:	2c 0f       	add	r18, r28
    1724:	3d 1f       	adc	r19, r29
    1726:	e2 16       	cp	r14, r18
    1728:	f3 06       	cpc	r15, r19
    172a:	bc f5       	brge	.+110    	; 0x179a <color(char)+0x2c8>
    172c:	8c 1b       	sub	r24, r28
    172e:	9d 0b       	sbc	r25, r29
    1730:	8e 15       	cp	r24, r14
    1732:	9f 05       	cpc	r25, r15
    1734:	94 f5       	brge	.+100    	; 0x179a <color(char)+0x2c8>
    1736:	8e e1       	ldi	r24, 0x1E	; 30
    1738:	90 e0       	ldi	r25, 0x00	; 0
    173a:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    173e:	9c 01       	movw	r18, r24
    1740:	2c 0f       	add	r18, r28
    1742:	3d 1f       	adc	r19, r29
    1744:	02 17       	cp	r16, r18
    1746:	13 07       	cpc	r17, r19
    1748:	44 f5       	brge	.+80     	; 0x179a <color(char)+0x2c8>
    174a:	8c 1b       	sub	r24, r28
    174c:	9d 0b       	sbc	r25, r29
    174e:	80 17       	cp	r24, r16
    1750:	91 07       	cpc	r25, r17
    1752:	1c f5       	brge	.+70     	; 0x179a <color(char)+0x2c8>
    1754:	80 e2       	ldi	r24, 0x20	; 32
    1756:	90 e0       	ldi	r25, 0x00	; 0
    1758:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    175c:	9e 01       	movw	r18, r28
    175e:	28 0f       	add	r18, r24
    1760:	39 1f       	adc	r19, r25
    1762:	c2 16       	cp	r12, r18
    1764:	d3 06       	cpc	r13, r19
    1766:	cc f4       	brge	.+50     	; 0x179a <color(char)+0x2c8>
    1768:	8c 1b       	sub	r24, r28
    176a:	9d 0b       	sbc	r25, r29
    176c:	8c 15       	cp	r24, r12
    176e:	9d 05       	cpc	r25, r13
    1770:	a4 f4       	brge	.+40     	; 0x179a <color(char)+0x2c8>
    1772:	82 e2       	ldi	r24, 0x22	; 34
    1774:	90 e0       	ldi	r25, 0x00	; 0
    1776:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    177a:	20 91 c3 08 	lds	r18, 0x08C3	; 0x8008c3 <clear>
    177e:	30 91 c4 08 	lds	r19, 0x08C4	; 0x8008c4 <clear+0x1>
    1782:	ae 01       	movw	r20, r28
    1784:	48 0f       	add	r20, r24
    1786:	59 1f       	adc	r21, r25
    1788:	24 17       	cp	r18, r20
    178a:	35 07       	cpc	r19, r21
    178c:	34 f4       	brge	.+12     	; 0x179a <color(char)+0x2c8>
    178e:	8c 1b       	sub	r24, r28
    1790:	9d 0b       	sbc	r25, r29
    1792:	82 17       	cp	r24, r18
    1794:	93 07       	cpc	r25, r19
    1796:	0c f4       	brge	.+2      	; 0x179a <color(char)+0x2c8>
    1798:	1d c2       	rjmp	.+1082   	; 0x1bd4 <color(char)+0x702>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:352

    else if (blue > red && blue > green && red < EEPROM_read_int(blue_left_r) + range && red > EEPROM_read_int(blue_left_r) - range && green < EEPROM_read_int(blue_left_g) + range && green > EEPROM_read_int(blue_left_g) - range && blue < EEPROM_read_int(blue_left_b) + range && blue > EEPROM_read_int(blue_left_b) - range && clear < EEPROM_read_int(blue_left_c) + range && clear > EEPROM_read_int(blue_left_c) - range)
    179a:	ec 14       	cp	r14, r12
    179c:	fd 04       	cpc	r15, r13
    179e:	0c f4       	brge	.+2      	; 0x17a2 <color(char)+0x2d0>
    17a0:	4f c0       	rjmp	.+158    	; 0x1840 <color(char)+0x36e>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:355
      color_out = BLUE;

    else if (red < EEPROM_read_int(yellow_left_r) + range && red > EEPROM_read_int(yellow_left_r) - range && green < EEPROM_read_int(yellow_left_g) + range && green > EEPROM_read_int(yellow_left_g) - range && blue < EEPROM_read_int(yellow_left_b) + range && blue > EEPROM_read_int(yellow_left_b) - range && clear < EEPROM_read_int(yellow_left_c) + range && clear > EEPROM_read_int(yellow_left_c) - range)
    17a2:	8c e2       	ldi	r24, 0x2C	; 44
    17a4:	90 e0       	ldi	r25, 0x00	; 0
    17a6:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    17aa:	9e 01       	movw	r18, r28
    17ac:	28 0f       	add	r18, r24
    17ae:	39 1f       	adc	r19, r25
    17b0:	e2 16       	cp	r14, r18
    17b2:	f3 06       	cpc	r15, r19
    17b4:	0c f4       	brge	.+2      	; 0x17b8 <color(char)+0x2e6>
    17b6:	97 c0       	rjmp	.+302    	; 0x18e6 <color(char)+0x414>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:359
      color_out = YELLOW;

    else if (
      red <= (EEPROM_read_int(silver_left_r) + range) && red >= (EEPROM_read_int(silver_left_r) - range) && green >= (EEPROM_read_int(silver_left_g) - range) && green <= (EEPROM_read_int(silver_left_g) + range) && blue >= (EEPROM_read_int(silver_left_b) - range) && blue <= (EEPROM_read_int(silver_left_b) + range) && clear <= (EEPROM_read_int(silver_left_c) + range) && clear >= (EEPROM_read_int(silver_left_c) - range)) {
    17b8:	84 e3       	ldi	r24, 0x34	; 52
    17ba:	90 e0       	ldi	r25, 0x00	; 0
    17bc:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    17c0:	9e 01       	movw	r18, r28
    17c2:	28 0f       	add	r18, r24
    17c4:	39 1f       	adc	r19, r25
    17c6:	2e 15       	cp	r18, r14
    17c8:	3f 05       	cpc	r19, r15
    17ca:	bc f1       	brlt	.+110    	; 0x183a <color(char)+0x368>
    17cc:	8c 1b       	sub	r24, r28
    17ce:	9d 0b       	sbc	r25, r29
    17d0:	e8 16       	cp	r14, r24
    17d2:	f9 06       	cpc	r15, r25
    17d4:	94 f1       	brlt	.+100    	; 0x183a <color(char)+0x368>
    17d6:	86 e3       	ldi	r24, 0x36	; 54
    17d8:	90 e0       	ldi	r25, 0x00	; 0
    17da:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    17de:	9c 01       	movw	r18, r24
    17e0:	2c 1b       	sub	r18, r28
    17e2:	3d 0b       	sbc	r19, r29
    17e4:	02 17       	cp	r16, r18
    17e6:	13 07       	cpc	r17, r19
    17e8:	44 f1       	brlt	.+80     	; 0x183a <color(char)+0x368>
    17ea:	8c 0f       	add	r24, r28
    17ec:	9d 1f       	adc	r25, r29
    17ee:	80 17       	cp	r24, r16
    17f0:	91 07       	cpc	r25, r17
    17f2:	1c f1       	brlt	.+70     	; 0x183a <color(char)+0x368>
    17f4:	88 e3       	ldi	r24, 0x38	; 56
    17f6:	90 e0       	ldi	r25, 0x00	; 0
    17f8:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    17fc:	9c 01       	movw	r18, r24
    17fe:	2c 1b       	sub	r18, r28
    1800:	3d 0b       	sbc	r19, r29
    1802:	c2 16       	cp	r12, r18
    1804:	d3 06       	cpc	r13, r19
    1806:	cc f0       	brlt	.+50     	; 0x183a <color(char)+0x368>
    1808:	8c 0f       	add	r24, r28
    180a:	9d 1f       	adc	r25, r29
    180c:	8c 15       	cp	r24, r12
    180e:	9d 05       	cpc	r25, r13
    1810:	a4 f0       	brlt	.+40     	; 0x183a <color(char)+0x368>
    1812:	8a e3       	ldi	r24, 0x3A	; 58
    1814:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:382

    else if (red < EEPROM_read_int(yellow_right_r) + range && red > EEPROM_read_int(yellow_right_r) - range && green < EEPROM_read_int(yellow_right_g) + range && green > EEPROM_read_int(yellow_right_g) - range && blue < EEPROM_read_int(yellow_right_b) + range && blue > EEPROM_read_int(yellow_right_b) - range && clear < EEPROM_read_int(yellow_right_c) + range && clear > EEPROM_read_int(yellow_right_c) - range)
      color_out = YELLOW;

    else if (
      red <= (EEPROM_read_int(silver_right_r) + range) && red >= (EEPROM_read_int(silver_right_r) - range) && green >= (EEPROM_read_int(silver_right_g) - range) && green <= (EEPROM_read_int(silver_right_g) + range) && blue >= (EEPROM_read_int(silver_right_b) - range) && blue <= (EEPROM_read_int(silver_right_b) + range) && clear <= (EEPROM_read_int(silver_right_c) + range) && clear >= (EEPROM_read_int(silver_right_c) - range)) {
    1816:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    181a:	20 91 c3 08 	lds	r18, 0x08C3	; 0x8008c3 <clear>
    181e:	30 91 c4 08 	lds	r19, 0x08C4	; 0x8008c4 <clear+0x1>
    1822:	ae 01       	movw	r20, r28
    1824:	48 0f       	add	r20, r24
    1826:	59 1f       	adc	r21, r25
    1828:	42 17       	cp	r20, r18
    182a:	53 07       	cpc	r21, r19
    182c:	34 f0       	brlt	.+12     	; 0x183a <color(char)+0x368>
    182e:	8c 1b       	sub	r24, r28
    1830:	9d 0b       	sbc	r25, r29
    1832:	28 17       	cp	r18, r24
    1834:	39 07       	cpc	r19, r25
    1836:	0c f0       	brlt	.+2      	; 0x183a <color(char)+0x368>
    1838:	0e c2       	rjmp	.+1052   	; 0x1c56 <color(char)+0x784>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:399

    else if (green > red && green > blue && red < EEPROM_read_int(green_front_r) + range && red > EEPROM_read_int(green_front_r) - range && green < EEPROM_read_int(green_front_g) + range && green > EEPROM_read_int(green_front_g) - range && blue < EEPROM_read_int(green_front_b) + range && blue > EEPROM_read_int(green_front_b) - range && clear < EEPROM_read_int(green_front_c) + range && clear > EEPROM_read_int(green_front_c) - range)
      color_out = GREEN;

    else
      color_out = WHITE;
    183a:	87 e0       	ldi	r24, 0x07	; 7
    183c:	90 e0       	ldi	r25, 0x00	; 0
    183e:	4e c0       	rjmp	.+156    	; 0x18dc <color(char)+0x40a>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:352
      color_out = RED;

    //else if (green > red && green > blue && red < EEPROM_read_int(green_left_r) + range && red > EEPROM_read_int(green_left_r) - range && green > EEPROM_read_int(green_left_g)-range/2 && green < EEPROM_read_int(green_left_g) + range && blue < EEPROM_read_int(green_left_b) + range && blue > EEPROM_read_int(green_left_b) - range /*&& clear < EEPROM_read_int(green_left_c) + range*/ && clear > EEPROM_read_int(green_left_c) - range/2)
    else if (green > red && green > blue && red < EEPROM_read_int(green_left_r) + range && red > EEPROM_read_int(green_left_r) - range && green < EEPROM_read_int(green_left_g) + range && green > EEPROM_read_int(green_left_g) - range && blue < EEPROM_read_int(green_left_b) + range && blue > EEPROM_read_int(green_left_b) - range && clear < EEPROM_read_int(green_left_c) + range && clear > EEPROM_read_int(green_left_c) - range) { color_out = GREEN; }  //beep(1);}

    else if (blue > red && blue > green && red < EEPROM_read_int(blue_left_r) + range && red > EEPROM_read_int(blue_left_r) - range && green < EEPROM_read_int(blue_left_g) + range && green > EEPROM_read_int(blue_left_g) - range && blue < EEPROM_read_int(blue_left_b) + range && blue > EEPROM_read_int(blue_left_b) - range && clear < EEPROM_read_int(blue_left_c) + range && clear > EEPROM_read_int(blue_left_c) - range)
    1840:	0c 15       	cp	r16, r12
    1842:	1d 05       	cpc	r17, r13
    1844:	0c f0       	brlt	.+2      	; 0x1848 <color(char)+0x376>
    1846:	ad cf       	rjmp	.-166    	; 0x17a2 <color(char)+0x2d0>
    1848:	84 e2       	ldi	r24, 0x24	; 36
    184a:	90 e0       	ldi	r25, 0x00	; 0
    184c:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    1850:	9e 01       	movw	r18, r28
    1852:	28 0f       	add	r18, r24
    1854:	39 1f       	adc	r19, r25
    1856:	e2 16       	cp	r14, r18
    1858:	f3 06       	cpc	r15, r19
    185a:	0c f0       	brlt	.+2      	; 0x185e <color(char)+0x38c>
    185c:	a2 cf       	rjmp	.-188    	; 0x17a2 <color(char)+0x2d0>
    185e:	8c 1b       	sub	r24, r28
    1860:	9d 0b       	sbc	r25, r29
    1862:	8e 15       	cp	r24, r14
    1864:	9f 05       	cpc	r25, r15
    1866:	0c f0       	brlt	.+2      	; 0x186a <color(char)+0x398>
    1868:	9c cf       	rjmp	.-200    	; 0x17a2 <color(char)+0x2d0>
    186a:	86 e2       	ldi	r24, 0x26	; 38
    186c:	90 e0       	ldi	r25, 0x00	; 0
    186e:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    1872:	9e 01       	movw	r18, r28
    1874:	28 0f       	add	r18, r24
    1876:	39 1f       	adc	r19, r25
    1878:	02 17       	cp	r16, r18
    187a:	13 07       	cpc	r17, r19
    187c:	0c f0       	brlt	.+2      	; 0x1880 <color(char)+0x3ae>
    187e:	91 cf       	rjmp	.-222    	; 0x17a2 <color(char)+0x2d0>
    1880:	8c 1b       	sub	r24, r28
    1882:	9d 0b       	sbc	r25, r29
    1884:	80 17       	cp	r24, r16
    1886:	91 07       	cpc	r25, r17
    1888:	0c f0       	brlt	.+2      	; 0x188c <color(char)+0x3ba>
    188a:	8b cf       	rjmp	.-234    	; 0x17a2 <color(char)+0x2d0>
    188c:	88 e2       	ldi	r24, 0x28	; 40
    188e:	90 e0       	ldi	r25, 0x00	; 0
    1890:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    1894:	9e 01       	movw	r18, r28
    1896:	28 0f       	add	r18, r24
    1898:	39 1f       	adc	r19, r25
    189a:	c2 16       	cp	r12, r18
    189c:	d3 06       	cpc	r13, r19
    189e:	0c f0       	brlt	.+2      	; 0x18a2 <color(char)+0x3d0>
    18a0:	80 cf       	rjmp	.-256    	; 0x17a2 <color(char)+0x2d0>
    18a2:	8c 1b       	sub	r24, r28
    18a4:	9d 0b       	sbc	r25, r29
    18a6:	8c 15       	cp	r24, r12
    18a8:	9d 05       	cpc	r25, r13
    18aa:	0c f0       	brlt	.+2      	; 0x18ae <color(char)+0x3dc>
    18ac:	7a cf       	rjmp	.-268    	; 0x17a2 <color(char)+0x2d0>
    18ae:	8a e2       	ldi	r24, 0x2A	; 42
    18b0:	90 e0       	ldi	r25, 0x00	; 0
    18b2:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    18b6:	20 91 c3 08 	lds	r18, 0x08C3	; 0x8008c3 <clear>
    18ba:	30 91 c4 08 	lds	r19, 0x08C4	; 0x8008c4 <clear+0x1>
    18be:	ae 01       	movw	r20, r28
    18c0:	48 0f       	add	r20, r24
    18c2:	59 1f       	adc	r21, r25
    18c4:	24 17       	cp	r18, r20
    18c6:	35 07       	cpc	r19, r21
    18c8:	0c f0       	brlt	.+2      	; 0x18cc <color(char)+0x3fa>
    18ca:	6b cf       	rjmp	.-298    	; 0x17a2 <color(char)+0x2d0>
    18cc:	8c 1b       	sub	r24, r28
    18ce:	9d 0b       	sbc	r25, r29
    18d0:	82 17       	cp	r24, r18
    18d2:	93 07       	cpc	r25, r19
    18d4:	0c f0       	brlt	.+2      	; 0x18d8 <color(char)+0x406>
    18d6:	65 cf       	rjmp	.-310    	; 0x17a2 <color(char)+0x2d0>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:376
    //else if (green > red && green > blue && red < EEPROM_read_int(green_right_r) + range && red > EEPROM_read_int(green_right_r) - range && green > EEPROM_read_int(green_right_g)-range/2 && green < EEPROM_read_int(green_right_g) + range && blue < EEPROM_read_int(green_right_b) + range && blue > EEPROM_read_int(green_right_b) - range /*&&  clear < EEPROM_read_int(green_right_c) + range */ && clear > EEPROM_read_int(green_right_c) - range/2)
    else if (green > red && green > blue && red < EEPROM_read_int(green_right_r) + range && red > EEPROM_read_int(green_right_r) - range && green < EEPROM_read_int(green_right_g) + range && green > EEPROM_read_int(green_right_g) - range && blue < EEPROM_read_int(green_right_b) + range && blue > EEPROM_read_int(green_right_b) - range && clear < EEPROM_read_int(green_right_c) + range && clear > EEPROM_read_int(green_right_c) - range)
      color_out = GREEN;

    else if (blue > red && blue > green && red < EEPROM_read_int(blue_right_r) + range && red > EEPROM_read_int(blue_right_r) - range && green < EEPROM_read_int(blue_right_g) + range && green > EEPROM_read_int(blue_right_g) - range && blue < EEPROM_read_int(blue_right_b) + range && blue > EEPROM_read_int(blue_right_b) - range && clear < EEPROM_read_int(blue_right_c) + range && clear > EEPROM_read_int(blue_right_c) - range)
      color_out = BLUE;
    18d8:	82 e0       	ldi	r24, 0x02	; 2
    18da:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:396
  {
    if (red > green && red > blue && red < EEPROM_read_int(red_front_r) + range && red > EEPROM_read_int(red_front_r) - range && green < EEPROM_read_int(red_front_g) + range && green > EEPROM_read_int(red_front_g) - range && blue < EEPROM_read_int(red_front_b) + range && blue > EEPROM_read_int(red_front_b) - range && clear < EEPROM_read_int(red_front_c) + range && clear > EEPROM_read_int(red_front_c) - range)
      color_out = RED;

    else if (green > red && green > blue && red < EEPROM_read_int(green_front_r) + range && red > EEPROM_read_int(green_front_r) - range && green < EEPROM_read_int(green_front_g) + range && green > EEPROM_read_int(green_front_g) - range && blue < EEPROM_read_int(green_front_b) + range && blue > EEPROM_read_int(green_front_b) - range && clear < EEPROM_read_int(green_front_c) + range && clear > EEPROM_read_int(green_front_c) - range)
      color_out = GREEN;
    18dc:	90 93 7b 08 	sts	0x087B, r25	; 0x80087b <color_out+0x1>
    18e0:	80 93 7a 08 	sts	0x087A, r24	; 0x80087a <color_out>
    18e4:	ec ce       	rjmp	.-552    	; 0x16be <color(char)+0x1ec>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:355
    else if (green > red && green > blue && red < EEPROM_read_int(green_left_r) + range && red > EEPROM_read_int(green_left_r) - range && green < EEPROM_read_int(green_left_g) + range && green > EEPROM_read_int(green_left_g) - range && blue < EEPROM_read_int(green_left_b) + range && blue > EEPROM_read_int(green_left_b) - range && clear < EEPROM_read_int(green_left_c) + range && clear > EEPROM_read_int(green_left_c) - range) { color_out = GREEN; }  //beep(1);}

    else if (blue > red && blue > green && red < EEPROM_read_int(blue_left_r) + range && red > EEPROM_read_int(blue_left_r) - range && green < EEPROM_read_int(blue_left_g) + range && green > EEPROM_read_int(blue_left_g) - range && blue < EEPROM_read_int(blue_left_b) + range && blue > EEPROM_read_int(blue_left_b) - range && clear < EEPROM_read_int(blue_left_c) + range && clear > EEPROM_read_int(blue_left_c) - range)
      color_out = BLUE;

    else if (red < EEPROM_read_int(yellow_left_r) + range && red > EEPROM_read_int(yellow_left_r) - range && green < EEPROM_read_int(yellow_left_g) + range && green > EEPROM_read_int(yellow_left_g) - range && blue < EEPROM_read_int(yellow_left_b) + range && blue > EEPROM_read_int(yellow_left_b) - range && clear < EEPROM_read_int(yellow_left_c) + range && clear > EEPROM_read_int(yellow_left_c) - range)
    18e6:	8c 1b       	sub	r24, r28
    18e8:	9d 0b       	sbc	r25, r29
    18ea:	8e 15       	cp	r24, r14
    18ec:	9f 05       	cpc	r25, r15
    18ee:	0c f0       	brlt	.+2      	; 0x18f2 <color(char)+0x420>
    18f0:	63 cf       	rjmp	.-314    	; 0x17b8 <color(char)+0x2e6>
    18f2:	8e e2       	ldi	r24, 0x2E	; 46
    18f4:	90 e0       	ldi	r25, 0x00	; 0
    18f6:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    18fa:	9e 01       	movw	r18, r28
    18fc:	28 0f       	add	r18, r24
    18fe:	39 1f       	adc	r19, r25
    1900:	02 17       	cp	r16, r18
    1902:	13 07       	cpc	r17, r19
    1904:	0c f0       	brlt	.+2      	; 0x1908 <color(char)+0x436>
    1906:	58 cf       	rjmp	.-336    	; 0x17b8 <color(char)+0x2e6>
    1908:	8c 1b       	sub	r24, r28
    190a:	9d 0b       	sbc	r25, r29
    190c:	80 17       	cp	r24, r16
    190e:	91 07       	cpc	r25, r17
    1910:	0c f0       	brlt	.+2      	; 0x1914 <color(char)+0x442>
    1912:	52 cf       	rjmp	.-348    	; 0x17b8 <color(char)+0x2e6>
    1914:	80 e3       	ldi	r24, 0x30	; 48
    1916:	90 e0       	ldi	r25, 0x00	; 0
    1918:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    191c:	9e 01       	movw	r18, r28
    191e:	28 0f       	add	r18, r24
    1920:	39 1f       	adc	r19, r25
    1922:	c2 16       	cp	r12, r18
    1924:	d3 06       	cpc	r13, r19
    1926:	0c f0       	brlt	.+2      	; 0x192a <color(char)+0x458>
    1928:	47 cf       	rjmp	.-370    	; 0x17b8 <color(char)+0x2e6>
    192a:	8c 1b       	sub	r24, r28
    192c:	9d 0b       	sbc	r25, r29
    192e:	8c 15       	cp	r24, r12
    1930:	9d 05       	cpc	r25, r13
    1932:	0c f0       	brlt	.+2      	; 0x1936 <color(char)+0x464>
    1934:	41 cf       	rjmp	.-382    	; 0x17b8 <color(char)+0x2e6>
    1936:	82 e3       	ldi	r24, 0x32	; 50
    1938:	90 e0       	ldi	r25, 0x00	; 0
    193a:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    193e:	20 91 c3 08 	lds	r18, 0x08C3	; 0x8008c3 <clear>
    1942:	30 91 c4 08 	lds	r19, 0x08C4	; 0x8008c4 <clear+0x1>
    1946:	ae 01       	movw	r20, r28
    1948:	48 0f       	add	r20, r24
    194a:	59 1f       	adc	r21, r25
    194c:	24 17       	cp	r18, r20
    194e:	35 07       	cpc	r19, r21
    1950:	0c f0       	brlt	.+2      	; 0x1954 <color(char)+0x482>
    1952:	32 cf       	rjmp	.-412    	; 0x17b8 <color(char)+0x2e6>
    1954:	8c 1b       	sub	r24, r28
    1956:	9d 0b       	sbc	r25, r29
    1958:	82 17       	cp	r24, r18
    195a:	93 07       	cpc	r25, r19
    195c:	0c f0       	brlt	.+2      	; 0x1960 <color(char)+0x48e>
    195e:	2c cf       	rjmp	.-424    	; 0x17b8 <color(char)+0x2e6>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:379

    else if (blue > red && blue > green && red < EEPROM_read_int(blue_right_r) + range && red > EEPROM_read_int(blue_right_r) - range && green < EEPROM_read_int(blue_right_g) + range && green > EEPROM_read_int(blue_right_g) - range && blue < EEPROM_read_int(blue_right_b) + range && blue > EEPROM_read_int(blue_right_b) - range && clear < EEPROM_read_int(blue_right_c) + range && clear > EEPROM_read_int(blue_right_c) - range)
      color_out = BLUE;

    else if (red < EEPROM_read_int(yellow_right_r) + range && red > EEPROM_read_int(yellow_right_r) - range && green < EEPROM_read_int(yellow_right_g) + range && green > EEPROM_read_int(yellow_right_g) - range && blue < EEPROM_read_int(yellow_right_b) + range && blue > EEPROM_read_int(yellow_right_b) - range && clear < EEPROM_read_int(yellow_right_c) + range && clear > EEPROM_read_int(yellow_right_c) - range)
      color_out = YELLOW;
    1960:	84 e0       	ldi	r24, 0x04	; 4
    1962:	90 e0       	ldi	r25, 0x00	; 0
    1964:	bb cf       	rjmp	.-138    	; 0x18dc <color(char)+0x40a>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:367

    else
      color_out = WHITE;

    return color_out;
  } else if (select == 2)  // right
    1966:	82 e0       	ldi	r24, 0x02	; 2
    1968:	d8 12       	cpse	r13, r24
    196a:	78 c1       	rjmp	.+752    	; 0x1c5c <color(char)+0x78a>
    196c:	c0 90 c5 08 	lds	r12, 0x08C5	; 0x8008c5 <blue>
    1970:	d0 90 c6 08 	lds	r13, 0x08C6	; 0x8008c6 <blue+0x1>
    1974:	8a e9       	ldi	r24, 0x9A	; 154
    1976:	90 e0       	ldi	r25, 0x00	; 0
    1978:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    197c:	ec 01       	movw	r28, r24
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:369
  {
    if (red > green && red > blue && red < EEPROM_read_int(red_right_r) + range && red > EEPROM_read_int(red_right_r) - range && green < EEPROM_read_int(red_right_g) + range && green > EEPROM_read_int(red_right_g) - range && blue < EEPROM_read_int(red_right_b) + range && blue > EEPROM_read_int(red_right_b) - range && clear < EEPROM_read_int(red_right_c) + range && clear > EEPROM_read_int(red_right_c) - range)
    197e:	0e 15       	cp	r16, r14
    1980:	1f 05       	cpc	r17, r15
    1982:	0c f0       	brlt	.+2      	; 0x1986 <color(char)+0x4b4>
    1984:	86 c0       	rjmp	.+268    	; 0x1a92 <color(char)+0x5c0>
    1986:	ce 14       	cp	r12, r14
    1988:	df 04       	cpc	r13, r15
    198a:	0c f0       	brlt	.+2      	; 0x198e <color(char)+0x4bc>
    198c:	86 c0       	rjmp	.+268    	; 0x1a9a <color(char)+0x5c8>
    198e:	8c e3       	ldi	r24, 0x3C	; 60
    1990:	90 e0       	ldi	r25, 0x00	; 0
    1992:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    1996:	9e 01       	movw	r18, r28
    1998:	28 0f       	add	r18, r24
    199a:	39 1f       	adc	r19, r25
    199c:	e2 16       	cp	r14, r18
    199e:	f3 06       	cpc	r15, r19
    19a0:	bc f5       	brge	.+110    	; 0x1a10 <color(char)+0x53e>
    19a2:	8c 1b       	sub	r24, r28
    19a4:	9d 0b       	sbc	r25, r29
    19a6:	8e 15       	cp	r24, r14
    19a8:	9f 05       	cpc	r25, r15
    19aa:	94 f5       	brge	.+100    	; 0x1a10 <color(char)+0x53e>
    19ac:	8e e3       	ldi	r24, 0x3E	; 62
    19ae:	90 e0       	ldi	r25, 0x00	; 0
    19b0:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    19b4:	9e 01       	movw	r18, r28
    19b6:	28 0f       	add	r18, r24
    19b8:	39 1f       	adc	r19, r25
    19ba:	02 17       	cp	r16, r18
    19bc:	13 07       	cpc	r17, r19
    19be:	44 f5       	brge	.+80     	; 0x1a10 <color(char)+0x53e>
    19c0:	8c 1b       	sub	r24, r28
    19c2:	9d 0b       	sbc	r25, r29
    19c4:	80 17       	cp	r24, r16
    19c6:	91 07       	cpc	r25, r17
    19c8:	1c f5       	brge	.+70     	; 0x1a10 <color(char)+0x53e>
    19ca:	80 e4       	ldi	r24, 0x40	; 64
    19cc:	90 e0       	ldi	r25, 0x00	; 0
    19ce:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    19d2:	9e 01       	movw	r18, r28
    19d4:	28 0f       	add	r18, r24
    19d6:	39 1f       	adc	r19, r25
    19d8:	c2 16       	cp	r12, r18
    19da:	d3 06       	cpc	r13, r19
    19dc:	cc f4       	brge	.+50     	; 0x1a10 <color(char)+0x53e>
    19de:	8c 1b       	sub	r24, r28
    19e0:	9d 0b       	sbc	r25, r29
    19e2:	8c 15       	cp	r24, r12
    19e4:	9d 05       	cpc	r25, r13
    19e6:	a4 f4       	brge	.+40     	; 0x1a10 <color(char)+0x53e>
    19e8:	82 e4       	ldi	r24, 0x42	; 66
    19ea:	90 e0       	ldi	r25, 0x00	; 0
    19ec:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    19f0:	20 91 c3 08 	lds	r18, 0x08C3	; 0x8008c3 <clear>
    19f4:	30 91 c4 08 	lds	r19, 0x08C4	; 0x8008c4 <clear+0x1>
    19f8:	ae 01       	movw	r20, r28
    19fa:	48 0f       	add	r20, r24
    19fc:	59 1f       	adc	r21, r25
    19fe:	24 17       	cp	r18, r20
    1a00:	35 07       	cpc	r19, r21
    1a02:	34 f4       	brge	.+12     	; 0x1a10 <color(char)+0x53e>
    1a04:	8c 1b       	sub	r24, r28
    1a06:	9d 0b       	sbc	r25, r29
    1a08:	82 17       	cp	r24, r18
    1a0a:	93 07       	cpc	r25, r19
    1a0c:	0c f4       	brge	.+2      	; 0x1a10 <color(char)+0x53e>
    1a0e:	53 ce       	rjmp	.-858    	; 0x16b6 <color(char)+0x1e4>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:378
      color_out = GREEN;

    else if (blue > red && blue > green && red < EEPROM_read_int(blue_right_r) + range && red > EEPROM_read_int(blue_right_r) - range && green < EEPROM_read_int(blue_right_g) + range && green > EEPROM_read_int(blue_right_g) - range && blue < EEPROM_read_int(blue_right_b) + range && blue > EEPROM_read_int(blue_right_b) - range && clear < EEPROM_read_int(blue_right_c) + range && clear > EEPROM_read_int(blue_right_c) - range)
      color_out = BLUE;

    else if (red < EEPROM_read_int(yellow_right_r) + range && red > EEPROM_read_int(yellow_right_r) - range && green < EEPROM_read_int(yellow_right_g) + range && green > EEPROM_read_int(yellow_right_g) - range && blue < EEPROM_read_int(yellow_right_b) + range && blue > EEPROM_read_int(yellow_right_b) - range && clear < EEPROM_read_int(yellow_right_c) + range && clear > EEPROM_read_int(yellow_right_c) - range)
    1a10:	84 e5       	ldi	r24, 0x54	; 84
    1a12:	90 e0       	ldi	r25, 0x00	; 0
    1a14:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    1a18:	9e 01       	movw	r18, r28
    1a1a:	28 0f       	add	r18, r24
    1a1c:	39 1f       	adc	r19, r25
    1a1e:	e2 16       	cp	r14, r18
    1a20:	f3 06       	cpc	r15, r19
    1a22:	0c f4       	brge	.+2      	; 0x1a26 <color(char)+0x554>
    1a24:	da c0       	rjmp	.+436    	; 0x1bda <color(char)+0x708>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:382
      color_out = YELLOW;

    else if (
      red <= (EEPROM_read_int(silver_right_r) + range) && red >= (EEPROM_read_int(silver_right_r) - range) && green >= (EEPROM_read_int(silver_right_g) - range) && green <= (EEPROM_read_int(silver_right_g) + range) && blue >= (EEPROM_read_int(silver_right_b) - range) && blue <= (EEPROM_read_int(silver_right_b) + range) && clear <= (EEPROM_read_int(silver_right_c) + range) && clear >= (EEPROM_read_int(silver_right_c) - range)) {
    1a26:	8c e5       	ldi	r24, 0x5C	; 92
    1a28:	90 e0       	ldi	r25, 0x00	; 0
    1a2a:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    1a2e:	9e 01       	movw	r18, r28
    1a30:	28 0f       	add	r18, r24
    1a32:	39 1f       	adc	r19, r25
    1a34:	2e 15       	cp	r18, r14
    1a36:	3f 05       	cpc	r19, r15
    1a38:	0c f4       	brge	.+2      	; 0x1a3c <color(char)+0x56a>
    1a3a:	ff ce       	rjmp	.-514    	; 0x183a <color(char)+0x368>
    1a3c:	8c 1b       	sub	r24, r28
    1a3e:	9d 0b       	sbc	r25, r29
    1a40:	e8 16       	cp	r14, r24
    1a42:	f9 06       	cpc	r15, r25
    1a44:	0c f4       	brge	.+2      	; 0x1a48 <color(char)+0x576>
    1a46:	f9 ce       	rjmp	.-526    	; 0x183a <color(char)+0x368>
    1a48:	8e e5       	ldi	r24, 0x5E	; 94
    1a4a:	90 e0       	ldi	r25, 0x00	; 0
    1a4c:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    1a50:	9c 01       	movw	r18, r24
    1a52:	2c 1b       	sub	r18, r28
    1a54:	3d 0b       	sbc	r19, r29
    1a56:	02 17       	cp	r16, r18
    1a58:	13 07       	cpc	r17, r19
    1a5a:	0c f4       	brge	.+2      	; 0x1a5e <color(char)+0x58c>
    1a5c:	ee ce       	rjmp	.-548    	; 0x183a <color(char)+0x368>
    1a5e:	8c 0f       	add	r24, r28
    1a60:	9d 1f       	adc	r25, r29
    1a62:	80 17       	cp	r24, r16
    1a64:	91 07       	cpc	r25, r17
    1a66:	0c f4       	brge	.+2      	; 0x1a6a <color(char)+0x598>
    1a68:	e8 ce       	rjmp	.-560    	; 0x183a <color(char)+0x368>
    1a6a:	80 e6       	ldi	r24, 0x60	; 96
    1a6c:	90 e0       	ldi	r25, 0x00	; 0
    1a6e:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    1a72:	9c 01       	movw	r18, r24
    1a74:	2c 1b       	sub	r18, r28
    1a76:	3d 0b       	sbc	r19, r29
    1a78:	c2 16       	cp	r12, r18
    1a7a:	d3 06       	cpc	r13, r19
    1a7c:	0c f4       	brge	.+2      	; 0x1a80 <color(char)+0x5ae>
    1a7e:	dd ce       	rjmp	.-582    	; 0x183a <color(char)+0x368>
    1a80:	8c 0f       	add	r24, r28
    1a82:	9d 1f       	adc	r25, r29
    1a84:	8c 15       	cp	r24, r12
    1a86:	9d 05       	cpc	r25, r13
    1a88:	0c f4       	brge	.+2      	; 0x1a8c <color(char)+0x5ba>
    1a8a:	d7 ce       	rjmp	.-594    	; 0x183a <color(char)+0x368>
    1a8c:	82 e6       	ldi	r24, 0x62	; 98
    1a8e:	90 e0       	ldi	r25, 0x00	; 0
    1a90:	c2 ce       	rjmp	.-636    	; 0x1816 <color(char)+0x344>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:372
  } else if (select == 2)  // right
  {
    if (red > green && red > blue && red < EEPROM_read_int(red_right_r) + range && red > EEPROM_read_int(red_right_r) - range && green < EEPROM_read_int(red_right_g) + range && green > EEPROM_read_int(red_right_g) - range && blue < EEPROM_read_int(red_right_b) + range && blue > EEPROM_read_int(red_right_b) - range && clear < EEPROM_read_int(red_right_c) + range && clear > EEPROM_read_int(red_right_c) - range)
      color_out = RED;
    //else if (green > red && green > blue && red < EEPROM_read_int(green_right_r) + range && red > EEPROM_read_int(green_right_r) - range && green > EEPROM_read_int(green_right_g)-range/2 && green < EEPROM_read_int(green_right_g) + range && blue < EEPROM_read_int(green_right_b) + range && blue > EEPROM_read_int(green_right_b) - range /*&&  clear < EEPROM_read_int(green_right_c) + range */ && clear > EEPROM_read_int(green_right_c) - range/2)
    else if (green > red && green > blue && red < EEPROM_read_int(green_right_r) + range && red > EEPROM_read_int(green_right_r) - range && green < EEPROM_read_int(green_right_g) + range && green > EEPROM_read_int(green_right_g) - range && blue < EEPROM_read_int(green_right_b) + range && blue > EEPROM_read_int(green_right_b) - range && clear < EEPROM_read_int(green_right_c) + range && clear > EEPROM_read_int(green_right_c) - range)
    1a92:	e0 16       	cp	r14, r16
    1a94:	f1 06       	cpc	r15, r17
    1a96:	0c f4       	brge	.+2      	; 0x1a9a <color(char)+0x5c8>
    1a98:	51 c0       	rjmp	.+162    	; 0x1b3c <color(char)+0x66a>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:375
      color_out = GREEN;

    else if (blue > red && blue > green && red < EEPROM_read_int(blue_right_r) + range && red > EEPROM_read_int(blue_right_r) - range && green < EEPROM_read_int(blue_right_g) + range && green > EEPROM_read_int(blue_right_g) - range && blue < EEPROM_read_int(blue_right_b) + range && blue > EEPROM_read_int(blue_right_b) - range && clear < EEPROM_read_int(blue_right_c) + range && clear > EEPROM_read_int(blue_right_c) - range)
    1a9a:	ec 14       	cp	r14, r12
    1a9c:	fd 04       	cpc	r15, r13
    1a9e:	0c f0       	brlt	.+2      	; 0x1aa2 <color(char)+0x5d0>
    1aa0:	b7 cf       	rjmp	.-146    	; 0x1a10 <color(char)+0x53e>
    1aa2:	0c 15       	cp	r16, r12
    1aa4:	1d 05       	cpc	r17, r13
    1aa6:	0c f0       	brlt	.+2      	; 0x1aaa <color(char)+0x5d8>
    1aa8:	b3 cf       	rjmp	.-154    	; 0x1a10 <color(char)+0x53e>
    1aaa:	8c e4       	ldi	r24, 0x4C	; 76
    1aac:	90 e0       	ldi	r25, 0x00	; 0
    1aae:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    1ab2:	9e 01       	movw	r18, r28
    1ab4:	28 0f       	add	r18, r24
    1ab6:	39 1f       	adc	r19, r25
    1ab8:	e2 16       	cp	r14, r18
    1aba:	f3 06       	cpc	r15, r19
    1abc:	0c f0       	brlt	.+2      	; 0x1ac0 <color(char)+0x5ee>
    1abe:	a8 cf       	rjmp	.-176    	; 0x1a10 <color(char)+0x53e>
    1ac0:	8c 1b       	sub	r24, r28
    1ac2:	9d 0b       	sbc	r25, r29
    1ac4:	8e 15       	cp	r24, r14
    1ac6:	9f 05       	cpc	r25, r15
    1ac8:	0c f0       	brlt	.+2      	; 0x1acc <color(char)+0x5fa>
    1aca:	a2 cf       	rjmp	.-188    	; 0x1a10 <color(char)+0x53e>
    1acc:	8e e4       	ldi	r24, 0x4E	; 78
    1ace:	90 e0       	ldi	r25, 0x00	; 0
    1ad0:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    1ad4:	9e 01       	movw	r18, r28
    1ad6:	28 0f       	add	r18, r24
    1ad8:	39 1f       	adc	r19, r25
    1ada:	02 17       	cp	r16, r18
    1adc:	13 07       	cpc	r17, r19
    1ade:	0c f0       	brlt	.+2      	; 0x1ae2 <color(char)+0x610>
    1ae0:	97 cf       	rjmp	.-210    	; 0x1a10 <color(char)+0x53e>
    1ae2:	8c 1b       	sub	r24, r28
    1ae4:	9d 0b       	sbc	r25, r29
    1ae6:	80 17       	cp	r24, r16
    1ae8:	91 07       	cpc	r25, r17
    1aea:	0c f0       	brlt	.+2      	; 0x1aee <color(char)+0x61c>
    1aec:	91 cf       	rjmp	.-222    	; 0x1a10 <color(char)+0x53e>
    1aee:	80 e5       	ldi	r24, 0x50	; 80
    1af0:	90 e0       	ldi	r25, 0x00	; 0
    1af2:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    1af6:	9e 01       	movw	r18, r28
    1af8:	28 0f       	add	r18, r24
    1afa:	39 1f       	adc	r19, r25
    1afc:	c2 16       	cp	r12, r18
    1afe:	d3 06       	cpc	r13, r19
    1b00:	0c f0       	brlt	.+2      	; 0x1b04 <color(char)+0x632>
    1b02:	86 cf       	rjmp	.-244    	; 0x1a10 <color(char)+0x53e>
    1b04:	8c 1b       	sub	r24, r28
    1b06:	9d 0b       	sbc	r25, r29
    1b08:	8c 15       	cp	r24, r12
    1b0a:	9d 05       	cpc	r25, r13
    1b0c:	0c f0       	brlt	.+2      	; 0x1b10 <color(char)+0x63e>
    1b0e:	80 cf       	rjmp	.-256    	; 0x1a10 <color(char)+0x53e>
    1b10:	82 e5       	ldi	r24, 0x52	; 82
    1b12:	90 e0       	ldi	r25, 0x00	; 0
    1b14:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    1b18:	20 91 c3 08 	lds	r18, 0x08C3	; 0x8008c3 <clear>
    1b1c:	30 91 c4 08 	lds	r19, 0x08C4	; 0x8008c4 <clear+0x1>
    1b20:	ae 01       	movw	r20, r28
    1b22:	48 0f       	add	r20, r24
    1b24:	59 1f       	adc	r21, r25
    1b26:	24 17       	cp	r18, r20
    1b28:	35 07       	cpc	r19, r21
    1b2a:	0c f0       	brlt	.+2      	; 0x1b2e <color(char)+0x65c>
    1b2c:	71 cf       	rjmp	.-286    	; 0x1a10 <color(char)+0x53e>
    1b2e:	8c 1b       	sub	r24, r28
    1b30:	9d 0b       	sbc	r25, r29
    1b32:	82 17       	cp	r24, r18
    1b34:	93 07       	cpc	r25, r19
    1b36:	0c f4       	brge	.+2      	; 0x1b3a <color(char)+0x668>
    1b38:	cf ce       	rjmp	.-610    	; 0x18d8 <color(char)+0x406>
    1b3a:	6a cf       	rjmp	.-300    	; 0x1a10 <color(char)+0x53e>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:372
  } else if (select == 2)  // right
  {
    if (red > green && red > blue && red < EEPROM_read_int(red_right_r) + range && red > EEPROM_read_int(red_right_r) - range && green < EEPROM_read_int(red_right_g) + range && green > EEPROM_read_int(red_right_g) - range && blue < EEPROM_read_int(red_right_b) + range && blue > EEPROM_read_int(red_right_b) - range && clear < EEPROM_read_int(red_right_c) + range && clear > EEPROM_read_int(red_right_c) - range)
      color_out = RED;
    //else if (green > red && green > blue && red < EEPROM_read_int(green_right_r) + range && red > EEPROM_read_int(green_right_r) - range && green > EEPROM_read_int(green_right_g)-range/2 && green < EEPROM_read_int(green_right_g) + range && blue < EEPROM_read_int(green_right_b) + range && blue > EEPROM_read_int(green_right_b) - range /*&&  clear < EEPROM_read_int(green_right_c) + range */ && clear > EEPROM_read_int(green_right_c) - range/2)
    else if (green > red && green > blue && red < EEPROM_read_int(green_right_r) + range && red > EEPROM_read_int(green_right_r) - range && green < EEPROM_read_int(green_right_g) + range && green > EEPROM_read_int(green_right_g) - range && blue < EEPROM_read_int(green_right_b) + range && blue > EEPROM_read_int(green_right_b) - range && clear < EEPROM_read_int(green_right_c) + range && clear > EEPROM_read_int(green_right_c) - range)
    1b3c:	c0 16       	cp	r12, r16
    1b3e:	d1 06       	cpc	r13, r17
    1b40:	0c f0       	brlt	.+2      	; 0x1b44 <color(char)+0x672>
    1b42:	ab cf       	rjmp	.-170    	; 0x1a9a <color(char)+0x5c8>
    1b44:	84 e4       	ldi	r24, 0x44	; 68
    1b46:	90 e0       	ldi	r25, 0x00	; 0
    1b48:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    1b4c:	9e 01       	movw	r18, r28
    1b4e:	28 0f       	add	r18, r24
    1b50:	39 1f       	adc	r19, r25
    1b52:	e2 16       	cp	r14, r18
    1b54:	f3 06       	cpc	r15, r19
    1b56:	0c f0       	brlt	.+2      	; 0x1b5a <color(char)+0x688>
    1b58:	a0 cf       	rjmp	.-192    	; 0x1a9a <color(char)+0x5c8>
    1b5a:	8c 1b       	sub	r24, r28
    1b5c:	9d 0b       	sbc	r25, r29
    1b5e:	8e 15       	cp	r24, r14
    1b60:	9f 05       	cpc	r25, r15
    1b62:	0c f0       	brlt	.+2      	; 0x1b66 <color(char)+0x694>
    1b64:	9a cf       	rjmp	.-204    	; 0x1a9a <color(char)+0x5c8>
    1b66:	86 e4       	ldi	r24, 0x46	; 70
    1b68:	90 e0       	ldi	r25, 0x00	; 0
    1b6a:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    1b6e:	9e 01       	movw	r18, r28
    1b70:	28 0f       	add	r18, r24
    1b72:	39 1f       	adc	r19, r25
    1b74:	02 17       	cp	r16, r18
    1b76:	13 07       	cpc	r17, r19
    1b78:	0c f0       	brlt	.+2      	; 0x1b7c <color(char)+0x6aa>
    1b7a:	8f cf       	rjmp	.-226    	; 0x1a9a <color(char)+0x5c8>
    1b7c:	8c 1b       	sub	r24, r28
    1b7e:	9d 0b       	sbc	r25, r29
    1b80:	80 17       	cp	r24, r16
    1b82:	91 07       	cpc	r25, r17
    1b84:	0c f0       	brlt	.+2      	; 0x1b88 <color(char)+0x6b6>
    1b86:	89 cf       	rjmp	.-238    	; 0x1a9a <color(char)+0x5c8>
    1b88:	88 e4       	ldi	r24, 0x48	; 72
    1b8a:	90 e0       	ldi	r25, 0x00	; 0
    1b8c:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    1b90:	9e 01       	movw	r18, r28
    1b92:	28 0f       	add	r18, r24
    1b94:	39 1f       	adc	r19, r25
    1b96:	c2 16       	cp	r12, r18
    1b98:	d3 06       	cpc	r13, r19
    1b9a:	0c f0       	brlt	.+2      	; 0x1b9e <color(char)+0x6cc>
    1b9c:	7e cf       	rjmp	.-260    	; 0x1a9a <color(char)+0x5c8>
    1b9e:	8c 1b       	sub	r24, r28
    1ba0:	9d 0b       	sbc	r25, r29
    1ba2:	8c 15       	cp	r24, r12
    1ba4:	9d 05       	cpc	r25, r13
    1ba6:	0c f0       	brlt	.+2      	; 0x1baa <color(char)+0x6d8>
    1ba8:	78 cf       	rjmp	.-272    	; 0x1a9a <color(char)+0x5c8>
    1baa:	8a e4       	ldi	r24, 0x4A	; 74
    1bac:	90 e0       	ldi	r25, 0x00	; 0
    1bae:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    1bb2:	20 91 c3 08 	lds	r18, 0x08C3	; 0x8008c3 <clear>
    1bb6:	30 91 c4 08 	lds	r19, 0x08C4	; 0x8008c4 <clear+0x1>
    1bba:	ae 01       	movw	r20, r28
    1bbc:	48 0f       	add	r20, r24
    1bbe:	59 1f       	adc	r21, r25
    1bc0:	24 17       	cp	r18, r20
    1bc2:	35 07       	cpc	r19, r21
    1bc4:	0c f0       	brlt	.+2      	; 0x1bc8 <color(char)+0x6f6>
    1bc6:	69 cf       	rjmp	.-302    	; 0x1a9a <color(char)+0x5c8>
    1bc8:	8c 1b       	sub	r24, r28
    1bca:	9d 0b       	sbc	r25, r29
    1bcc:	82 17       	cp	r24, r18
    1bce:	93 07       	cpc	r25, r19
    1bd0:	0c f0       	brlt	.+2      	; 0x1bd4 <color(char)+0x702>
    1bd2:	63 cf       	rjmp	.-314    	; 0x1a9a <color(char)+0x5c8>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:396
  {
    if (red > green && red > blue && red < EEPROM_read_int(red_front_r) + range && red > EEPROM_read_int(red_front_r) - range && green < EEPROM_read_int(red_front_g) + range && green > EEPROM_read_int(red_front_g) - range && blue < EEPROM_read_int(red_front_b) + range && blue > EEPROM_read_int(red_front_b) - range && clear < EEPROM_read_int(red_front_c) + range && clear > EEPROM_read_int(red_front_c) - range)
      color_out = RED;

    else if (green > red && green > blue && red < EEPROM_read_int(green_front_r) + range && red > EEPROM_read_int(green_front_r) - range && green < EEPROM_read_int(green_front_g) + range && green > EEPROM_read_int(green_front_g) - range && blue < EEPROM_read_int(green_front_b) + range && blue > EEPROM_read_int(green_front_b) - range && clear < EEPROM_read_int(green_front_c) + range && clear > EEPROM_read_int(green_front_c) - range)
      color_out = GREEN;
    1bd4:	81 e0       	ldi	r24, 0x01	; 1
    1bd6:	90 e0       	ldi	r25, 0x00	; 0
    1bd8:	81 ce       	rjmp	.-766    	; 0x18dc <color(char)+0x40a>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:378
      color_out = GREEN;

    else if (blue > red && blue > green && red < EEPROM_read_int(blue_right_r) + range && red > EEPROM_read_int(blue_right_r) - range && green < EEPROM_read_int(blue_right_g) + range && green > EEPROM_read_int(blue_right_g) - range && blue < EEPROM_read_int(blue_right_b) + range && blue > EEPROM_read_int(blue_right_b) - range && clear < EEPROM_read_int(blue_right_c) + range && clear > EEPROM_read_int(blue_right_c) - range)
      color_out = BLUE;

    else if (red < EEPROM_read_int(yellow_right_r) + range && red > EEPROM_read_int(yellow_right_r) - range && green < EEPROM_read_int(yellow_right_g) + range && green > EEPROM_read_int(yellow_right_g) - range && blue < EEPROM_read_int(yellow_right_b) + range && blue > EEPROM_read_int(yellow_right_b) - range && clear < EEPROM_read_int(yellow_right_c) + range && clear > EEPROM_read_int(yellow_right_c) - range)
    1bda:	8c 1b       	sub	r24, r28
    1bdc:	9d 0b       	sbc	r25, r29
    1bde:	8e 15       	cp	r24, r14
    1be0:	9f 05       	cpc	r25, r15
    1be2:	0c f0       	brlt	.+2      	; 0x1be6 <color(char)+0x714>
    1be4:	20 cf       	rjmp	.-448    	; 0x1a26 <color(char)+0x554>
    1be6:	86 e5       	ldi	r24, 0x56	; 86
    1be8:	90 e0       	ldi	r25, 0x00	; 0
    1bea:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    1bee:	9e 01       	movw	r18, r28
    1bf0:	28 0f       	add	r18, r24
    1bf2:	39 1f       	adc	r19, r25
    1bf4:	02 17       	cp	r16, r18
    1bf6:	13 07       	cpc	r17, r19
    1bf8:	0c f0       	brlt	.+2      	; 0x1bfc <color(char)+0x72a>
    1bfa:	15 cf       	rjmp	.-470    	; 0x1a26 <color(char)+0x554>
    1bfc:	8c 1b       	sub	r24, r28
    1bfe:	9d 0b       	sbc	r25, r29
    1c00:	80 17       	cp	r24, r16
    1c02:	91 07       	cpc	r25, r17
    1c04:	0c f0       	brlt	.+2      	; 0x1c08 <color(char)+0x736>
    1c06:	0f cf       	rjmp	.-482    	; 0x1a26 <color(char)+0x554>
    1c08:	88 e5       	ldi	r24, 0x58	; 88
    1c0a:	90 e0       	ldi	r25, 0x00	; 0
    1c0c:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    1c10:	9e 01       	movw	r18, r28
    1c12:	28 0f       	add	r18, r24
    1c14:	39 1f       	adc	r19, r25
    1c16:	c2 16       	cp	r12, r18
    1c18:	d3 06       	cpc	r13, r19
    1c1a:	0c f0       	brlt	.+2      	; 0x1c1e <color(char)+0x74c>
    1c1c:	04 cf       	rjmp	.-504    	; 0x1a26 <color(char)+0x554>
    1c1e:	8c 1b       	sub	r24, r28
    1c20:	9d 0b       	sbc	r25, r29
    1c22:	8c 15       	cp	r24, r12
    1c24:	9d 05       	cpc	r25, r13
    1c26:	0c f0       	brlt	.+2      	; 0x1c2a <color(char)+0x758>
    1c28:	fe ce       	rjmp	.-516    	; 0x1a26 <color(char)+0x554>
    1c2a:	8a e5       	ldi	r24, 0x5A	; 90
    1c2c:	90 e0       	ldi	r25, 0x00	; 0
    1c2e:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    1c32:	20 91 c3 08 	lds	r18, 0x08C3	; 0x8008c3 <clear>
    1c36:	30 91 c4 08 	lds	r19, 0x08C4	; 0x8008c4 <clear+0x1>
    1c3a:	ae 01       	movw	r20, r28
    1c3c:	48 0f       	add	r20, r24
    1c3e:	59 1f       	adc	r21, r25
    1c40:	24 17       	cp	r18, r20
    1c42:	35 07       	cpc	r19, r21
    1c44:	0c f0       	brlt	.+2      	; 0x1c48 <color(char)+0x776>
    1c46:	ef ce       	rjmp	.-546    	; 0x1a26 <color(char)+0x554>
    1c48:	8c 1b       	sub	r24, r28
    1c4a:	9d 0b       	sbc	r25, r29
    1c4c:	82 17       	cp	r24, r18
    1c4e:	93 07       	cpc	r25, r19
    1c50:	0c f4       	brge	.+2      	; 0x1c54 <color(char)+0x782>
    1c52:	86 ce       	rjmp	.-756    	; 0x1960 <color(char)+0x48e>
    1c54:	e8 ce       	rjmp	.-560    	; 0x1a26 <color(char)+0x554>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:383
      color_out = YELLOW;

    else if (
      red <= (EEPROM_read_int(silver_right_r) + range) && red >= (EEPROM_read_int(silver_right_r) - range) && green >= (EEPROM_read_int(silver_right_g) - range) && green <= (EEPROM_read_int(silver_right_g) + range) && blue >= (EEPROM_read_int(silver_right_b) - range) && blue <= (EEPROM_read_int(silver_right_b) + range) && clear <= (EEPROM_read_int(silver_right_c) + range) && clear >= (EEPROM_read_int(silver_right_c) - range)) {
      color_out = SILVER;
    1c56:	85 e0       	ldi	r24, 0x05	; 5
    1c58:	90 e0       	ldi	r25, 0x00	; 0
    1c5a:	40 ce       	rjmp	.-896    	; 0x18dc <color(char)+0x40a>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:392
      color_out = WHITE;

    return color_out;
  } else if (select == 3)  // front
  {
    if (red > green && red > blue && red < EEPROM_read_int(red_front_r) + range && red > EEPROM_read_int(red_front_r) - range && green < EEPROM_read_int(red_front_g) + range && green > EEPROM_read_int(red_front_g) - range && blue < EEPROM_read_int(red_front_b) + range && blue > EEPROM_read_int(red_front_b) - range && clear < EEPROM_read_int(red_front_c) + range && clear > EEPROM_read_int(red_front_c) - range)
    1c5c:	0e 15       	cp	r16, r14
    1c5e:	1f 05       	cpc	r17, r15
    1c60:	0c f0       	brlt	.+2      	; 0x1c64 <color(char)+0x792>
    1c62:	57 c0       	rjmp	.+174    	; 0x1d12 <color(char)+0x840>
    1c64:	c0 90 c5 08 	lds	r12, 0x08C5	; 0x8008c5 <blue>
    1c68:	d0 90 c6 08 	lds	r13, 0x08C6	; 0x8008c6 <blue+0x1>
    1c6c:	ce 14       	cp	r12, r14
    1c6e:	df 04       	cpc	r13, r15
    1c70:	0c f0       	brlt	.+2      	; 0x1c74 <color(char)+0x7a2>
    1c72:	e3 cd       	rjmp	.-1082   	; 0x183a <color(char)+0x368>
    1c74:	84 e6       	ldi	r24, 0x64	; 100
    1c76:	90 e0       	ldi	r25, 0x00	; 0
    1c78:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    1c7c:	5c 01       	movw	r10, r24
    1c7e:	8a e9       	ldi	r24, 0x9A	; 154
    1c80:	90 e0       	ldi	r25, 0x00	; 0
    1c82:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    1c86:	ec 01       	movw	r28, r24
    1c88:	c5 01       	movw	r24, r10
    1c8a:	8c 0f       	add	r24, r28
    1c8c:	9d 1f       	adc	r25, r29
    1c8e:	e8 16       	cp	r14, r24
    1c90:	f9 06       	cpc	r15, r25
    1c92:	0c f0       	brlt	.+2      	; 0x1c96 <color(char)+0x7c4>
    1c94:	d2 cd       	rjmp	.-1116   	; 0x183a <color(char)+0x368>
    1c96:	ac 1a       	sub	r10, r28
    1c98:	bd 0a       	sbc	r11, r29
    1c9a:	ae 14       	cp	r10, r14
    1c9c:	bf 04       	cpc	r11, r15
    1c9e:	0c f0       	brlt	.+2      	; 0x1ca2 <color(char)+0x7d0>
    1ca0:	cc cd       	rjmp	.-1128   	; 0x183a <color(char)+0x368>
    1ca2:	86 e6       	ldi	r24, 0x66	; 102
    1ca4:	90 e0       	ldi	r25, 0x00	; 0
    1ca6:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    1caa:	9e 01       	movw	r18, r28
    1cac:	28 0f       	add	r18, r24
    1cae:	39 1f       	adc	r19, r25
    1cb0:	02 17       	cp	r16, r18
    1cb2:	13 07       	cpc	r17, r19
    1cb4:	0c f0       	brlt	.+2      	; 0x1cb8 <color(char)+0x7e6>
    1cb6:	c1 cd       	rjmp	.-1150   	; 0x183a <color(char)+0x368>
    1cb8:	8c 1b       	sub	r24, r28
    1cba:	9d 0b       	sbc	r25, r29
    1cbc:	80 17       	cp	r24, r16
    1cbe:	91 07       	cpc	r25, r17
    1cc0:	0c f0       	brlt	.+2      	; 0x1cc4 <color(char)+0x7f2>
    1cc2:	bb cd       	rjmp	.-1162   	; 0x183a <color(char)+0x368>
    1cc4:	88 e6       	ldi	r24, 0x68	; 104
    1cc6:	90 e0       	ldi	r25, 0x00	; 0
    1cc8:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    1ccc:	9e 01       	movw	r18, r28
    1cce:	28 0f       	add	r18, r24
    1cd0:	39 1f       	adc	r19, r25
    1cd2:	c2 16       	cp	r12, r18
    1cd4:	d3 06       	cpc	r13, r19
    1cd6:	0c f0       	brlt	.+2      	; 0x1cda <color(char)+0x808>
    1cd8:	b0 cd       	rjmp	.-1184   	; 0x183a <color(char)+0x368>
    1cda:	8c 1b       	sub	r24, r28
    1cdc:	9d 0b       	sbc	r25, r29
    1cde:	8c 15       	cp	r24, r12
    1ce0:	9d 05       	cpc	r25, r13
    1ce2:	0c f0       	brlt	.+2      	; 0x1ce6 <color(char)+0x814>
    1ce4:	aa cd       	rjmp	.-1196   	; 0x183a <color(char)+0x368>
    1ce6:	8a e6       	ldi	r24, 0x6A	; 106
    1ce8:	90 e0       	ldi	r25, 0x00	; 0
    1cea:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    1cee:	20 91 c3 08 	lds	r18, 0x08C3	; 0x8008c3 <clear>
    1cf2:	30 91 c4 08 	lds	r19, 0x08C4	; 0x8008c4 <clear+0x1>
    1cf6:	ae 01       	movw	r20, r28
    1cf8:	48 0f       	add	r20, r24
    1cfa:	59 1f       	adc	r21, r25
    1cfc:	24 17       	cp	r18, r20
    1cfe:	35 07       	cpc	r19, r21
    1d00:	0c f0       	brlt	.+2      	; 0x1d04 <color(char)+0x832>
    1d02:	9b cd       	rjmp	.-1226   	; 0x183a <color(char)+0x368>
    1d04:	8c 1b       	sub	r24, r28
    1d06:	9d 0b       	sbc	r25, r29
    1d08:	82 17       	cp	r24, r18
    1d0a:	93 07       	cpc	r25, r19
    1d0c:	0c f4       	brge	.+2      	; 0x1d10 <color(char)+0x83e>
    1d0e:	d3 cc       	rjmp	.-1626   	; 0x16b6 <color(char)+0x1e4>
    1d10:	94 cd       	rjmp	.-1240   	; 0x183a <color(char)+0x368>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:395
      color_out = RED;

    else if (green > red && green > blue && red < EEPROM_read_int(green_front_r) + range && red > EEPROM_read_int(green_front_r) - range && green < EEPROM_read_int(green_front_g) + range && green > EEPROM_read_int(green_front_g) - range && blue < EEPROM_read_int(green_front_b) + range && blue > EEPROM_read_int(green_front_b) - range && clear < EEPROM_read_int(green_front_c) + range && clear > EEPROM_read_int(green_front_c) - range)
    1d12:	e0 16       	cp	r14, r16
    1d14:	f1 06       	cpc	r15, r17
    1d16:	0c f0       	brlt	.+2      	; 0x1d1a <color(char)+0x848>
    1d18:	90 cd       	rjmp	.-1248   	; 0x183a <color(char)+0x368>
    1d1a:	c0 90 c5 08 	lds	r12, 0x08C5	; 0x8008c5 <blue>
    1d1e:	d0 90 c6 08 	lds	r13, 0x08C6	; 0x8008c6 <blue+0x1>
    1d22:	c0 16       	cp	r12, r16
    1d24:	d1 06       	cpc	r13, r17
    1d26:	0c f0       	brlt	.+2      	; 0x1d2a <color(char)+0x858>
    1d28:	88 cd       	rjmp	.-1264   	; 0x183a <color(char)+0x368>
    1d2a:	8c e6       	ldi	r24, 0x6C	; 108
    1d2c:	90 e0       	ldi	r25, 0x00	; 0
    1d2e:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    1d32:	5c 01       	movw	r10, r24
    1d34:	8a e9       	ldi	r24, 0x9A	; 154
    1d36:	90 e0       	ldi	r25, 0x00	; 0
    1d38:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    1d3c:	ec 01       	movw	r28, r24
    1d3e:	c5 01       	movw	r24, r10
    1d40:	8c 0f       	add	r24, r28
    1d42:	9d 1f       	adc	r25, r29
    1d44:	e8 16       	cp	r14, r24
    1d46:	f9 06       	cpc	r15, r25
    1d48:	0c f0       	brlt	.+2      	; 0x1d4c <color(char)+0x87a>
    1d4a:	77 cd       	rjmp	.-1298   	; 0x183a <color(char)+0x368>
    1d4c:	ac 1a       	sub	r10, r28
    1d4e:	bd 0a       	sbc	r11, r29
    1d50:	ae 14       	cp	r10, r14
    1d52:	bf 04       	cpc	r11, r15
    1d54:	0c f0       	brlt	.+2      	; 0x1d58 <color(char)+0x886>
    1d56:	71 cd       	rjmp	.-1310   	; 0x183a <color(char)+0x368>
    1d58:	8e e6       	ldi	r24, 0x6E	; 110
    1d5a:	90 e0       	ldi	r25, 0x00	; 0
    1d5c:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    1d60:	9e 01       	movw	r18, r28
    1d62:	28 0f       	add	r18, r24
    1d64:	39 1f       	adc	r19, r25
    1d66:	02 17       	cp	r16, r18
    1d68:	13 07       	cpc	r17, r19
    1d6a:	0c f0       	brlt	.+2      	; 0x1d6e <color(char)+0x89c>
    1d6c:	66 cd       	rjmp	.-1332   	; 0x183a <color(char)+0x368>
    1d6e:	8c 1b       	sub	r24, r28
    1d70:	9d 0b       	sbc	r25, r29
    1d72:	80 17       	cp	r24, r16
    1d74:	91 07       	cpc	r25, r17
    1d76:	0c f0       	brlt	.+2      	; 0x1d7a <color(char)+0x8a8>
    1d78:	60 cd       	rjmp	.-1344   	; 0x183a <color(char)+0x368>
    1d7a:	80 e7       	ldi	r24, 0x70	; 112
    1d7c:	90 e0       	ldi	r25, 0x00	; 0
    1d7e:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    1d82:	9e 01       	movw	r18, r28
    1d84:	28 0f       	add	r18, r24
    1d86:	39 1f       	adc	r19, r25
    1d88:	c2 16       	cp	r12, r18
    1d8a:	d3 06       	cpc	r13, r19
    1d8c:	0c f0       	brlt	.+2      	; 0x1d90 <color(char)+0x8be>
    1d8e:	55 cd       	rjmp	.-1366   	; 0x183a <color(char)+0x368>
    1d90:	8c 1b       	sub	r24, r28
    1d92:	9d 0b       	sbc	r25, r29
    1d94:	8c 15       	cp	r24, r12
    1d96:	9d 05       	cpc	r25, r13
    1d98:	0c f0       	brlt	.+2      	; 0x1d9c <color(char)+0x8ca>
    1d9a:	4f cd       	rjmp	.-1378   	; 0x183a <color(char)+0x368>
    1d9c:	82 e7       	ldi	r24, 0x72	; 114
    1d9e:	90 e0       	ldi	r25, 0x00	; 0
    1da0:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    1da4:	20 91 c3 08 	lds	r18, 0x08C3	; 0x8008c3 <clear>
    1da8:	30 91 c4 08 	lds	r19, 0x08C4	; 0x8008c4 <clear+0x1>
    1dac:	ae 01       	movw	r20, r28
    1dae:	48 0f       	add	r20, r24
    1db0:	59 1f       	adc	r21, r25
    1db2:	24 17       	cp	r18, r20
    1db4:	35 07       	cpc	r19, r21
    1db6:	0c f0       	brlt	.+2      	; 0x1dba <color(char)+0x8e8>
    1db8:	40 cd       	rjmp	.-1408   	; 0x183a <color(char)+0x368>
    1dba:	8c 1b       	sub	r24, r28
    1dbc:	9d 0b       	sbc	r25, r29
    1dbe:	82 17       	cp	r24, r18
    1dc0:	93 07       	cpc	r25, r19
    1dc2:	0c f4       	brge	.+2      	; 0x1dc6 <color(char)+0x8f4>
    1dc4:	07 cf       	rjmp	.-498    	; 0x1bd4 <color(char)+0x702>
    1dc6:	39 cd       	rjmp	.-1422   	; 0x183a <color(char)+0x368>

00001dc8 <get_back()>:
get_back():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1480
  Serial.begin(115200);
  dxl_init(115200);
  lcd.begin(20, 4);
  delay(800);
}
void get_back(void) {
    1dc8:	0f 93       	push	r16
    1dca:	1f 93       	push	r17
    1dcc:	cf 93       	push	r28
    1dce:	df 93       	push	r29
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1481
  int T90 = EEPROM_read_int(T90_address);
    1dd0:	88 e9       	ldi	r24, 0x98	; 152
    1dd2:	90 e0       	ldi	r25, 0x00	; 0
    1dd4:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    1dd8:	ec 01       	movw	r28, r24
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1483

  while (!(intersectionL && intersectionR) && color_L == WHITE && color_R == WHITE) {
    1dda:	40 e0       	ldi	r20, 0x00	; 0
    1ddc:	60 e0       	ldi	r22, 0x00	; 0
    1dde:	80 e0       	ldi	r24, 0x00	; 0
    1de0:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    1de4:	89 2b       	or	r24, r25
    1de6:	b9 f0       	breq	.+46     	; 0x1e16 <get_back()+0x4e>
    1de8:	40 e0       	ldi	r20, 0x00	; 0
    1dea:	62 e0       	ldi	r22, 0x02	; 2
    1dec:	82 e0       	ldi	r24, 0x02	; 2
    1dee:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    1df2:	89 2b       	or	r24, r25
    1df4:	f1 f0       	breq	.+60     	; 0x1e32 <get_back()+0x6a>
    1df6:	40 e0       	ldi	r20, 0x00	; 0
    1df8:	60 e0       	ldi	r22, 0x00	; 0
    1dfa:	80 e0       	ldi	r24, 0x00	; 0
    1dfc:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    1e00:	89 2b       	or	r24, r25
    1e02:	09 f4       	brne	.+2      	; 0x1e06 <get_back()+0x3e>
    1e04:	4d c0       	rjmp	.+154    	; 0x1ea0 <get_back()+0xd8>
    1e06:	40 e0       	ldi	r20, 0x00	; 0
    1e08:	63 e0       	ldi	r22, 0x03	; 3
    1e0a:	82 e0       	ldi	r24, 0x02	; 2
    1e0c:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    1e10:	89 2b       	or	r24, r25
    1e12:	79 f0       	breq	.+30     	; 0x1e32 <get_back()+0x6a>
    1e14:	14 c0       	rjmp	.+40     	; 0x1e3e <get_back()+0x76>
    1e16:	40 e0       	ldi	r20, 0x00	; 0
    1e18:	60 e0       	ldi	r22, 0x00	; 0
    1e1a:	81 e0       	ldi	r24, 0x01	; 1
    1e1c:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    1e20:	89 2b       	or	r24, r25
    1e22:	11 f7       	brne	.-60     	; 0x1de8 <get_back()+0x20>
    1e24:	40 e0       	ldi	r20, 0x00	; 0
    1e26:	61 e0       	ldi	r22, 0x01	; 1
    1e28:	81 e0       	ldi	r24, 0x01	; 1
    1e2a:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    1e2e:	89 2b       	or	r24, r25
    1e30:	d9 f6       	brne	.-74     	; 0x1de8 <get_back()+0x20>
    1e32:	81 e0       	ldi	r24, 0x01	; 1
    1e34:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <color(char)>
    1e38:	87 30       	cpi	r24, 0x07	; 7
    1e3a:	09 f4       	brne	.+2      	; 0x1e3e <get_back()+0x76>
    1e3c:	42 c0       	rjmp	.+132    	; 0x1ec2 <get_back()+0xfa>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1487
    linefollow();
  }
  if (direction == Left) {
    move(forward, T90 / 3, 150);
    1e3e:	ce 01       	movw	r24, r28
    1e40:	63 e0       	ldi	r22, 0x03	; 3
    1e42:	70 e0       	ldi	r23, 0x00	; 0
    1e44:	0e 94 17 35 	call	0x6a2e	; 0x6a2e <__divmodhi4>
    1e48:	8b 01       	movw	r16, r22
    1e4a:	46 e9       	ldi	r20, 0x96	; 150
    1e4c:	50 e0       	ldi	r21, 0x00	; 0
    1e4e:	8a e0       	ldi	r24, 0x0A	; 10
    1e50:	90 e0       	ldi	r25, 0x00	; 0
    1e52:	0e 94 6c 07 	call	0xed8	; 0xed8 <move(int, int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1488
    move(Left, T90 / 1.3, 150);
    1e56:	be 01       	movw	r22, r28
    1e58:	dd 0f       	add	r29, r29
    1e5a:	88 0b       	sbc	r24, r24
    1e5c:	99 0b       	sbc	r25, r25
    1e5e:	0e 94 e6 33 	call	0x67cc	; 0x67cc <__floatsisf>
    1e62:	26 e6       	ldi	r18, 0x66	; 102
    1e64:	36 e6       	ldi	r19, 0x66	; 102
    1e66:	46 ea       	ldi	r20, 0xA6	; 166
    1e68:	5f e3       	ldi	r21, 0x3F	; 63
    1e6a:	0e 94 3c 33 	call	0x6678	; 0x6678 <__divsf3>
    1e6e:	0e 94 ae 33 	call	0x675c	; 0x675c <__fixsfsi>
    1e72:	46 e9       	ldi	r20, 0x96	; 150
    1e74:	50 e0       	ldi	r21, 0x00	; 0
    1e76:	8b e0       	ldi	r24, 0x0B	; 11
    1e78:	90 e0       	ldi	r25, 0x00	; 0
    1e7a:	0e 94 6c 07 	call	0xed8	; 0xed8 <move(int, int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1489
    move(forward, T90 / 3, 150);
    1e7e:	46 e9       	ldi	r20, 0x96	; 150
    1e80:	50 e0       	ldi	r21, 0x00	; 0
    1e82:	b8 01       	movw	r22, r16
    1e84:	8a e0       	ldi	r24, 0x0A	; 10
    1e86:	90 e0       	ldi	r25, 0x00	; 0
    1e88:	0e 94 6c 07 	call	0xed8	; 0xed8 <move(int, int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1495
  } else if (direction == Right) {
    move(forward, T90 / 3, 150);
    move(Right, T90 / 1.3, 150);
    move(forward, T90 / 3, 150);
  }
  go(60, 60);
    1e8c:	6c e3       	ldi	r22, 0x3C	; 60
    1e8e:	70 e0       	ldi	r23, 0x00	; 0
    1e90:	8c e3       	ldi	r24, 0x3C	; 60
    1e92:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1496
}
    1e94:	df 91       	pop	r29
    1e96:	cf 91       	pop	r28
    1e98:	1f 91       	pop	r17
    1e9a:	0f 91       	pop	r16
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1495
  } else if (direction == Right) {
    move(forward, T90 / 3, 150);
    move(Right, T90 / 1.3, 150);
    move(forward, T90 / 3, 150);
  }
  go(60, 60);
    1e9c:	0c 94 07 07 	jmp	0xe0e	; 0xe0e <go(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1483
  delay(800);
}
void get_back(void) {
  int T90 = EEPROM_read_int(T90_address);

  while (!(intersectionL && intersectionR) && color_L == WHITE && color_R == WHITE) {
    1ea0:	40 e0       	ldi	r20, 0x00	; 0
    1ea2:	60 e0       	ldi	r22, 0x00	; 0
    1ea4:	81 e0       	ldi	r24, 0x01	; 1
    1ea6:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    1eaa:	89 2b       	or	r24, r25
    1eac:	09 f0       	breq	.+2      	; 0x1eb0 <get_back()+0xe8>
    1eae:	ab cf       	rjmp	.-170    	; 0x1e06 <get_back()+0x3e>
    1eb0:	40 e0       	ldi	r20, 0x00	; 0
    1eb2:	61 e0       	ldi	r22, 0x01	; 1
    1eb4:	81 e0       	ldi	r24, 0x01	; 1
    1eb6:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    1eba:	89 2b       	or	r24, r25
    1ebc:	09 f4       	brne	.+2      	; 0x1ec0 <get_back()+0xf8>
    1ebe:	b9 cf       	rjmp	.-142    	; 0x1e32 <get_back()+0x6a>
    1ec0:	a2 cf       	rjmp	.-188    	; 0x1e06 <get_back()+0x3e>
    1ec2:	82 e0       	ldi	r24, 0x02	; 2
    1ec4:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <color(char)>
    1ec8:	87 30       	cpi	r24, 0x07	; 7
    1eca:	09 f0       	breq	.+2      	; 0x1ece <get_back()+0x106>
    1ecc:	b8 cf       	rjmp	.-144    	; 0x1e3e <get_back()+0x76>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1484
    linefollow();
    1ece:	0e 94 db 07 	call	0xfb6	; 0xfb6 <linefollow()>
    1ed2:	83 cf       	rjmp	.-250    	; 0x1dda <get_back()+0x12>

00001ed4 <menu_sensor()>:
menu_sensor():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:808
long microsecondsToMillimeters(long microseconds) {
  return microseconds * 10 / 29 / 2;
}
void menu_sensor(void) {
  static char page = 1, last_page = 6;
  lcd.clear();
    1ed4:	0e 94 f6 05 	call	0xbec	; 0xbec <LiquidCrystal::clear() [clone .constprop.38]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:938
      delay(200);
      lcd.clear();
    } else if (page == 6)  // compass
    {
      lcd.setCursor(0, 0);
      lcd.printf("deg: %d pi: %d ro: %d", deg, pitch, role);
    1ed8:	ca eb       	ldi	r28, 0xBA	; 186
    1eda:	da e0       	ldi	r29, 0x0A	; 10
pulseIn():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.c:50

  unsigned long width = countPulseASM(portInputRegister(port), bit, stateMask, maxloops);

  // prevent clockCyclesToMicroseconds to return bogus values if countPulseASM timed out
  if (width)
    return clockCyclesToMicroseconds(width * 16 + 16);
    1edc:	4b e0       	ldi	r20, 0x0B	; 11
    1ede:	c4 2e       	mov	r12, r20
    1ee0:	d1 2c       	mov	r13, r1
    1ee2:	e1 2c       	mov	r14, r1
    1ee4:	f1 2c       	mov	r15, r1
menu_sensor():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:810
}
void menu_sensor(void) {
  static char page = 1, last_page = 6;
  lcd.clear();
  while (1) {
    if (next_page == 0) {
    1ee6:	88 e0       	ldi	r24, 0x08	; 8
    1ee8:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    1eec:	89 2b       	or	r24, r25
    1eee:	a9 f4       	brne	.+42     	; 0x1f1a <menu_sensor()+0x46>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:811
      while (next_page == 0)
    1ef0:	88 e0       	ldi	r24, 0x08	; 8
    1ef2:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    1ef6:	89 2b       	or	r24, r25
    1ef8:	d9 f3       	breq	.-10     	; 0x1ef0 <menu_sensor()+0x1c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:813
        ;
      delay(50);
    1efa:	62 e3       	ldi	r22, 0x32	; 50
    1efc:	70 e0       	ldi	r23, 0x00	; 0
    1efe:	80 e0       	ldi	r24, 0x00	; 0
    1f00:	90 e0       	ldi	r25, 0x00	; 0
    1f02:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <delay>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:814
      page++;
    1f06:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1f0a:	8f 5f       	subi	r24, 0xFF	; 255
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:815
      if (page > last_page)
    1f0c:	87 30       	cpi	r24, 0x07	; 7
    1f0e:	0c f0       	brlt	.+2      	; 0x1f12 <menu_sensor()+0x3e>
    1f10:	5d c1       	rjmp	.+698    	; 0x21cc <menu_sensor()+0x2f8>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:816
        page = 1;
    1f12:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:817
      lcd.clear();
    1f16:	0e 94 f6 05 	call	0xbec	; 0xbec <LiquidCrystal::clear() [clone .constprop.38]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:819
    }
    if (previuse_page == 0) {
    1f1a:	89 e0       	ldi	r24, 0x09	; 9
    1f1c:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    1f20:	89 2b       	or	r24, r25
    1f22:	a9 f4       	brne	.+42     	; 0x1f4e <menu_sensor()+0x7a>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:820
      while (previuse_page == 0)
    1f24:	89 e0       	ldi	r24, 0x09	; 9
    1f26:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    1f2a:	89 2b       	or	r24, r25
    1f2c:	d9 f3       	breq	.-10     	; 0x1f24 <menu_sensor()+0x50>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:822
        ;
      delay(50);
    1f2e:	62 e3       	ldi	r22, 0x32	; 50
    1f30:	70 e0       	ldi	r23, 0x00	; 0
    1f32:	80 e0       	ldi	r24, 0x00	; 0
    1f34:	90 e0       	ldi	r25, 0x00	; 0
    1f36:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <delay>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:823
      page--;
    1f3a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1f3e:	81 50       	subi	r24, 0x01	; 1
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:824
      if (page < 1)
    1f40:	18 16       	cp	r1, r24
    1f42:	0c f0       	brlt	.+2      	; 0x1f46 <menu_sensor()+0x72>
    1f44:	45 c1       	rjmp	.+650    	; 0x21d0 <menu_sensor()+0x2fc>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:825
        page = last_page;
    1f46:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:826
      lcd.clear();
    1f4a:	0e 94 f6 05 	call	0xbec	; 0xbec <LiquidCrystal::clear() [clone .constprop.38]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:828
    }
    if (increase == 0)
    1f4e:	8a e0       	ldi	r24, 0x0A	; 10
    1f50:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    1f54:	89 2b       	or	r24, r25
    1f56:	09 f0       	breq	.+2      	; 0x1f5a <menu_sensor()+0x86>
    1f58:	3d c1       	rjmp	.+634    	; 0x21d4 <menu_sensor()+0x300>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:829
      go(40, 40);
    1f5a:	68 e2       	ldi	r22, 0x28	; 40
    1f5c:	70 e0       	ldi	r23, 0x00	; 0
    1f5e:	88 e2       	ldi	r24, 0x28	; 40
    1f60:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:833
    else if (decrease == 0)
      go(-40, -40);
    else
      go(0, 0);
    1f62:	0e 94 07 07 	call	0xe0e	; 0xe0e <go(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:837

    ///////////////

    if (page == 1) {
    1f66:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1f6a:	81 30       	cpi	r24, 0x01	; 1
    1f6c:	09 f0       	breq	.+2      	; 0x1f70 <menu_sensor()+0x9c>
    1f6e:	95 c1       	rjmp	.+810    	; 0x229a <menu_sensor()+0x3c6>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:838
      lcd.setCursor(0, 0);
    1f70:	60 e0       	ldi	r22, 0x00	; 0
    1f72:	80 e0       	ldi	r24, 0x00	; 0
    1f74:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:839
      lcd.printf("%d       %d      %d", SL10, SM, SR10);
    1f78:	40 e0       	ldi	r20, 0x00	; 0
    1f7a:	63 e0       	ldi	r22, 0x03	; 3
    1f7c:	82 e0       	ldi	r24, 0x02	; 2
    1f7e:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    1f82:	b8 2e       	mov	r11, r24
    1f84:	a9 2e       	mov	r10, r25
    1f86:	40 e0       	ldi	r20, 0x00	; 0
    1f88:	60 e0       	ldi	r22, 0x00	; 0
    1f8a:	80 e0       	ldi	r24, 0x00	; 0
    1f8c:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    1f90:	18 2f       	mov	r17, r24
    1f92:	09 2f       	mov	r16, r25
    1f94:	40 e0       	ldi	r20, 0x00	; 0
    1f96:	62 e0       	ldi	r22, 0x02	; 2
    1f98:	82 e0       	ldi	r24, 0x02	; 2
    1f9a:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    1f9e:	af 92       	push	r10
    1fa0:	bf 92       	push	r11
    1fa2:	0f 93       	push	r16
    1fa4:	1f 93       	push	r17
    1fa6:	9f 93       	push	r25
    1fa8:	8f 93       	push	r24
    1faa:	87 e3       	ldi	r24, 0x37	; 55
    1fac:	95 e0       	ldi	r25, 0x05	; 5
    1fae:	9f 93       	push	r25
    1fb0:	8f 93       	push	r24
    1fb2:	df 93       	push	r29
    1fb4:	cf 93       	push	r28
    1fb6:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:841

      lcd.setCursor(0, 1);
    1fba:	61 e0       	ldi	r22, 0x01	; 1
    1fbc:	80 e0       	ldi	r24, 0x00	; 0
    1fbe:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:842
      lcd.printf("   %d%d%d    %d%d%d   ", SL3, SL2, SL1, SR1, SR2, SR3);
    1fc2:	40 e0       	ldi	r20, 0x00	; 0
    1fc4:	61 e0       	ldi	r22, 0x01	; 1
    1fc6:	83 e0       	ldi	r24, 0x03	; 3
    1fc8:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    1fcc:	58 2e       	mov	r5, r24
    1fce:	49 2e       	mov	r4, r25
    1fd0:	40 e0       	ldi	r20, 0x00	; 0
    1fd2:	61 e0       	ldi	r22, 0x01	; 1
    1fd4:	82 e0       	ldi	r24, 0x02	; 2
    1fd6:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    1fda:	78 2e       	mov	r7, r24
    1fdc:	69 2e       	mov	r6, r25
    1fde:	40 e0       	ldi	r20, 0x00	; 0
    1fe0:	61 e0       	ldi	r22, 0x01	; 1
    1fe2:	81 e0       	ldi	r24, 0x01	; 1
    1fe4:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    1fe8:	98 2e       	mov	r9, r24
    1fea:	89 2e       	mov	r8, r25
    1fec:	40 e0       	ldi	r20, 0x00	; 0
    1fee:	60 e0       	ldi	r22, 0x00	; 0
    1ff0:	81 e0       	ldi	r24, 0x01	; 1
    1ff2:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    1ff6:	b8 2e       	mov	r11, r24
    1ff8:	a9 2e       	mov	r10, r25
    1ffa:	40 e0       	ldi	r20, 0x00	; 0
    1ffc:	60 e0       	ldi	r22, 0x00	; 0
    1ffe:	82 e0       	ldi	r24, 0x02	; 2
    2000:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    2004:	18 2f       	mov	r17, r24
    2006:	09 2f       	mov	r16, r25
    2008:	40 e0       	ldi	r20, 0x00	; 0
    200a:	60 e0       	ldi	r22, 0x00	; 0
    200c:	83 e0       	ldi	r24, 0x03	; 3
    200e:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    2012:	4f 92       	push	r4
    2014:	5f 92       	push	r5
    2016:	6f 92       	push	r6
    2018:	7f 92       	push	r7
    201a:	8f 92       	push	r8
    201c:	9f 92       	push	r9
    201e:	af 92       	push	r10
    2020:	bf 92       	push	r11
    2022:	0f 93       	push	r16
    2024:	1f 93       	push	r17
    2026:	9f 93       	push	r25
    2028:	8f 93       	push	r24
    202a:	8b e4       	ldi	r24, 0x4B	; 75
    202c:	95 e0       	ldi	r25, 0x05	; 5
    202e:	9f 93       	push	r25
    2030:	8f 93       	push	r24
    2032:	df 93       	push	r29
    2034:	cf 93       	push	r28
    2036:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:844

      lcd.setCursor(0, 2);
    203a:	62 e0       	ldi	r22, 0x02	; 2
    203c:	80 e0       	ldi	r24, 0x00	; 0
    203e:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:845
      lcd.printf("%d%d%d  ENC=%3d %d%d%d", SL6, SL5, SL4, cnt / 100, SR4, SR5, SR6);
    2042:	40 e0       	ldi	r20, 0x00	; 0
    2044:	61 e0       	ldi	r22, 0x01	; 1
    2046:	86 e0       	ldi	r24, 0x06	; 6
    2048:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    204c:	38 2e       	mov	r3, r24
    204e:	29 2e       	mov	r2, r25
    2050:	40 e0       	ldi	r20, 0x00	; 0
    2052:	61 e0       	ldi	r22, 0x01	; 1
    2054:	85 e0       	ldi	r24, 0x05	; 5
    2056:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    205a:	58 2e       	mov	r5, r24
    205c:	49 2e       	mov	r4, r25
    205e:	40 e0       	ldi	r20, 0x00	; 0
    2060:	61 e0       	ldi	r22, 0x01	; 1
    2062:	84 e0       	ldi	r24, 0x04	; 4
    2064:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    2068:	78 2e       	mov	r7, r24
    206a:	69 2e       	mov	r6, r25
    206c:	ac b4       	in	r10, 0x2c	; 44
    206e:	bd b4       	in	r11, 0x2d	; 45
    2070:	40 e0       	ldi	r20, 0x00	; 0
    2072:	60 e0       	ldi	r22, 0x00	; 0
    2074:	84 e0       	ldi	r24, 0x04	; 4
    2076:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    207a:	98 2e       	mov	r9, r24
    207c:	89 2e       	mov	r8, r25
    207e:	40 e0       	ldi	r20, 0x00	; 0
    2080:	60 e0       	ldi	r22, 0x00	; 0
    2082:	85 e0       	ldi	r24, 0x05	; 5
    2084:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    2088:	18 2f       	mov	r17, r24
    208a:	09 2f       	mov	r16, r25
    208c:	40 e0       	ldi	r20, 0x00	; 0
    208e:	60 e0       	ldi	r22, 0x00	; 0
    2090:	86 e0       	ldi	r24, 0x06	; 6
    2092:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    2096:	9c 01       	movw	r18, r24
    2098:	2f 92       	push	r2
    209a:	3f 92       	push	r3
    209c:	4f 92       	push	r4
    209e:	5f 92       	push	r5
    20a0:	6f 92       	push	r6
    20a2:	7f 92       	push	r7
    20a4:	c5 01       	movw	r24, r10
    20a6:	64 e6       	ldi	r22, 0x64	; 100
    20a8:	70 e0       	ldi	r23, 0x00	; 0
    20aa:	0e 94 03 35 	call	0x6a06	; 0x6a06 <__udivmodhi4>
    20ae:	7f 93       	push	r23
    20b0:	6f 93       	push	r22
    20b2:	8f 92       	push	r8
    20b4:	9f 92       	push	r9
    20b6:	0f 93       	push	r16
    20b8:	1f 93       	push	r17
    20ba:	3f 93       	push	r19
    20bc:	2f 93       	push	r18
    20be:	82 e6       	ldi	r24, 0x62	; 98
    20c0:	95 e0       	ldi	r25, 0x05	; 5
    20c2:	9f 93       	push	r25
    20c4:	8f 93       	push	r24
    20c6:	df 93       	push	r29
    20c8:	cf 93       	push	r28
    20ca:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:847

      lcd.setCursor(0, 3);
    20ce:	2d b7       	in	r18, 0x3d	; 61
    20d0:	3e b7       	in	r19, 0x3e	; 62
    20d2:	24 5d       	subi	r18, 0xD4	; 212
    20d4:	3f 4f       	sbci	r19, 0xFF	; 255
    20d6:	0f b6       	in	r0, 0x3f	; 63
    20d8:	f8 94       	cli
    20da:	3e bf       	out	0x3e, r19	; 62
    20dc:	0f be       	out	0x3f, r0	; 63
    20de:	2d bf       	out	0x3d, r18	; 61
    20e0:	63 e0       	ldi	r22, 0x03	; 3
    20e2:	80 e0       	ldi	r24, 0x00	; 0
    20e4:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:848
      lcd.printf("%d%d%d", SL9, SL8, SL7);
    20e8:	40 e0       	ldi	r20, 0x00	; 0
    20ea:	60 e0       	ldi	r22, 0x00	; 0
    20ec:	87 e0       	ldi	r24, 0x07	; 7
    20ee:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    20f2:	b8 2e       	mov	r11, r24
    20f4:	a9 2e       	mov	r10, r25
    20f6:	40 e0       	ldi	r20, 0x00	; 0
    20f8:	62 e0       	ldi	r22, 0x02	; 2
    20fa:	80 e0       	ldi	r24, 0x00	; 0
    20fc:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    2100:	18 2f       	mov	r17, r24
    2102:	09 2f       	mov	r16, r25
    2104:	40 e0       	ldi	r20, 0x00	; 0
    2106:	62 e0       	ldi	r22, 0x02	; 2
    2108:	81 e0       	ldi	r24, 0x01	; 1
    210a:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    210e:	af 92       	push	r10
    2110:	bf 92       	push	r11
    2112:	0f 93       	push	r16
    2114:	1f 93       	push	r17
    2116:	9f 93       	push	r25
    2118:	8f 93       	push	r24
    211a:	02 e7       	ldi	r16, 0x72	; 114
    211c:	15 e0       	ldi	r17, 0x05	; 5
    211e:	1f 93       	push	r17
    2120:	0f 93       	push	r16
    2122:	df 93       	push	r29
    2124:	cf 93       	push	r28
    2126:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:850

      lcd.setCursor(13, 3);
    212a:	63 e0       	ldi	r22, 0x03	; 3
    212c:	8d e0       	ldi	r24, 0x0D	; 13
    212e:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:851
      lcd.printf("%d%d%d", SR7, SR8, SR9);
    2132:	40 e0       	ldi	r20, 0x00	; 0
    2134:	63 e0       	ldi	r22, 0x03	; 3
    2136:	81 e0       	ldi	r24, 0x01	; 1
    2138:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    213c:	98 2e       	mov	r9, r24
    213e:	89 2e       	mov	r8, r25
    2140:	40 e0       	ldi	r20, 0x00	; 0
    2142:	63 e0       	ldi	r22, 0x03	; 3
    2144:	80 e0       	ldi	r24, 0x00	; 0
    2146:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    214a:	b8 2e       	mov	r11, r24
    214c:	a9 2e       	mov	r10, r25
    214e:	40 e0       	ldi	r20, 0x00	; 0
    2150:	61 e0       	ldi	r22, 0x01	; 1
    2152:	87 e0       	ldi	r24, 0x07	; 7
    2154:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    2158:	8f 92       	push	r8
    215a:	9f 92       	push	r9
    215c:	af 92       	push	r10
    215e:	bf 92       	push	r11
    2160:	9f 93       	push	r25
    2162:	8f 93       	push	r24
    2164:	1f 93       	push	r17
    2166:	0f 93       	push	r16
    2168:	df 93       	push	r29
    216a:	cf 93       	push	r28
    216c:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:853

      lcd.setCursor(4, 3);
    2170:	63 e0       	ldi	r22, 0x03	; 3
    2172:	84 e0       	ldi	r24, 0x04	; 4
    2174:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:854
      if (color_L == RED)
    2178:	81 e0       	ldi	r24, 0x01	; 1
    217a:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <color(char)>
    217e:	2d b7       	in	r18, 0x3d	; 61
    2180:	3e b7       	in	r19, 0x3e	; 62
    2182:	2c 5e       	subi	r18, 0xEC	; 236
    2184:	3f 4f       	sbci	r19, 0xFF	; 255
    2186:	0f b6       	in	r0, 0x3f	; 63
    2188:	f8 94       	cli
    218a:	3e bf       	out	0x3e, r19	; 62
    218c:	0f be       	out	0x3f, r0	; 63
    218e:	2d bf       	out	0x3d, r18	; 61
    2190:	81 11       	cpse	r24, r1
    2192:	2f c0       	rjmp	.+94     	; 0x21f2 <menu_sensor()+0x31e>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:855
        lcd.print("RED ");
    2194:	8a e6       	ldi	r24, 0x6A	; 106
    2196:	94 e0       	ldi	r25, 0x04	; 4
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:865
      else if (color_L == YELLOW)
        lcd.print("YEL ");
      else if (color_L == SILVER)
        lcd.print("SIL ");
      else
        lcd.print("WHT ");
    2198:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:867

      lcd.setCursor(9, 3);
    219c:	63 e0       	ldi	r22, 0x03	; 3
    219e:	89 e0       	ldi	r24, 0x09	; 9
    21a0:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:868
      if (color_R == RED)
    21a4:	82 e0       	ldi	r24, 0x02	; 2
    21a6:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <color(char)>
    21aa:	81 11       	cpse	r24, r1
    21ac:	45 c0       	rjmp	.+138    	; 0x2238 <menu_sensor()+0x364>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:869
        lcd.print("RED");
    21ae:	8e e7       	ldi	r24, 0x7E	; 126
    21b0:	95 e0       	ldi	r25, 0x05	; 5
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:879
      else if (color_R == YELLOW)
        lcd.print("YEL");
      else if (VSR6 < 0.9)
        lcd.print("SIL");
      else
        lcd.print("WHT");
    21b2:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:881

      if (start == 0) {
    21b6:	86 e0       	ldi	r24, 0x06	; 6
    21b8:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    21bc:	89 2b       	or	r24, r25
    21be:	09 f0       	breq	.+2      	; 0x21c2 <menu_sensor()+0x2ee>
    21c0:	92 ce       	rjmp	.-732    	; 0x1ee6 <menu_sensor()+0x12>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:882
        TCNT1 = 0;
    21c2:	1d bc       	out	0x2d, r1	; 45
    21c4:	1c bc       	out	0x2c, r1	; 44
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:883
        cnt = 0;
    21c6:	1d bc       	out	0x2d, r1	; 45
    21c8:	1c bc       	out	0x2c, r1	; 44
    21ca:	8d ce       	rjmp	.-742    	; 0x1ee6 <menu_sensor()+0x12>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:816
      while (next_page == 0)
        ;
      delay(50);
      page++;
      if (page > last_page)
        page = 1;
    21cc:	81 e0       	ldi	r24, 0x01	; 1
    21ce:	a1 ce       	rjmp	.-702    	; 0x1f12 <menu_sensor()+0x3e>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:825
      while (previuse_page == 0)
        ;
      delay(50);
      page--;
      if (page < 1)
        page = last_page;
    21d0:	86 e0       	ldi	r24, 0x06	; 6
    21d2:	b9 ce       	rjmp	.-654    	; 0x1f46 <menu_sensor()+0x72>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:830
      lcd.clear();
    }
    if (increase == 0)
      go(40, 40);
    else if (decrease == 0)
    21d4:	8b e0       	ldi	r24, 0x0B	; 11
    21d6:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    21da:	89 2b       	or	r24, r25
    21dc:	29 f4       	brne	.+10     	; 0x21e8 <menu_sensor()+0x314>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:831
      go(-40, -40);
    21de:	68 ed       	ldi	r22, 0xD8	; 216
    21e0:	7f ef       	ldi	r23, 0xFF	; 255
    21e2:	88 ed       	ldi	r24, 0xD8	; 216
    21e4:	9f ef       	ldi	r25, 0xFF	; 255
    21e6:	bd ce       	rjmp	.-646    	; 0x1f62 <menu_sensor()+0x8e>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:833
    else
      go(0, 0);
    21e8:	70 e0       	ldi	r23, 0x00	; 0
    21ea:	60 e0       	ldi	r22, 0x00	; 0
    21ec:	90 e0       	ldi	r25, 0x00	; 0
    21ee:	80 e0       	ldi	r24, 0x00	; 0
    21f0:	b8 ce       	rjmp	.-656    	; 0x1f62 <menu_sensor()+0x8e>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:856
      lcd.printf("%d%d%d", SR7, SR8, SR9);

      lcd.setCursor(4, 3);
      if (color_L == RED)
        lcd.print("RED ");
      else if (color_L == GREEN)
    21f2:	81 e0       	ldi	r24, 0x01	; 1
    21f4:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <color(char)>
    21f8:	81 30       	cpi	r24, 0x01	; 1
    21fa:	19 f4       	brne	.+6      	; 0x2202 <menu_sensor()+0x32e>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:857
        lcd.print("GRN ");
    21fc:	81 e8       	ldi	r24, 0x81	; 129
    21fe:	94 e0       	ldi	r25, 0x04	; 4
    2200:	cb cf       	rjmp	.-106    	; 0x2198 <menu_sensor()+0x2c4>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:858
      else if (color_L == BLUE)
    2202:	81 e0       	ldi	r24, 0x01	; 1
    2204:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <color(char)>
    2208:	82 30       	cpi	r24, 0x02	; 2
    220a:	19 f4       	brne	.+6      	; 0x2212 <menu_sensor()+0x33e>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:859
        lcd.print("BLU ");
    220c:	85 e6       	ldi	r24, 0x65	; 101
    220e:	94 e0       	ldi	r25, 0x04	; 4
    2210:	c3 cf       	rjmp	.-122    	; 0x2198 <menu_sensor()+0x2c4>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:860
      else if (color_L == YELLOW)
    2212:	81 e0       	ldi	r24, 0x01	; 1
    2214:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <color(char)>
    2218:	84 30       	cpi	r24, 0x04	; 4
    221a:	19 f4       	brne	.+6      	; 0x2222 <menu_sensor()+0x34e>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:861
        lcd.print("YEL ");
    221c:	89 e7       	ldi	r24, 0x79	; 121
    221e:	95 e0       	ldi	r25, 0x05	; 5
    2220:	bb cf       	rjmp	.-138    	; 0x2198 <menu_sensor()+0x2c4>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:862
      else if (color_L == SILVER)
    2222:	81 e0       	ldi	r24, 0x01	; 1
    2224:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <color(char)>
    2228:	85 30       	cpi	r24, 0x05	; 5
    222a:	19 f4       	brne	.+6      	; 0x2232 <menu_sensor()+0x35e>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:863
        lcd.print("SIL ");
    222c:	89 e9       	ldi	r24, 0x99	; 153
    222e:	94 e0       	ldi	r25, 0x04	; 4
    2230:	b3 cf       	rjmp	.-154    	; 0x2198 <menu_sensor()+0x2c4>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:865
      else
        lcd.print("WHT ");
    2232:	8e e9       	ldi	r24, 0x9E	; 158
    2234:	94 e0       	ldi	r25, 0x04	; 4
    2236:	b0 cf       	rjmp	.-160    	; 0x2198 <menu_sensor()+0x2c4>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:870

      lcd.setCursor(9, 3);
      if (color_R == RED)
        lcd.print("RED");
      else if (color_R == GREEN)
    2238:	82 e0       	ldi	r24, 0x02	; 2
    223a:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <color(char)>
    223e:	81 30       	cpi	r24, 0x01	; 1
    2240:	19 f4       	brne	.+6      	; 0x2248 <menu_sensor()+0x374>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:871
        lcd.print("GRN");
    2242:	82 e8       	ldi	r24, 0x82	; 130
    2244:	95 e0       	ldi	r25, 0x05	; 5
    2246:	b5 cf       	rjmp	.-150    	; 0x21b2 <menu_sensor()+0x2de>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:872
      else if (color_R == BLUE)
    2248:	82 e0       	ldi	r24, 0x02	; 2
    224a:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <color(char)>
    224e:	82 30       	cpi	r24, 0x02	; 2
    2250:	19 f4       	brne	.+6      	; 0x2258 <menu_sensor()+0x384>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:873
        lcd.print("BLU");
    2252:	86 e8       	ldi	r24, 0x86	; 134
    2254:	95 e0       	ldi	r25, 0x05	; 5
    2256:	ad cf       	rjmp	.-166    	; 0x21b2 <menu_sensor()+0x2de>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:874
      else if (color_R == YELLOW)
    2258:	82 e0       	ldi	r24, 0x02	; 2
    225a:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <color(char)>
    225e:	84 30       	cpi	r24, 0x04	; 4
    2260:	19 f4       	brne	.+6      	; 0x2268 <menu_sensor()+0x394>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:875
        lcd.print("YEL");
    2262:	8a e8       	ldi	r24, 0x8A	; 138
    2264:	95 e0       	ldi	r25, 0x05	; 5
    2266:	a5 cf       	rjmp	.-182    	; 0x21b2 <menu_sensor()+0x2de>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:876
      else if (VSR6 < 0.9)
    2268:	41 e0       	ldi	r20, 0x01	; 1
    226a:	61 e0       	ldi	r22, 0x01	; 1
    226c:	86 e0       	ldi	r24, 0x06	; 6
    226e:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    2272:	bc 01       	movw	r22, r24
    2274:	99 0f       	add	r25, r25
    2276:	88 0b       	sbc	r24, r24
    2278:	99 0b       	sbc	r25, r25
    227a:	0e 94 e6 33 	call	0x67cc	; 0x67cc <__floatsisf>
    227e:	26 e6       	ldi	r18, 0x66	; 102
    2280:	36 e6       	ldi	r19, 0x66	; 102
    2282:	46 e6       	ldi	r20, 0x66	; 102
    2284:	5f e3       	ldi	r21, 0x3F	; 63
    2286:	0e 94 37 33 	call	0x666e	; 0x666e <__cmpsf2>
    228a:	87 ff       	sbrs	r24, 7
    228c:	03 c0       	rjmp	.+6      	; 0x2294 <menu_sensor()+0x3c0>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:877
        lcd.print("SIL");
    228e:	8e e8       	ldi	r24, 0x8E	; 142
    2290:	95 e0       	ldi	r25, 0x05	; 5
    2292:	8f cf       	rjmp	.-226    	; 0x21b2 <menu_sensor()+0x2de>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:879
      else
        lcd.print("WHT");
    2294:	82 e9       	ldi	r24, 0x92	; 146
    2296:	95 e0       	ldi	r25, 0x05	; 5
    2298:	8c cf       	rjmp	.-232    	; 0x21b2 <menu_sensor()+0x2de>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:886
      if (start == 0) {
        TCNT1 = 0;
        cnt = 0;
        //puls_cnt = 0;
      }
    } else if (page == 2)  // V left
    229a:	82 30       	cpi	r24, 0x02	; 2
    229c:	09 f0       	breq	.+2      	; 0x22a0 <menu_sensor()+0x3cc>
    229e:	92 c0       	rjmp	.+292    	; 0x23c4 <menu_sensor()+0x4f0>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:888
    {
      lcd.setCursor(0, 0);
    22a0:	60 e0       	ldi	r22, 0x00	; 0
    22a2:	80 e0       	ldi	r24, 0x00	; 0
    22a4:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:889
      lcd.printf("L10=%02d        %02d", VSL10, VSM);
    22a8:	41 e0       	ldi	r20, 0x01	; 1
    22aa:	60 e0       	ldi	r22, 0x00	; 0
    22ac:	80 e0       	ldi	r24, 0x00	; 0
    22ae:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    22b2:	18 2f       	mov	r17, r24
    22b4:	09 2f       	mov	r16, r25
    22b6:	41 e0       	ldi	r20, 0x01	; 1
    22b8:	62 e0       	ldi	r22, 0x02	; 2
    22ba:	82 e0       	ldi	r24, 0x02	; 2
    22bc:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    22c0:	0f 93       	push	r16
    22c2:	1f 93       	push	r17
    22c4:	9f 93       	push	r25
    22c6:	8f 93       	push	r24
    22c8:	86 e9       	ldi	r24, 0x96	; 150
    22ca:	95 e0       	ldi	r25, 0x05	; 5
    22cc:	9f 93       	push	r25
    22ce:	8f 93       	push	r24
    22d0:	df 93       	push	r29
    22d2:	cf 93       	push	r28
    22d4:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:891

      lcd.setCursor(5, 1);
    22d8:	61 e0       	ldi	r22, 0x01	; 1
    22da:	85 e0       	ldi	r24, 0x05	; 5
    22dc:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:892
      lcd.printf("%02d  %02d  %02d", VSL3, VSL2, VSL1);
    22e0:	41 e0       	ldi	r20, 0x01	; 1
    22e2:	60 e0       	ldi	r22, 0x00	; 0
    22e4:	81 e0       	ldi	r24, 0x01	; 1
    22e6:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    22ea:	b8 2e       	mov	r11, r24
    22ec:	a9 2e       	mov	r10, r25
    22ee:	41 e0       	ldi	r20, 0x01	; 1
    22f0:	60 e0       	ldi	r22, 0x00	; 0
    22f2:	82 e0       	ldi	r24, 0x02	; 2
    22f4:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    22f8:	18 2f       	mov	r17, r24
    22fa:	09 2f       	mov	r16, r25
    22fc:	41 e0       	ldi	r20, 0x01	; 1
    22fe:	60 e0       	ldi	r22, 0x00	; 0
    2300:	83 e0       	ldi	r24, 0x03	; 3
    2302:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    2306:	af 92       	push	r10
    2308:	bf 92       	push	r11
    230a:	0f 93       	push	r16
    230c:	1f 93       	push	r17
    230e:	9f 93       	push	r25
    2310:	8f 93       	push	r24
    2312:	8b ea       	ldi	r24, 0xAB	; 171
    2314:	95 e0       	ldi	r25, 0x05	; 5
    2316:	9f 93       	push	r25
    2318:	8f 93       	push	r24
    231a:	df 93       	push	r29
    231c:	cf 93       	push	r28
    231e:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:894

      lcd.setCursor(2, 2);
    2322:	62 e0       	ldi	r22, 0x02	; 2
    2324:	82 e0       	ldi	r24, 0x02	; 2
    2326:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:895
      lcd.printf("%02d  %02d  %02d ", VSL6, VSL5, VSL4);
    232a:	41 e0       	ldi	r20, 0x01	; 1
    232c:	60 e0       	ldi	r22, 0x00	; 0
    232e:	84 e0       	ldi	r24, 0x04	; 4
    2330:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    2334:	b8 2e       	mov	r11, r24
    2336:	a9 2e       	mov	r10, r25
    2338:	41 e0       	ldi	r20, 0x01	; 1
    233a:	60 e0       	ldi	r22, 0x00	; 0
    233c:	85 e0       	ldi	r24, 0x05	; 5
    233e:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    2342:	18 2f       	mov	r17, r24
    2344:	09 2f       	mov	r16, r25
    2346:	41 e0       	ldi	r20, 0x01	; 1
    2348:	60 e0       	ldi	r22, 0x00	; 0
    234a:	86 e0       	ldi	r24, 0x06	; 6
    234c:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    2350:	af 92       	push	r10
    2352:	bf 92       	push	r11
    2354:	0f 93       	push	r16
    2356:	1f 93       	push	r17
    2358:	9f 93       	push	r25
    235a:	8f 93       	push	r24
    235c:	0c eb       	ldi	r16, 0xBC	; 188
    235e:	15 e0       	ldi	r17, 0x05	; 5
    2360:	1f 93       	push	r17
    2362:	0f 93       	push	r16
    2364:	df 93       	push	r29
    2366:	cf 93       	push	r28
    2368:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:897

      lcd.setCursor(0, 3);
    236c:	63 e0       	ldi	r22, 0x03	; 3
    236e:	80 e0       	ldi	r24, 0x00	; 0
    2370:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:898
      lcd.printf("%02d  %02d  %02d ", VSL9, VSL8, VSL7);
    2374:	41 e0       	ldi	r20, 0x01	; 1
    2376:	60 e0       	ldi	r22, 0x00	; 0
    2378:	87 e0       	ldi	r24, 0x07	; 7
    237a:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    237e:	98 2e       	mov	r9, r24
    2380:	89 2e       	mov	r8, r25
    2382:	41 e0       	ldi	r20, 0x01	; 1
    2384:	62 e0       	ldi	r22, 0x02	; 2
    2386:	80 e0       	ldi	r24, 0x00	; 0
    2388:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    238c:	b8 2e       	mov	r11, r24
    238e:	a9 2e       	mov	r10, r25
    2390:	41 e0       	ldi	r20, 0x01	; 1
    2392:	62 e0       	ldi	r22, 0x02	; 2
    2394:	81 e0       	ldi	r24, 0x01	; 1
    2396:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    239a:	8f 92       	push	r8
    239c:	9f 92       	push	r9
    239e:	af 92       	push	r10
    23a0:	bf 92       	push	r11
    23a2:	9f 93       	push	r25
    23a4:	8f 93       	push	r24
    23a6:	1f 93       	push	r17
    23a8:	0f 93       	push	r16
    23aa:	df 93       	push	r29
    23ac:	cf 93       	push	r28
    23ae:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
    23b2:	ed b7       	in	r30, 0x3d	; 61
    23b4:	fe b7       	in	r31, 0x3e	; 62
    23b6:	b6 96       	adiw	r30, 0x26	; 38
    23b8:	0f b6       	in	r0, 0x3f	; 63
    23ba:	f8 94       	cli
    23bc:	fe bf       	out	0x3e, r31	; 62
    23be:	0f be       	out	0x3f, r0	; 63
    23c0:	ed bf       	out	0x3d, r30	; 61
    23c2:	91 cd       	rjmp	.-1246   	; 0x1ee6 <menu_sensor()+0x12>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:899
    } else if (page == 3)  // V right
    23c4:	83 30       	cpi	r24, 0x03	; 3
    23c6:	09 f0       	breq	.+2      	; 0x23ca <menu_sensor()+0x4f6>
    23c8:	90 c0       	rjmp	.+288    	; 0x24ea <menu_sensor()+0x616>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:901
    {
      lcd.setCursor(0, 0);
    23ca:	60 e0       	ldi	r22, 0x00	; 0
    23cc:	80 e0       	ldi	r24, 0x00	; 0
    23ce:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:902
      lcd.printf("%02d        R10=%02d", VSM, VSR10);
    23d2:	41 e0       	ldi	r20, 0x01	; 1
    23d4:	63 e0       	ldi	r22, 0x03	; 3
    23d6:	82 e0       	ldi	r24, 0x02	; 2
    23d8:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    23dc:	18 2f       	mov	r17, r24
    23de:	09 2f       	mov	r16, r25
    23e0:	41 e0       	ldi	r20, 0x01	; 1
    23e2:	60 e0       	ldi	r22, 0x00	; 0
    23e4:	80 e0       	ldi	r24, 0x00	; 0
    23e6:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    23ea:	0f 93       	push	r16
    23ec:	1f 93       	push	r17
    23ee:	9f 93       	push	r25
    23f0:	8f 93       	push	r24
    23f2:	8e ec       	ldi	r24, 0xCE	; 206
    23f4:	95 e0       	ldi	r25, 0x05	; 5
    23f6:	9f 93       	push	r25
    23f8:	8f 93       	push	r24
    23fa:	df 93       	push	r29
    23fc:	cf 93       	push	r28
    23fe:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:904

      lcd.setCursor(2, 1);
    2402:	61 e0       	ldi	r22, 0x01	; 1
    2404:	82 e0       	ldi	r24, 0x02	; 2
    2406:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:905
      lcd.printf("%02d  %02d  %02d ", VSR1, VSR2, VSR3);
    240a:	41 e0       	ldi	r20, 0x01	; 1
    240c:	61 e0       	ldi	r22, 0x01	; 1
    240e:	83 e0       	ldi	r24, 0x03	; 3
    2410:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    2414:	b8 2e       	mov	r11, r24
    2416:	a9 2e       	mov	r10, r25
    2418:	41 e0       	ldi	r20, 0x01	; 1
    241a:	61 e0       	ldi	r22, 0x01	; 1
    241c:	82 e0       	ldi	r24, 0x02	; 2
    241e:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    2422:	18 2f       	mov	r17, r24
    2424:	09 2f       	mov	r16, r25
    2426:	41 e0       	ldi	r20, 0x01	; 1
    2428:	61 e0       	ldi	r22, 0x01	; 1
    242a:	81 e0       	ldi	r24, 0x01	; 1
    242c:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    2430:	af 92       	push	r10
    2432:	bf 92       	push	r11
    2434:	0f 93       	push	r16
    2436:	1f 93       	push	r17
    2438:	9f 93       	push	r25
    243a:	8f 93       	push	r24
    243c:	0c eb       	ldi	r16, 0xBC	; 188
    243e:	15 e0       	ldi	r17, 0x05	; 5
    2440:	1f 93       	push	r17
    2442:	0f 93       	push	r16
    2444:	df 93       	push	r29
    2446:	cf 93       	push	r28
    2448:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:907

      lcd.setCursor(4, 2);
    244c:	62 e0       	ldi	r22, 0x02	; 2
    244e:	84 e0       	ldi	r24, 0x04	; 4
    2450:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:908
      lcd.printf("%02d  %02d  %02d ", VSR4, VSR5, VSR6);
    2454:	41 e0       	ldi	r20, 0x01	; 1
    2456:	61 e0       	ldi	r22, 0x01	; 1
    2458:	86 e0       	ldi	r24, 0x06	; 6
    245a:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    245e:	98 2e       	mov	r9, r24
    2460:	89 2e       	mov	r8, r25
    2462:	41 e0       	ldi	r20, 0x01	; 1
    2464:	61 e0       	ldi	r22, 0x01	; 1
    2466:	85 e0       	ldi	r24, 0x05	; 5
    2468:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    246c:	b8 2e       	mov	r11, r24
    246e:	a9 2e       	mov	r10, r25
    2470:	41 e0       	ldi	r20, 0x01	; 1
    2472:	61 e0       	ldi	r22, 0x01	; 1
    2474:	84 e0       	ldi	r24, 0x04	; 4
    2476:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    247a:	8f 92       	push	r8
    247c:	9f 92       	push	r9
    247e:	af 92       	push	r10
    2480:	bf 92       	push	r11
    2482:	9f 93       	push	r25
    2484:	8f 93       	push	r24
    2486:	1f 93       	push	r17
    2488:	0f 93       	push	r16
    248a:	df 93       	push	r29
    248c:	cf 93       	push	r28
    248e:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:910

      lcd.setCursor(6, 3);
    2492:	63 e0       	ldi	r22, 0x03	; 3
    2494:	86 e0       	ldi	r24, 0x06	; 6
    2496:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:911
      lcd.printf("%02d  %02d  %02d ", VSR7, VSR8, VSR9);
    249a:	41 e0       	ldi	r20, 0x01	; 1
    249c:	63 e0       	ldi	r22, 0x03	; 3
    249e:	81 e0       	ldi	r24, 0x01	; 1
    24a0:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    24a4:	98 2e       	mov	r9, r24
    24a6:	89 2e       	mov	r8, r25
    24a8:	41 e0       	ldi	r20, 0x01	; 1
    24aa:	63 e0       	ldi	r22, 0x03	; 3
    24ac:	80 e0       	ldi	r24, 0x00	; 0
    24ae:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    24b2:	b8 2e       	mov	r11, r24
    24b4:	a9 2e       	mov	r10, r25
    24b6:	41 e0       	ldi	r20, 0x01	; 1
    24b8:	61 e0       	ldi	r22, 0x01	; 1
    24ba:	87 e0       	ldi	r24, 0x07	; 7
    24bc:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    24c0:	8f 92       	push	r8
    24c2:	9f 92       	push	r9
    24c4:	af 92       	push	r10
    24c6:	bf 92       	push	r11
    24c8:	9f 93       	push	r25
    24ca:	8f 93       	push	r24
    24cc:	1f 93       	push	r17
    24ce:	0f 93       	push	r16
    24d0:	df 93       	push	r29
    24d2:	cf 93       	push	r28
    24d4:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
    24d8:	8d b7       	in	r24, 0x3d	; 61
    24da:	9e b7       	in	r25, 0x3e	; 62
    24dc:	86 96       	adiw	r24, 0x26	; 38
    24de:	0f b6       	in	r0, 0x3f	; 63
    24e0:	f8 94       	cli
    24e2:	9e bf       	out	0x3e, r25	; 62
    24e4:	0f be       	out	0x3f, r0	; 63
    24e6:	8d bf       	out	0x3d, r24	; 61
    24e8:	fe cc       	rjmp	.-1540   	; 0x1ee6 <menu_sensor()+0x12>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:912
    } else if (page == 4)  // switches
    24ea:	84 30       	cpi	r24, 0x04	; 4
    24ec:	09 f0       	breq	.+2      	; 0x24f0 <menu_sensor()+0x61c>
    24ee:	7e c0       	rjmp	.+252    	; 0x25ec <menu_sensor()+0x718>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:914
    {
      lcd.setCursor(0, 0);
    24f0:	60 e0       	ldi	r22, 0x00	; 0
    24f2:	80 e0       	ldi	r24, 0x00	; 0
    24f4:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:915
      lcd.printf("SL=%d con=%d SR=%d", SFL, con, SFR);
    24f8:	40 e0       	ldi	r20, 0x00	; 0
    24fa:	63 e0       	ldi	r22, 0x03	; 3
    24fc:	84 e0       	ldi	r24, 0x04	; 4
    24fe:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    2502:	b8 2e       	mov	r11, r24
    2504:	a9 2e       	mov	r10, r25
    2506:	40 e0       	ldi	r20, 0x00	; 0
    2508:	63 e0       	ldi	r22, 0x03	; 3
    250a:	83 e0       	ldi	r24, 0x03	; 3
    250c:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    2510:	18 2f       	mov	r17, r24
    2512:	09 2f       	mov	r16, r25
    2514:	40 e0       	ldi	r20, 0x00	; 0
    2516:	62 e0       	ldi	r22, 0x02	; 2
    2518:	84 e0       	ldi	r24, 0x04	; 4
    251a:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    251e:	af 92       	push	r10
    2520:	bf 92       	push	r11
    2522:	0f 93       	push	r16
    2524:	1f 93       	push	r17
    2526:	9f 93       	push	r25
    2528:	8f 93       	push	r24
    252a:	e3 ee       	ldi	r30, 0xE3	; 227
    252c:	f5 e0       	ldi	r31, 0x05	; 5
    252e:	ff 93       	push	r31
    2530:	ef 93       	push	r30
    2532:	df 93       	push	r29
    2534:	cf 93       	push	r28
    2536:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:917

      lcd.setCursor(0, 1);
    253a:	61 e0       	ldi	r22, 0x01	; 1
    253c:	80 e0       	ldi	r24, 0x00	; 0
    253e:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:918
      lcd.printf("obs = %d = %02d ", obs, Vobs);
    2542:	41 e0       	ldi	r20, 0x01	; 1
    2544:	62 e0       	ldi	r22, 0x02	; 2
    2546:	86 e0       	ldi	r24, 0x06	; 6
    2548:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    254c:	18 2f       	mov	r17, r24
    254e:	09 2f       	mov	r16, r25
    2550:	40 e0       	ldi	r20, 0x00	; 0
    2552:	62 e0       	ldi	r22, 0x02	; 2
    2554:	86 e0       	ldi	r24, 0x06	; 6
    2556:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    255a:	0f 93       	push	r16
    255c:	1f 93       	push	r17
    255e:	9f 93       	push	r25
    2560:	8f 93       	push	r24
    2562:	e6 ef       	ldi	r30, 0xF6	; 246
    2564:	f5 e0       	ldi	r31, 0x05	; 5
    2566:	ff 93       	push	r31
    2568:	ef 93       	push	r30
    256a:	df 93       	push	r29
    256c:	cf 93       	push	r28
    256e:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:920

      lcd.setCursor(0, 2);
    2572:	62 e0       	ldi	r22, 0x02	; 2
    2574:	80 e0       	ldi	r24, 0x00	; 0
    2576:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:921
      lcd.printf("ball=%d = %02d ", ball, Vball);
    257a:	41 e0       	ldi	r20, 0x01	; 1
    257c:	62 e0       	ldi	r22, 0x02	; 2
    257e:	85 e0       	ldi	r24, 0x05	; 5
    2580:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    2584:	18 2f       	mov	r17, r24
    2586:	09 2f       	mov	r16, r25
    2588:	40 e0       	ldi	r20, 0x00	; 0
    258a:	62 e0       	ldi	r22, 0x02	; 2
    258c:	85 e0       	ldi	r24, 0x05	; 5
    258e:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    2592:	0f 93       	push	r16
    2594:	1f 93       	push	r17
    2596:	9f 93       	push	r25
    2598:	8f 93       	push	r24
    259a:	e7 e0       	ldi	r30, 0x07	; 7
    259c:	f6 e0       	ldi	r31, 0x06	; 6
    259e:	ff 93       	push	r31
    25a0:	ef 93       	push	r30
    25a2:	df 93       	push	r29
    25a4:	cf 93       	push	r28
    25a6:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:923

      lcd.setCursor(0, 3);
    25aa:	63 e0       	ldi	r22, 0x03	; 3
    25ac:	80 e0       	ldi	r24, 0x00	; 0
    25ae:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:924
      lcd.printf("SBL=%d  SBR=%d  ", SBL, SBR);
    25b2:	86 e2       	ldi	r24, 0x26	; 38
    25b4:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    25b8:	18 2f       	mov	r17, r24
    25ba:	09 2f       	mov	r16, r25
    25bc:	85 e2       	ldi	r24, 0x25	; 37
    25be:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    25c2:	0f 93       	push	r16
    25c4:	1f 93       	push	r17
    25c6:	9f 93       	push	r25
    25c8:	8f 93       	push	r24
    25ca:	e7 e1       	ldi	r30, 0x17	; 23
    25cc:	f6 e0       	ldi	r31, 0x06	; 6
    25ce:	ff 93       	push	r31
    25d0:	ef 93       	push	r30
    25d2:	df 93       	push	r29
    25d4:	cf 93       	push	r28
    25d6:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
    25da:	ed b7       	in	r30, 0x3d	; 61
    25dc:	fe b7       	in	r31, 0x3e	; 62
    25de:	b2 96       	adiw	r30, 0x22	; 34
    25e0:	0f b6       	in	r0, 0x3f	; 63
    25e2:	f8 94       	cli
    25e4:	fe bf       	out	0x3e, r31	; 62
    25e6:	0f be       	out	0x3f, r0	; 63
    25e8:	ed bf       	out	0x3d, r30	; 61
    25ea:	7d cc       	rjmp	.-1798   	; 0x1ee6 <menu_sensor()+0x12>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:925
    } else if (page == 5)  // distance
    25ec:	85 30       	cpi	r24, 0x05	; 5
    25ee:	09 f0       	breq	.+2      	; 0x25f2 <menu_sensor()+0x71e>
    25f0:	9a c0       	rjmp	.+308    	; 0x2726 <menu_sensor()+0x852>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:927
    {
      lcd.setCursor(0, 0);
    25f2:	60 e0       	ldi	r22, 0x00	; 0
    25f4:	80 e0       	ldi	r24, 0x00	; 0
    25f6:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
ultrasonic():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1984
      }
    }
  }
}
int ultrasonic() {
  pinMode(pingPin, OUTPUT);
    25fa:	61 e0       	ldi	r22, 0x01	; 1
    25fc:	89 e1       	ldi	r24, 0x19	; 25
    25fe:	0e 94 3a 02 	call	0x474	; 0x474 <pinMode>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1985
  digitalWrite(pingPin, LOW);
    2602:	60 e0       	ldi	r22, 0x00	; 0
    2604:	89 e1       	ldi	r24, 0x19	; 25
    2606:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1986
  delayMicroseconds(2);
    260a:	82 e0       	ldi	r24, 0x02	; 2
    260c:	90 e0       	ldi	r25, 0x00	; 0
    260e:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <delayMicroseconds>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1987
  digitalWrite(pingPin, HIGH);
    2612:	61 e0       	ldi	r22, 0x01	; 1
    2614:	89 e1       	ldi	r24, 0x19	; 25
    2616:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1988
  delayMicroseconds(10);
    261a:	8a e0       	ldi	r24, 0x0A	; 10
    261c:	90 e0       	ldi	r25, 0x00	; 0
    261e:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <delayMicroseconds>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1989
  digitalWrite(pingPin, LOW);
    2622:	60 e0       	ldi	r22, 0x00	; 0
    2624:	89 e1       	ldi	r24, 0x19	; 25
    2626:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1990
  pinMode(echoPin, INPUT);
    262a:	60 e0       	ldi	r22, 0x00	; 0
    262c:	80 e1       	ldi	r24, 0x10	; 16
    262e:	0e 94 3a 02 	call	0x474	; 0x474 <pinMode>
pulseIn():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.c:38
unsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout)
{
  // cache the port and bit of the pin in order to speed up the
  // pulse width measuring loop and achieve finer resolution.  calling
  // digitalRead() instead yields much coarser resolution.
  uint8_t bit = digitalPinToBitMask(pin);
    2632:	e1 e0       	ldi	r30, 0x01	; 1
    2634:	f1 e0       	ldi	r31, 0x01	; 1
    2636:	64 91       	lpm	r22, Z
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.c:39
  uint8_t port = digitalPinToPort(pin);
    2638:	ec ec       	ldi	r30, 0xCC	; 204
    263a:	f0 e0       	ldi	r31, 0x00	; 0
    263c:	84 91       	lpm	r24, Z
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.c:46

  // convert the timeout from microseconds to a number of times through
  // the initial loop; it takes approximately 16 clock cycles per iteration
  unsigned long maxloops = microsecondsToClockCycles(timeout)/16;

  unsigned long width = countPulseASM(portInputRegister(port), bit, stateMask, maxloops);
    263e:	e8 2f       	mov	r30, r24
    2640:	f0 e0       	ldi	r31, 0x00	; 0
    2642:	ee 0f       	add	r30, r30
    2644:	ff 1f       	adc	r31, r31
    2646:	e4 55       	subi	r30, 0x54	; 84
    2648:	ff 4f       	sbci	r31, 0xFF	; 255
    264a:	85 91       	lpm	r24, Z+
    264c:	94 91       	lpm	r25, Z
    264e:	0c e8       	ldi	r16, 0x8C	; 140
    2650:	1d e7       	ldi	r17, 0x7D	; 125
    2652:	2a e0       	ldi	r18, 0x0A	; 10
    2654:	30 e0       	ldi	r19, 0x00	; 0
    2656:	46 2f       	mov	r20, r22
    2658:	0e 94 f8 15 	call	0x2bf0	; 0x2bf0 <countPulseASM>
    265c:	9b 01       	movw	r18, r22
    265e:	ac 01       	movw	r20, r24
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.c:49

  // prevent clockCyclesToMicroseconds to return bogus values if countPulseASM timed out
  if (width)
    2660:	21 15       	cp	r18, r1
    2662:	31 05       	cpc	r19, r1
    2664:	41 05       	cpc	r20, r1
    2666:	51 05       	cpc	r21, r1
    2668:	79 f0       	breq	.+30     	; 0x2688 <menu_sensor()+0x7b4>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.c:50
    return clockCyclesToMicroseconds(width * 16 + 16);
    266a:	6f 5f       	subi	r22, 0xFF	; 255
    266c:	7f 4f       	sbci	r23, 0xFF	; 255
    266e:	8f 4f       	sbci	r24, 0xFF	; 255
    2670:	9f 4f       	sbci	r25, 0xFF	; 255
    2672:	24 e0       	ldi	r18, 0x04	; 4
    2674:	66 0f       	add	r22, r22
    2676:	77 1f       	adc	r23, r23
    2678:	88 1f       	adc	r24, r24
    267a:	99 1f       	adc	r25, r25
    267c:	2a 95       	dec	r18
    267e:	d1 f7       	brne	.-12     	; 0x2674 <menu_sensor()+0x7a0>
    2680:	a7 01       	movw	r20, r14
    2682:	96 01       	movw	r18, r12
    2684:	0e 94 2b 35 	call	0x6a56	; 0x6a56 <__udivmodsi4>
microsecondsToMillimeters():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:804
      }
    }
  }
}
long microsecondsToMillimeters(long microseconds) {
  return microseconds * 10 / 29 / 2;
    2688:	aa e0       	ldi	r26, 0x0A	; 10
    268a:	b0 e0       	ldi	r27, 0x00	; 0
    268c:	0e 94 84 35 	call	0x6b08	; 0x6b08 <__muluhisi3>
    2690:	2a e3       	ldi	r18, 0x3A	; 58
    2692:	30 e0       	ldi	r19, 0x00	; 0
    2694:	40 e0       	ldi	r20, 0x00	; 0
    2696:	50 e0       	ldi	r21, 0x00	; 0
    2698:	0e 94 4d 35 	call	0x6a9a	; 0x6a9a <__divmodsi4>
menu_sensor():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:928
      lcd.setCursor(0, 3);
      lcd.printf("SBL=%d  SBR=%d  ", SBL, SBR);
    } else if (page == 5)  // distance
    {
      lcd.setCursor(0, 0);
      lcd.printf("Front: %d", Front_distance);
    269c:	3f 93       	push	r19
    269e:	2f 93       	push	r18
    26a0:	28 e2       	ldi	r18, 0x28	; 40
    26a2:	36 e0       	ldi	r19, 0x06	; 6
    26a4:	3f 93       	push	r19
    26a6:	2f 93       	push	r18
    26a8:	df 93       	push	r29
    26aa:	cf 93       	push	r28
    26ac:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:929
      lcd.setCursor(0, 1);
    26b0:	61 e0       	ldi	r22, 0x01	; 1
    26b2:	80 e0       	ldi	r24, 0x00	; 0
    26b4:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:930
      lcd.printf("     VL_F=%d  ", VL_Front);
    26b8:	83 e0       	ldi	r24, 0x03	; 3
    26ba:	0e 94 42 16 	call	0x2c84	; 0x2c84 <vl(char)>
    26be:	9f 93       	push	r25
    26c0:	8f 93       	push	r24
    26c2:	22 e3       	ldi	r18, 0x32	; 50
    26c4:	36 e0       	ldi	r19, 0x06	; 6
    26c6:	3f 93       	push	r19
    26c8:	2f 93       	push	r18
    26ca:	df 93       	push	r29
    26cc:	cf 93       	push	r28
    26ce:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:931
      lcd.setCursor(0, 2);
    26d2:	62 e0       	ldi	r22, 0x02	; 2
    26d4:	80 e0       	ldi	r24, 0x00	; 0
    26d6:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:932
      lcd.printf("VL_L=%d VL_R=%d ", VL_Left, VL_Right);
    26da:	81 e0       	ldi	r24, 0x01	; 1
    26dc:	0e 94 42 16 	call	0x2c84	; 0x2c84 <vl(char)>
    26e0:	18 2f       	mov	r17, r24
    26e2:	09 2f       	mov	r16, r25
    26e4:	82 e0       	ldi	r24, 0x02	; 2
    26e6:	0e 94 42 16 	call	0x2c84	; 0x2c84 <vl(char)>
    26ea:	0f 93       	push	r16
    26ec:	1f 93       	push	r17
    26ee:	9f 93       	push	r25
    26f0:	8f 93       	push	r24
    26f2:	21 e4       	ldi	r18, 0x41	; 65
    26f4:	36 e0       	ldi	r19, 0x06	; 6
    26f6:	3f 93       	push	r19
    26f8:	2f 93       	push	r18
    26fa:	df 93       	push	r29
    26fc:	cf 93       	push	r28
    26fe:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:933
      delay(200);
    2702:	68 ec       	ldi	r22, 0xC8	; 200
    2704:	70 e0       	ldi	r23, 0x00	; 0
    2706:	80 e0       	ldi	r24, 0x00	; 0
    2708:	90 e0       	ldi	r25, 0x00	; 0
    270a:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <delay>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:934
      lcd.clear();
    270e:	0e 94 f6 05 	call	0xbec	; 0xbec <LiquidCrystal::clear() [clone .constprop.38]>
    2712:	2d b7       	in	r18, 0x3d	; 61
    2714:	3e b7       	in	r19, 0x3e	; 62
    2716:	2c 5e       	subi	r18, 0xEC	; 236
    2718:	3f 4f       	sbci	r19, 0xFF	; 255
    271a:	0f b6       	in	r0, 0x3f	; 63
    271c:	f8 94       	cli
    271e:	3e bf       	out	0x3e, r19	; 62
    2720:	0f be       	out	0x3f, r0	; 63
    2722:	2d bf       	out	0x3d, r18	; 61
    2724:	e0 cb       	rjmp	.-2112   	; 0x1ee6 <menu_sensor()+0x12>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:935
    } else if (page == 6)  // compass
    2726:	86 30       	cpi	r24, 0x06	; 6
    2728:	09 f0       	breq	.+2      	; 0x272c <menu_sensor()+0x858>
    272a:	dd cb       	rjmp	.-2118   	; 0x1ee6 <menu_sensor()+0x12>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:937
    {
      lcd.setCursor(0, 0);
    272c:	60 e0       	ldi	r22, 0x00	; 0
    272e:	80 e0       	ldi	r24, 0x00	; 0
    2730:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:938
      lcd.printf("deg: %d pi: %d ro: %d", deg, pitch, role);
    2734:	83 e0       	ldi	r24, 0x03	; 3
    2736:	90 e0       	ldi	r25, 0x00	; 0
    2738:	0e 94 f8 16 	call	0x2df0	; 0x2df0 <cmps(int)>
    273c:	b8 2e       	mov	r11, r24
    273e:	a9 2e       	mov	r10, r25
    2740:	82 e0       	ldi	r24, 0x02	; 2
    2742:	90 e0       	ldi	r25, 0x00	; 0
    2744:	0e 94 f8 16 	call	0x2df0	; 0x2df0 <cmps(int)>
    2748:	18 2f       	mov	r17, r24
    274a:	09 2f       	mov	r16, r25
    274c:	81 e0       	ldi	r24, 0x01	; 1
    274e:	90 e0       	ldi	r25, 0x00	; 0
    2750:	0e 94 f8 16 	call	0x2df0	; 0x2df0 <cmps(int)>
    2754:	af 92       	push	r10
    2756:	bf 92       	push	r11
    2758:	0f 93       	push	r16
    275a:	1f 93       	push	r17
    275c:	9f 93       	push	r25
    275e:	8f 93       	push	r24
    2760:	82 e5       	ldi	r24, 0x52	; 82
    2762:	96 e0       	ldi	r25, 0x06	; 6
    2764:	9f 93       	push	r25
    2766:	8f 93       	push	r24
    2768:	df 93       	push	r29
    276a:	cf 93       	push	r28
    276c:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
    2770:	8d b7       	in	r24, 0x3d	; 61
    2772:	9e b7       	in	r25, 0x3e	; 62
    2774:	0a 96       	adiw	r24, 0x0a	; 10
    2776:	0f b6       	in	r0, 0x3f	; 63
    2778:	f8 94       	cli
    277a:	9e bf       	out	0x3e, r25	; 62
    277c:	0f be       	out	0x3f, r0	; 63
    277e:	8d bf       	out	0x3d, r24	; 61
    2780:	b2 cb       	rjmp	.-2204   	; 0x1ee6 <menu_sensor()+0x12>

00002782 <__vector_16>:
__vector_16():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:159
#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)
ISR(TIM0_OVF_vect)
#else
ISR(TIMER0_OVF_vect)
#endif
{
    2782:	1f 92       	push	r1
    2784:	0f 92       	push	r0
    2786:	0f b6       	in	r0, 0x3f	; 63
    2788:	0f 92       	push	r0
    278a:	11 24       	eor	r1, r1
    278c:	4f 93       	push	r20
    278e:	5f 93       	push	r21
    2790:	6f 93       	push	r22
    2792:	7f 93       	push	r23
    2794:	8f 93       	push	r24
    2796:	9f 93       	push	r25
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:167
  static unsigned char timer0_exact = 0;
#endif

  // copy these to local variables so they can be stored in registers
  // (volatile variables must be read from memory on every access, so this saves time)
  unsigned long m = timer0_millis;
    2798:	40 91 e5 08 	lds	r20, 0x08E5	; 0x8008e5 <timer0_millis>
    279c:	50 91 e6 08 	lds	r21, 0x08E6	; 0x8008e6 <timer0_millis+0x1>
    27a0:	60 91 e7 08 	lds	r22, 0x08E7	; 0x8008e7 <timer0_millis+0x2>
    27a4:	70 91 e8 08 	lds	r23, 0x08E8	; 0x8008e8 <timer0_millis+0x3>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:168
  unsigned char f = timer0_fract;
    27a8:	80 91 e4 08 	lds	r24, 0x08E4	; 0x8008e4 <timer0_fract>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:174

  f += FRACT_INC FRACT_INC_PLUS;

#ifdef CORRECT_EXACT_MILLIS
  // correct millis () to be exact for certain clocks
  if (timer0_exact == CORRECT_ROLL - 1) {
    27ac:	90 91 e3 08 	lds	r25, 0x08E3	; 0x8008e3 <timer0_exact.2342>
    27b0:	9a 31       	cpi	r25, 0x1A	; 26
    27b2:	19 f5       	brne	.+70     	; 0x27fa <__vector_16+0x78>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:175
    timer0_exact = 0;
    27b4:	10 92 e3 08 	sts	0x08E3, r1	; 0x8008e3 <timer0_exact.2342>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:194
  if (timer0_exact & 1) {
    ++f;
  }
#endif
#ifdef CORRECT_BRUTE
  if (timer0_exact < CORRECT_BRUTE) {
    27b8:	90 91 e3 08 	lds	r25, 0x08E3	; 0x8008e3 <timer0_exact.2342>
    27bc:	95 30       	cpi	r25, 0x05	; 5
    27be:	08 f1       	brcs	.+66     	; 0x2802 <__vector_16+0x80>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:170
  // copy these to local variables so they can be stored in registers
  // (volatile variables must be read from memory on every access, so this saves time)
  unsigned long m = timer0_millis;
  unsigned char f = timer0_fract;

  f += FRACT_INC FRACT_INC_PLUS;
    27c0:	84 5c       	subi	r24, 0xC4	; 196
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:200
    ++f;
  }
#endif
#endif // CORRECT_EXACT_MILLIS

  if (f >= FRACT_MAX) {
    27c2:	8d 37       	cpi	r24, 0x7D	; 125
    27c4:	00 f1       	brcs	.+64     	; 0x2806 <__vector_16+0x84>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:201
    f -= FRACT_MAX;
    27c6:	8d 57       	subi	r24, 0x7D	; 125
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:202
    m += MILLIS_INC + 1;
    27c8:	4e 5f       	subi	r20, 0xFE	; 254
    27ca:	5f 4f       	sbci	r21, 0xFF	; 255
    27cc:	6f 4f       	sbci	r22, 0xFF	; 255
    27ce:	7f 4f       	sbci	r23, 0xFF	; 255
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:208
  }
  else {
    m += MILLIS_INC;
  }

  timer0_fract = f;
    27d0:	80 93 e4 08 	sts	0x08E4, r24	; 0x8008e4 <timer0_fract>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:209
  timer0_millis = m;
    27d4:	40 93 e5 08 	sts	0x08E5, r20	; 0x8008e5 <timer0_millis>
    27d8:	50 93 e6 08 	sts	0x08E6, r21	; 0x8008e6 <timer0_millis+0x1>
    27dc:	60 93 e7 08 	sts	0x08E7, r22	; 0x8008e7 <timer0_millis+0x2>
    27e0:	70 93 e8 08 	sts	0x08E8, r23	; 0x8008e8 <timer0_millis+0x3>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:213
#ifndef CORRECT_EXACT_MICROS
  timer0_overflow_count++;
#endif
}
    27e4:	9f 91       	pop	r25
    27e6:	8f 91       	pop	r24
    27e8:	7f 91       	pop	r23
    27ea:	6f 91       	pop	r22
    27ec:	5f 91       	pop	r21
    27ee:	4f 91       	pop	r20
    27f0:	0f 90       	pop	r0
    27f2:	0f be       	out	0x3f, r0	; 63
    27f4:	0f 90       	pop	r0
    27f6:	1f 90       	pop	r1
    27f8:	18 95       	reti
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:181
#ifdef CORRECT_LO
    ++f;
#endif
  }
  else {
    ++timer0_exact;
    27fa:	9f 5f       	subi	r25, 0xFF	; 255
    27fc:	90 93 e3 08 	sts	0x08E3, r25	; 0x8008e3 <timer0_exact.2342>
    2800:	db cf       	rjmp	.-74     	; 0x27b8 <__vector_16+0x36>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:195
    ++f;
  }
#endif
#ifdef CORRECT_BRUTE
  if (timer0_exact < CORRECT_BRUTE) {
    ++f;
    2802:	83 5c       	subi	r24, 0xC3	; 195
    2804:	de cf       	rjmp	.-68     	; 0x27c2 <__vector_16+0x40>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:205
  if (f >= FRACT_MAX) {
    f -= FRACT_MAX;
    m += MILLIS_INC + 1;
  }
  else {
    m += MILLIS_INC;
    2806:	4f 5f       	subi	r20, 0xFF	; 255
    2808:	5f 4f       	sbci	r21, 0xFF	; 255
    280a:	6f 4f       	sbci	r22, 0xFF	; 255
    280c:	7f 4f       	sbci	r23, 0xFF	; 255
    280e:	e0 cf       	rjmp	.-64     	; 0x27d0 <__vector_16+0x4e>

00002810 <__vector_31>:
__vector_31():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial1.cpp:59
#elif defined(USART1_UDRE_vect)
ISR(USART1_UDRE_vect)
#else
#error "Don't know what the Data Register Empty vector is called for Serial1"
#endif
{
    2810:	1f 92       	push	r1
    2812:	0f 92       	push	r0
    2814:	0f b6       	in	r0, 0x3f	; 63
    2816:	0f 92       	push	r0
    2818:	11 24       	eor	r1, r1
    281a:	0b b6       	in	r0, 0x3b	; 59
    281c:	0f 92       	push	r0
    281e:	2f 93       	push	r18
    2820:	3f 93       	push	r19
    2822:	4f 93       	push	r20
    2824:	5f 93       	push	r21
    2826:	6f 93       	push	r22
    2828:	7f 93       	push	r23
    282a:	8f 93       	push	r24
    282c:	9f 93       	push	r25
    282e:	af 93       	push	r26
    2830:	bf 93       	push	r27
    2832:	ef 93       	push	r30
    2834:	ff 93       	push	r31
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial1.cpp:60
  Serial1._tx_udr_empty_irq();
    2836:	84 e7       	ldi	r24, 0x74	; 116
    2838:	99 e0       	ldi	r25, 0x09	; 9
    283a:	0e 94 0d 04 	call	0x81a	; 0x81a <HardwareSerial::_tx_udr_empty_irq()>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial1.cpp:61
}
    283e:	ff 91       	pop	r31
    2840:	ef 91       	pop	r30
    2842:	bf 91       	pop	r27
    2844:	af 91       	pop	r26
    2846:	9f 91       	pop	r25
    2848:	8f 91       	pop	r24
    284a:	7f 91       	pop	r23
    284c:	6f 91       	pop	r22
    284e:	5f 91       	pop	r21
    2850:	4f 91       	pop	r20
    2852:	3f 91       	pop	r19
    2854:	2f 91       	pop	r18
    2856:	0f 90       	pop	r0
    2858:	0b be       	out	0x3b, r0	; 59
    285a:	0f 90       	pop	r0
    285c:	0f be       	out	0x3f, r0	; 63
    285e:	0f 90       	pop	r0
    2860:	1f 90       	pop	r1
    2862:	18 95       	reti

00002864 <__vector_30>:
__vector_30():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial1.cpp:48
#elif defined(USART1_RXC_vect)
ISR(USART1_RXC_vect)
#else
#error "Don't know what the Data Register Empty vector is called for Serial1"
#endif
{
    2864:	1f 92       	push	r1
    2866:	0f 92       	push	r0
    2868:	0f b6       	in	r0, 0x3f	; 63
    286a:	0f 92       	push	r0
    286c:	11 24       	eor	r1, r1
    286e:	0b b6       	in	r0, 0x3b	; 59
    2870:	0f 92       	push	r0
    2872:	2f 93       	push	r18
    2874:	8f 93       	push	r24
    2876:	9f 93       	push	r25
    2878:	ef 93       	push	r30
    287a:	ff 93       	push	r31
_rx_complete_irq():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial_private.h:100

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_rx_complete_irq(void)
{
  if (bit_is_clear(*_ucsra, UPE0)) {
    287c:	e0 91 84 09 	lds	r30, 0x0984	; 0x800984 <Serial1+0x10>
    2880:	f0 91 85 09 	lds	r31, 0x0985	; 0x800985 <Serial1+0x11>
    2884:	80 81       	ld	r24, Z
    2886:	e0 91 8a 09 	lds	r30, 0x098A	; 0x80098a <Serial1+0x16>
    288a:	f0 91 8b 09 	lds	r31, 0x098B	; 0x80098b <Serial1+0x17>
    288e:	82 fd       	sbrc	r24, 2
    2890:	1d c0       	rjmp	.+58     	; 0x28cc <__vector_30+0x68>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial_private.h:103
    // No Parity error, read byte and store it in the buffer if there is
    // room
    unsigned char c = *_udr;
    2892:	90 81       	ld	r25, Z
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial_private.h:104
    rx_buffer_index_t i = (unsigned int)(_rx_buffer_head + 1) % SERIAL_RX_BUFFER_SIZE;
    2894:	80 91 8d 09 	lds	r24, 0x098D	; 0x80098d <Serial1+0x19>
    2898:	8f 5f       	subi	r24, 0xFF	; 255
    289a:	8f 73       	andi	r24, 0x3F	; 63
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial_private.h:110

    // if we should be storing the received character into the location
    // just before the tail (meaning that the head would advance to the
    // current location of the tail), we're about to overflow the buffer
    // and so we don't write the character or advance the head.
    if (i != _rx_buffer_tail) {
    289c:	20 91 8e 09 	lds	r18, 0x098E	; 0x80098e <Serial1+0x1a>
    28a0:	82 17       	cp	r24, r18
    28a2:	41 f0       	breq	.+16     	; 0x28b4 <__vector_30+0x50>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial_private.h:111
      _rx_buffer[_rx_buffer_head] = c;
    28a4:	e0 91 8d 09 	lds	r30, 0x098D	; 0x80098d <Serial1+0x19>
    28a8:	f0 e0       	ldi	r31, 0x00	; 0
    28aa:	ec 58       	subi	r30, 0x8C	; 140
    28ac:	f6 4f       	sbci	r31, 0xF6	; 246
    28ae:	95 8f       	std	Z+29, r25	; 0x1d
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial_private.h:112
      _rx_buffer_head = i;
    28b0:	80 93 8d 09 	sts	0x098D, r24	; 0x80098d <Serial1+0x19>
__vector_30():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial1.cpp:50
  Serial1._rx_complete_irq();
}
    28b4:	ff 91       	pop	r31
    28b6:	ef 91       	pop	r30
    28b8:	9f 91       	pop	r25
    28ba:	8f 91       	pop	r24
    28bc:	2f 91       	pop	r18
    28be:	0f 90       	pop	r0
    28c0:	0b be       	out	0x3b, r0	; 59
    28c2:	0f 90       	pop	r0
    28c4:	0f be       	out	0x3f, r0	; 63
    28c6:	0f 90       	pop	r0
    28c8:	1f 90       	pop	r1
    28ca:	18 95       	reti
_rx_complete_irq():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial_private.h:116
    }
  } else {
    // Parity error, read byte but discard it
    *_udr;
    28cc:	80 81       	ld	r24, Z
    28ce:	f2 cf       	rjmp	.-28     	; 0x28b4 <__vector_30+0x50>

000028d0 <__vector_19>:
__vector_19():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial0.cpp:63
#elif defined(USART0_UDRE_vect)
ISR(USART0_UDRE_vect)
#else
  #error "Don't know what the Data Register Empty vector is called for Serial"
#endif
{
    28d0:	1f 92       	push	r1
    28d2:	0f 92       	push	r0
    28d4:	0f b6       	in	r0, 0x3f	; 63
    28d6:	0f 92       	push	r0
    28d8:	11 24       	eor	r1, r1
    28da:	0b b6       	in	r0, 0x3b	; 59
    28dc:	0f 92       	push	r0
    28de:	2f 93       	push	r18
    28e0:	3f 93       	push	r19
    28e2:	4f 93       	push	r20
    28e4:	5f 93       	push	r21
    28e6:	6f 93       	push	r22
    28e8:	7f 93       	push	r23
    28ea:	8f 93       	push	r24
    28ec:	9f 93       	push	r25
    28ee:	af 93       	push	r26
    28f0:	bf 93       	push	r27
    28f2:	ef 93       	push	r30
    28f4:	ff 93       	push	r31
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial0.cpp:64
  Serial._tx_udr_empty_irq();
    28f6:	81 e1       	ldi	r24, 0x11	; 17
    28f8:	9a e0       	ldi	r25, 0x0A	; 10
    28fa:	0e 94 0d 04 	call	0x81a	; 0x81a <HardwareSerial::_tx_udr_empty_irq()>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial0.cpp:65
}
    28fe:	ff 91       	pop	r31
    2900:	ef 91       	pop	r30
    2902:	bf 91       	pop	r27
    2904:	af 91       	pop	r26
    2906:	9f 91       	pop	r25
    2908:	8f 91       	pop	r24
    290a:	7f 91       	pop	r23
    290c:	6f 91       	pop	r22
    290e:	5f 91       	pop	r21
    2910:	4f 91       	pop	r20
    2912:	3f 91       	pop	r19
    2914:	2f 91       	pop	r18
    2916:	0f 90       	pop	r0
    2918:	0b be       	out	0x3b, r0	; 59
    291a:	0f 90       	pop	r0
    291c:	0f be       	out	0x3f, r0	; 63
    291e:	0f 90       	pop	r0
    2920:	1f 90       	pop	r1
    2922:	18 95       	reti

00002924 <__vector_18>:
__vector_18():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial0.cpp:50
#elif defined(USART_RX_vect)
  ISR(USART_RX_vect)
#else
  #error "Don't know what the Data Received vector is called for Serial"
#endif
  {
    2924:	1f 92       	push	r1
    2926:	0f 92       	push	r0
    2928:	0f b6       	in	r0, 0x3f	; 63
    292a:	0f 92       	push	r0
    292c:	11 24       	eor	r1, r1
    292e:	0b b6       	in	r0, 0x3b	; 59
    2930:	0f 92       	push	r0
    2932:	2f 93       	push	r18
    2934:	8f 93       	push	r24
    2936:	9f 93       	push	r25
    2938:	ef 93       	push	r30
    293a:	ff 93       	push	r31
_rx_complete_irq():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial_private.h:100

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_rx_complete_irq(void)
{
  if (bit_is_clear(*_ucsra, UPE0)) {
    293c:	e0 91 21 0a 	lds	r30, 0x0A21	; 0x800a21 <Serial+0x10>
    2940:	f0 91 22 0a 	lds	r31, 0x0A22	; 0x800a22 <Serial+0x11>
    2944:	80 81       	ld	r24, Z
    2946:	e0 91 27 0a 	lds	r30, 0x0A27	; 0x800a27 <Serial+0x16>
    294a:	f0 91 28 0a 	lds	r31, 0x0A28	; 0x800a28 <Serial+0x17>
    294e:	82 fd       	sbrc	r24, 2
    2950:	1d c0       	rjmp	.+58     	; 0x298c <__vector_18+0x68>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial_private.h:103
    // No Parity error, read byte and store it in the buffer if there is
    // room
    unsigned char c = *_udr;
    2952:	90 81       	ld	r25, Z
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial_private.h:104
    rx_buffer_index_t i = (unsigned int)(_rx_buffer_head + 1) % SERIAL_RX_BUFFER_SIZE;
    2954:	80 91 2a 0a 	lds	r24, 0x0A2A	; 0x800a2a <Serial+0x19>
    2958:	8f 5f       	subi	r24, 0xFF	; 255
    295a:	8f 73       	andi	r24, 0x3F	; 63
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial_private.h:110

    // if we should be storing the received character into the location
    // just before the tail (meaning that the head would advance to the
    // current location of the tail), we're about to overflow the buffer
    // and so we don't write the character or advance the head.
    if (i != _rx_buffer_tail) {
    295c:	20 91 2b 0a 	lds	r18, 0x0A2B	; 0x800a2b <Serial+0x1a>
    2960:	82 17       	cp	r24, r18
    2962:	41 f0       	breq	.+16     	; 0x2974 <__vector_18+0x50>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial_private.h:111
      _rx_buffer[_rx_buffer_head] = c;
    2964:	e0 91 2a 0a 	lds	r30, 0x0A2A	; 0x800a2a <Serial+0x19>
    2968:	f0 e0       	ldi	r31, 0x00	; 0
    296a:	ef 5e       	subi	r30, 0xEF	; 239
    296c:	f5 4f       	sbci	r31, 0xF5	; 245
    296e:	95 8f       	std	Z+29, r25	; 0x1d
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial_private.h:112
      _rx_buffer_head = i;
    2970:	80 93 2a 0a 	sts	0x0A2A, r24	; 0x800a2a <Serial+0x19>
__vector_18():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial0.cpp:52
    Serial._rx_complete_irq();
  }
    2974:	ff 91       	pop	r31
    2976:	ef 91       	pop	r30
    2978:	9f 91       	pop	r25
    297a:	8f 91       	pop	r24
    297c:	2f 91       	pop	r18
    297e:	0f 90       	pop	r0
    2980:	0b be       	out	0x3b, r0	; 59
    2982:	0f 90       	pop	r0
    2984:	0f be       	out	0x3f, r0	; 63
    2986:	0f 90       	pop	r0
    2988:	1f 90       	pop	r1
    298a:	18 95       	reti
_rx_complete_irq():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial_private.h:116
    }
  } else {
    // Parity error, read byte but discard it
    *_udr;
    298c:	80 81       	ld	r24, Z
    298e:	f2 cf       	rjmp	.-28     	; 0x2974 <__vector_18+0x50>

00002990 <__vector_33>:
__vector_33():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:528
  }
  return(flag);
}

ISR(TWI_vect)
{
    2990:	1f 92       	push	r1
    2992:	0f 92       	push	r0
    2994:	0f b6       	in	r0, 0x3f	; 63
    2996:	0f 92       	push	r0
    2998:	11 24       	eor	r1, r1
    299a:	0b b6       	in	r0, 0x3b	; 59
    299c:	0f 92       	push	r0
    299e:	2f 93       	push	r18
    29a0:	3f 93       	push	r19
    29a2:	4f 93       	push	r20
    29a4:	5f 93       	push	r21
    29a6:	6f 93       	push	r22
    29a8:	7f 93       	push	r23
    29aa:	8f 93       	push	r24
    29ac:	9f 93       	push	r25
    29ae:	af 93       	push	r26
    29b0:	bf 93       	push	r27
    29b2:	ef 93       	push	r30
    29b4:	ff 93       	push	r31
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:529
  switch(TW_STATUS){
    29b6:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
    29ba:	88 7f       	andi	r24, 0xF8	; 248
    29bc:	80 36       	cpi	r24, 0x60	; 96
    29be:	09 f4       	brne	.+2      	; 0x29c2 <__vector_33+0x32>
    29c0:	4d c0       	rjmp	.+154    	; 0x2a5c <__vector_33+0xcc>
    29c2:	08 f0       	brcs	.+2      	; 0x29c6 <__vector_33+0x36>
    29c4:	40 c0       	rjmp	.+128    	; 0x2a46 <__vector_33+0xb6>
    29c6:	88 32       	cpi	r24, 0x28	; 40
    29c8:	09 f4       	brne	.+2      	; 0x29cc <__vector_33+0x3c>
    29ca:	a9 c0       	rjmp	.+338    	; 0x2b1e <__vector_33+0x18e>
    29cc:	28 f5       	brcc	.+74     	; 0x2a18 <__vector_33+0x88>
    29ce:	80 31       	cpi	r24, 0x10	; 16
    29d0:	09 f4       	brne	.+2      	; 0x29d4 <__vector_33+0x44>
    29d2:	9d c0       	rjmp	.+314    	; 0x2b0e <__vector_33+0x17e>
    29d4:	c8 f4       	brcc	.+50     	; 0x2a08 <__vector_33+0x78>
    29d6:	88 23       	and	r24, r24
    29d8:	09 f4       	brne	.+2      	; 0x29dc <__vector_33+0x4c>
    29da:	07 c1       	rjmp	.+526    	; 0x2bea <__vector_33+0x25a>
    29dc:	88 30       	cpi	r24, 0x08	; 8
    29de:	09 f4       	brne	.+2      	; 0x29e2 <__vector_33+0x52>
    29e0:	96 c0       	rjmp	.+300    	; 0x2b0e <__vector_33+0x17e>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:690
    case TW_BUS_ERROR: // bus error, illegal stop/start
      twi_error = TW_BUS_ERROR;
      twi_stop();
      break;
  }
}
    29e2:	ff 91       	pop	r31
    29e4:	ef 91       	pop	r30
    29e6:	bf 91       	pop	r27
    29e8:	af 91       	pop	r26
    29ea:	9f 91       	pop	r25
    29ec:	8f 91       	pop	r24
    29ee:	7f 91       	pop	r23
    29f0:	6f 91       	pop	r22
    29f2:	5f 91       	pop	r21
    29f4:	4f 91       	pop	r20
    29f6:	3f 91       	pop	r19
    29f8:	2f 91       	pop	r18
    29fa:	0f 90       	pop	r0
    29fc:	0b be       	out	0x3b, r0	; 59
    29fe:	0f 90       	pop	r0
    2a00:	0f be       	out	0x3f, r0	; 63
    2a02:	0f 90       	pop	r0
    2a04:	1f 90       	pop	r1
    2a06:	18 95       	reti
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:529
  return(flag);
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
    2a08:	88 31       	cpi	r24, 0x18	; 24
    2a0a:	09 f4       	brne	.+2      	; 0x2a0e <__vector_33+0x7e>
    2a0c:	88 c0       	rjmp	.+272    	; 0x2b1e <__vector_33+0x18e>
    2a0e:	80 32       	cpi	r24, 0x20	; 32
    2a10:	41 f7       	brne	.-48     	; 0x29e2 <__vector_33+0x52>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:564
    case TW_MT_SLA_NACK:  // address sent, nack received
      twi_error = TW_MT_SLA_NACK;
      twi_stop();
      break;
    case TW_MT_DATA_NACK: // data sent, nack received
      twi_error = TW_MT_DATA_NACK;
    2a12:	80 93 ef 08 	sts	0x08EF, r24	; 0x8008ef <twi_error>
    2a16:	14 c0       	rjmp	.+40     	; 0x2a40 <__vector_33+0xb0>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:529
  return(flag);
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
    2a18:	80 34       	cpi	r24, 0x40	; 64
    2a1a:	09 f4       	brne	.+2      	; 0x2a1e <__vector_33+0x8e>
    2a1c:	a5 c0       	rjmp	.+330    	; 0x2b68 <__vector_33+0x1d8>
    2a1e:	40 f4       	brcc	.+16     	; 0x2a30 <__vector_33+0xa0>
    2a20:	80 33       	cpi	r24, 0x30	; 48
    2a22:	b9 f3       	breq	.-18     	; 0x2a12 <__vector_33+0x82>
    2a24:	88 33       	cpi	r24, 0x38	; 56
    2a26:	e9 f6       	brne	.-70     	; 0x29e2 <__vector_33+0x52>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:568
    case TW_MT_DATA_NACK: // data sent, nack received
      twi_error = TW_MT_DATA_NACK;
      twi_stop();
      break;
    case TW_MT_ARB_LOST: // lost bus arbitration
      twi_error = TW_MT_ARB_LOST;
    2a28:	80 93 ef 08 	sts	0x08EF, r24	; 0x8008ef <twi_error>
twi_reply():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:415
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
    2a2c:	85 ec       	ldi	r24, 0xC5	; 197
    2a2e:	bc c0       	rjmp	.+376    	; 0x2ba8 <__vector_33+0x218>
__vector_33():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:529
  return(flag);
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
    2a30:	80 35       	cpi	r24, 0x50	; 80
    2a32:	09 f4       	brne	.+2      	; 0x2a36 <__vector_33+0xa6>
    2a34:	89 c0       	rjmp	.+274    	; 0x2b48 <__vector_33+0x1b8>
    2a36:	88 35       	cpi	r24, 0x58	; 88
    2a38:	09 f4       	brne	.+2      	; 0x2a3c <__vector_33+0xac>
    2a3a:	9e c0       	rjmp	.+316    	; 0x2b78 <__vector_33+0x1e8>
    2a3c:	88 34       	cpi	r24, 0x48	; 72
    2a3e:	89 f6       	brne	.-94     	; 0x29e2 <__vector_33+0x52>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:687
    // All
    case TW_NO_INFO:   // no state information
      break;
    case TW_BUS_ERROR: // bus error, illegal stop/start
      twi_error = TW_BUS_ERROR;
      twi_stop();
    2a40:	0e 94 af 04 	call	0x95e	; 0x95e <twi_stop>
    2a44:	ce cf       	rjmp	.-100    	; 0x29e2 <__vector_33+0x52>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:529
  return(flag);
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
    2a46:	88 39       	cpi	r24, 0x98	; 152
    2a48:	09 f4       	brne	.+2      	; 0x2a4c <__vector_33+0xbc>
    2a4a:	94 c0       	rjmp	.+296    	; 0x2b74 <__vector_33+0x1e4>
    2a4c:	38 f5       	brcc	.+78     	; 0x2a9c <__vector_33+0x10c>
    2a4e:	88 37       	cpi	r24, 0x78	; 120
    2a50:	29 f0       	breq	.+10     	; 0x2a5c <__vector_33+0xcc>
    2a52:	50 f4       	brcc	.+20     	; 0x2a68 <__vector_33+0xd8>
    2a54:	88 36       	cpi	r24, 0x68	; 104
    2a56:	11 f0       	breq	.+4      	; 0x2a5c <__vector_33+0xcc>
    2a58:	80 37       	cpi	r24, 0x70	; 112
    2a5a:	19 f6       	brne	.-122    	; 0x29e2 <__vector_33+0x52>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:610
    case TW_SR_SLA_ACK:   // addressed, returned ack
    case TW_SR_GCALL_ACK: // addressed generally, returned ack
    case TW_SR_ARB_LOST_SLA_ACK:   // lost arbitration, returned ack
    case TW_SR_ARB_LOST_GCALL_ACK: // lost arbitration, returned ack
      // enter slave receiver mode
      twi_state = TWI_SRX;
    2a5c:	83 e0       	ldi	r24, 0x03	; 3
    2a5e:	80 93 f1 08 	sts	0x08F1, r24	; 0x8008f1 <twi_state>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:612
      // indicate that rx buffer can be overwritten and ack
      twi_rxBufferIndex = 0;
    2a62:	10 92 be 08 	sts	0x08BE, r1	; 0x8008be <twi_rxBufferIndex>
    2a66:	57 c0       	rjmp	.+174    	; 0x2b16 <__vector_33+0x186>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:529
  return(flag);
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
    2a68:	88 38       	cpi	r24, 0x88	; 136
    2a6a:	09 f4       	brne	.+2      	; 0x2a6e <__vector_33+0xde>
    2a6c:	83 c0       	rjmp	.+262    	; 0x2b74 <__vector_33+0x1e4>
    2a6e:	80 39       	cpi	r24, 0x90	; 144
    2a70:	19 f0       	breq	.+6      	; 0x2a78 <__vector_33+0xe8>
    2a72:	80 38       	cpi	r24, 0x80	; 128
    2a74:	09 f0       	breq	.+2      	; 0x2a78 <__vector_33+0xe8>
    2a76:	b5 cf       	rjmp	.-150    	; 0x29e2 <__vector_33+0x52>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:618
      twi_reply(1);
      break;
    case TW_SR_DATA_ACK:       // data received, returned ack
    case TW_SR_GCALL_DATA_ACK: // data received generally, returned ack
      // if there is still room in the rx buffer
      if(twi_rxBufferIndex < TWI_BUFFER_SIZE){
    2a78:	80 91 be 08 	lds	r24, 0x08BE	; 0x8008be <twi_rxBufferIndex>
    2a7c:	80 32       	cpi	r24, 0x20	; 32
    2a7e:	08 f0       	brcs	.+2      	; 0x2a82 <__vector_33+0xf2>
    2a80:	79 c0       	rjmp	.+242    	; 0x2b74 <__vector_33+0x1e4>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:620
        // put byte in buffer and ack
        twi_rxBuffer[twi_rxBufferIndex++] = TWDR;
    2a82:	e0 91 be 08 	lds	r30, 0x08BE	; 0x8008be <twi_rxBufferIndex>
    2a86:	81 e0       	ldi	r24, 0x01	; 1
    2a88:	8e 0f       	add	r24, r30
    2a8a:	80 93 be 08 	sts	0x08BE, r24	; 0x8008be <twi_rxBufferIndex>
    2a8e:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
    2a92:	f0 e0       	ldi	r31, 0x00	; 0
    2a94:	e2 56       	subi	r30, 0x62	; 98
    2a96:	f7 4f       	sbci	r31, 0xF7	; 247
    2a98:	80 83       	st	Z, r24
    2a9a:	3d c0       	rjmp	.+122    	; 0x2b16 <__vector_33+0x186>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:529
  return(flag);
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
    2a9c:	80 3b       	cpi	r24, 0xB0	; 176
    2a9e:	39 f0       	breq	.+14     	; 0x2aae <__vector_33+0x11e>
    2aa0:	e0 f4       	brcc	.+56     	; 0x2ada <__vector_33+0x14a>
    2aa2:	80 3a       	cpi	r24, 0xA0	; 160
    2aa4:	09 f4       	brne	.+2      	; 0x2aa8 <__vector_33+0x118>
    2aa6:	85 c0       	rjmp	.+266    	; 0x2bb2 <__vector_33+0x222>
    2aa8:	88 3a       	cpi	r24, 0xA8	; 168
    2aaa:	09 f0       	breq	.+2      	; 0x2aae <__vector_33+0x11e>
    2aac:	9a cf       	rjmp	.-204    	; 0x29e2 <__vector_33+0x52>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:649

    // Slave Transmitter
    case TW_ST_SLA_ACK:          // addressed, returned ack
    case TW_ST_ARB_LOST_SLA_ACK: // arbitration lost, returned ack
      // enter slave transmitter mode
      twi_state = TWI_STX;
    2aae:	84 e0       	ldi	r24, 0x04	; 4
    2ab0:	80 93 f1 08 	sts	0x08F1, r24	; 0x8008f1 <twi_state>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:651
      // ready the tx buffer index for iteration
      twi_txBufferIndex = 0;
    2ab4:	10 92 9d 08 	sts	0x089D, r1	; 0x80089d <twi_txBufferIndex>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:653
      // set tx buffer length to be zero, to verify if user changes it
      twi_txBufferLength = 0;
    2ab8:	10 92 9c 08 	sts	0x089C, r1	; 0x80089c <twi_txBufferLength>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:656
      // request for txBuffer to be filled and length to be set
      // note: user must call twi_transmit(bytes, length) to do this
      twi_onSlaveTransmit();
    2abc:	e0 91 c1 08 	lds	r30, 0x08C1	; 0x8008c1 <twi_onSlaveTransmit>
    2ac0:	f0 91 c2 08 	lds	r31, 0x08C2	; 0x8008c2 <twi_onSlaveTransmit+0x1>
    2ac4:	09 95       	icall
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:658
      // if they didn't change buffer & length, initialize it
      if(0 == twi_txBufferLength){
    2ac6:	80 91 9c 08 	lds	r24, 0x089C	; 0x80089c <twi_txBufferLength>
    2aca:	81 11       	cpse	r24, r1
    2acc:	0f c0       	rjmp	.+30     	; 0x2aec <__vector_33+0x15c>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:659
        twi_txBufferLength = 1;
    2ace:	81 e0       	ldi	r24, 0x01	; 1
    2ad0:	80 93 9c 08 	sts	0x089C, r24	; 0x80089c <twi_txBufferLength>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:660
        twi_txBuffer[0] = 0x00;
    2ad4:	10 92 7c 08 	sts	0x087C, r1	; 0x80087c <twi_txBuffer>
    2ad8:	09 c0       	rjmp	.+18     	; 0x2aec <__vector_33+0x15c>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:529
  return(flag);
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
    2ada:	80 3c       	cpi	r24, 0xC0	; 192
    2adc:	09 f4       	brne	.+2      	; 0x2ae0 <__vector_33+0x150>
    2ade:	a6 cf       	rjmp	.-180    	; 0x2a2c <__vector_33+0x9c>
    2ae0:	88 3c       	cpi	r24, 0xC8	; 200
    2ae2:	09 f4       	brne	.+2      	; 0x2ae6 <__vector_33+0x156>
    2ae4:	a3 cf       	rjmp	.-186    	; 0x2a2c <__vector_33+0x9c>
    2ae6:	88 3b       	cpi	r24, 0xB8	; 184
    2ae8:	09 f0       	breq	.+2      	; 0x2aec <__vector_33+0x15c>
    2aea:	7b cf       	rjmp	.-266    	; 0x29e2 <__vector_33+0x52>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:666
      }
      // transmit first byte from buffer, fall
      /* fall through */
    case TW_ST_DATA_ACK: // byte sent, ack returned
      // copy data to output register
      TWDR = twi_txBuffer[twi_txBufferIndex++];
    2aec:	e0 91 9d 08 	lds	r30, 0x089D	; 0x80089d <twi_txBufferIndex>
    2af0:	81 e0       	ldi	r24, 0x01	; 1
    2af2:	8e 0f       	add	r24, r30
    2af4:	80 93 9d 08 	sts	0x089D, r24	; 0x80089d <twi_txBufferIndex>
    2af8:	f0 e0       	ldi	r31, 0x00	; 0
    2afa:	e4 58       	subi	r30, 0x84	; 132
    2afc:	f7 4f       	sbci	r31, 0xF7	; 247
    2afe:	80 81       	ld	r24, Z
    2b00:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:668
      // if there is more to send, ack, otherwise nack
      if(twi_txBufferIndex < twi_txBufferLength){
    2b04:	90 91 9d 08 	lds	r25, 0x089D	; 0x80089d <twi_txBufferIndex>
    2b08:	80 91 9c 08 	lds	r24, 0x089C	; 0x80089c <twi_txBufferLength>
    2b0c:	31 c0       	rjmp	.+98     	; 0x2b70 <__vector_33+0x1e0>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:534
  switch(TW_STATUS){
    // All Master
    case TW_START:     // sent start condition
    case TW_REP_START: // sent repeated start condition
      // copy device address and r/w bit to output register and ack
      TWDR = twi_slarw;
    2b0e:	80 91 ea 08 	lds	r24, 0x08EA	; 0x8008ea <twi_slarw>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:544
    case TW_MT_SLA_ACK:  // slave receiver acked address
    case TW_MT_DATA_ACK: // slave receiver acked data
      // if there is data to send, send it, otherwise stop
      if(twi_masterBufferIndex < twi_masterBufferLength){
        // copy data to output register and ack
        TWDR = twi_masterBuffer[twi_masterBufferIndex++];
    2b12:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
twi_reply():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:415
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
    2b16:	85 ec       	ldi	r24, 0xC5	; 197
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:417
  }else{
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT);
    2b18:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    2b1c:	62 cf       	rjmp	.-316    	; 0x29e2 <__vector_33+0x52>
__vector_33():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:542

    // Master Transmitter
    case TW_MT_SLA_ACK:  // slave receiver acked address
    case TW_MT_DATA_ACK: // slave receiver acked data
      // if there is data to send, send it, otherwise stop
      if(twi_masterBufferIndex < twi_masterBufferLength){
    2b1e:	90 91 ec 08 	lds	r25, 0x08EC	; 0x8008ec <twi_masterBufferIndex>
    2b22:	80 91 eb 08 	lds	r24, 0x08EB	; 0x8008eb <twi_masterBufferLength>
    2b26:	98 17       	cp	r25, r24
    2b28:	b8 f5       	brcc	.+110    	; 0x2b98 <__vector_33+0x208>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:544
        // copy data to output register and ack
        TWDR = twi_masterBuffer[twi_masterBufferIndex++];
    2b2a:	80 91 ed 08 	lds	r24, 0x08ED	; 0x8008ed <twi_masterBuffer>
    2b2e:	90 91 ee 08 	lds	r25, 0x08EE	; 0x8008ee <twi_masterBuffer+0x1>
    2b32:	e0 91 ec 08 	lds	r30, 0x08EC	; 0x8008ec <twi_masterBufferIndex>
    2b36:	21 e0       	ldi	r18, 0x01	; 1
    2b38:	2e 0f       	add	r18, r30
    2b3a:	20 93 ec 08 	sts	0x08EC, r18	; 0x8008ec <twi_masterBufferIndex>
    2b3e:	e8 0f       	add	r30, r24
    2b40:	f9 2f       	mov	r31, r25
    2b42:	f1 1d       	adc	r31, r1
    2b44:	80 81       	ld	r24, Z
    2b46:	e5 cf       	rjmp	.-54     	; 0x2b12 <__vector_33+0x182>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:575
      break;

    // Master Receiver
    case TW_MR_DATA_ACK: // data received, ack sent
      // put byte into buffer
      twi_masterBuffer[twi_masterBufferIndex++] = TWDR;
    2b48:	20 91 ed 08 	lds	r18, 0x08ED	; 0x8008ed <twi_masterBuffer>
    2b4c:	30 91 ee 08 	lds	r19, 0x08EE	; 0x8008ee <twi_masterBuffer+0x1>
    2b50:	e0 91 ec 08 	lds	r30, 0x08EC	; 0x8008ec <twi_masterBufferIndex>
    2b54:	81 e0       	ldi	r24, 0x01	; 1
    2b56:	8e 0f       	add	r24, r30
    2b58:	80 93 ec 08 	sts	0x08EC, r24	; 0x8008ec <twi_masterBufferIndex>
    2b5c:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
    2b60:	e2 0f       	add	r30, r18
    2b62:	f3 2f       	mov	r31, r19
    2b64:	f1 1d       	adc	r31, r1
    2b66:	80 83       	st	Z, r24
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:579
      /* fall through */
    case TW_MR_SLA_ACK:  // address sent, ack received
      // ack if more bytes are expected, otherwise nack
      if(twi_masterBufferIndex < twi_masterBufferLength){
    2b68:	90 91 ec 08 	lds	r25, 0x08EC	; 0x8008ec <twi_masterBufferIndex>
    2b6c:	80 91 eb 08 	lds	r24, 0x08EB	; 0x8008eb <twi_masterBufferLength>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:668
      /* fall through */
    case TW_ST_DATA_ACK: // byte sent, ack returned
      // copy data to output register
      TWDR = twi_txBuffer[twi_txBufferIndex++];
      // if there is more to send, ack, otherwise nack
      if(twi_txBufferIndex < twi_txBufferLength){
    2b70:	98 17       	cp	r25, r24
    2b72:	88 f2       	brcs	.-94     	; 0x2b16 <__vector_33+0x186>
twi_reply():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:417
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
  }else{
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT);
    2b74:	85 e8       	ldi	r24, 0x85	; 133
    2b76:	d0 cf       	rjmp	.-96     	; 0x2b18 <__vector_33+0x188>
__vector_33():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:587
        twi_reply(0);
      }
      break;
    case TW_MR_DATA_NACK: // data received, nack sent
      // put final byte into buffer
      twi_masterBuffer[twi_masterBufferIndex++] = TWDR;
    2b78:	20 91 ed 08 	lds	r18, 0x08ED	; 0x8008ed <twi_masterBuffer>
    2b7c:	30 91 ee 08 	lds	r19, 0x08EE	; 0x8008ee <twi_masterBuffer+0x1>
    2b80:	e0 91 ec 08 	lds	r30, 0x08EC	; 0x8008ec <twi_masterBufferIndex>
    2b84:	81 e0       	ldi	r24, 0x01	; 1
    2b86:	8e 0f       	add	r24, r30
    2b88:	80 93 ec 08 	sts	0x08EC, r24	; 0x8008ec <twi_masterBufferIndex>
    2b8c:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
    2b90:	e2 0f       	add	r30, r18
    2b92:	f3 2f       	mov	r31, r19
    2b94:	f1 1d       	adc	r31, r1
    2b96:	80 83       	st	Z, r24
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:588
  if (twi_sendStop)
    2b98:	80 91 f0 08 	lds	r24, 0x08F0	; 0x8008f0 <twi_sendStop>
    2b9c:	81 11       	cpse	r24, r1
    2b9e:	50 cf       	rjmp	.-352    	; 0x2a40 <__vector_33+0xb0>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:591
          twi_stop();
  else {
    twi_inRepStart = true;  // we're going to send the START
    2ba0:	81 e0       	ldi	r24, 0x01	; 1
    2ba2:	80 93 e9 08 	sts	0x08E9, r24	; 0x8008e9 <twi_inRepStart>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:595
    // don't enable the interrupt. We'll generate the start, but we
    // avoid handling the interrupt until we're in the next transaction,
    // at the point where we would normally issue the start.
    TWCR = _BV(TWINT) | _BV(TWSTA)| _BV(TWEN) ;
    2ba6:	84 ea       	ldi	r24, 0xA4	; 164
twi_reply():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:415
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
    2ba8:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
__vector_33():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:679
    case TW_ST_DATA_NACK: // received nack, we are done
    case TW_ST_LAST_DATA: // received ack, but we are done already!
      // ack future responses
      twi_reply(1);
      // leave slave receiver state
      twi_state = TWI_READY;
    2bac:	10 92 f1 08 	sts	0x08F1, r1	; 0x8008f1 <twi_state>
    2bb0:	18 cf       	rjmp	.-464    	; 0x29e2 <__vector_33+0x52>
twi_releaseBus():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:468
 * Output   none
 */
void twi_releaseBus(void)
{
  // release bus
  TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWEA) | _BV(TWINT);
    2bb2:	85 ec       	ldi	r24, 0xC5	; 197
    2bb4:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:471

  // update twi state
  twi_state = TWI_READY;
    2bb8:	10 92 f1 08 	sts	0x08F1, r1	; 0x8008f1 <twi_state>
__vector_33():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:631
      break;
    case TW_SR_STOP: // stop or repeated start condition received
      // ack future responses and leave slave receiver state
      twi_releaseBus();
      // put a null char after data if there's room
      if(twi_rxBufferIndex < TWI_BUFFER_SIZE){
    2bbc:	80 91 be 08 	lds	r24, 0x08BE	; 0x8008be <twi_rxBufferIndex>
    2bc0:	80 32       	cpi	r24, 0x20	; 32
    2bc2:	30 f4       	brcc	.+12     	; 0x2bd0 <__vector_33+0x240>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:632
        twi_rxBuffer[twi_rxBufferIndex] = '\0';
    2bc4:	e0 91 be 08 	lds	r30, 0x08BE	; 0x8008be <twi_rxBufferIndex>
    2bc8:	f0 e0       	ldi	r31, 0x00	; 0
    2bca:	e2 56       	subi	r30, 0x62	; 98
    2bcc:	f7 4f       	sbci	r31, 0xF7	; 247
    2bce:	10 82       	st	Z, r1
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:635
      }
      // callback to user defined callback
      twi_onSlaveReceive(twi_rxBuffer, twi_rxBufferIndex);
    2bd0:	60 91 be 08 	lds	r22, 0x08BE	; 0x8008be <twi_rxBufferIndex>
    2bd4:	70 e0       	ldi	r23, 0x00	; 0
    2bd6:	e0 91 bf 08 	lds	r30, 0x08BF	; 0x8008bf <twi_onSlaveReceive>
    2bda:	f0 91 c0 08 	lds	r31, 0x08C0	; 0x8008c0 <twi_onSlaveReceive+0x1>
    2bde:	8e e9       	ldi	r24, 0x9E	; 158
    2be0:	98 e0       	ldi	r25, 0x08	; 8
    2be2:	09 95       	icall
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:637
      // since we submit rx buffer to "wire" library, we can reset it
      twi_rxBufferIndex = 0;
    2be4:	10 92 be 08 	sts	0x08BE, r1	; 0x8008be <twi_rxBufferIndex>
    2be8:	fc ce       	rjmp	.-520    	; 0x29e2 <__vector_33+0x52>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:686

    // All
    case TW_NO_INFO:   // no state information
      break;
    case TW_BUS_ERROR: // bus error, illegal stop/start
      twi_error = TW_BUS_ERROR;
    2bea:	10 92 ef 08 	sts	0x08EF, r1	; 0x8008ef <twi_error>
    2bee:	28 cf       	rjmp	.-432    	; 0x2a40 <__vector_33+0xb0>

00002bf0 <countPulseASM>:
countPulseASM():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:62

countPulseASM:

.LM0:
.LFBB1:
    push r12   ;   ;  130 pushqi1/1 [length = 1]
    2bf0:	cf 92       	push	r12
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:63
    push r13   ;   ;  131 pushqi1/1 [length = 1]
    2bf2:	df 92       	push	r13
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:64
    push r14   ;   ;  132 pushqi1/1 [length = 1]
    2bf4:	ef 92       	push	r14
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:65
    push r15   ;   ;  133 pushqi1/1 [length = 1]
    2bf6:	ff 92       	push	r15
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:66
    push r16   ;   ;  134 pushqi1/1 [length = 1]
    2bf8:	0f 93       	push	r16
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:67
    push r17   ;   ;  135 pushqi1/1 [length = 1]
    2bfa:	1f 93       	push	r17
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:72
/* prologue: function */
/* frame size = 0 */
/* stack size = 6 */
.L__stack_usage = 6
    mov r30,r24  ;  port, port   ;  2 *movhi/1  [length = 2]
    2bfc:	e8 2f       	mov	r30, r24
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:73
    mov r31,r25  ;  port, port
    2bfe:	f9 2f       	mov	r31, r25
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:79
/*     unsigned long width = 0;
***     // wait for any previous pulse to end
***     while ((*port & bit) == stateMask)
*/
.LM1:
    rjmp .L2   ;   ;  181 jump  [length = 1]
    2c00:	05 c0       	rjmp	.+10     	; 0x2c0c <countPulseASM+0x1c>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:83
.L4:
/*         if (--maxloops == 0) */
.LM2:
    subi r16,1   ;  maxloops,  ;  17  addsi3/2  [length = 4]
    2c02:	01 50       	subi	r16, 0x01	; 1
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:84
    sbc r17, r1   ;  maxloops
    2c04:	11 09       	sbc	r17, r1
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:85
    sbc r18, r1   ;  maxloops
    2c06:	21 09       	sbc	r18, r1
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:86
    sbc r19, r1   ;  maxloops
    2c08:	31 09       	sbc	r19, r1
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:87
    breq .L13  ; ,   ;  19  branch  [length = 1]
    2c0a:	61 f1       	breq	.+88     	; 0x2c64 <countPulseASM+0x74>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:91
.L2:
/*         if (--maxloops == 0) */
.LM3:
    ld r25,Z   ;  D.1554, *port_7(D)   ;  22  movqi_insn/4  [length = 1]
    2c0c:	90 81       	ld	r25, Z
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:92
    and r25,r22  ;  D.1554, bit  ;  24  andqi3/1  [length = 1]
    2c0e:	96 23       	and	r25, r22
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:93
    cp r25,r20   ;  D.1554, stateMask  ;  25  *cmpqi/2  [length = 1]
    2c10:	94 17       	cp	r25, r20
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:94
    breq .L4   ; ,   ;  26  branch  [length = 1]
    2c12:	b9 f3       	breq	.-18     	; 0x2c02 <countPulseASM+0x12>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:95
    rjmp .L6   ;   ;  184 jump  [length = 1]
    2c14:	05 c0       	rjmp	.+10     	; 0x2c20 <countPulseASM+0x30>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:104
***     // wait for the pulse to start
***     while ((*port & bit) != stateMask)
***         if (--maxloops == 0)
*/
.LM4:
    subi r16,1   ;  maxloops,  ;  31  addsi3/2  [length = 4]
    2c16:	01 50       	subi	r16, 0x01	; 1
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:105
    sbc r17, r1   ;  maxloops
    2c18:	11 09       	sbc	r17, r1
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:106
    sbc r18, r1   ;  maxloops
    2c1a:	21 09       	sbc	r18, r1
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:107
    sbc r19, r1   ;  maxloops
    2c1c:	31 09       	sbc	r19, r1
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:108
    breq .L13  ; ,   ;  33  branch  [length = 1]
    2c1e:	11 f1       	breq	.+68     	; 0x2c64 <countPulseASM+0x74>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:112
.L6:
/*         if (--maxloops == 0) */
.LM5:
    ld r25,Z   ;  D.1554, *port_7(D)   ;  41  movqi_insn/4  [length = 1]
    2c20:	90 81       	ld	r25, Z
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:113
    and r25,r22  ;  D.1554, bit  ;  43  andqi3/1  [length = 1]
    2c22:	96 23       	and	r25, r22
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:114
    cpse r25,r20   ;  D.1554, stateMask  ;  44  enable_interrupt-3  [length = 1]
    2c24:	94 13       	cpse	r25, r20
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:115
    rjmp .L7   ;
    2c26:	f7 cf       	rjmp	.-18     	; 0x2c16 <countPulseASM+0x26>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:116
    mov r12, r1   ;  width  ;  7 *movsi/2  [length = 4]
    2c28:	c1 2c       	mov	r12, r1
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:117
    mov r13, r1   ;  width
    2c2a:	d1 2c       	mov	r13, r1
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:118
    mov r14, r1   ;  width
    2c2c:	e1 2c       	mov	r14, r1
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:119
    mov r15, r1   ;  width
    2c2e:	f1 2c       	mov	r15, r1
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:120
    rjmp .L9   ;   ;  186 jump  [length = 1]
    2c30:	0a c0       	rjmp	.+20     	; 0x2c46 <countPulseASM+0x56>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:129
***     // wait for the pulse to stop
***     while ((*port & bit) == stateMask) {
***         if (++width == maxloops)
*/
.LM6:
    ldi r24,-1   ; ,   ;  50  addsi3/3  [length = 5]
    2c32:	8f ef       	ldi	r24, 0xFF	; 255
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:130
    sub r12,r24  ;  width,
    2c34:	c8 1a       	sub	r12, r24
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:131
    sbc r13,r24  ;  width,
    2c36:	d8 0a       	sbc	r13, r24
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:132
    sbc r14,r24  ;  width,
    2c38:	e8 0a       	sbc	r14, r24
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:133
    sbc r15,r24  ;  width,
    2c3a:	f8 0a       	sbc	r15, r24
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:134
    cp r16,r12   ;  maxloops, width  ;  51  *cmpsi/2  [length = 4]
    2c3c:	0c 15       	cp	r16, r12
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:135
    cpc r17,r13  ;  maxloops, width
    2c3e:	1d 05       	cpc	r17, r13
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:136
    cpc r18,r14  ;  maxloops, width
    2c40:	2e 05       	cpc	r18, r14
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:137
    cpc r19,r15  ;  maxloops, width
    2c42:	3f 05       	cpc	r19, r15
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:138
    breq .L13  ; ,   ;  52  branch  [length = 1]
    2c44:	79 f0       	breq	.+30     	; 0x2c64 <countPulseASM+0x74>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:142
.L9:
/*         if (++width == maxloops) */
.LM7:
    ld r24,Z   ;  D.1554, *port_7(D)   ;  60  movqi_insn/4  [length = 1]
    2c46:	80 81       	ld	r24, Z
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:143
    and r24,r22  ;  D.1554, bit  ;  62  andqi3/1  [length = 1]
    2c48:	86 23       	and	r24, r22
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:144
    cp r24,r20   ;  D.1554, stateMask  ;  63  *cmpqi/2  [length = 1]
    2c4a:	84 17       	cp	r24, r20
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:145
    breq .L10  ; ,   ;  64  branch  [length = 1]
    2c4c:	91 f3       	breq	.-28     	; 0x2c32 <countPulseASM+0x42>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:151
/*             return 0;
***     }
***     return width;
*/
.LM8:
    mov r22,r12  ;  D.1553, width  ;  108 movqi_insn/1  [length = 1]
    2c4e:	6c 2d       	mov	r22, r12
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:152
    mov r23,r13  ;  D.1553, width  ;  109 movqi_insn/1  [length = 1]
    2c50:	7d 2d       	mov	r23, r13
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:153
    mov r24,r14  ;  D.1553, width  ;  110 movqi_insn/1  [length = 1]
    2c52:	8e 2d       	mov	r24, r14
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:154
    mov r25,r15  ;  D.1553, width  ;  111 movqi_insn/1  [length = 1]
    2c54:	9f 2d       	mov	r25, r15
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:157
/* epilogue start */
.LM9:
    pop r17  ;   ;  171 popqi [length = 1]
    2c56:	1f 91       	pop	r17
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:158
    pop r16  ;   ;  172 popqi [length = 1]
    2c58:	0f 91       	pop	r16
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:159
    pop r15  ;   ;  173 popqi [length = 1]
    2c5a:	ff 90       	pop	r15
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:160
    pop r14  ;   ;  174 popqi [length = 1]
    2c5c:	ef 90       	pop	r14
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:161
    pop r13  ;   ;  175 popqi [length = 1]
    2c5e:	df 90       	pop	r13
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:162
    pop r12  ;   ;  176 popqi [length = 1]
    2c60:	cf 90       	pop	r12
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:163
    ret  ;  177 return_from_epilogue  [length = 1]
    2c62:	08 95       	ret
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:166
.L13:
.LM10:
    ldi r22,0  ;  D.1553   ;  120 movqi_insn/1  [length = 1]
    2c64:	60 e0       	ldi	r22, 0x00	; 0
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:167
    ldi r23,0  ;  D.1553   ;  121 movqi_insn/1  [length = 1]
    2c66:	70 e0       	ldi	r23, 0x00	; 0
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:168
    ldi r24,0  ;  D.1553   ;  122 movqi_insn/1  [length = 1]
    2c68:	80 e0       	ldi	r24, 0x00	; 0
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:169
    ldi r25,0  ;  D.1553   ;  123 movqi_insn/1  [length = 1]
    2c6a:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:172
/* epilogue start */
.LM11:
    pop r17  ;   ;  138 popqi [length = 1]
    2c6c:	1f 91       	pop	r17
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:173
    pop r16  ;   ;  139 popqi [length = 1]
    2c6e:	0f 91       	pop	r16
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:174
    pop r15  ;   ;  140 popqi [length = 1]
    2c70:	ff 90       	pop	r15
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:175
    pop r14  ;   ;  141 popqi [length = 1]
    2c72:	ef 90       	pop	r14
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:176
    pop r13  ;   ;  142 popqi [length = 1]
    2c74:	df 90       	pop	r13
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:177
    pop r12  ;   ;  143 popqi [length = 1]
    2c76:	cf 90       	pop	r12
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring_pulse.S:178
    ret  ;  144 return_from_epilogue  [length = 1]
    2c78:	08 95       	ret

00002c7a <TwoWire::write(int) [clone .constprop.29]>:
write():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.h:88
    void onRequest( void (*)(void) );

    inline size_t write(unsigned long n) { return write((uint8_t)n); }
    inline size_t write(long n) { return write((uint8_t)n); }
    inline size_t write(unsigned int n) { return write((uint8_t)n); }
    inline size_t write(int n) { return write((uint8_t)n); }
    2c7a:	68 2f       	mov	r22, r24
    2c7c:	8e ea       	ldi	r24, 0xAE	; 174
    2c7e:	9a e0       	ldi	r25, 0x0A	; 10
    2c80:	0c 94 24 05 	jmp	0xa48	; 0xa48 <TwoWire::write(unsigned char)>

00002c84 <vl(char)>:
vl():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1678

  // Your additional processing logic here

  return vl_dis;
}
unsigned int vl(char xv) {
    2c84:	cf 93       	push	r28
    2c86:	df 93       	push	r29
    2c88:	c8 2f       	mov	r28, r24
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1687

  // Select the appropriate sensor
  if (xv == 1) {
    // Set MUX pins to select sensor 1
    // B11 Right
    digitalWrite(MUX_A, LOW);
    2c8a:	60 e0       	ldi	r22, 0x00	; 0
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1684
  unsigned int vl_dis = 1;

  // Your pin manipulation logic here if needed

  // Select the appropriate sensor
  if (xv == 1) {
    2c8c:	81 30       	cpi	r24, 0x01	; 1
    2c8e:	09 f4       	brne	.+2      	; 0x2c92 <vl(char)+0xe>
    2c90:	3f c0       	rjmp	.+126    	; 0x2d10 <vl(char)+0x8c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1699
    digitalWrite(MUX_B, LOW);
    digitalWrite(MUX_C, HIGH);
  } else if (xv == 3) {
    // Set MUX pins to select sensor 2
    // B13 Left
    digitalWrite(MUX_A, HIGH);
    2c92:	61 e0       	ldi	r22, 0x01	; 1
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1690
    // Set MUX pins to select sensor 1
    // B11 Right
    digitalWrite(MUX_A, LOW);
    digitalWrite(MUX_B, HIGH);
    digitalWrite(MUX_C, LOW);
  } else if (xv == 2) {
    2c94:	82 30       	cpi	r24, 0x02	; 2
    2c96:	e1 f5       	brne	.+120    	; 0x2d10 <vl(char)+0x8c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1693
    // Set MUX pins to select sensor 2
    // B13 Left
    digitalWrite(MUX_A, LOW);
    2c98:	60 e0       	ldi	r22, 0x00	; 0
    2c9a:	8c e2       	ldi	r24, 0x2C	; 44
    2c9c:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1694
    digitalWrite(MUX_B, LOW);
    2ca0:	60 e0       	ldi	r22, 0x00	; 0
    2ca2:	8b e2       	ldi	r24, 0x2B	; 43
    2ca4:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1695
    digitalWrite(MUX_C, HIGH);
    2ca8:	61 e0       	ldi	r22, 0x01	; 1
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1701
  } else if (xv == 3) {
    // Set MUX pins to select sensor 2
    // B13 Left
    digitalWrite(MUX_A, HIGH);
    digitalWrite(MUX_B, HIGH);
    digitalWrite(MUX_C, LOW);
    2caa:	8a e2       	ldi	r24, 0x2A	; 42
    2cac:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
beginTransmission():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:208
  txBufferLength = 0;
}

void TwoWire::beginTransmission(int address)
{
  beginTransmission((uint8_t)address);
    2cb0:	89 e2       	ldi	r24, 0x29	; 41
    2cb2:	0e 94 a1 01 	call	0x342	; 0x342 <TwoWire::beginTransmission(unsigned char) [clone .constprop.17]>
vl():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1705
  }
  // Send command to start distance measurement
  Wire.beginTransmission(VL53L0X_ADDRESS);
  Wire.write(VL53L0X_REG_SYSRANGE_START);
    2cb6:	90 e0       	ldi	r25, 0x00	; 0
    2cb8:	80 e0       	ldi	r24, 0x00	; 0
    2cba:	0e 94 3d 16 	call	0x2c7a	; 0x2c7a <TwoWire::write(int) [clone .constprop.29]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1706
  Wire.write(0x01);
    2cbe:	81 e0       	ldi	r24, 0x01	; 1
    2cc0:	90 e0       	ldi	r25, 0x00	; 0
    2cc2:	0e 94 3d 16 	call	0x2c7a	; 0x2c7a <TwoWire::write(int) [clone .constprop.29]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1707
  Wire.endTransmission();
    2cc6:	0e 94 ab 01 	call	0x356	; 0x356 <TwoWire::endTransmission() [clone .constprop.13]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1710

  // Delay for measurement completion
  delay(10);  // Adjust delay if needed
    2cca:	6a e0       	ldi	r22, 0x0A	; 10
    2ccc:	70 e0       	ldi	r23, 0x00	; 0
    2cce:	80 e0       	ldi	r24, 0x00	; 0
    2cd0:	90 e0       	ldi	r25, 0x00	; 0
    2cd2:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <delay>
beginTransmission():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:208
    2cd6:	89 e2       	ldi	r24, 0x29	; 41
    2cd8:	0e 94 a1 01 	call	0x342	; 0x342 <TwoWire::beginTransmission(unsigned char) [clone .constprop.17]>
vl():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1714

  // Request distance measurement
  Wire.beginTransmission(VL53L0X_ADDRESS);
  Wire.write(VL53L0X_REG_RESULT_RANGE_VAL);
    2cdc:	8e e1       	ldi	r24, 0x1E	; 30
    2cde:	90 e0       	ldi	r25, 0x00	; 0
    2ce0:	0e 94 3d 16 	call	0x2c7a	; 0x2c7a <TwoWire::write(int) [clone .constprop.29]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1715
  Wire.endTransmission(false);
    2ce4:	80 e0       	ldi	r24, 0x00	; 0
    2ce6:	0e 94 49 01 	call	0x292	; 0x292 <TwoWire::endTransmission(unsigned char) [clone .constprop.18]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1718

  // Read distance measurement (2 bytes)
  Wire.requestFrom(VL53L0X_ADDRESS, 2);
    2cea:	62 e0       	ldi	r22, 0x02	; 2
    2cec:	70 e0       	ldi	r23, 0x00	; 0
    2cee:	89 e2       	ldi	r24, 0x29	; 41
    2cf0:	90 e0       	ldi	r25, 0x00	; 0
    2cf2:	0e 94 78 09 	call	0x12f0	; 0x12f0 <TwoWire::requestFrom(int, int) [clone .constprop.14]>
available():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:292
// must be called in:
// slave rx event callback
// or after requestFrom(address, numBytes)
int TwoWire::available(void)
{
  return rxBufferLength - rxBufferIndex;
    2cf6:	80 91 36 09 	lds	r24, 0x0936	; 0x800936 <TwoWire::rxBufferLength>
    2cfa:	90 91 37 09 	lds	r25, 0x0937	; 0x800937 <TwoWire::rxBufferIndex>
    2cfe:	89 1b       	sub	r24, r25
    2d00:	99 0b       	sbc	r25, r25
vl():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1719
  if (Wire.available() >= 2) {
    2d02:	02 97       	sbiw	r24, 0x02	; 2
    2d04:	74 f4       	brge	.+28     	; 0x2d22 <vl(char)+0x9e>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1679
  // Your additional processing logic here

  return vl_dis;
}
unsigned int vl(char xv) {
  unsigned int vl_dis = 1;
    2d06:	81 e0       	ldi	r24, 0x01	; 1
    2d08:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1730
  // Your additional processing logic here
  if (vl_dis == 20) {
    delay(10);
    return vl_double_check(xv);
  } else return vl_dis;
}
    2d0a:	df 91       	pop	r29
    2d0c:	cf 91       	pop	r28
    2d0e:	08 95       	ret
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1699
    digitalWrite(MUX_B, LOW);
    digitalWrite(MUX_C, HIGH);
  } else if (xv == 3) {
    // Set MUX pins to select sensor 2
    // B13 Left
    digitalWrite(MUX_A, HIGH);
    2d10:	8c e2       	ldi	r24, 0x2C	; 44
    2d12:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1700
    digitalWrite(MUX_B, HIGH);
    2d16:	61 e0       	ldi	r22, 0x01	; 1
    2d18:	8b e2       	ldi	r24, 0x2B	; 43
    2d1a:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1701
    digitalWrite(MUX_C, LOW);
    2d1e:	60 e0       	ldi	r22, 0x00	; 0
    2d20:	c4 cf       	rjmp	.-120    	; 0x2caa <vl(char)+0x26>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1720
  Wire.endTransmission(false);

  // Read distance measurement (2 bytes)
  Wire.requestFrom(VL53L0X_ADDRESS, 2);
  if (Wire.available() >= 2) {
    byte distance_msb = Wire.read();
    2d22:	0e 94 36 01 	call	0x26c	; 0x26c <TwoWire::read() [clone .constprop.22]>
    2d26:	d8 2f       	mov	r29, r24
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1721
    byte distance_lsb = Wire.read();
    2d28:	0e 94 36 01 	call	0x26c	; 0x26c <TwoWire::read() [clone .constprop.22]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1722
    vl_dis = ((unsigned int)distance_msb << 8) | distance_lsb;
    2d2c:	20 e0       	ldi	r18, 0x00	; 0
    2d2e:	3d 2f       	mov	r19, r29
    2d30:	a9 01       	movw	r20, r18
    2d32:	48 2b       	or	r20, r24
    2d34:	ca 01       	movw	r24, r20
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1726
  }

  // Your additional processing logic here
  if (vl_dis == 20) {
    2d36:	84 31       	cpi	r24, 0x14	; 20
    2d38:	91 05       	cpc	r25, r1
    2d3a:	39 f7       	brne	.-50     	; 0x2d0a <vl(char)+0x86>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1727
    delay(10);
    2d3c:	6a e0       	ldi	r22, 0x0A	; 10
    2d3e:	70 e0       	ldi	r23, 0x00	; 0
    2d40:	80 e0       	ldi	r24, 0x00	; 0
    2d42:	90 e0       	ldi	r25, 0x00	; 0
    2d44:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <delay>
vl_double_check():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1636

  // Select the appropriate sensor
  if (xv == 1) {
    // Set MUX pins to select sensor 1
    // B11 Right
    digitalWrite(MUX_A, LOW);
    2d48:	60 e0       	ldi	r22, 0x00	; 0
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1633
  unsigned int vl_dis = 1;

  // Your pin manipulation logic here if needed

  // Select the appropriate sensor
  if (xv == 1) {
    2d4a:	c1 30       	cpi	r28, 0x01	; 1
    2d4c:	09 f4       	brne	.+2      	; 0x2d50 <vl(char)+0xcc>
    2d4e:	47 c0       	rjmp	.+142    	; 0x2dde <vl(char)+0x15a>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1648
    digitalWrite(MUX_B, LOW);
    digitalWrite(MUX_C, HIGH);
  } else if (xv == 3) {
    // Set MUX pins to select sensor 2
    // B13 Left
    digitalWrite(MUX_A, HIGH);
    2d50:	61 e0       	ldi	r22, 0x01	; 1
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1639
    // Set MUX pins to select sensor 1
    // B11 Right
    digitalWrite(MUX_A, LOW);
    digitalWrite(MUX_B, HIGH);
    digitalWrite(MUX_C, LOW);
  } else if (xv == 2) {
    2d52:	c2 30       	cpi	r28, 0x02	; 2
    2d54:	09 f0       	breq	.+2      	; 0x2d58 <vl(char)+0xd4>
    2d56:	43 c0       	rjmp	.+134    	; 0x2dde <vl(char)+0x15a>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1642
    // Set MUX pins to select sensor 2
    // B13 Left
    digitalWrite(MUX_A, LOW);
    2d58:	60 e0       	ldi	r22, 0x00	; 0
    2d5a:	8c e2       	ldi	r24, 0x2C	; 44
    2d5c:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1643
    digitalWrite(MUX_B, LOW);
    2d60:	60 e0       	ldi	r22, 0x00	; 0
    2d62:	8b e2       	ldi	r24, 0x2B	; 43
    2d64:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1644
    digitalWrite(MUX_C, HIGH);
    2d68:	61 e0       	ldi	r22, 0x01	; 1
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1650
  } else if (xv == 3) {
    // Set MUX pins to select sensor 2
    // B13 Left
    digitalWrite(MUX_A, HIGH);
    digitalWrite(MUX_B, HIGH);
    digitalWrite(MUX_C, LOW);
    2d6a:	8a e2       	ldi	r24, 0x2A	; 42
    2d6c:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
beginTransmission():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:208
  txBufferLength = 0;
}

void TwoWire::beginTransmission(int address)
{
  beginTransmission((uint8_t)address);
    2d70:	89 e2       	ldi	r24, 0x29	; 41
    2d72:	0e 94 a1 01 	call	0x342	; 0x342 <TwoWire::beginTransmission(unsigned char) [clone .constprop.17]>
vl_double_check():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1654
  }
  // Send command to start distance measurement
  Wire.beginTransmission(VL53L0X_ADDRESS);
  Wire.write(VL53L0X_REG_SYSRANGE_START);
    2d76:	90 e0       	ldi	r25, 0x00	; 0
    2d78:	80 e0       	ldi	r24, 0x00	; 0
    2d7a:	0e 94 3d 16 	call	0x2c7a	; 0x2c7a <TwoWire::write(int) [clone .constprop.29]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1655
  Wire.write(0x01);
    2d7e:	81 e0       	ldi	r24, 0x01	; 1
    2d80:	90 e0       	ldi	r25, 0x00	; 0
    2d82:	0e 94 3d 16 	call	0x2c7a	; 0x2c7a <TwoWire::write(int) [clone .constprop.29]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1656
  Wire.endTransmission();
    2d86:	0e 94 ab 01 	call	0x356	; 0x356 <TwoWire::endTransmission() [clone .constprop.13]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1659

  // Delay for measurement completion
  delay(10);  // Adjust delay if needed
    2d8a:	6a e0       	ldi	r22, 0x0A	; 10
    2d8c:	70 e0       	ldi	r23, 0x00	; 0
    2d8e:	80 e0       	ldi	r24, 0x00	; 0
    2d90:	90 e0       	ldi	r25, 0x00	; 0
    2d92:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <delay>
beginTransmission():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:208
    2d96:	89 e2       	ldi	r24, 0x29	; 41
    2d98:	0e 94 a1 01 	call	0x342	; 0x342 <TwoWire::beginTransmission(unsigned char) [clone .constprop.17]>
vl_double_check():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1663

  // Request distance measurement
  Wire.beginTransmission(VL53L0X_ADDRESS);
  Wire.write(VL53L0X_REG_RESULT_RANGE_VAL);
    2d9c:	8e e1       	ldi	r24, 0x1E	; 30
    2d9e:	90 e0       	ldi	r25, 0x00	; 0
    2da0:	0e 94 3d 16 	call	0x2c7a	; 0x2c7a <TwoWire::write(int) [clone .constprop.29]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1664
  Wire.endTransmission(false);
    2da4:	80 e0       	ldi	r24, 0x00	; 0
    2da6:	0e 94 49 01 	call	0x292	; 0x292 <TwoWire::endTransmission(unsigned char) [clone .constprop.18]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1667

  // Read distance measurement (2 bytes)
  Wire.requestFrom(VL53L0X_ADDRESS, 2);
    2daa:	62 e0       	ldi	r22, 0x02	; 2
    2dac:	70 e0       	ldi	r23, 0x00	; 0
    2dae:	89 e2       	ldi	r24, 0x29	; 41
    2db0:	90 e0       	ldi	r25, 0x00	; 0
    2db2:	0e 94 78 09 	call	0x12f0	; 0x12f0 <TwoWire::requestFrom(int, int) [clone .constprop.14]>
available():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:292
// must be called in:
// slave rx event callback
// or after requestFrom(address, numBytes)
int TwoWire::available(void)
{
  return rxBufferLength - rxBufferIndex;
    2db6:	80 91 36 09 	lds	r24, 0x0936	; 0x800936 <TwoWire::rxBufferLength>
    2dba:	90 91 37 09 	lds	r25, 0x0937	; 0x800937 <TwoWire::rxBufferIndex>
    2dbe:	89 1b       	sub	r24, r25
    2dc0:	99 0b       	sbc	r25, r25
vl_double_check():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1668
  if (Wire.available() >= 2) {
    2dc2:	02 97       	sbiw	r24, 0x02	; 2
    2dc4:	0c f4       	brge	.+2      	; 0x2dc8 <vl(char)+0x144>
    2dc6:	9f cf       	rjmp	.-194    	; 0x2d06 <vl(char)+0x82>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1669
    byte distance_msb = Wire.read();
    2dc8:	0e 94 36 01 	call	0x26c	; 0x26c <TwoWire::read() [clone .constprop.22]>
    2dcc:	c8 2f       	mov	r28, r24
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1670
    byte distance_lsb = Wire.read();
    2dce:	0e 94 36 01 	call	0x26c	; 0x26c <TwoWire::read() [clone .constprop.22]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1671
    vl_dis = ((unsigned int)distance_msb << 8) | distance_lsb;
    2dd2:	20 e0       	ldi	r18, 0x00	; 0
    2dd4:	3c 2f       	mov	r19, r28
    2dd6:	a9 01       	movw	r20, r18
    2dd8:	48 2b       	or	r20, r24
    2dda:	ca 01       	movw	r24, r20
    2ddc:	96 cf       	rjmp	.-212    	; 0x2d0a <vl(char)+0x86>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1648
    digitalWrite(MUX_B, LOW);
    digitalWrite(MUX_C, HIGH);
  } else if (xv == 3) {
    // Set MUX pins to select sensor 2
    // B13 Left
    digitalWrite(MUX_A, HIGH);
    2dde:	8c e2       	ldi	r24, 0x2C	; 44
    2de0:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1649
    digitalWrite(MUX_B, HIGH);
    2de4:	61 e0       	ldi	r22, 0x01	; 1
    2de6:	8b e2       	ldi	r24, 0x2B	; 43
    2de8:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1650
    digitalWrite(MUX_C, LOW);
    2dec:	60 e0       	ldi	r22, 0x00	; 0
    2dee:	bd cf       	rjmp	.-134    	; 0x2d6a <vl(char)+0xe6>

00002df0 <cmps(int)>:
cmps():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1552
      break;
    }
  }
}

int cmps(int select) {
    2df0:	bf 92       	push	r11
    2df2:	cf 92       	push	r12
    2df4:	df 92       	push	r13
    2df6:	ef 92       	push	r14
    2df8:	ff 92       	push	r15
    2dfa:	0f 93       	push	r16
    2dfc:	1f 93       	push	r17
    2dfe:	cf 93       	push	r28
    2e00:	df 93       	push	r29
    2e02:	8c 01       	movw	r16, r24
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1555
  int degree, pi, rol;

  digitalWrite(MUX_A, HIGH);  //switching the multiplaxer
    2e04:	61 e0       	ldi	r22, 0x01	; 1
    2e06:	8c e2       	ldi	r24, 0x2C	; 44
    2e08:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1556
  digitalWrite(MUX_B, HIGH);
    2e0c:	61 e0       	ldi	r22, 0x01	; 1
    2e0e:	8b e2       	ldi	r24, 0x2B	; 43
    2e10:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1557
  digitalWrite(MUX_C, LOW);
    2e14:	60 e0       	ldi	r22, 0x00	; 0
    2e16:	8a e2       	ldi	r24, 0x2A	; 42
    2e18:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
beginTransmission():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:208
  txBufferLength = 0;
}

void TwoWire::beginTransmission(int address)
{
  beginTransmission((uint8_t)address);
    2e1c:	80 e6       	ldi	r24, 0x60	; 96
    2e1e:	0e 94 a1 01 	call	0x342	; 0x342 <TwoWire::beginTransmission(unsigned char) [clone .constprop.17]>
cmps():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1560

  Wire.beginTransmission(cmps_address);
  Wire.write(0x02);  // Register address for desired data (adjust as needed)
    2e22:	82 e0       	ldi	r24, 0x02	; 2
    2e24:	90 e0       	ldi	r25, 0x00	; 0
    2e26:	0e 94 3d 16 	call	0x2c7a	; 0x2c7a <TwoWire::write(int) [clone .constprop.29]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1561
  Wire.endTransmission();
    2e2a:	0e 94 ab 01 	call	0x356	; 0x356 <TwoWire::endTransmission() [clone .constprop.13]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1563

  Wire.requestFrom(cmps_address, 4);  // Request 4 bytes of data
    2e2e:	64 e0       	ldi	r22, 0x04	; 4
    2e30:	70 e0       	ldi	r23, 0x00	; 0
    2e32:	80 e6       	ldi	r24, 0x60	; 96
    2e34:	90 e0       	ldi	r25, 0x00	; 0
    2e36:	0e 94 78 09 	call	0x12f0	; 0x12f0 <TwoWire::requestFrom(int, int) [clone .constprop.14]>
available():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:292
// must be called in:
// slave rx event callback
// or after requestFrom(address, numBytes)
int TwoWire::available(void)
{
  return rxBufferLength - rxBufferIndex;
    2e3a:	80 91 36 09 	lds	r24, 0x0936	; 0x800936 <TwoWire::rxBufferLength>
    2e3e:	90 91 37 09 	lds	r25, 0x0937	; 0x800937 <TwoWire::rxBufferIndex>
    2e42:	89 1b       	sub	r24, r25
    2e44:	99 0b       	sbc	r25, r25
cmps():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1565

  if (Wire.available() >= 4) {
    2e46:	04 97       	sbiw	r24, 0x04	; 4
    2e48:	94 f1       	brlt	.+100    	; 0x2eae <cmps(int)+0xbe>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1566
    degree = Wire.read();
    2e4a:	0e 94 36 01 	call	0x26c	; 0x26c <TwoWire::read() [clone .constprop.22]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1567
    degree = (degree << 8) | Wire.read();
    2e4e:	d8 2f       	mov	r29, r24
    2e50:	20 e0       	ldi	r18, 0x00	; 0
    2e52:	c2 2f       	mov	r28, r18
    2e54:	0e 94 36 01 	call	0x26c	; 0x26c <TwoWire::read() [clone .constprop.22]>
    2e58:	8c 2b       	or	r24, r28
    2e5a:	9d 2b       	or	r25, r29
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1568
    degree /= 10;  // Adjust scaling if needed
    2e5c:	6a e0       	ldi	r22, 0x0A	; 10
    2e5e:	70 e0       	ldi	r23, 0x00	; 0
    2e60:	0e 94 17 35 	call	0x6a2e	; 0x6a2e <__divmodhi4>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1569
    degree -= DN;  // Replace DN with your offset value (if applicable)
    2e64:	80 91 db 08 	lds	r24, 0x08DB	; 0x8008db <DN>
    2e68:	90 91 dc 08 	lds	r25, 0x08DC	; 0x8008dc <DN+0x1>
    2e6c:	eb 01       	movw	r28, r22
    2e6e:	c8 1b       	sub	r28, r24
    2e70:	d9 0b       	sbc	r29, r25
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1571

    pi = Wire.read();
    2e72:	0e 94 36 01 	call	0x26c	; 0x26c <TwoWire::read() [clone .constprop.22]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1572
    pi = pi * 180 / 255;
    2e76:	24 eb       	ldi	r18, 0xB4	; 180
    2e78:	d2 2e       	mov	r13, r18
    2e7a:	9c 01       	movw	r18, r24
    2e7c:	d2 9e       	mul	r13, r18
    2e7e:	c0 01       	movw	r24, r0
    2e80:	d3 9e       	mul	r13, r19
    2e82:	90 0d       	add	r25, r0
    2e84:	11 24       	eor	r1, r1
    2e86:	ee 24       	eor	r14, r14
    2e88:	ea 94       	dec	r14
    2e8a:	f1 2c       	mov	r15, r1
    2e8c:	b7 01       	movw	r22, r14
    2e8e:	0e 94 17 35 	call	0x6a2e	; 0x6a2e <__divmodhi4>
    2e92:	b6 2e       	mov	r11, r22
    2e94:	c7 2e       	mov	r12, r23
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1574

    rol = Wire.read();
    2e96:	0e 94 36 01 	call	0x26c	; 0x26c <TwoWire::read() [clone .constprop.22]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1575
    rol = rol * 180 / 255;
    2e9a:	9c 01       	movw	r18, r24
    2e9c:	d2 9e       	mul	r13, r18
    2e9e:	c0 01       	movw	r24, r0
    2ea0:	d3 9e       	mul	r13, r19
    2ea2:	90 0d       	add	r25, r0
    2ea4:	11 24       	eor	r1, r1
    2ea6:	b7 01       	movw	r22, r14
    2ea8:	0e 94 17 35 	call	0x6a2e	; 0x6a2e <__divmodhi4>
    2eac:	7b 01       	movw	r14, r22
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1578
  }

  if (degree < 0) {
    2eae:	d7 ff       	sbrs	r29, 7
    2eb0:	02 c0       	rjmp	.+4      	; 0x2eb6 <cmps(int)+0xc6>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1579
    degree += 360;
    2eb2:	c8 59       	subi	r28, 0x98	; 152
    2eb4:	de 4f       	sbci	r29, 0xFE	; 254
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1583
  }


  if (select == 1) {
    2eb6:	01 30       	cpi	r16, 0x01	; 1
    2eb8:	11 05       	cpc	r17, r1
    2eba:	29 f0       	breq	.+10     	; 0x2ec6 <cmps(int)+0xd6>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1585
    return degree;
  } else if (select == 2) {
    2ebc:	02 30       	cpi	r16, 0x02	; 2
    2ebe:	11 05       	cpc	r17, r1
    2ec0:	69 f0       	breq	.+26     	; 0x2edc <cmps(int)+0xec>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1588
    return pi;
  } else {
    return rol;
    2ec2:	ce 2d       	mov	r28, r14
    2ec4:	df 2d       	mov	r29, r15
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1590
  }
}
    2ec6:	ce 01       	movw	r24, r28
    2ec8:	df 91       	pop	r29
    2eca:	cf 91       	pop	r28
    2ecc:	1f 91       	pop	r17
    2ece:	0f 91       	pop	r16
    2ed0:	ff 90       	pop	r15
    2ed2:	ef 90       	pop	r14
    2ed4:	df 90       	pop	r13
    2ed6:	cf 90       	pop	r12
    2ed8:	bf 90       	pop	r11
    2eda:	08 95       	ret
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1586


  if (select == 1) {
    return degree;
  } else if (select == 2) {
    return pi;
    2edc:	cb 2d       	mov	r28, r11
    2ede:	dc 2d       	mov	r29, r12
    2ee0:	f2 cf       	rjmp	.-28     	; 0x2ec6 <cmps(int)+0xd6>

00002ee2 <menu_motor()>:
menu_motor():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:946
}

void menu_motor(void) {
  static char page = 1, last_page = 8;
  signed int spd = 0;
  lcd.clear();
    2ee2:	0e 94 f6 05 	call	0xbec	; 0xbec <LiquidCrystal::clear() [clone .constprop.38]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:947
  int basket_up = EEPROM_read_int(basket_up_address);
    2ee6:	84 ea       	ldi	r24, 0xA4	; 164
    2ee8:	90 e0       	ldi	r25, 0x00	; 0
    2eea:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    2eee:	5c 01       	movw	r10, r24
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:948
  int basket_normal = EEPROM_read_int(basket_normal_address);
    2ef0:	86 ea       	ldi	r24, 0xA6	; 166
    2ef2:	90 e0       	ldi	r25, 0x00	; 0
    2ef4:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    2ef8:	6c 01       	movw	r12, r24
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:949
  int arm_normal = EEPROM_read_int(arm_normal_address);
    2efa:	88 ea       	ldi	r24, 0xA8	; 168
    2efc:	90 e0       	ldi	r25, 0x00	; 0
    2efe:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    2f02:	4c 01       	movw	r8, r24
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:950
  int arm_down = EEPROM_read_int(arm_down_address);
    2f04:	8a ea       	ldi	r24, 0xAA	; 170
    2f06:	90 e0       	ldi	r25, 0x00	; 0
    2f08:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    2f0c:	3c 01       	movw	r6, r24
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:951
  int arm_dropping = EEPROM_read_int(arm_dropping_address);
    2f0e:	8c ea       	ldi	r24, 0xAC	; 172
    2f10:	90 e0       	ldi	r25, 0x00	; 0
    2f12:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    2f16:	2c 01       	movw	r4, r24
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:952
  int gripper_close = EEPROM_read_int(gripper_close_address);
    2f18:	8e ea       	ldi	r24, 0xAE	; 174
    2f1a:	90 e0       	ldi	r25, 0x00	; 0
    2f1c:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    2f20:	7c 01       	movw	r14, r24
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:953
  int gripper_open = EEPROM_read_int(gripper_open_address);
    2f22:	80 eb       	ldi	r24, 0xB0	; 176
    2f24:	90 e0       	ldi	r25, 0x00	; 0
    2f26:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    2f2a:	8c 01       	movw	r16, r24
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:945
  }
}

void menu_motor(void) {
  static char page = 1, last_page = 8;
  signed int spd = 0;
    2f2c:	d0 e0       	ldi	r29, 0x00	; 0
    2f2e:	c0 e0       	ldi	r28, 0x00	; 0
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1108
          gripper_close -= 5;
      }
    } else if (page == 8)  // XL Gripper open 30 and 31
    {
      lcd.setCursor(0, 0);
      lcd.printf("gripper_open %d %4d", 10, gripper_open);
    2f30:	8a eb       	ldi	r24, 0xBA	; 186
    2f32:	28 2e       	mov	r2, r24
    2f34:	8a e0       	ldi	r24, 0x0A	; 10
    2f36:	38 2e       	mov	r3, r24
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:956
  int arm_dropping = EEPROM_read_int(arm_dropping_address);
  int gripper_close = EEPROM_read_int(gripper_close_address);
  int gripper_open = EEPROM_read_int(gripper_open_address);

  while (1) {
    if (next_page == 0) {
    2f38:	88 e0       	ldi	r24, 0x08	; 8
    2f3a:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    2f3e:	89 2b       	or	r24, r25
    2f40:	a9 f4       	brne	.+42     	; 0x2f6c <menu_motor()+0x8a>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:957
      while (next_page == 0)
    2f42:	88 e0       	ldi	r24, 0x08	; 8
    2f44:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    2f48:	89 2b       	or	r24, r25
    2f4a:	d9 f3       	breq	.-10     	; 0x2f42 <menu_motor()+0x60>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:959
        ;
      delay(50);
    2f4c:	62 e3       	ldi	r22, 0x32	; 50
    2f4e:	70 e0       	ldi	r23, 0x00	; 0
    2f50:	80 e0       	ldi	r24, 0x00	; 0
    2f52:	90 e0       	ldi	r25, 0x00	; 0
    2f54:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <delay>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:960
      page++;
    2f58:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <menu_motor()::page>
    2f5c:	8f 5f       	subi	r24, 0xFF	; 255
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:961
      if (page > last_page)
    2f5e:	89 30       	cpi	r24, 0x09	; 9
    2f60:	0c f0       	brlt	.+2      	; 0x2f64 <menu_motor()+0x82>
    2f62:	59 c0       	rjmp	.+178    	; 0x3016 <menu_motor()+0x134>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:962
        page = 1;
    2f64:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <menu_motor()::page>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:963
      lcd.clear();
    2f68:	0e 94 f6 05 	call	0xbec	; 0xbec <LiquidCrystal::clear() [clone .constprop.38]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:966
    }

    if (previuse_page == 0) {
    2f6c:	89 e0       	ldi	r24, 0x09	; 9
    2f6e:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    2f72:	89 2b       	or	r24, r25
    2f74:	a9 f4       	brne	.+42     	; 0x2fa0 <menu_motor()+0xbe>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:967
      while (previuse_page == 0)
    2f76:	89 e0       	ldi	r24, 0x09	; 9
    2f78:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    2f7c:	89 2b       	or	r24, r25
    2f7e:	d9 f3       	breq	.-10     	; 0x2f76 <menu_motor()+0x94>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:969
        ;
      delay(50);
    2f80:	62 e3       	ldi	r22, 0x32	; 50
    2f82:	70 e0       	ldi	r23, 0x00	; 0
    2f84:	80 e0       	ldi	r24, 0x00	; 0
    2f86:	90 e0       	ldi	r25, 0x00	; 0
    2f88:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <delay>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:970
      page--;
    2f8c:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <menu_motor()::page>
    2f90:	81 50       	subi	r24, 0x01	; 1
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:971
      if (page < 1)
    2f92:	18 16       	cp	r1, r24
    2f94:	0c f0       	brlt	.+2      	; 0x2f98 <menu_motor()+0xb6>
    2f96:	41 c0       	rjmp	.+130    	; 0x301a <menu_motor()+0x138>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:972
        page = last_page;
    2f98:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <menu_motor()::page>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:973
      lcd.clear();
    2f9c:	0e 94 f6 05 	call	0xbec	; 0xbec <LiquidCrystal::clear() [clone .constprop.38]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:976
    }

    if (page == 1)  // go
    2fa0:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <menu_motor()::page>
    2fa4:	81 30       	cpi	r24, 0x01	; 1
    2fa6:	09 f0       	breq	.+2      	; 0x2faa <menu_motor()+0xc8>
    2fa8:	44 c0       	rjmp	.+136    	; 0x3032 <menu_motor()+0x150>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:978
    {
      lcd.setCursor(0, 0);
    2faa:	60 e0       	ldi	r22, 0x00	; 0
    2fac:	80 e0       	ldi	r24, 0x00	; 0
    2fae:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:979
      lcd.printf("go(%4d,%4d) ", spd, spd);
    2fb2:	df 93       	push	r29
    2fb4:	cf 93       	push	r28
    2fb6:	df 93       	push	r29
    2fb8:	cf 93       	push	r28
    2fba:	88 e3       	ldi	r24, 0x38	; 56
    2fbc:	93 e0       	ldi	r25, 0x03	; 3
    2fbe:	9f 93       	push	r25
    2fc0:	8f 93       	push	r24
    2fc2:	3f 92       	push	r3
    2fc4:	2f 92       	push	r2
    2fc6:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:980
      if (increase == 0) {
    2fca:	8a e0       	ldi	r24, 0x0A	; 10
    2fcc:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    2fd0:	2d b7       	in	r18, 0x3d	; 61
    2fd2:	3e b7       	in	r19, 0x3e	; 62
    2fd4:	28 5f       	subi	r18, 0xF8	; 248
    2fd6:	3f 4f       	sbci	r19, 0xFF	; 255
    2fd8:	0f b6       	in	r0, 0x3f	; 63
    2fda:	f8 94       	cli
    2fdc:	3e bf       	out	0x3e, r19	; 62
    2fde:	0f be       	out	0x3f, r0	; 63
    2fe0:	2d bf       	out	0x3d, r18	; 61
    2fe2:	89 2b       	or	r24, r25
    2fe4:	e1 f4       	brne	.+56     	; 0x301e <menu_motor()+0x13c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:981
        spd += 50;
    2fe6:	e2 96       	adiw	r28, 0x32	; 50
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:985
        delay(400);
      } else if (decrease == 0) {
        spd -= 50;
        delay(400);
    2fe8:	60 e9       	ldi	r22, 0x90	; 144
    2fea:	71 e0       	ldi	r23, 0x01	; 1
    2fec:	80 e0       	ldi	r24, 0x00	; 0
    2fee:	90 e0       	ldi	r25, 0x00	; 0
    2ff0:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <delay>
    2ff4:	c1 30       	cpi	r28, 0x01	; 1
    2ff6:	3f ef       	ldi	r19, 0xFF	; 255
    2ff8:	d3 07       	cpc	r29, r19
    2ffa:	14 f4       	brge	.+4      	; 0x3000 <menu_motor()+0x11e>
    2ffc:	c1 e0       	ldi	r28, 0x01	; 1
    2ffe:	df ef       	ldi	r29, 0xFF	; 255
    3000:	cf 3f       	cpi	r28, 0xFF	; 255
    3002:	d1 05       	cpc	r29, r1
    3004:	19 f0       	breq	.+6      	; 0x300c <menu_motor()+0x12a>
    3006:	14 f0       	brlt	.+4      	; 0x300c <menu_motor()+0x12a>
    3008:	cf ef       	ldi	r28, 0xFF	; 255
    300a:	d0 e0       	ldi	r29, 0x00	; 0
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:994
      if (spd > 255)
        spd = 255;
      if (spd < -255)
        spd = -255;

      go(spd, spd);
    300c:	be 01       	movw	r22, r28
    300e:	ce 01       	movw	r24, r28
    3010:	0e 94 07 07 	call	0xe0e	; 0xe0e <go(int, int)>
    3014:	91 cf       	rjmp	.-222    	; 0x2f38 <menu_motor()+0x56>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:962
      while (next_page == 0)
        ;
      delay(50);
      page++;
      if (page > last_page)
        page = 1;
    3016:	81 e0       	ldi	r24, 0x01	; 1
    3018:	a5 cf       	rjmp	.-182    	; 0x2f64 <menu_motor()+0x82>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:972
      while (previuse_page == 0)
        ;
      delay(50);
      page--;
      if (page < 1)
        page = last_page;
    301a:	88 e0       	ldi	r24, 0x08	; 8
    301c:	bd cf       	rjmp	.-134    	; 0x2f98 <menu_motor()+0xb6>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:983
      lcd.setCursor(0, 0);
      lcd.printf("go(%4d,%4d) ", spd, spd);
      if (increase == 0) {
        spd += 50;
        delay(400);
      } else if (decrease == 0) {
    301e:	8b e0       	ldi	r24, 0x0B	; 11
    3020:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    3024:	89 2b       	or	r24, r25
    3026:	11 f4       	brne	.+4      	; 0x302c <menu_motor()+0x14a>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:984
        spd -= 50;
    3028:	e2 97       	sbiw	r28, 0x32	; 50
    302a:	de cf       	rjmp	.-68     	; 0x2fe8 <menu_motor()+0x106>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:987
        delay(400);
      } else
        spd = 0;
    302c:	d0 e0       	ldi	r29, 0x00	; 0
    302e:	c0 e0       	ldi	r28, 0x00	; 0
    3030:	ed cf       	rjmp	.-38     	; 0x300c <menu_motor()+0x12a>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:995
        spd = 255;
      if (spd < -255)
        spd = -255;

      go(spd, spd);
    } else if (page == 2)  // AX Basket ID=10
    3032:	82 30       	cpi	r24, 0x02	; 2
    3034:	09 f0       	breq	.+2      	; 0x3038 <menu_motor()+0x156>
    3036:	55 c0       	rjmp	.+170    	; 0x30e2 <menu_motor()+0x200>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:997
    {
      lcd.setCursor(0, 0);
    3038:	60 e0       	ldi	r22, 0x00	; 0
    303a:	80 e0       	ldi	r24, 0x00	; 0
    303c:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:998
      lcd.printf("Basket up %d %4d", 10, basket_up);
    3040:	bf 92       	push	r11
    3042:	af 92       	push	r10
    3044:	1f 92       	push	r1
    3046:	8a e0       	ldi	r24, 0x0A	; 10
    3048:	8f 93       	push	r24
    304a:	85 e4       	ldi	r24, 0x45	; 69
    304c:	93 e0       	ldi	r25, 0x03	; 3
    304e:	9f 93       	push	r25
    3050:	8f 93       	push	r24
    3052:	3f 92       	push	r3
    3054:	2f 92       	push	r2
    3056:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:999
      if (start == 0) {
    305a:	86 e0       	ldi	r24, 0x06	; 6
    305c:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    3060:	2d b7       	in	r18, 0x3d	; 61
    3062:	3e b7       	in	r19, 0x3e	; 62
    3064:	28 5f       	subi	r18, 0xF8	; 248
    3066:	3f 4f       	sbci	r19, 0xFF	; 255
    3068:	0f b6       	in	r0, 0x3f	; 63
    306a:	f8 94       	cli
    306c:	3e bf       	out	0x3e, r19	; 62
    306e:	0f be       	out	0x3f, r0	; 63
    3070:	2d bf       	out	0x3d, r18	; 61
    3072:	89 2b       	or	r24, r25
    3074:	61 f4       	brne	.+24     	; 0x308e <menu_motor()+0x1ac>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1000
        EEPROM_write_int(basket_up_address, basket_up);
    3076:	b5 01       	movw	r22, r10
    3078:	84 ea       	ldi	r24, 0xA4	; 164
    307a:	90 e0       	ldi	r25, 0x00	; 0
    307c:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1001
        AX(10, basket_up, 150);
    3080:	46 e9       	ldi	r20, 0x96	; 150
    3082:	50 e0       	ldi	r21, 0x00	; 0
    3084:	b5 01       	movw	r22, r10
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1020
    {
      lcd.setCursor(0, 0);
      lcd.printf("Basket normal %d %4d", 10, basket_normal);
      if (start == 0) {
        EEPROM_write_int(basket_normal_address, basket_normal);
        AX(10, basket_normal, 150);
    3086:	8a e0       	ldi	r24, 0x0A	; 10
    3088:	0e 94 89 08 	call	0x1112	; 0x1112 <AX(char, int, int)>
    308c:	55 cf       	rjmp	.-342    	; 0x2f38 <menu_motor()+0x56>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1003
      lcd.printf("Basket up %d %4d", 10, basket_up);
      if (start == 0) {
        EEPROM_write_int(basket_up_address, basket_up);
        AX(10, basket_up, 150);

      } else if (increase == 0) {
    308e:	8a e0       	ldi	r24, 0x0A	; 10
    3090:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    3094:	89 2b       	or	r24, r25
    3096:	81 f4       	brne	.+32     	; 0x30b8 <menu_motor()+0x1d6>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1004
        delay(50);
    3098:	62 e3       	ldi	r22, 0x32	; 50
    309a:	70 e0       	ldi	r23, 0x00	; 0
    309c:	80 e0       	ldi	r24, 0x00	; 0
    309e:	90 e0       	ldi	r25, 0x00	; 0
    30a0:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <delay>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1005
        if (basket_up < 520)
    30a4:	38 e0       	ldi	r19, 0x08	; 8
    30a6:	a3 16       	cp	r10, r19
    30a8:	32 e0       	ldi	r19, 0x02	; 2
    30aa:	b3 06       	cpc	r11, r19
    30ac:	0c f0       	brlt	.+2      	; 0x30b0 <menu_motor()+0x1ce>
    30ae:	44 cf       	rjmp	.-376    	; 0x2f38 <menu_motor()+0x56>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1006
          basket_up += 5;
    30b0:	85 e0       	ldi	r24, 0x05	; 5
    30b2:	a8 0e       	add	r10, r24
    30b4:	b1 1c       	adc	r11, r1
    30b6:	40 cf       	rjmp	.-384    	; 0x2f38 <menu_motor()+0x56>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1007
      } else if (decrease == 0) {
    30b8:	8b e0       	ldi	r24, 0x0B	; 11
    30ba:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    30be:	89 2b       	or	r24, r25
    30c0:	09 f0       	breq	.+2      	; 0x30c4 <menu_motor()+0x1e2>
    30c2:	3a cf       	rjmp	.-396    	; 0x2f38 <menu_motor()+0x56>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1008
        delay(50);
    30c4:	62 e3       	ldi	r22, 0x32	; 50
    30c6:	70 e0       	ldi	r23, 0x00	; 0
    30c8:	80 e0       	ldi	r24, 0x00	; 0
    30ca:	90 e0       	ldi	r25, 0x00	; 0
    30cc:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <delay>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1010

        if (basket_up > 250)
    30d0:	9b ef       	ldi	r25, 0xFB	; 251
    30d2:	a9 16       	cp	r10, r25
    30d4:	b1 04       	cpc	r11, r1
    30d6:	0c f4       	brge	.+2      	; 0x30da <menu_motor()+0x1f8>
    30d8:	2f cf       	rjmp	.-418    	; 0x2f38 <menu_motor()+0x56>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1011
          basket_up -= 5;
    30da:	25 e0       	ldi	r18, 0x05	; 5
    30dc:	a2 1a       	sub	r10, r18
    30de:	b1 08       	sbc	r11, r1
    30e0:	2b cf       	rjmp	.-426    	; 0x2f38 <menu_motor()+0x56>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1014
      }

    } else if (page == 3)  // AX Basket Normal ID=10
    30e2:	83 30       	cpi	r24, 0x03	; 3
    30e4:	09 f0       	breq	.+2      	; 0x30e8 <menu_motor()+0x206>
    30e6:	52 c0       	rjmp	.+164    	; 0x318c <menu_motor()+0x2aa>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1016
    {
      lcd.setCursor(0, 0);
    30e8:	60 e0       	ldi	r22, 0x00	; 0
    30ea:	80 e0       	ldi	r24, 0x00	; 0
    30ec:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1017
      lcd.printf("Basket normal %d %4d", 10, basket_normal);
    30f0:	df 92       	push	r13
    30f2:	cf 92       	push	r12
    30f4:	1f 92       	push	r1
    30f6:	8a e0       	ldi	r24, 0x0A	; 10
    30f8:	8f 93       	push	r24
    30fa:	86 e5       	ldi	r24, 0x56	; 86
    30fc:	93 e0       	ldi	r25, 0x03	; 3
    30fe:	9f 93       	push	r25
    3100:	8f 93       	push	r24
    3102:	3f 92       	push	r3
    3104:	2f 92       	push	r2
    3106:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1018
      if (start == 0) {
    310a:	86 e0       	ldi	r24, 0x06	; 6
    310c:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    3110:	2d b7       	in	r18, 0x3d	; 61
    3112:	3e b7       	in	r19, 0x3e	; 62
    3114:	28 5f       	subi	r18, 0xF8	; 248
    3116:	3f 4f       	sbci	r19, 0xFF	; 255
    3118:	0f b6       	in	r0, 0x3f	; 63
    311a:	f8 94       	cli
    311c:	3e bf       	out	0x3e, r19	; 62
    311e:	0f be       	out	0x3f, r0	; 63
    3120:	2d bf       	out	0x3d, r18	; 61
    3122:	89 2b       	or	r24, r25
    3124:	49 f4       	brne	.+18     	; 0x3138 <menu_motor()+0x256>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1019
        EEPROM_write_int(basket_normal_address, basket_normal);
    3126:	b6 01       	movw	r22, r12
    3128:	86 ea       	ldi	r24, 0xA6	; 166
    312a:	90 e0       	ldi	r25, 0x00	; 0
    312c:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1020
        AX(10, basket_normal, 150);
    3130:	46 e9       	ldi	r20, 0x96	; 150
    3132:	50 e0       	ldi	r21, 0x00	; 0
    3134:	b6 01       	movw	r22, r12
    3136:	a7 cf       	rjmp	.-178    	; 0x3086 <menu_motor()+0x1a4>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1021
      } else if (increase == 0) {
    3138:	8a e0       	ldi	r24, 0x0A	; 10
    313a:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    313e:	89 2b       	or	r24, r25
    3140:	81 f4       	brne	.+32     	; 0x3162 <menu_motor()+0x280>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1022
        delay(50);
    3142:	62 e3       	ldi	r22, 0x32	; 50
    3144:	70 e0       	ldi	r23, 0x00	; 0
    3146:	80 e0       	ldi	r24, 0x00	; 0
    3148:	90 e0       	ldi	r25, 0x00	; 0
    314a:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <delay>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1023
        if (basket_normal < 520)
    314e:	38 e0       	ldi	r19, 0x08	; 8
    3150:	c3 16       	cp	r12, r19
    3152:	32 e0       	ldi	r19, 0x02	; 2
    3154:	d3 06       	cpc	r13, r19
    3156:	0c f0       	brlt	.+2      	; 0x315a <menu_motor()+0x278>
    3158:	ef ce       	rjmp	.-546    	; 0x2f38 <menu_motor()+0x56>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1024
          basket_normal += 5;
    315a:	85 e0       	ldi	r24, 0x05	; 5
    315c:	c8 0e       	add	r12, r24
    315e:	d1 1c       	adc	r13, r1
    3160:	eb ce       	rjmp	.-554    	; 0x2f38 <menu_motor()+0x56>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1025
      } else if (decrease == 0) {
    3162:	8b e0       	ldi	r24, 0x0B	; 11
    3164:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    3168:	89 2b       	or	r24, r25
    316a:	09 f0       	breq	.+2      	; 0x316e <menu_motor()+0x28c>
    316c:	e5 ce       	rjmp	.-566    	; 0x2f38 <menu_motor()+0x56>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1026
        delay(50);
    316e:	62 e3       	ldi	r22, 0x32	; 50
    3170:	70 e0       	ldi	r23, 0x00	; 0
    3172:	80 e0       	ldi	r24, 0x00	; 0
    3174:	90 e0       	ldi	r25, 0x00	; 0
    3176:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <delay>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1028

        if (basket_normal > 250)
    317a:	9b ef       	ldi	r25, 0xFB	; 251
    317c:	c9 16       	cp	r12, r25
    317e:	d1 04       	cpc	r13, r1
    3180:	0c f4       	brge	.+2      	; 0x3184 <menu_motor()+0x2a2>
    3182:	da ce       	rjmp	.-588    	; 0x2f38 <menu_motor()+0x56>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1029
          basket_normal -= 5;
    3184:	25 e0       	ldi	r18, 0x05	; 5
    3186:	c2 1a       	sub	r12, r18
    3188:	d1 08       	sbc	r13, r1
    318a:	d6 ce       	rjmp	.-596    	; 0x2f38 <menu_motor()+0x56>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1032
      }

    } else if (page == 4)  // AX Arm Normal ID=11
    318c:	84 30       	cpi	r24, 0x04	; 4
    318e:	09 f0       	breq	.+2      	; 0x3192 <menu_motor()+0x2b0>
    3190:	55 c0       	rjmp	.+170    	; 0x323c <menu_motor()+0x35a>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1034
    {
      lcd.setCursor(0, 0);
    3192:	60 e0       	ldi	r22, 0x00	; 0
    3194:	80 e0       	ldi	r24, 0x00	; 0
    3196:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1035
      lcd.printf("arm normal %d %4d", 10, arm_normal);
    319a:	9f 92       	push	r9
    319c:	8f 92       	push	r8
    319e:	1f 92       	push	r1
    31a0:	8a e0       	ldi	r24, 0x0A	; 10
    31a2:	8f 93       	push	r24
    31a4:	8b e6       	ldi	r24, 0x6B	; 107
    31a6:	93 e0       	ldi	r25, 0x03	; 3
    31a8:	9f 93       	push	r25
    31aa:	8f 93       	push	r24
    31ac:	3f 92       	push	r3
    31ae:	2f 92       	push	r2
    31b0:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1036
      if (start == 0) {
    31b4:	86 e0       	ldi	r24, 0x06	; 6
    31b6:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    31ba:	2d b7       	in	r18, 0x3d	; 61
    31bc:	3e b7       	in	r19, 0x3e	; 62
    31be:	28 5f       	subi	r18, 0xF8	; 248
    31c0:	3f 4f       	sbci	r19, 0xFF	; 255
    31c2:	0f b6       	in	r0, 0x3f	; 63
    31c4:	f8 94       	cli
    31c6:	3e bf       	out	0x3e, r19	; 62
    31c8:	0f be       	out	0x3f, r0	; 63
    31ca:	2d bf       	out	0x3d, r18	; 61
    31cc:	89 2b       	or	r24, r25
    31ce:	61 f4       	brne	.+24     	; 0x31e8 <menu_motor()+0x306>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1037
        AX(11, arm_normal, 150);
    31d0:	46 e9       	ldi	r20, 0x96	; 150
    31d2:	50 e0       	ldi	r21, 0x00	; 0
    31d4:	b4 01       	movw	r22, r8
    31d6:	8b e0       	ldi	r24, 0x0B	; 11
    31d8:	0e 94 89 08 	call	0x1112	; 0x1112 <AX(char, int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1038
        EEPROM_write_int(arm_normal_address, arm_normal);
    31dc:	b4 01       	movw	r22, r8
    31de:	88 ea       	ldi	r24, 0xA8	; 168
    31e0:	90 e0       	ldi	r25, 0x00	; 0
    31e2:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
    31e6:	a8 ce       	rjmp	.-688    	; 0x2f38 <menu_motor()+0x56>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1039
      } else if (increase == 0) {
    31e8:	8a e0       	ldi	r24, 0x0A	; 10
    31ea:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    31ee:	89 2b       	or	r24, r25
    31f0:	81 f4       	brne	.+32     	; 0x3212 <menu_motor()+0x330>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1040
        delay(50);
    31f2:	62 e3       	ldi	r22, 0x32	; 50
    31f4:	70 e0       	ldi	r23, 0x00	; 0
    31f6:	80 e0       	ldi	r24, 0x00	; 0
    31f8:	90 e0       	ldi	r25, 0x00	; 0
    31fa:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <delay>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1041
        if (arm_normal < 800)
    31fe:	30 e2       	ldi	r19, 0x20	; 32
    3200:	83 16       	cp	r8, r19
    3202:	33 e0       	ldi	r19, 0x03	; 3
    3204:	93 06       	cpc	r9, r19
    3206:	0c f0       	brlt	.+2      	; 0x320a <menu_motor()+0x328>
    3208:	97 ce       	rjmp	.-722    	; 0x2f38 <menu_motor()+0x56>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1042
          arm_normal += 5;
    320a:	85 e0       	ldi	r24, 0x05	; 5
    320c:	88 0e       	add	r8, r24
    320e:	91 1c       	adc	r9, r1
    3210:	93 ce       	rjmp	.-730    	; 0x2f38 <menu_motor()+0x56>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1043
      } else if (decrease == 0) {
    3212:	8b e0       	ldi	r24, 0x0B	; 11
    3214:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    3218:	89 2b       	or	r24, r25
    321a:	09 f0       	breq	.+2      	; 0x321e <menu_motor()+0x33c>
    321c:	8d ce       	rjmp	.-742    	; 0x2f38 <menu_motor()+0x56>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1044
        delay(50);
    321e:	62 e3       	ldi	r22, 0x32	; 50
    3220:	70 e0       	ldi	r23, 0x00	; 0
    3222:	80 e0       	ldi	r24, 0x00	; 0
    3224:	90 e0       	ldi	r25, 0x00	; 0
    3226:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <delay>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1046

        if (arm_normal > 150)
    322a:	97 e9       	ldi	r25, 0x97	; 151
    322c:	89 16       	cp	r8, r25
    322e:	91 04       	cpc	r9, r1
    3230:	0c f4       	brge	.+2      	; 0x3234 <menu_motor()+0x352>
    3232:	82 ce       	rjmp	.-764    	; 0x2f38 <menu_motor()+0x56>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1047
          arm_normal -= 5;
    3234:	25 e0       	ldi	r18, 0x05	; 5
    3236:	82 1a       	sub	r8, r18
    3238:	91 08       	sbc	r9, r1
    323a:	7e ce       	rjmp	.-772    	; 0x2f38 <menu_motor()+0x56>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1050
      }

    } else if (page == 5)  // AX Arm down ID=11
    323c:	85 30       	cpi	r24, 0x05	; 5
    323e:	09 f0       	breq	.+2      	; 0x3242 <menu_motor()+0x360>
    3240:	53 c0       	rjmp	.+166    	; 0x32e8 <menu_motor()+0x406>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1052
    {
      lcd.setCursor(0, 0);
    3242:	60 e0       	ldi	r22, 0x00	; 0
    3244:	80 e0       	ldi	r24, 0x00	; 0
    3246:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1053
      lcd.printf("arm_down %d %4d", 10, arm_down);
    324a:	7f 92       	push	r7
    324c:	6f 92       	push	r6
    324e:	1f 92       	push	r1
    3250:	8a e0       	ldi	r24, 0x0A	; 10
    3252:	8f 93       	push	r24
    3254:	8d e7       	ldi	r24, 0x7D	; 125
    3256:	93 e0       	ldi	r25, 0x03	; 3
    3258:	9f 93       	push	r25
    325a:	8f 93       	push	r24
    325c:	3f 92       	push	r3
    325e:	2f 92       	push	r2
    3260:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1054
      if (start == 0) {
    3264:	86 e0       	ldi	r24, 0x06	; 6
    3266:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    326a:	2d b7       	in	r18, 0x3d	; 61
    326c:	3e b7       	in	r19, 0x3e	; 62
    326e:	28 5f       	subi	r18, 0xF8	; 248
    3270:	3f 4f       	sbci	r19, 0xFF	; 255
    3272:	0f b6       	in	r0, 0x3f	; 63
    3274:	f8 94       	cli
    3276:	3e bf       	out	0x3e, r19	; 62
    3278:	0f be       	out	0x3f, r0	; 63
    327a:	2d bf       	out	0x3d, r18	; 61
    327c:	89 2b       	or	r24, r25
    327e:	51 f4       	brne	.+20     	; 0x3294 <menu_motor()+0x3b2>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1055
        EEPROM_write_int(arm_down_address, arm_down);
    3280:	b3 01       	movw	r22, r6
    3282:	8a ea       	ldi	r24, 0xAA	; 170
    3284:	90 e0       	ldi	r25, 0x00	; 0
    3286:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1056
        AX(11, arm_down, 150);
    328a:	46 e9       	ldi	r20, 0x96	; 150
    328c:	50 e0       	ldi	r21, 0x00	; 0
    328e:	b3 01       	movw	r22, r6
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1074
    {
      lcd.setCursor(0, 0);
      lcd.printf("arm_dropping %d %4d", 10, arm_dropping);
      if (start == 0) {
        EEPROM_write_int(arm_dropping_address, arm_dropping);
        AX(11, arm_dropping, 150);
    3290:	8b e0       	ldi	r24, 0x0B	; 11
    3292:	fa ce       	rjmp	.-524    	; 0x3088 <menu_motor()+0x1a6>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1057
      lcd.setCursor(0, 0);
      lcd.printf("arm_down %d %4d", 10, arm_down);
      if (start == 0) {
        EEPROM_write_int(arm_down_address, arm_down);
        AX(11, arm_down, 150);
      } else if (increase == 0) {
    3294:	8a e0       	ldi	r24, 0x0A	; 10
    3296:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    329a:	89 2b       	or	r24, r25
    329c:	81 f4       	brne	.+32     	; 0x32be <menu_motor()+0x3dc>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1058
        delay(50);
    329e:	62 e3       	ldi	r22, 0x32	; 50
    32a0:	70 e0       	ldi	r23, 0x00	; 0
    32a2:	80 e0       	ldi	r24, 0x00	; 0
    32a4:	90 e0       	ldi	r25, 0x00	; 0
    32a6:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <delay>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1059
        if (arm_down < 800)
    32aa:	30 e2       	ldi	r19, 0x20	; 32
    32ac:	63 16       	cp	r6, r19
    32ae:	33 e0       	ldi	r19, 0x03	; 3
    32b0:	73 06       	cpc	r7, r19
    32b2:	0c f0       	brlt	.+2      	; 0x32b6 <menu_motor()+0x3d4>
    32b4:	41 ce       	rjmp	.-894    	; 0x2f38 <menu_motor()+0x56>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1060
          arm_down += 5;
    32b6:	85 e0       	ldi	r24, 0x05	; 5
    32b8:	68 0e       	add	r6, r24
    32ba:	71 1c       	adc	r7, r1
    32bc:	3d ce       	rjmp	.-902    	; 0x2f38 <menu_motor()+0x56>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1061
      } else if (decrease == 0) {
    32be:	8b e0       	ldi	r24, 0x0B	; 11
    32c0:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    32c4:	89 2b       	or	r24, r25
    32c6:	09 f0       	breq	.+2      	; 0x32ca <menu_motor()+0x3e8>
    32c8:	37 ce       	rjmp	.-914    	; 0x2f38 <menu_motor()+0x56>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1062
        delay(50);
    32ca:	62 e3       	ldi	r22, 0x32	; 50
    32cc:	70 e0       	ldi	r23, 0x00	; 0
    32ce:	80 e0       	ldi	r24, 0x00	; 0
    32d0:	90 e0       	ldi	r25, 0x00	; 0
    32d2:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <delay>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1064

        if (arm_down > 150)
    32d6:	97 e9       	ldi	r25, 0x97	; 151
    32d8:	69 16       	cp	r6, r25
    32da:	71 04       	cpc	r7, r1
    32dc:	0c f4       	brge	.+2      	; 0x32e0 <menu_motor()+0x3fe>
    32de:	2c ce       	rjmp	.-936    	; 0x2f38 <menu_motor()+0x56>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1065
          arm_down -= 5;
    32e0:	25 e0       	ldi	r18, 0x05	; 5
    32e2:	62 1a       	sub	r6, r18
    32e4:	71 08       	sbc	r7, r1
    32e6:	28 ce       	rjmp	.-944    	; 0x2f38 <menu_motor()+0x56>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1068
      }

    } else if (page == 6)  // AX Arm dropping ID=11
    32e8:	86 30       	cpi	r24, 0x06	; 6
    32ea:	09 f0       	breq	.+2      	; 0x32ee <menu_motor()+0x40c>
    32ec:	53 c0       	rjmp	.+166    	; 0x3394 <menu_motor()+0x4b2>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1070
    {
      lcd.setCursor(0, 0);
    32ee:	60 e0       	ldi	r22, 0x00	; 0
    32f0:	80 e0       	ldi	r24, 0x00	; 0
    32f2:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1071
      lcd.printf("arm_dropping %d %4d", 10, arm_dropping);
    32f6:	5f 92       	push	r5
    32f8:	4f 92       	push	r4
    32fa:	1f 92       	push	r1
    32fc:	8a e0       	ldi	r24, 0x0A	; 10
    32fe:	8f 93       	push	r24
    3300:	8d e8       	ldi	r24, 0x8D	; 141
    3302:	93 e0       	ldi	r25, 0x03	; 3
    3304:	9f 93       	push	r25
    3306:	8f 93       	push	r24
    3308:	3f 92       	push	r3
    330a:	2f 92       	push	r2
    330c:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1072
      if (start == 0) {
    3310:	86 e0       	ldi	r24, 0x06	; 6
    3312:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    3316:	2d b7       	in	r18, 0x3d	; 61
    3318:	3e b7       	in	r19, 0x3e	; 62
    331a:	28 5f       	subi	r18, 0xF8	; 248
    331c:	3f 4f       	sbci	r19, 0xFF	; 255
    331e:	0f b6       	in	r0, 0x3f	; 63
    3320:	f8 94       	cli
    3322:	3e bf       	out	0x3e, r19	; 62
    3324:	0f be       	out	0x3f, r0	; 63
    3326:	2d bf       	out	0x3d, r18	; 61
    3328:	89 2b       	or	r24, r25
    332a:	49 f4       	brne	.+18     	; 0x333e <menu_motor()+0x45c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1073
        EEPROM_write_int(arm_dropping_address, arm_dropping);
    332c:	b2 01       	movw	r22, r4
    332e:	8c ea       	ldi	r24, 0xAC	; 172
    3330:	90 e0       	ldi	r25, 0x00	; 0
    3332:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1074
        AX(11, arm_dropping, 150);
    3336:	46 e9       	ldi	r20, 0x96	; 150
    3338:	50 e0       	ldi	r21, 0x00	; 0
    333a:	b2 01       	movw	r22, r4
    333c:	a9 cf       	rjmp	.-174    	; 0x3290 <menu_motor()+0x3ae>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1075
      } else if (increase == 0) {
    333e:	8a e0       	ldi	r24, 0x0A	; 10
    3340:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    3344:	89 2b       	or	r24, r25
    3346:	81 f4       	brne	.+32     	; 0x3368 <menu_motor()+0x486>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1076
        delay(50);
    3348:	62 e3       	ldi	r22, 0x32	; 50
    334a:	70 e0       	ldi	r23, 0x00	; 0
    334c:	80 e0       	ldi	r24, 0x00	; 0
    334e:	90 e0       	ldi	r25, 0x00	; 0
    3350:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <delay>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1077
        if (arm_dropping < 1000)
    3354:	38 ee       	ldi	r19, 0xE8	; 232
    3356:	43 16       	cp	r4, r19
    3358:	33 e0       	ldi	r19, 0x03	; 3
    335a:	53 06       	cpc	r5, r19
    335c:	0c f0       	brlt	.+2      	; 0x3360 <menu_motor()+0x47e>
    335e:	ec cd       	rjmp	.-1064   	; 0x2f38 <menu_motor()+0x56>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1078
          arm_dropping += 5;
    3360:	85 e0       	ldi	r24, 0x05	; 5
    3362:	48 0e       	add	r4, r24
    3364:	51 1c       	adc	r5, r1
    3366:	e8 cd       	rjmp	.-1072   	; 0x2f38 <menu_motor()+0x56>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1079
      } else if (decrease == 0) {
    3368:	8b e0       	ldi	r24, 0x0B	; 11
    336a:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    336e:	89 2b       	or	r24, r25
    3370:	09 f0       	breq	.+2      	; 0x3374 <menu_motor()+0x492>
    3372:	e2 cd       	rjmp	.-1084   	; 0x2f38 <menu_motor()+0x56>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1080
        delay(50);
    3374:	62 e3       	ldi	r22, 0x32	; 50
    3376:	70 e0       	ldi	r23, 0x00	; 0
    3378:	80 e0       	ldi	r24, 0x00	; 0
    337a:	90 e0       	ldi	r25, 0x00	; 0
    337c:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <delay>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1082

        if (arm_dropping > 300)
    3380:	9d e2       	ldi	r25, 0x2D	; 45
    3382:	49 16       	cp	r4, r25
    3384:	91 e0       	ldi	r25, 0x01	; 1
    3386:	59 06       	cpc	r5, r25
    3388:	0c f4       	brge	.+2      	; 0x338c <menu_motor()+0x4aa>
    338a:	d6 cd       	rjmp	.-1108   	; 0x2f38 <menu_motor()+0x56>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1083
          arm_dropping -= 5;
    338c:	25 e0       	ldi	r18, 0x05	; 5
    338e:	42 1a       	sub	r4, r18
    3390:	51 08       	sbc	r5, r1
    3392:	d2 cd       	rjmp	.-1116   	; 0x2f38 <menu_motor()+0x56>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1086
      }

    } else if (page == 7)  // XL Gripper close 30 and 31
    3394:	87 30       	cpi	r24, 0x07	; 7
    3396:	09 f0       	breq	.+2      	; 0x339a <menu_motor()+0x4b8>
    3398:	65 c0       	rjmp	.+202    	; 0x3464 <menu_motor()+0x582>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1088
    {
      lcd.setCursor(0, 0);
    339a:	60 e0       	ldi	r22, 0x00	; 0
    339c:	80 e0       	ldi	r24, 0x00	; 0
    339e:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1089
      lcd.printf("gripper_close %d %4d", 10, gripper_close);
    33a2:	ff 92       	push	r15
    33a4:	ef 92       	push	r14
    33a6:	1f 92       	push	r1
    33a8:	8a e0       	ldi	r24, 0x0A	; 10
    33aa:	8f 93       	push	r24
    33ac:	81 ea       	ldi	r24, 0xA1	; 161
    33ae:	93 e0       	ldi	r25, 0x03	; 3
    33b0:	9f 93       	push	r25
    33b2:	8f 93       	push	r24
    33b4:	3f 92       	push	r3
    33b6:	2f 92       	push	r2
    33b8:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1090
      if (start == 0) {
    33bc:	86 e0       	ldi	r24, 0x06	; 6
    33be:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    33c2:	2d b7       	in	r18, 0x3d	; 61
    33c4:	3e b7       	in	r19, 0x3e	; 62
    33c6:	28 5f       	subi	r18, 0xF8	; 248
    33c8:	3f 4f       	sbci	r19, 0xFF	; 255
    33ca:	0f b6       	in	r0, 0x3f	; 63
    33cc:	f8 94       	cli
    33ce:	3e bf       	out	0x3e, r19	; 62
    33d0:	0f be       	out	0x3f, r0	; 63
    33d2:	2d bf       	out	0x3d, r18	; 61
    33d4:	89 2b       	or	r24, r25
    33d6:	d9 f4       	brne	.+54     	; 0x340e <menu_motor()+0x52c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1091
        EEPROM_write_int(gripper_close_address, gripper_close);
    33d8:	b7 01       	movw	r22, r14
    33da:	8e ea       	ldi	r24, 0xAE	; 174
    33dc:	90 e0       	ldi	r25, 0x00	; 0
    33de:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1092
        XL_Gripper(30, gripper_close, 100);
    33e2:	44 e6       	ldi	r20, 0x64	; 100
    33e4:	50 e0       	ldi	r21, 0x00	; 0
    33e6:	b7 01       	movw	r22, r14
    33e8:	8e e1       	ldi	r24, 0x1E	; 30
    33ea:	0e 94 df 08 	call	0x11be	; 0x11be <XL_Gripper(char, int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1093
        delay(50);
    33ee:	62 e3       	ldi	r22, 0x32	; 50
    33f0:	70 e0       	ldi	r23, 0x00	; 0
    33f2:	80 e0       	ldi	r24, 0x00	; 0
    33f4:	90 e0       	ldi	r25, 0x00	; 0
    33f6:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <delay>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1094
        XL_Gripper(31, 1023 - gripper_close + xl_error, 100);
    33fa:	44 e6       	ldi	r20, 0x64	; 100
    33fc:	50 e0       	ldi	r21, 0x00	; 0
    33fe:	65 e4       	ldi	r22, 0x45	; 69
    3400:	74 e0       	ldi	r23, 0x04	; 4
    3402:	6e 19       	sub	r22, r14
    3404:	7f 09       	sbc	r23, r15
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1113
      lcd.printf("gripper_open %d %4d", 10, gripper_open);
      if (start == 0) {
        EEPROM_write_int(gripper_open_address, gripper_open);
        XL_Gripper(30, gripper_open, 100);
        delay(50);
        XL_Gripper(31, 1023 - gripper_open + xl_error, 100);
    3406:	8f e1       	ldi	r24, 0x1F	; 31
    3408:	0e 94 df 08 	call	0x11be	; 0x11be <XL_Gripper(char, int, int)>
    340c:	95 cd       	rjmp	.-1238   	; 0x2f38 <menu_motor()+0x56>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1095
      if (start == 0) {
        EEPROM_write_int(gripper_close_address, gripper_close);
        XL_Gripper(30, gripper_close, 100);
        delay(50);
        XL_Gripper(31, 1023 - gripper_close + xl_error, 100);
      } else if (increase == 0) {
    340e:	8a e0       	ldi	r24, 0x0A	; 10
    3410:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    3414:	89 2b       	or	r24, r25
    3416:	81 f4       	brne	.+32     	; 0x3438 <menu_motor()+0x556>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1096
        delay(50);
    3418:	62 e3       	ldi	r22, 0x32	; 50
    341a:	70 e0       	ldi	r23, 0x00	; 0
    341c:	80 e0       	ldi	r24, 0x00	; 0
    341e:	90 e0       	ldi	r25, 0x00	; 0
    3420:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <delay>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1097
        if (gripper_close < 890)
    3424:	3a e7       	ldi	r19, 0x7A	; 122
    3426:	e3 16       	cp	r14, r19
    3428:	33 e0       	ldi	r19, 0x03	; 3
    342a:	f3 06       	cpc	r15, r19
    342c:	0c f0       	brlt	.+2      	; 0x3430 <menu_motor()+0x54e>
    342e:	84 cd       	rjmp	.-1272   	; 0x2f38 <menu_motor()+0x56>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1098
          gripper_close += 5;
    3430:	85 e0       	ldi	r24, 0x05	; 5
    3432:	e8 0e       	add	r14, r24
    3434:	f1 1c       	adc	r15, r1
    3436:	80 cd       	rjmp	.-1280   	; 0x2f38 <menu_motor()+0x56>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1099
      } else if (decrease == 0) {
    3438:	8b e0       	ldi	r24, 0x0B	; 11
    343a:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    343e:	89 2b       	or	r24, r25
    3440:	09 f0       	breq	.+2      	; 0x3444 <menu_motor()+0x562>
    3442:	7a cd       	rjmp	.-1292   	; 0x2f38 <menu_motor()+0x56>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1100
        delay(50);
    3444:	62 e3       	ldi	r22, 0x32	; 50
    3446:	70 e0       	ldi	r23, 0x00	; 0
    3448:	80 e0       	ldi	r24, 0x00	; 0
    344a:	90 e0       	ldi	r25, 0x00	; 0
    344c:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <delay>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1102

        if (gripper_close > 570)
    3450:	9b e3       	ldi	r25, 0x3B	; 59
    3452:	e9 16       	cp	r14, r25
    3454:	92 e0       	ldi	r25, 0x02	; 2
    3456:	f9 06       	cpc	r15, r25
    3458:	0c f4       	brge	.+2      	; 0x345c <menu_motor()+0x57a>
    345a:	6e cd       	rjmp	.-1316   	; 0x2f38 <menu_motor()+0x56>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1103
          gripper_close -= 5;
    345c:	25 e0       	ldi	r18, 0x05	; 5
    345e:	e2 1a       	sub	r14, r18
    3460:	f1 08       	sbc	r15, r1
    3462:	6a cd       	rjmp	.-1324   	; 0x2f38 <menu_motor()+0x56>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1105
      }
    } else if (page == 8)  // XL Gripper open 30 and 31
    3464:	88 30       	cpi	r24, 0x08	; 8
    3466:	09 f0       	breq	.+2      	; 0x346a <menu_motor()+0x588>
    3468:	67 cd       	rjmp	.-1330   	; 0x2f38 <menu_motor()+0x56>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1107
    {
      lcd.setCursor(0, 0);
    346a:	60 e0       	ldi	r22, 0x00	; 0
    346c:	80 e0       	ldi	r24, 0x00	; 0
    346e:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1108
      lcd.printf("gripper_open %d %4d", 10, gripper_open);
    3472:	1f 93       	push	r17
    3474:	0f 93       	push	r16
    3476:	1f 92       	push	r1
    3478:	8a e0       	ldi	r24, 0x0A	; 10
    347a:	8f 93       	push	r24
    347c:	86 eb       	ldi	r24, 0xB6	; 182
    347e:	93 e0       	ldi	r25, 0x03	; 3
    3480:	9f 93       	push	r25
    3482:	8f 93       	push	r24
    3484:	3f 92       	push	r3
    3486:	2f 92       	push	r2
    3488:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1109
      if (start == 0) {
    348c:	86 e0       	ldi	r24, 0x06	; 6
    348e:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    3492:	2d b7       	in	r18, 0x3d	; 61
    3494:	3e b7       	in	r19, 0x3e	; 62
    3496:	28 5f       	subi	r18, 0xF8	; 248
    3498:	3f 4f       	sbci	r19, 0xFF	; 255
    349a:	0f b6       	in	r0, 0x3f	; 63
    349c:	f8 94       	cli
    349e:	3e bf       	out	0x3e, r19	; 62
    34a0:	0f be       	out	0x3f, r0	; 63
    34a2:	2d bf       	out	0x3d, r18	; 61
    34a4:	89 2b       	or	r24, r25
    34a6:	c1 f4       	brne	.+48     	; 0x34d8 <menu_motor()+0x5f6>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1110
        EEPROM_write_int(gripper_open_address, gripper_open);
    34a8:	b8 01       	movw	r22, r16
    34aa:	80 eb       	ldi	r24, 0xB0	; 176
    34ac:	90 e0       	ldi	r25, 0x00	; 0
    34ae:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1111
        XL_Gripper(30, gripper_open, 100);
    34b2:	44 e6       	ldi	r20, 0x64	; 100
    34b4:	50 e0       	ldi	r21, 0x00	; 0
    34b6:	b8 01       	movw	r22, r16
    34b8:	8e e1       	ldi	r24, 0x1E	; 30
    34ba:	0e 94 df 08 	call	0x11be	; 0x11be <XL_Gripper(char, int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1112
        delay(50);
    34be:	62 e3       	ldi	r22, 0x32	; 50
    34c0:	70 e0       	ldi	r23, 0x00	; 0
    34c2:	80 e0       	ldi	r24, 0x00	; 0
    34c4:	90 e0       	ldi	r25, 0x00	; 0
    34c6:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <delay>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1113
        XL_Gripper(31, 1023 - gripper_open + xl_error, 100);
    34ca:	44 e6       	ldi	r20, 0x64	; 100
    34cc:	50 e0       	ldi	r21, 0x00	; 0
    34ce:	65 e4       	ldi	r22, 0x45	; 69
    34d0:	74 e0       	ldi	r23, 0x04	; 4
    34d2:	60 1b       	sub	r22, r16
    34d4:	71 0b       	sbc	r23, r17
    34d6:	97 cf       	rjmp	.-210    	; 0x3406 <menu_motor()+0x524>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1114
      } else if (increase == 0) {
    34d8:	8a e0       	ldi	r24, 0x0A	; 10
    34da:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    34de:	89 2b       	or	r24, r25
    34e0:	71 f4       	brne	.+28     	; 0x34fe <menu_motor()+0x61c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1115
        delay(50);
    34e2:	62 e3       	ldi	r22, 0x32	; 50
    34e4:	70 e0       	ldi	r23, 0x00	; 0
    34e6:	80 e0       	ldi	r24, 0x00	; 0
    34e8:	90 e0       	ldi	r25, 0x00	; 0
    34ea:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <delay>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1116
        if (gripper_open < 890)
    34ee:	0a 37       	cpi	r16, 0x7A	; 122
    34f0:	33 e0       	ldi	r19, 0x03	; 3
    34f2:	13 07       	cpc	r17, r19
    34f4:	0c f0       	brlt	.+2      	; 0x34f8 <menu_motor()+0x616>
    34f6:	20 cd       	rjmp	.-1472   	; 0x2f38 <menu_motor()+0x56>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1117
          gripper_open += 5;
    34f8:	0b 5f       	subi	r16, 0xFB	; 251
    34fa:	1f 4f       	sbci	r17, 0xFF	; 255
    34fc:	1d cd       	rjmp	.-1478   	; 0x2f38 <menu_motor()+0x56>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1118
      } else if (decrease == 0) {
    34fe:	8b e0       	ldi	r24, 0x0B	; 11
    3500:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    3504:	89 2b       	or	r24, r25
    3506:	09 f0       	breq	.+2      	; 0x350a <menu_motor()+0x628>
    3508:	17 cd       	rjmp	.-1490   	; 0x2f38 <menu_motor()+0x56>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1119
        delay(50);
    350a:	62 e3       	ldi	r22, 0x32	; 50
    350c:	70 e0       	ldi	r23, 0x00	; 0
    350e:	80 e0       	ldi	r24, 0x00	; 0
    3510:	90 e0       	ldi	r25, 0x00	; 0
    3512:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <delay>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1121

        if (gripper_open > 570)
    3516:	0b 33       	cpi	r16, 0x3B	; 59
    3518:	82 e0       	ldi	r24, 0x02	; 2
    351a:	18 07       	cpc	r17, r24
    351c:	0c f4       	brge	.+2      	; 0x3520 <menu_motor()+0x63e>
    351e:	0c cd       	rjmp	.-1512   	; 0x2f38 <menu_motor()+0x56>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1122
          gripper_open -= 5;
    3520:	05 50       	subi	r16, 0x05	; 5
    3522:	11 09       	sbc	r17, r1
    3524:	09 cd       	rjmp	.-1518   	; 0x2f38 <menu_motor()+0x56>

00003526 <menu_color()>:
menu_color():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1130
  }
}

void menu_color(void) {
  static char page = 1, last_page = 8;
  lcd.clear();
    3526:	0e 94 f6 05 	call	0xbec	; 0xbec <LiquidCrystal::clear() [clone .constprop.38]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1311
      lcd.print("APDS Front: ");
      lcd.setCursor(0, 1);
      lcd.print("  RED  GRN  BLU ");

      lcd.setCursor(0, 2);
      lcd.printf(" %4d %4d %4d %4d", red, green, blue, clear);
    352a:	8b ee       	ldi	r24, 0xEB	; 235
    352c:	88 2e       	mov	r8, r24
    352e:	83 e0       	ldi	r24, 0x03	; 3
    3530:	98 2e       	mov	r9, r24
    3532:	ca eb       	ldi	r28, 0xBA	; 186
    3534:	da e0       	ldi	r29, 0x0A	; 10
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1323
        lcd.printf("M%4d %4d %4d %4d ", EEPROM_read_int(red_front_r), EEPROM_read_int(red_front_g), EEPROM_read_int(red_front_b), EEPROM_read_int(red_front_c));
      } else if (color_F == GREEN) {
        lcd.setCursor(12, 0);
        lcd.print("GRN ");
        lcd.setCursor(0, 3);
        lcd.printf("M%4d %4d %4d %4d ", EEPROM_read_int(green_front_r), EEPROM_read_int(green_front_g), EEPROM_read_int(green_front_b), EEPROM_read_int(green_front_c));
    3536:	9f e6       	ldi	r25, 0x6F	; 111
    3538:	e9 2e       	mov	r14, r25
    353a:	94 e0       	ldi	r25, 0x04	; 4
    353c:	f9 2e       	mov	r15, r25
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1286

      lcd.setCursor(0, 1);
      lcd.print("  RED  GRN  BLU ");

      lcd.setCursor(0, 2);
      lcd.printf("L%4d %4d %4d ", EEPROM_read_int(yellow_left_r), EEPROM_read_int(yellow_left_g), EEPROM_read_int(yellow_left_b));
    353e:	21 eb       	ldi	r18, 0xB1	; 177
    3540:	c2 2e       	mov	r12, r18
    3542:	24 e0       	ldi	r18, 0x04	; 4
    3544:	d2 2e       	mov	r13, r18
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1289

      lcd.setCursor(0, 3);
      lcd.printf("R%4d %4d %4d ", EEPROM_read_int(yellow_right_r), EEPROM_read_int(yellow_right_g), EEPROM_read_int(yellow_right_b));
    3546:	3f eb       	ldi	r19, 0xBF	; 191
    3548:	a3 2e       	mov	r10, r19
    354a:	34 e0       	ldi	r19, 0x04	; 4
    354c:	b3 2e       	mov	r11, r19
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1231
        lcd.printf("M%4d %4d %4d ", EEPROM_read_int(yellow_right_r), EEPROM_read_int(yellow_right_g), EEPROM_read_int(yellow_right_b), EEPROM_read_int(yellow_right_c));
      } else if (color_R == SILVER) {
        lcd.setCursor(12, 0);
        lcd.print("SIL ");
        lcd.setCursor(0, 3);
        lcd.printf("M%4d %4d %4d %4d", EEPROM_read_int(silver_right_r), EEPROM_read_int(silver_right_g), EEPROM_read_int(silver_right_b), EEPROM_read_int(silver_right_c));
    354e:	03 e0       	ldi	r16, 0x03	; 3
    3550:	14 e0       	ldi	r17, 0x04	; 4
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1132

void menu_color(void) {
  static char page = 1, last_page = 8;
  lcd.clear();
  while (1) {
    if (next_page == 0) {
    3552:	88 e0       	ldi	r24, 0x08	; 8
    3554:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    3558:	89 2b       	or	r24, r25
    355a:	79 f4       	brne	.+30     	; 0x357a <menu_color()+0x54>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1133
      while (next_page == 0)
    355c:	88 e0       	ldi	r24, 0x08	; 8
    355e:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    3562:	89 2b       	or	r24, r25
    3564:	d9 f3       	breq	.-10     	; 0x355c <menu_color()+0x36>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1135
        ;
      page++;
    3566:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <menu_color()::page>
    356a:	8f 5f       	subi	r24, 0xFF	; 255
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1136
      if (page > last_page)
    356c:	89 30       	cpi	r24, 0x09	; 9
    356e:	0c f0       	brlt	.+2      	; 0x3572 <menu_color()+0x4c>
    3570:	a8 c0       	rjmp	.+336    	; 0x36c2 <menu_color()+0x19c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1135
  lcd.clear();
  while (1) {
    if (next_page == 0) {
      while (next_page == 0)
        ;
      page++;
    3572:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <menu_color()::page>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1138
      if (page > last_page)
        page = 1;
      lcd.clear();
    3576:	0e 94 f6 05 	call	0xbec	; 0xbec <LiquidCrystal::clear() [clone .constprop.38]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1140
    }
    if (previuse_page == 0) {
    357a:	89 e0       	ldi	r24, 0x09	; 9
    357c:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    3580:	89 2b       	or	r24, r25
    3582:	71 f4       	brne	.+28     	; 0x35a0 <menu_color()+0x7a>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1141
      while (previuse_page == 0)
    3584:	89 e0       	ldi	r24, 0x09	; 9
    3586:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    358a:	89 2b       	or	r24, r25
    358c:	d9 f3       	breq	.-10     	; 0x3584 <menu_color()+0x5e>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1143
        ;
      page--;
    358e:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <menu_color()::page>
    3592:	81 50       	subi	r24, 0x01	; 1
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1144
      if (page == 0)
    3594:	09 f4       	brne	.+2      	; 0x3598 <menu_color()+0x72>
    3596:	99 c0       	rjmp	.+306    	; 0x36ca <menu_color()+0x1a4>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1145
        page = last_page;
    3598:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <menu_color()::page>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1146
      lcd.clear();
    359c:	0e 94 f6 05 	call	0xbec	; 0xbec <LiquidCrystal::clear() [clone .constprop.38]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1148
    }
    if (increase == 0)
    35a0:	8a e0       	ldi	r24, 0x0A	; 10
    35a2:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    35a6:	89 2b       	or	r24, r25
    35a8:	09 f0       	breq	.+2      	; 0x35ac <menu_color()+0x86>
    35aa:	91 c0       	rjmp	.+290    	; 0x36ce <menu_color()+0x1a8>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1149
      go(40, 40);
    35ac:	68 e2       	ldi	r22, 0x28	; 40
    35ae:	70 e0       	ldi	r23, 0x00	; 0
    35b0:	88 e2       	ldi	r24, 0x28	; 40
    35b2:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1153
    else if (decrease == 0)
      go(-40, -40);
    else
      go(0, 0);
    35b4:	0e 94 07 07 	call	0xe0e	; 0xe0e <go(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1155

    if (page == 1) {
    35b8:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <menu_color()::page>
    35bc:	81 30       	cpi	r24, 0x01	; 1
    35be:	09 f0       	breq	.+2      	; 0x35c2 <menu_color()+0x9c>
    35c0:	a8 c1       	rjmp	.+848    	; 0x3912 <menu_color()+0x3ec>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1156
      lcd.setCursor(0, 0);
    35c2:	60 e0       	ldi	r22, 0x00	; 0
    35c4:	80 e0       	ldi	r24, 0x00	; 0
    35c6:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1157
      lcd.print("APDS left: ");
    35ca:	8a ec       	ldi	r24, 0xCA	; 202
    35cc:	93 e0       	ldi	r25, 0x03	; 3
    35ce:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1159

      lcd.setCursor(0, 1);
    35d2:	61 e0       	ldi	r22, 0x01	; 1
    35d4:	80 e0       	ldi	r24, 0x00	; 0
    35d6:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1160
      lcd.print("  RED  GRN  BLU  CLR");
    35da:	86 ed       	ldi	r24, 0xD6	; 214
    35dc:	93 e0       	ldi	r25, 0x03	; 3
    35de:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1162

      lcd.setCursor(0, 2);
    35e2:	62 e0       	ldi	r22, 0x02	; 2
    35e4:	80 e0       	ldi	r24, 0x00	; 0
    35e6:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1163
      lcd.printf(" %4d %4d %4d %4d", red, green, blue, clear);
    35ea:	80 91 c4 08 	lds	r24, 0x08C4	; 0x8008c4 <clear+0x1>
    35ee:	8f 93       	push	r24
    35f0:	80 91 c3 08 	lds	r24, 0x08C3	; 0x8008c3 <clear>
    35f4:	8f 93       	push	r24
    35f6:	80 91 c6 08 	lds	r24, 0x08C6	; 0x8008c6 <blue+0x1>
    35fa:	8f 93       	push	r24
    35fc:	80 91 c5 08 	lds	r24, 0x08C5	; 0x8008c5 <blue>
    3600:	8f 93       	push	r24
    3602:	80 91 c8 08 	lds	r24, 0x08C8	; 0x8008c8 <green+0x1>
    3606:	8f 93       	push	r24
    3608:	80 91 c7 08 	lds	r24, 0x08C7	; 0x8008c7 <green>
    360c:	8f 93       	push	r24
    360e:	80 91 ca 08 	lds	r24, 0x08CA	; 0x8008ca <red+0x1>
    3612:	8f 93       	push	r24
    3614:	80 91 c9 08 	lds	r24, 0x08C9	; 0x8008c9 <red>
    3618:	8f 93       	push	r24
    361a:	9f 92       	push	r9
    361c:	8f 92       	push	r8
    361e:	df 93       	push	r29
    3620:	cf 93       	push	r28
    3622:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1164
      delay(100);
    3626:	64 e6       	ldi	r22, 0x64	; 100
    3628:	70 e0       	ldi	r23, 0x00	; 0
    362a:	80 e0       	ldi	r24, 0x00	; 0
    362c:	90 e0       	ldi	r25, 0x00	; 0
    362e:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <delay>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1165
      if (color_L == RED) {
    3632:	81 e0       	ldi	r24, 0x01	; 1
    3634:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <color(char)>
    3638:	2d b7       	in	r18, 0x3d	; 61
    363a:	3e b7       	in	r19, 0x3e	; 62
    363c:	24 5f       	subi	r18, 0xF4	; 244
    363e:	3f 4f       	sbci	r19, 0xFF	; 255
    3640:	0f b6       	in	r0, 0x3f	; 63
    3642:	f8 94       	cli
    3644:	3e bf       	out	0x3e, r19	; 62
    3646:	0f be       	out	0x3f, r0	; 63
    3648:	2d bf       	out	0x3d, r18	; 61
    364a:	81 11       	cpse	r24, r1
    364c:	4f c0       	rjmp	.+158    	; 0x36ec <menu_color()+0x1c6>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1166
        lcd.setCursor(12, 0);
    364e:	60 e0       	ldi	r22, 0x00	; 0
    3650:	8c e0       	ldi	r24, 0x0C	; 12
    3652:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1167
        lcd.print("RED   ");
    3656:	8c ef       	ldi	r24, 0xFC	; 252
    3658:	93 e0       	ldi	r25, 0x03	; 3
    365a:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1168
        lcd.setCursor(0, 3);
    365e:	63 e0       	ldi	r22, 0x03	; 3
    3660:	80 e0       	ldi	r24, 0x00	; 0
    3662:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1169
        lcd.printf("M%4d %4d %4d %4d", EEPROM_read_int(red_left_r), EEPROM_read_int(red_left_g), EEPROM_read_int(red_left_b), EEPROM_read_int(red_left_c));
    3666:	8a e1       	ldi	r24, 0x1A	; 26
    3668:	90 e0       	ldi	r25, 0x00	; 0
    366a:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    366e:	38 2e       	mov	r3, r24
    3670:	29 2e       	mov	r2, r25
    3672:	88 e1       	ldi	r24, 0x18	; 24
    3674:	90 e0       	ldi	r25, 0x00	; 0
    3676:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    367a:	58 2e       	mov	r5, r24
    367c:	49 2e       	mov	r4, r25
    367e:	86 e1       	ldi	r24, 0x16	; 22
    3680:	90 e0       	ldi	r25, 0x00	; 0
    3682:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3686:	78 2e       	mov	r7, r24
    3688:	69 2e       	mov	r6, r25
    368a:	84 e1       	ldi	r24, 0x14	; 20
    368c:	90 e0       	ldi	r25, 0x00	; 0
    368e:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3692:	2f 92       	push	r2
    3694:	3f 92       	push	r3
    3696:	4f 92       	push	r4
    3698:	5f 92       	push	r5
    369a:	6f 92       	push	r6
    369c:	7f 92       	push	r7
    369e:	9f 93       	push	r25
    36a0:	8f 93       	push	r24
    36a2:	1f 93       	push	r17
    36a4:	0f 93       	push	r16
    36a6:	df 93       	push	r29
    36a8:	cf 93       	push	r28
    36aa:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
    36ae:	2d b7       	in	r18, 0x3d	; 61
    36b0:	3e b7       	in	r19, 0x3e	; 62
    36b2:	24 5f       	subi	r18, 0xF4	; 244
    36b4:	3f 4f       	sbci	r19, 0xFF	; 255
    36b6:	0f b6       	in	r0, 0x3f	; 63
    36b8:	f8 94       	cli
    36ba:	3e bf       	out	0x3e, r19	; 62
    36bc:	0f be       	out	0x3f, r0	; 63
    36be:	2d bf       	out	0x3d, r18	; 61
    36c0:	48 cf       	rjmp	.-368    	; 0x3552 <menu_color()+0x2c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1137
    if (next_page == 0) {
      while (next_page == 0)
        ;
      page++;
      if (page > last_page)
        page = 1;
    36c2:	21 e0       	ldi	r18, 0x01	; 1
    36c4:	20 93 02 01 	sts	0x0102, r18	; 0x800102 <menu_color()::page>
    36c8:	56 cf       	rjmp	.-340    	; 0x3576 <menu_color()+0x50>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1145
    if (previuse_page == 0) {
      while (previuse_page == 0)
        ;
      page--;
      if (page == 0)
        page = last_page;
    36ca:	88 e0       	ldi	r24, 0x08	; 8
    36cc:	65 cf       	rjmp	.-310    	; 0x3598 <menu_color()+0x72>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1150
      lcd.clear();
    }
    if (increase == 0)
      go(40, 40);
    else if (decrease == 0)
    36ce:	8b e0       	ldi	r24, 0x0B	; 11
    36d0:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    36d4:	89 2b       	or	r24, r25
    36d6:	29 f4       	brne	.+10     	; 0x36e2 <menu_color()+0x1bc>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1151
      go(-40, -40);
    36d8:	68 ed       	ldi	r22, 0xD8	; 216
    36da:	7f ef       	ldi	r23, 0xFF	; 255
    36dc:	88 ed       	ldi	r24, 0xD8	; 216
    36de:	9f ef       	ldi	r25, 0xFF	; 255
    36e0:	69 cf       	rjmp	.-302    	; 0x35b4 <menu_color()+0x8e>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1153
    else
      go(0, 0);
    36e2:	70 e0       	ldi	r23, 0x00	; 0
    36e4:	60 e0       	ldi	r22, 0x00	; 0
    36e6:	90 e0       	ldi	r25, 0x00	; 0
    36e8:	80 e0       	ldi	r24, 0x00	; 0
    36ea:	64 cf       	rjmp	.-312    	; 0x35b4 <menu_color()+0x8e>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1170
      if (color_L == RED) {
        lcd.setCursor(12, 0);
        lcd.print("RED   ");
        lcd.setCursor(0, 3);
        lcd.printf("M%4d %4d %4d %4d", EEPROM_read_int(red_left_r), EEPROM_read_int(red_left_g), EEPROM_read_int(red_left_b), EEPROM_read_int(red_left_c));
      } else if (color_L == GREEN) {
    36ec:	81 e0       	ldi	r24, 0x01	; 1
    36ee:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <color(char)>
    36f2:	81 30       	cpi	r24, 0x01	; 1
    36f4:	d1 f5       	brne	.+116    	; 0x376a <menu_color()+0x244>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1171
        lcd.setCursor(12, 0);
    36f6:	60 e0       	ldi	r22, 0x00	; 0
    36f8:	8c e0       	ldi	r24, 0x0C	; 12
    36fa:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1172
        lcd.print("GREEN ");
    36fe:	84 e1       	ldi	r24, 0x14	; 20
    3700:	94 e0       	ldi	r25, 0x04	; 4
    3702:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1173
        lcd.setCursor(0, 3);
    3706:	63 e0       	ldi	r22, 0x03	; 3
    3708:	80 e0       	ldi	r24, 0x00	; 0
    370a:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1174
        lcd.printf("M%4d %4d %4d %4d", EEPROM_read_int(green_left_r), EEPROM_read_int(green_left_g), EEPROM_read_int(green_left_b), EEPROM_read_int(green_left_c));
    370e:	82 e2       	ldi	r24, 0x22	; 34
    3710:	90 e0       	ldi	r25, 0x00	; 0
    3712:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3716:	38 2e       	mov	r3, r24
    3718:	29 2e       	mov	r2, r25
    371a:	80 e2       	ldi	r24, 0x20	; 32
    371c:	90 e0       	ldi	r25, 0x00	; 0
    371e:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3722:	58 2e       	mov	r5, r24
    3724:	49 2e       	mov	r4, r25
    3726:	8e e1       	ldi	r24, 0x1E	; 30
    3728:	90 e0       	ldi	r25, 0x00	; 0
    372a:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    372e:	78 2e       	mov	r7, r24
    3730:	69 2e       	mov	r6, r25
    3732:	8c e1       	ldi	r24, 0x1C	; 28
    3734:	90 e0       	ldi	r25, 0x00	; 0
    3736:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    373a:	2f 92       	push	r2
    373c:	3f 92       	push	r3
    373e:	4f 92       	push	r4
    3740:	5f 92       	push	r5
    3742:	6f 92       	push	r6
    3744:	7f 92       	push	r7
    3746:	9f 93       	push	r25
    3748:	8f 93       	push	r24
    374a:	1f 93       	push	r17
    374c:	0f 93       	push	r16
    374e:	df 93       	push	r29
    3750:	cf 93       	push	r28
    3752:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
    3756:	2d b7       	in	r18, 0x3d	; 61
    3758:	3e b7       	in	r19, 0x3e	; 62
    375a:	24 5f       	subi	r18, 0xF4	; 244
    375c:	3f 4f       	sbci	r19, 0xFF	; 255
    375e:	0f b6       	in	r0, 0x3f	; 63
    3760:	f8 94       	cli
    3762:	3e bf       	out	0x3e, r19	; 62
    3764:	0f be       	out	0x3f, r0	; 63
    3766:	2d bf       	out	0x3d, r18	; 61
    3768:	f4 ce       	rjmp	.-536    	; 0x3552 <menu_color()+0x2c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1175
      } else if (color_L == BLUE) {
    376a:	81 e0       	ldi	r24, 0x01	; 1
    376c:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <color(char)>
    3770:	82 30       	cpi	r24, 0x02	; 2
    3772:	d1 f5       	brne	.+116    	; 0x37e8 <menu_color()+0x2c2>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1176
        lcd.setCursor(12, 0);
    3774:	60 e0       	ldi	r22, 0x00	; 0
    3776:	8c e0       	ldi	r24, 0x0C	; 12
    3778:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1177
        lcd.print("BLUE  ");
    377c:	8b e1       	ldi	r24, 0x1B	; 27
    377e:	94 e0       	ldi	r25, 0x04	; 4
    3780:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1178
        lcd.setCursor(0, 3);
    3784:	63 e0       	ldi	r22, 0x03	; 3
    3786:	80 e0       	ldi	r24, 0x00	; 0
    3788:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1179
        lcd.printf("M%4d %4d %4d %4d", EEPROM_read_int(blue_left_r), EEPROM_read_int(blue_left_g), EEPROM_read_int(blue_left_b), EEPROM_read_int(blue_left_c));
    378c:	8a e2       	ldi	r24, 0x2A	; 42
    378e:	90 e0       	ldi	r25, 0x00	; 0
    3790:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3794:	38 2e       	mov	r3, r24
    3796:	29 2e       	mov	r2, r25
    3798:	88 e2       	ldi	r24, 0x28	; 40
    379a:	90 e0       	ldi	r25, 0x00	; 0
    379c:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    37a0:	58 2e       	mov	r5, r24
    37a2:	49 2e       	mov	r4, r25
    37a4:	86 e2       	ldi	r24, 0x26	; 38
    37a6:	90 e0       	ldi	r25, 0x00	; 0
    37a8:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    37ac:	78 2e       	mov	r7, r24
    37ae:	69 2e       	mov	r6, r25
    37b0:	84 e2       	ldi	r24, 0x24	; 36
    37b2:	90 e0       	ldi	r25, 0x00	; 0
    37b4:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    37b8:	2f 92       	push	r2
    37ba:	3f 92       	push	r3
    37bc:	4f 92       	push	r4
    37be:	5f 92       	push	r5
    37c0:	6f 92       	push	r6
    37c2:	7f 92       	push	r7
    37c4:	9f 93       	push	r25
    37c6:	8f 93       	push	r24
    37c8:	1f 93       	push	r17
    37ca:	0f 93       	push	r16
    37cc:	df 93       	push	r29
    37ce:	cf 93       	push	r28
    37d0:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
    37d4:	2d b7       	in	r18, 0x3d	; 61
    37d6:	3e b7       	in	r19, 0x3e	; 62
    37d8:	24 5f       	subi	r18, 0xF4	; 244
    37da:	3f 4f       	sbci	r19, 0xFF	; 255
    37dc:	0f b6       	in	r0, 0x3f	; 63
    37de:	f8 94       	cli
    37e0:	3e bf       	out	0x3e, r19	; 62
    37e2:	0f be       	out	0x3f, r0	; 63
    37e4:	2d bf       	out	0x3d, r18	; 61
    37e6:	b5 ce       	rjmp	.-662    	; 0x3552 <menu_color()+0x2c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1180
      } else if (color_L == YELLOW) {
    37e8:	81 e0       	ldi	r24, 0x01	; 1
    37ea:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <color(char)>
    37ee:	84 30       	cpi	r24, 0x04	; 4
    37f0:	d1 f5       	brne	.+116    	; 0x3866 <menu_color()+0x340>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1181
        lcd.setCursor(12, 0);
    37f2:	60 e0       	ldi	r22, 0x00	; 0
    37f4:	8c e0       	ldi	r24, 0x0C	; 12
    37f6:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1182
        lcd.print("YELLOW");
    37fa:	82 e2       	ldi	r24, 0x22	; 34
    37fc:	94 e0       	ldi	r25, 0x04	; 4
    37fe:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1183
        lcd.setCursor(0, 3);
    3802:	63 e0       	ldi	r22, 0x03	; 3
    3804:	80 e0       	ldi	r24, 0x00	; 0
    3806:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1184
        lcd.printf("M%4d %4d %4d %4d", EEPROM_read_int(yellow_left_r), EEPROM_read_int(yellow_left_g), EEPROM_read_int(yellow_left_b), EEPROM_read_int(yellow_left_c));
    380a:	82 e3       	ldi	r24, 0x32	; 50
    380c:	90 e0       	ldi	r25, 0x00	; 0
    380e:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3812:	38 2e       	mov	r3, r24
    3814:	29 2e       	mov	r2, r25
    3816:	80 e3       	ldi	r24, 0x30	; 48
    3818:	90 e0       	ldi	r25, 0x00	; 0
    381a:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    381e:	58 2e       	mov	r5, r24
    3820:	49 2e       	mov	r4, r25
    3822:	8e e2       	ldi	r24, 0x2E	; 46
    3824:	90 e0       	ldi	r25, 0x00	; 0
    3826:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    382a:	78 2e       	mov	r7, r24
    382c:	69 2e       	mov	r6, r25
    382e:	8c e2       	ldi	r24, 0x2C	; 44
    3830:	90 e0       	ldi	r25, 0x00	; 0
    3832:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3836:	2f 92       	push	r2
    3838:	3f 92       	push	r3
    383a:	4f 92       	push	r4
    383c:	5f 92       	push	r5
    383e:	6f 92       	push	r6
    3840:	7f 92       	push	r7
    3842:	9f 93       	push	r25
    3844:	8f 93       	push	r24
    3846:	1f 93       	push	r17
    3848:	0f 93       	push	r16
    384a:	df 93       	push	r29
    384c:	cf 93       	push	r28
    384e:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
    3852:	2d b7       	in	r18, 0x3d	; 61
    3854:	3e b7       	in	r19, 0x3e	; 62
    3856:	24 5f       	subi	r18, 0xF4	; 244
    3858:	3f 4f       	sbci	r19, 0xFF	; 255
    385a:	0f b6       	in	r0, 0x3f	; 63
    385c:	f8 94       	cli
    385e:	3e bf       	out	0x3e, r19	; 62
    3860:	0f be       	out	0x3f, r0	; 63
    3862:	2d bf       	out	0x3d, r18	; 61
    3864:	76 ce       	rjmp	.-788    	; 0x3552 <menu_color()+0x2c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1185
      } else if (color_L == SILVER) {
    3866:	81 e0       	ldi	r24, 0x01	; 1
    3868:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <color(char)>
    386c:	85 30       	cpi	r24, 0x05	; 5
    386e:	d1 f5       	brne	.+116    	; 0x38e4 <menu_color()+0x3be>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1186
        lcd.setCursor(12, 0);
    3870:	60 e0       	ldi	r22, 0x00	; 0
    3872:	8c e0       	ldi	r24, 0x0C	; 12
    3874:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1187
        lcd.print("SILVER");
    3878:	89 e2       	ldi	r24, 0x29	; 41
    387a:	94 e0       	ldi	r25, 0x04	; 4
    387c:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1188
        lcd.setCursor(0, 3);
    3880:	63 e0       	ldi	r22, 0x03	; 3
    3882:	80 e0       	ldi	r24, 0x00	; 0
    3884:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1189
        lcd.printf("M%4d %4d %4d %4d", EEPROM_read_int(silver_left_r), EEPROM_read_int(silver_left_g), EEPROM_read_int(silver_left_b), EEPROM_read_int(silver_left_c));
    3888:	8a e3       	ldi	r24, 0x3A	; 58
    388a:	90 e0       	ldi	r25, 0x00	; 0
    388c:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3890:	38 2e       	mov	r3, r24
    3892:	29 2e       	mov	r2, r25
    3894:	88 e3       	ldi	r24, 0x38	; 56
    3896:	90 e0       	ldi	r25, 0x00	; 0
    3898:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    389c:	58 2e       	mov	r5, r24
    389e:	49 2e       	mov	r4, r25
    38a0:	86 e3       	ldi	r24, 0x36	; 54
    38a2:	90 e0       	ldi	r25, 0x00	; 0
    38a4:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    38a8:	78 2e       	mov	r7, r24
    38aa:	69 2e       	mov	r6, r25
    38ac:	84 e3       	ldi	r24, 0x34	; 52
    38ae:	90 e0       	ldi	r25, 0x00	; 0
    38b0:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    38b4:	2f 92       	push	r2
    38b6:	3f 92       	push	r3
    38b8:	4f 92       	push	r4
    38ba:	5f 92       	push	r5
    38bc:	6f 92       	push	r6
    38be:	7f 92       	push	r7
    38c0:	9f 93       	push	r25
    38c2:	8f 93       	push	r24
    38c4:	1f 93       	push	r17
    38c6:	0f 93       	push	r16
    38c8:	df 93       	push	r29
    38ca:	cf 93       	push	r28
    38cc:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
    38d0:	2d b7       	in	r18, 0x3d	; 61
    38d2:	3e b7       	in	r19, 0x3e	; 62
    38d4:	24 5f       	subi	r18, 0xF4	; 244
    38d6:	3f 4f       	sbci	r19, 0xFF	; 255
    38d8:	0f b6       	in	r0, 0x3f	; 63
    38da:	f8 94       	cli
    38dc:	3e bf       	out	0x3e, r19	; 62
    38de:	0f be       	out	0x3f, r0	; 63
    38e0:	2d bf       	out	0x3d, r18	; 61
    38e2:	37 ce       	rjmp	.-914    	; 0x3552 <menu_color()+0x2c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1190
      } else if (color_L == WHITE) {
    38e4:	81 e0       	ldi	r24, 0x01	; 1
    38e6:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <color(char)>
    38ea:	87 30       	cpi	r24, 0x07	; 7
    38ec:	09 f0       	breq	.+2      	; 0x38f0 <menu_color()+0x3ca>
    38ee:	31 ce       	rjmp	.-926    	; 0x3552 <menu_color()+0x2c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1191
        lcd.setCursor(12, 0);
    38f0:	60 e0       	ldi	r22, 0x00	; 0
    38f2:	8c e0       	ldi	r24, 0x0C	; 12
    38f4:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1192
        lcd.print("WHITE ");
    38f8:	80 e3       	ldi	r24, 0x30	; 48
    38fa:	94 e0       	ldi	r25, 0x04	; 4
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1234
        lcd.print("SIL ");
        lcd.setCursor(0, 3);
        lcd.printf("M%4d %4d %4d %4d", EEPROM_read_int(silver_right_r), EEPROM_read_int(silver_right_g), EEPROM_read_int(silver_right_b), EEPROM_read_int(silver_right_c));
      } else if (color_R == WHITE) {
        lcd.setCursor(12, 0);
        lcd.print("WHT ");
    38fc:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1235
        lcd.setCursor(0, 3);
    3900:	63 e0       	ldi	r22, 0x03	; 3
    3902:	80 e0       	ldi	r24, 0x00	; 0
    3904:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1236
        lcd.print("                    ");
    3908:	87 e3       	ldi	r24, 0x37	; 55
    390a:	94 e0       	ldi	r25, 0x04	; 4
    390c:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
    3910:	20 ce       	rjmp	.-960    	; 0x3552 <menu_color()+0x2c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1196
        lcd.setCursor(12, 0);
        lcd.print("WHITE ");
        lcd.setCursor(0, 3);
        lcd.print("                    ");
      }
    } else if (page == 2)  // APDS Right
    3912:	82 30       	cpi	r24, 0x02	; 2
    3914:	09 f0       	breq	.+2      	; 0x3918 <menu_color()+0x3f2>
    3916:	89 c1       	rjmp	.+786    	; 0x3c2a <menu_color()+0x704>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1198
    {
      lcd.setCursor(0, 0);
    3918:	60 e0       	ldi	r22, 0x00	; 0
    391a:	80 e0       	ldi	r24, 0x00	; 0
    391c:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1199
      lcd.print("APDS Right: ");
    3920:	8c e4       	ldi	r24, 0x4C	; 76
    3922:	94 e0       	ldi	r25, 0x04	; 4
    3924:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1200
      lcd.setCursor(0, 1);
    3928:	61 e0       	ldi	r22, 0x01	; 1
    392a:	80 e0       	ldi	r24, 0x00	; 0
    392c:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1201
      lcd.print("  RED  GRN  BLU ");
    3930:	89 e5       	ldi	r24, 0x59	; 89
    3932:	94 e0       	ldi	r25, 0x04	; 4
    3934:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1203

      lcd.setCursor(0, 2);
    3938:	62 e0       	ldi	r22, 0x02	; 2
    393a:	80 e0       	ldi	r24, 0x00	; 0
    393c:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1204
      lcd.printf(" %4d %4d %4d %4d", red, green, blue, clear);
    3940:	80 91 c4 08 	lds	r24, 0x08C4	; 0x8008c4 <clear+0x1>
    3944:	8f 93       	push	r24
    3946:	80 91 c3 08 	lds	r24, 0x08C3	; 0x8008c3 <clear>
    394a:	8f 93       	push	r24
    394c:	80 91 c6 08 	lds	r24, 0x08C6	; 0x8008c6 <blue+0x1>
    3950:	8f 93       	push	r24
    3952:	80 91 c5 08 	lds	r24, 0x08C5	; 0x8008c5 <blue>
    3956:	8f 93       	push	r24
    3958:	80 91 c8 08 	lds	r24, 0x08C8	; 0x8008c8 <green+0x1>
    395c:	8f 93       	push	r24
    395e:	80 91 c7 08 	lds	r24, 0x08C7	; 0x8008c7 <green>
    3962:	8f 93       	push	r24
    3964:	80 91 ca 08 	lds	r24, 0x08CA	; 0x8008ca <red+0x1>
    3968:	8f 93       	push	r24
    396a:	80 91 c9 08 	lds	r24, 0x08C9	; 0x8008c9 <red>
    396e:	8f 93       	push	r24
    3970:	9f 92       	push	r9
    3972:	8f 92       	push	r8
    3974:	df 93       	push	r29
    3976:	cf 93       	push	r28
    3978:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1206

      lcd.setCursor(12, 0);
    397c:	60 e0       	ldi	r22, 0x00	; 0
    397e:	8c e0       	ldi	r24, 0x0C	; 12
    3980:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1207
      if (color_R == RED) {
    3984:	82 e0       	ldi	r24, 0x02	; 2
    3986:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <color(char)>
    398a:	2d b7       	in	r18, 0x3d	; 61
    398c:	3e b7       	in	r19, 0x3e	; 62
    398e:	24 5f       	subi	r18, 0xF4	; 244
    3990:	3f 4f       	sbci	r19, 0xFF	; 255
    3992:	0f b6       	in	r0, 0x3f	; 63
    3994:	f8 94       	cli
    3996:	3e bf       	out	0x3e, r19	; 62
    3998:	0f be       	out	0x3f, r0	; 63
    399a:	2d bf       	out	0x3d, r18	; 61
    399c:	81 11       	cpse	r24, r1
    399e:	3a c0       	rjmp	.+116    	; 0x3a14 <menu_color()+0x4ee>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1208
        lcd.setCursor(12, 0);
    39a0:	60 e0       	ldi	r22, 0x00	; 0
    39a2:	8c e0       	ldi	r24, 0x0C	; 12
    39a4:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1209
        lcd.print("RED ");
    39a8:	8a e6       	ldi	r24, 0x6A	; 106
    39aa:	94 e0       	ldi	r25, 0x04	; 4
    39ac:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1210
        lcd.setCursor(0, 3);
    39b0:	63 e0       	ldi	r22, 0x03	; 3
    39b2:	80 e0       	ldi	r24, 0x00	; 0
    39b4:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1211
        lcd.printf("M%4d %4d %4d %4d ", EEPROM_read_int(red_right_r), EEPROM_read_int(red_right_g), EEPROM_read_int(red_right_b), EEPROM_read_int(red_right_c));
    39b8:	82 e4       	ldi	r24, 0x42	; 66
    39ba:	90 e0       	ldi	r25, 0x00	; 0
    39bc:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    39c0:	38 2e       	mov	r3, r24
    39c2:	29 2e       	mov	r2, r25
    39c4:	80 e4       	ldi	r24, 0x40	; 64
    39c6:	90 e0       	ldi	r25, 0x00	; 0
    39c8:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    39cc:	58 2e       	mov	r5, r24
    39ce:	49 2e       	mov	r4, r25
    39d0:	8e e3       	ldi	r24, 0x3E	; 62
    39d2:	90 e0       	ldi	r25, 0x00	; 0
    39d4:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    39d8:	78 2e       	mov	r7, r24
    39da:	69 2e       	mov	r6, r25
    39dc:	8c e3       	ldi	r24, 0x3C	; 60
    39de:	90 e0       	ldi	r25, 0x00	; 0
    39e0:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    39e4:	2f 92       	push	r2
    39e6:	3f 92       	push	r3
    39e8:	4f 92       	push	r4
    39ea:	5f 92       	push	r5
    39ec:	6f 92       	push	r6
    39ee:	7f 92       	push	r7
    39f0:	9f 93       	push	r25
    39f2:	8f 93       	push	r24
    39f4:	ff 92       	push	r15
    39f6:	ef 92       	push	r14
    39f8:	df 93       	push	r29
    39fa:	cf 93       	push	r28
    39fc:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
    3a00:	2d b7       	in	r18, 0x3d	; 61
    3a02:	3e b7       	in	r19, 0x3e	; 62
    3a04:	24 5f       	subi	r18, 0xF4	; 244
    3a06:	3f 4f       	sbci	r19, 0xFF	; 255
    3a08:	0f b6       	in	r0, 0x3f	; 63
    3a0a:	f8 94       	cli
    3a0c:	3e bf       	out	0x3e, r19	; 62
    3a0e:	0f be       	out	0x3f, r0	; 63
    3a10:	2d bf       	out	0x3d, r18	; 61
    3a12:	9f cd       	rjmp	.-1218   	; 0x3552 <menu_color()+0x2c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1212
      } else if (color_R == GREEN) {
    3a14:	82 e0       	ldi	r24, 0x02	; 2
    3a16:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <color(char)>
    3a1a:	81 30       	cpi	r24, 0x01	; 1
    3a1c:	d1 f5       	brne	.+116    	; 0x3a92 <menu_color()+0x56c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1213
        lcd.setCursor(12, 0);
    3a1e:	60 e0       	ldi	r22, 0x00	; 0
    3a20:	8c e0       	ldi	r24, 0x0C	; 12
    3a22:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1214
        lcd.print("GRN ");
    3a26:	81 e8       	ldi	r24, 0x81	; 129
    3a28:	94 e0       	ldi	r25, 0x04	; 4
    3a2a:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1215
        lcd.setCursor(0, 3);
    3a2e:	63 e0       	ldi	r22, 0x03	; 3
    3a30:	80 e0       	ldi	r24, 0x00	; 0
    3a32:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1216
        lcd.printf("M%4d %4d %4d %4d ", EEPROM_read_int(green_right_r), EEPROM_read_int(green_right_g), EEPROM_read_int(green_right_b), EEPROM_read_int(green_right_c));
    3a36:	8a e4       	ldi	r24, 0x4A	; 74
    3a38:	90 e0       	ldi	r25, 0x00	; 0
    3a3a:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3a3e:	38 2e       	mov	r3, r24
    3a40:	29 2e       	mov	r2, r25
    3a42:	88 e4       	ldi	r24, 0x48	; 72
    3a44:	90 e0       	ldi	r25, 0x00	; 0
    3a46:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3a4a:	58 2e       	mov	r5, r24
    3a4c:	49 2e       	mov	r4, r25
    3a4e:	86 e4       	ldi	r24, 0x46	; 70
    3a50:	90 e0       	ldi	r25, 0x00	; 0
    3a52:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3a56:	78 2e       	mov	r7, r24
    3a58:	69 2e       	mov	r6, r25
    3a5a:	84 e4       	ldi	r24, 0x44	; 68
    3a5c:	90 e0       	ldi	r25, 0x00	; 0
    3a5e:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3a62:	2f 92       	push	r2
    3a64:	3f 92       	push	r3
    3a66:	4f 92       	push	r4
    3a68:	5f 92       	push	r5
    3a6a:	6f 92       	push	r6
    3a6c:	7f 92       	push	r7
    3a6e:	9f 93       	push	r25
    3a70:	8f 93       	push	r24
    3a72:	ff 92       	push	r15
    3a74:	ef 92       	push	r14
    3a76:	df 93       	push	r29
    3a78:	cf 93       	push	r28
    3a7a:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
    3a7e:	2d b7       	in	r18, 0x3d	; 61
    3a80:	3e b7       	in	r19, 0x3e	; 62
    3a82:	24 5f       	subi	r18, 0xF4	; 244
    3a84:	3f 4f       	sbci	r19, 0xFF	; 255
    3a86:	0f b6       	in	r0, 0x3f	; 63
    3a88:	f8 94       	cli
    3a8a:	3e bf       	out	0x3e, r19	; 62
    3a8c:	0f be       	out	0x3f, r0	; 63
    3a8e:	2d bf       	out	0x3d, r18	; 61
    3a90:	60 cd       	rjmp	.-1344   	; 0x3552 <menu_color()+0x2c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1217
      } else if (color_R == BLUE) {
    3a92:	82 e0       	ldi	r24, 0x02	; 2
    3a94:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <color(char)>
    3a98:	82 30       	cpi	r24, 0x02	; 2
    3a9a:	d1 f5       	brne	.+116    	; 0x3b10 <menu_color()+0x5ea>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1218
        lcd.setCursor(12, 0);
    3a9c:	60 e0       	ldi	r22, 0x00	; 0
    3a9e:	8c e0       	ldi	r24, 0x0C	; 12
    3aa0:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1219
        lcd.print("BLUE");
    3aa4:	86 e8       	ldi	r24, 0x86	; 134
    3aa6:	94 e0       	ldi	r25, 0x04	; 4
    3aa8:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1220
        lcd.setCursor(0, 3);
    3aac:	63 e0       	ldi	r22, 0x03	; 3
    3aae:	80 e0       	ldi	r24, 0x00	; 0
    3ab0:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1221
        lcd.printf("M%4d %4d %4d %4d", EEPROM_read_int(blue_right_r), EEPROM_read_int(blue_right_g), EEPROM_read_int(blue_right_b), EEPROM_read_int(blue_right_c));
    3ab4:	82 e5       	ldi	r24, 0x52	; 82
    3ab6:	90 e0       	ldi	r25, 0x00	; 0
    3ab8:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3abc:	38 2e       	mov	r3, r24
    3abe:	29 2e       	mov	r2, r25
    3ac0:	80 e5       	ldi	r24, 0x50	; 80
    3ac2:	90 e0       	ldi	r25, 0x00	; 0
    3ac4:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3ac8:	58 2e       	mov	r5, r24
    3aca:	49 2e       	mov	r4, r25
    3acc:	8e e4       	ldi	r24, 0x4E	; 78
    3ace:	90 e0       	ldi	r25, 0x00	; 0
    3ad0:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3ad4:	78 2e       	mov	r7, r24
    3ad6:	69 2e       	mov	r6, r25
    3ad8:	8c e4       	ldi	r24, 0x4C	; 76
    3ada:	90 e0       	ldi	r25, 0x00	; 0
    3adc:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3ae0:	2f 92       	push	r2
    3ae2:	3f 92       	push	r3
    3ae4:	4f 92       	push	r4
    3ae6:	5f 92       	push	r5
    3ae8:	6f 92       	push	r6
    3aea:	7f 92       	push	r7
    3aec:	9f 93       	push	r25
    3aee:	8f 93       	push	r24
    3af0:	1f 93       	push	r17
    3af2:	0f 93       	push	r16
    3af4:	df 93       	push	r29
    3af6:	cf 93       	push	r28
    3af8:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
    3afc:	2d b7       	in	r18, 0x3d	; 61
    3afe:	3e b7       	in	r19, 0x3e	; 62
    3b00:	24 5f       	subi	r18, 0xF4	; 244
    3b02:	3f 4f       	sbci	r19, 0xFF	; 255
    3b04:	0f b6       	in	r0, 0x3f	; 63
    3b06:	f8 94       	cli
    3b08:	3e bf       	out	0x3e, r19	; 62
    3b0a:	0f be       	out	0x3f, r0	; 63
    3b0c:	2d bf       	out	0x3d, r18	; 61
    3b0e:	21 cd       	rjmp	.-1470   	; 0x3552 <menu_color()+0x2c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1222
      } else if (color_R == YELLOW) {
    3b10:	82 e0       	ldi	r24, 0x02	; 2
    3b12:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <color(char)>
    3b16:	84 30       	cpi	r24, 0x04	; 4
    3b18:	e1 f5       	brne	.+120    	; 0x3b92 <menu_color()+0x66c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1223
        lcd.setCursor(12, 0);
    3b1a:	60 e0       	ldi	r22, 0x00	; 0
    3b1c:	8c e0       	ldi	r24, 0x0C	; 12
    3b1e:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1224
        lcd.print("YELLOW");
    3b22:	82 e2       	ldi	r24, 0x22	; 34
    3b24:	94 e0       	ldi	r25, 0x04	; 4
    3b26:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1225
        lcd.setCursor(0, 3);
    3b2a:	63 e0       	ldi	r22, 0x03	; 3
    3b2c:	80 e0       	ldi	r24, 0x00	; 0
    3b2e:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1226
        lcd.printf("M%4d %4d %4d ", EEPROM_read_int(yellow_right_r), EEPROM_read_int(yellow_right_g), EEPROM_read_int(yellow_right_b), EEPROM_read_int(yellow_right_c));
    3b32:	8a e5       	ldi	r24, 0x5A	; 90
    3b34:	90 e0       	ldi	r25, 0x00	; 0
    3b36:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3b3a:	38 2e       	mov	r3, r24
    3b3c:	29 2e       	mov	r2, r25
    3b3e:	88 e5       	ldi	r24, 0x58	; 88
    3b40:	90 e0       	ldi	r25, 0x00	; 0
    3b42:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3b46:	58 2e       	mov	r5, r24
    3b48:	49 2e       	mov	r4, r25
    3b4a:	86 e5       	ldi	r24, 0x56	; 86
    3b4c:	90 e0       	ldi	r25, 0x00	; 0
    3b4e:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3b52:	78 2e       	mov	r7, r24
    3b54:	69 2e       	mov	r6, r25
    3b56:	84 e5       	ldi	r24, 0x54	; 84
    3b58:	90 e0       	ldi	r25, 0x00	; 0
    3b5a:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3b5e:	2f 92       	push	r2
    3b60:	3f 92       	push	r3
    3b62:	4f 92       	push	r4
    3b64:	5f 92       	push	r5
    3b66:	6f 92       	push	r6
    3b68:	7f 92       	push	r7
    3b6a:	9f 93       	push	r25
    3b6c:	8f 93       	push	r24
    3b6e:	8b e8       	ldi	r24, 0x8B	; 139
    3b70:	94 e0       	ldi	r25, 0x04	; 4
    3b72:	9f 93       	push	r25
    3b74:	8f 93       	push	r24
    3b76:	df 93       	push	r29
    3b78:	cf 93       	push	r28
    3b7a:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
    3b7e:	2d b7       	in	r18, 0x3d	; 61
    3b80:	3e b7       	in	r19, 0x3e	; 62
    3b82:	24 5f       	subi	r18, 0xF4	; 244
    3b84:	3f 4f       	sbci	r19, 0xFF	; 255
    3b86:	0f b6       	in	r0, 0x3f	; 63
    3b88:	f8 94       	cli
    3b8a:	3e bf       	out	0x3e, r19	; 62
    3b8c:	0f be       	out	0x3f, r0	; 63
    3b8e:	2d bf       	out	0x3d, r18	; 61
    3b90:	e0 cc       	rjmp	.-1600   	; 0x3552 <menu_color()+0x2c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1227
      } else if (color_R == SILVER) {
    3b92:	82 e0       	ldi	r24, 0x02	; 2
    3b94:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <color(char)>
    3b98:	85 30       	cpi	r24, 0x05	; 5
    3b9a:	d1 f5       	brne	.+116    	; 0x3c10 <menu_color()+0x6ea>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1228
        lcd.setCursor(12, 0);
    3b9c:	60 e0       	ldi	r22, 0x00	; 0
    3b9e:	8c e0       	ldi	r24, 0x0C	; 12
    3ba0:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1229
        lcd.print("SIL ");
    3ba4:	89 e9       	ldi	r24, 0x99	; 153
    3ba6:	94 e0       	ldi	r25, 0x04	; 4
    3ba8:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1230
        lcd.setCursor(0, 3);
    3bac:	63 e0       	ldi	r22, 0x03	; 3
    3bae:	80 e0       	ldi	r24, 0x00	; 0
    3bb0:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1231
        lcd.printf("M%4d %4d %4d %4d", EEPROM_read_int(silver_right_r), EEPROM_read_int(silver_right_g), EEPROM_read_int(silver_right_b), EEPROM_read_int(silver_right_c));
    3bb4:	82 e6       	ldi	r24, 0x62	; 98
    3bb6:	90 e0       	ldi	r25, 0x00	; 0
    3bb8:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3bbc:	38 2e       	mov	r3, r24
    3bbe:	29 2e       	mov	r2, r25
    3bc0:	80 e6       	ldi	r24, 0x60	; 96
    3bc2:	90 e0       	ldi	r25, 0x00	; 0
    3bc4:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3bc8:	58 2e       	mov	r5, r24
    3bca:	49 2e       	mov	r4, r25
    3bcc:	8e e5       	ldi	r24, 0x5E	; 94
    3bce:	90 e0       	ldi	r25, 0x00	; 0
    3bd0:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3bd4:	78 2e       	mov	r7, r24
    3bd6:	69 2e       	mov	r6, r25
    3bd8:	8c e5       	ldi	r24, 0x5C	; 92
    3bda:	90 e0       	ldi	r25, 0x00	; 0
    3bdc:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3be0:	2f 92       	push	r2
    3be2:	3f 92       	push	r3
    3be4:	4f 92       	push	r4
    3be6:	5f 92       	push	r5
    3be8:	6f 92       	push	r6
    3bea:	7f 92       	push	r7
    3bec:	9f 93       	push	r25
    3bee:	8f 93       	push	r24
    3bf0:	1f 93       	push	r17
    3bf2:	0f 93       	push	r16
    3bf4:	df 93       	push	r29
    3bf6:	cf 93       	push	r28
    3bf8:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
    3bfc:	2d b7       	in	r18, 0x3d	; 61
    3bfe:	3e b7       	in	r19, 0x3e	; 62
    3c00:	24 5f       	subi	r18, 0xF4	; 244
    3c02:	3f 4f       	sbci	r19, 0xFF	; 255
    3c04:	0f b6       	in	r0, 0x3f	; 63
    3c06:	f8 94       	cli
    3c08:	3e bf       	out	0x3e, r19	; 62
    3c0a:	0f be       	out	0x3f, r0	; 63
    3c0c:	2d bf       	out	0x3d, r18	; 61
    3c0e:	a1 cc       	rjmp	.-1726   	; 0x3552 <menu_color()+0x2c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1232
      } else if (color_R == WHITE) {
    3c10:	82 e0       	ldi	r24, 0x02	; 2
    3c12:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <color(char)>
    3c16:	87 30       	cpi	r24, 0x07	; 7
    3c18:	09 f0       	breq	.+2      	; 0x3c1c <menu_color()+0x6f6>
    3c1a:	9b cc       	rjmp	.-1738   	; 0x3552 <menu_color()+0x2c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1233
        lcd.setCursor(12, 0);
    3c1c:	60 e0       	ldi	r22, 0x00	; 0
    3c1e:	8c e0       	ldi	r24, 0x0C	; 12
    3c20:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1234
        lcd.print("WHT ");
    3c24:	8e e9       	ldi	r24, 0x9E	; 158
    3c26:	94 e0       	ldi	r25, 0x04	; 4
    3c28:	69 ce       	rjmp	.-814    	; 0x38fc <menu_color()+0x3d6>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1238
        lcd.setCursor(0, 3);
        lcd.print("                    ");
      }
    } else if (page == 3)  // memory RED
    3c2a:	83 30       	cpi	r24, 0x03	; 3
    3c2c:	09 f0       	breq	.+2      	; 0x3c30 <menu_color()+0x70a>
    3c2e:	59 c0       	rjmp	.+178    	; 0x3ce2 <menu_color()+0x7bc>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1240
    {
      lcd.setCursor(0, 0);
    3c30:	60 e0       	ldi	r22, 0x00	; 0
    3c32:	80 e0       	ldi	r24, 0x00	; 0
    3c34:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1241
      lcd.print("memory RED:  ");
    3c38:	83 ea       	ldi	r24, 0xA3	; 163
    3c3a:	94 e0       	ldi	r25, 0x04	; 4
    3c3c:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1243

      lcd.setCursor(0, 1);
    3c40:	61 e0       	ldi	r22, 0x01	; 1
    3c42:	80 e0       	ldi	r24, 0x00	; 0
    3c44:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1244
      lcd.print("  RED  GRN  BLU ");
    3c48:	89 e5       	ldi	r24, 0x59	; 89
    3c4a:	94 e0       	ldi	r25, 0x04	; 4
    3c4c:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1246

      lcd.setCursor(0, 2);
    3c50:	62 e0       	ldi	r22, 0x02	; 2
    3c52:	80 e0       	ldi	r24, 0x00	; 0
    3c54:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1247
      lcd.printf("L%4d %4d %4d ", EEPROM_read_int(red_left_r), EEPROM_read_int(red_left_g), EEPROM_read_int(red_left_b));
    3c58:	88 e1       	ldi	r24, 0x18	; 24
    3c5a:	90 e0       	ldi	r25, 0x00	; 0
    3c5c:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3c60:	58 2e       	mov	r5, r24
    3c62:	49 2e       	mov	r4, r25
    3c64:	86 e1       	ldi	r24, 0x16	; 22
    3c66:	90 e0       	ldi	r25, 0x00	; 0
    3c68:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3c6c:	78 2e       	mov	r7, r24
    3c6e:	69 2e       	mov	r6, r25
    3c70:	84 e1       	ldi	r24, 0x14	; 20
    3c72:	90 e0       	ldi	r25, 0x00	; 0
    3c74:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3c78:	4f 92       	push	r4
    3c7a:	5f 92       	push	r5
    3c7c:	6f 92       	push	r6
    3c7e:	7f 92       	push	r7
    3c80:	9f 93       	push	r25
    3c82:	8f 93       	push	r24
    3c84:	df 92       	push	r13
    3c86:	cf 92       	push	r12
    3c88:	df 93       	push	r29
    3c8a:	cf 93       	push	r28
    3c8c:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1249

      lcd.setCursor(0, 3);
    3c90:	63 e0       	ldi	r22, 0x03	; 3
    3c92:	80 e0       	ldi	r24, 0x00	; 0
    3c94:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1250
      lcd.printf("R%4d %4d %4d ", EEPROM_read_int(red_right_r), EEPROM_read_int(red_right_g), EEPROM_read_int(red_right_b));
    3c98:	80 e4       	ldi	r24, 0x40	; 64
    3c9a:	90 e0       	ldi	r25, 0x00	; 0
    3c9c:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3ca0:	58 2e       	mov	r5, r24
    3ca2:	49 2e       	mov	r4, r25
    3ca4:	8e e3       	ldi	r24, 0x3E	; 62
    3ca6:	90 e0       	ldi	r25, 0x00	; 0
    3ca8:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3cac:	78 2e       	mov	r7, r24
    3cae:	69 2e       	mov	r6, r25
    3cb0:	8c e3       	ldi	r24, 0x3C	; 60
    3cb2:	90 e0       	ldi	r25, 0x00	; 0
    3cb4:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3cb8:	4f 92       	push	r4
    3cba:	5f 92       	push	r5
    3cbc:	6f 92       	push	r6
    3cbe:	7f 92       	push	r7
    3cc0:	9f 93       	push	r25
    3cc2:	8f 93       	push	r24
    3cc4:	bf 92       	push	r11
    3cc6:	af 92       	push	r10
    3cc8:	df 93       	push	r29
    3cca:	cf 93       	push	r28
    3ccc:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
    3cd0:	8d b7       	in	r24, 0x3d	; 61
    3cd2:	9e b7       	in	r25, 0x3e	; 62
    3cd4:	44 96       	adiw	r24, 0x14	; 20
    3cd6:	0f b6       	in	r0, 0x3f	; 63
    3cd8:	f8 94       	cli
    3cda:	9e bf       	out	0x3e, r25	; 62
    3cdc:	0f be       	out	0x3f, r0	; 63
    3cde:	8d bf       	out	0x3d, r24	; 61
    3ce0:	38 cc       	rjmp	.-1936   	; 0x3552 <menu_color()+0x2c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1251
    } else if (page == 4)  // memory GREEN
    3ce2:	84 30       	cpi	r24, 0x04	; 4
    3ce4:	09 f0       	breq	.+2      	; 0x3ce8 <menu_color()+0x7c2>
    3ce6:	5a c0       	rjmp	.+180    	; 0x3d9c <menu_color()+0x876>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1253
    {
      lcd.setCursor(0, 0);
    3ce8:	60 e0       	ldi	r22, 0x00	; 0
    3cea:	80 e0       	ldi	r24, 0x00	; 0
    3cec:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1254
      lcd.print("memory GRN:  ");
    3cf0:	8d ec       	ldi	r24, 0xCD	; 205
    3cf2:	94 e0       	ldi	r25, 0x04	; 4
    3cf4:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1256

      lcd.setCursor(0, 1);
    3cf8:	61 e0       	ldi	r22, 0x01	; 1
    3cfa:	80 e0       	ldi	r24, 0x00	; 0
    3cfc:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1257
      lcd.print("  RED  GRN  BLU ");
    3d00:	89 e5       	ldi	r24, 0x59	; 89
    3d02:	94 e0       	ldi	r25, 0x04	; 4
    3d04:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1259

      lcd.setCursor(0, 2);
    3d08:	62 e0       	ldi	r22, 0x02	; 2
    3d0a:	80 e0       	ldi	r24, 0x00	; 0
    3d0c:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1260
      lcd.printf("L%4d %4d %4d ", EEPROM_read_int(green_left_r), EEPROM_read_int(green_left_g), EEPROM_read_int(green_left_b));
    3d10:	80 e2       	ldi	r24, 0x20	; 32
    3d12:	90 e0       	ldi	r25, 0x00	; 0
    3d14:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3d18:	58 2e       	mov	r5, r24
    3d1a:	49 2e       	mov	r4, r25
    3d1c:	8e e1       	ldi	r24, 0x1E	; 30
    3d1e:	90 e0       	ldi	r25, 0x00	; 0
    3d20:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3d24:	78 2e       	mov	r7, r24
    3d26:	69 2e       	mov	r6, r25
    3d28:	8c e1       	ldi	r24, 0x1C	; 28
    3d2a:	90 e0       	ldi	r25, 0x00	; 0
    3d2c:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3d30:	4f 92       	push	r4
    3d32:	5f 92       	push	r5
    3d34:	6f 92       	push	r6
    3d36:	7f 92       	push	r7
    3d38:	9f 93       	push	r25
    3d3a:	8f 93       	push	r24
    3d3c:	df 92       	push	r13
    3d3e:	cf 92       	push	r12
    3d40:	df 93       	push	r29
    3d42:	cf 93       	push	r28
    3d44:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1262

      lcd.setCursor(0, 3);
    3d48:	63 e0       	ldi	r22, 0x03	; 3
    3d4a:	80 e0       	ldi	r24, 0x00	; 0
    3d4c:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1263
      lcd.printf("R%4d %4d %4d ", EEPROM_read_int(green_right_r), EEPROM_read_int(green_right_g), EEPROM_read_int(green_right_b));
    3d50:	88 e4       	ldi	r24, 0x48	; 72
    3d52:	90 e0       	ldi	r25, 0x00	; 0
    3d54:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3d58:	58 2e       	mov	r5, r24
    3d5a:	49 2e       	mov	r4, r25
    3d5c:	86 e4       	ldi	r24, 0x46	; 70
    3d5e:	90 e0       	ldi	r25, 0x00	; 0
    3d60:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3d64:	78 2e       	mov	r7, r24
    3d66:	69 2e       	mov	r6, r25
    3d68:	84 e4       	ldi	r24, 0x44	; 68
    3d6a:	90 e0       	ldi	r25, 0x00	; 0
    3d6c:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3d70:	4f 92       	push	r4
    3d72:	5f 92       	push	r5
    3d74:	6f 92       	push	r6
    3d76:	7f 92       	push	r7
    3d78:	9f 93       	push	r25
    3d7a:	8f 93       	push	r24
    3d7c:	bf 92       	push	r11
    3d7e:	af 92       	push	r10
    3d80:	df 93       	push	r29
    3d82:	cf 93       	push	r28
    3d84:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
    3d88:	2d b7       	in	r18, 0x3d	; 61
    3d8a:	3e b7       	in	r19, 0x3e	; 62
    3d8c:	2c 5e       	subi	r18, 0xEC	; 236
    3d8e:	3f 4f       	sbci	r19, 0xFF	; 255
    3d90:	0f b6       	in	r0, 0x3f	; 63
    3d92:	f8 94       	cli
    3d94:	3e bf       	out	0x3e, r19	; 62
    3d96:	0f be       	out	0x3f, r0	; 63
    3d98:	2d bf       	out	0x3d, r18	; 61
    3d9a:	db cb       	rjmp	.-2122   	; 0x3552 <menu_color()+0x2c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1264
    } else if (page == 5)  // memory BLUE
    3d9c:	85 30       	cpi	r24, 0x05	; 5
    3d9e:	09 f0       	breq	.+2      	; 0x3da2 <menu_color()+0x87c>
    3da0:	59 c0       	rjmp	.+178    	; 0x3e54 <menu_color()+0x92e>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1266
    {
      lcd.setCursor(0, 0);
    3da2:	60 e0       	ldi	r22, 0x00	; 0
    3da4:	80 e0       	ldi	r24, 0x00	; 0
    3da6:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1267
      lcd.print("memory BLU:  ");
    3daa:	8b ed       	ldi	r24, 0xDB	; 219
    3dac:	94 e0       	ldi	r25, 0x04	; 4
    3dae:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1269

      lcd.setCursor(0, 1);
    3db2:	61 e0       	ldi	r22, 0x01	; 1
    3db4:	80 e0       	ldi	r24, 0x00	; 0
    3db6:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1270
      lcd.print("  RED  GRN  BLU ");
    3dba:	89 e5       	ldi	r24, 0x59	; 89
    3dbc:	94 e0       	ldi	r25, 0x04	; 4
    3dbe:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1272

      lcd.setCursor(0, 2);
    3dc2:	62 e0       	ldi	r22, 0x02	; 2
    3dc4:	80 e0       	ldi	r24, 0x00	; 0
    3dc6:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1273
      lcd.printf("L%4d %4d %4d ", EEPROM_read_int(blue_left_r), EEPROM_read_int(blue_left_g), EEPROM_read_int(blue_left_b));
    3dca:	88 e2       	ldi	r24, 0x28	; 40
    3dcc:	90 e0       	ldi	r25, 0x00	; 0
    3dce:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3dd2:	58 2e       	mov	r5, r24
    3dd4:	49 2e       	mov	r4, r25
    3dd6:	86 e2       	ldi	r24, 0x26	; 38
    3dd8:	90 e0       	ldi	r25, 0x00	; 0
    3dda:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3dde:	78 2e       	mov	r7, r24
    3de0:	69 2e       	mov	r6, r25
    3de2:	84 e2       	ldi	r24, 0x24	; 36
    3de4:	90 e0       	ldi	r25, 0x00	; 0
    3de6:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3dea:	4f 92       	push	r4
    3dec:	5f 92       	push	r5
    3dee:	6f 92       	push	r6
    3df0:	7f 92       	push	r7
    3df2:	9f 93       	push	r25
    3df4:	8f 93       	push	r24
    3df6:	df 92       	push	r13
    3df8:	cf 92       	push	r12
    3dfa:	df 93       	push	r29
    3dfc:	cf 93       	push	r28
    3dfe:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1275

      lcd.setCursor(0, 3);
    3e02:	63 e0       	ldi	r22, 0x03	; 3
    3e04:	80 e0       	ldi	r24, 0x00	; 0
    3e06:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1276
      lcd.printf("R%4d %4d %4d ", EEPROM_read_int(blue_right_r), EEPROM_read_int(blue_right_g), EEPROM_read_int(blue_right_b));
    3e0a:	80 e5       	ldi	r24, 0x50	; 80
    3e0c:	90 e0       	ldi	r25, 0x00	; 0
    3e0e:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3e12:	58 2e       	mov	r5, r24
    3e14:	49 2e       	mov	r4, r25
    3e16:	8e e4       	ldi	r24, 0x4E	; 78
    3e18:	90 e0       	ldi	r25, 0x00	; 0
    3e1a:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3e1e:	78 2e       	mov	r7, r24
    3e20:	69 2e       	mov	r6, r25
    3e22:	8c e4       	ldi	r24, 0x4C	; 76
    3e24:	90 e0       	ldi	r25, 0x00	; 0
    3e26:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3e2a:	4f 92       	push	r4
    3e2c:	5f 92       	push	r5
    3e2e:	6f 92       	push	r6
    3e30:	7f 92       	push	r7
    3e32:	9f 93       	push	r25
    3e34:	8f 93       	push	r24
    3e36:	bf 92       	push	r11
    3e38:	af 92       	push	r10
    3e3a:	df 93       	push	r29
    3e3c:	cf 93       	push	r28
    3e3e:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
    3e42:	8d b7       	in	r24, 0x3d	; 61
    3e44:	9e b7       	in	r25, 0x3e	; 62
    3e46:	44 96       	adiw	r24, 0x14	; 20
    3e48:	0f b6       	in	r0, 0x3f	; 63
    3e4a:	f8 94       	cli
    3e4c:	9e bf       	out	0x3e, r25	; 62
    3e4e:	0f be       	out	0x3f, r0	; 63
    3e50:	8d bf       	out	0x3d, r24	; 61
    3e52:	7f cb       	rjmp	.-2306   	; 0x3552 <menu_color()+0x2c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1277
    } else if (page == 6)  // memory Yellow
    3e54:	86 30       	cpi	r24, 0x06	; 6
    3e56:	09 f0       	breq	.+2      	; 0x3e5a <menu_color()+0x934>
    3e58:	5a c0       	rjmp	.+180    	; 0x3f0e <menu_color()+0x9e8>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1279
    {
      lcd.setCursor(0, 0);
    3e5a:	60 e0       	ldi	r22, 0x00	; 0
    3e5c:	80 e0       	ldi	r24, 0x00	; 0
    3e5e:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1280
      lcd.print("memory Yel:  ");
    3e62:	89 ee       	ldi	r24, 0xE9	; 233
    3e64:	94 e0       	ldi	r25, 0x04	; 4
    3e66:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1282

      lcd.setCursor(0, 1);
    3e6a:	61 e0       	ldi	r22, 0x01	; 1
    3e6c:	80 e0       	ldi	r24, 0x00	; 0
    3e6e:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1283
      lcd.print("  RED  GRN  BLU ");
    3e72:	89 e5       	ldi	r24, 0x59	; 89
    3e74:	94 e0       	ldi	r25, 0x04	; 4
    3e76:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1285

      lcd.setCursor(0, 2);
    3e7a:	62 e0       	ldi	r22, 0x02	; 2
    3e7c:	80 e0       	ldi	r24, 0x00	; 0
    3e7e:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1286
      lcd.printf("L%4d %4d %4d ", EEPROM_read_int(yellow_left_r), EEPROM_read_int(yellow_left_g), EEPROM_read_int(yellow_left_b));
    3e82:	80 e3       	ldi	r24, 0x30	; 48
    3e84:	90 e0       	ldi	r25, 0x00	; 0
    3e86:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3e8a:	58 2e       	mov	r5, r24
    3e8c:	49 2e       	mov	r4, r25
    3e8e:	8e e2       	ldi	r24, 0x2E	; 46
    3e90:	90 e0       	ldi	r25, 0x00	; 0
    3e92:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3e96:	78 2e       	mov	r7, r24
    3e98:	69 2e       	mov	r6, r25
    3e9a:	8c e2       	ldi	r24, 0x2C	; 44
    3e9c:	90 e0       	ldi	r25, 0x00	; 0
    3e9e:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3ea2:	4f 92       	push	r4
    3ea4:	5f 92       	push	r5
    3ea6:	6f 92       	push	r6
    3ea8:	7f 92       	push	r7
    3eaa:	9f 93       	push	r25
    3eac:	8f 93       	push	r24
    3eae:	df 92       	push	r13
    3eb0:	cf 92       	push	r12
    3eb2:	df 93       	push	r29
    3eb4:	cf 93       	push	r28
    3eb6:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1288

      lcd.setCursor(0, 3);
    3eba:	63 e0       	ldi	r22, 0x03	; 3
    3ebc:	80 e0       	ldi	r24, 0x00	; 0
    3ebe:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1289
      lcd.printf("R%4d %4d %4d ", EEPROM_read_int(yellow_right_r), EEPROM_read_int(yellow_right_g), EEPROM_read_int(yellow_right_b));
    3ec2:	88 e5       	ldi	r24, 0x58	; 88
    3ec4:	90 e0       	ldi	r25, 0x00	; 0
    3ec6:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3eca:	58 2e       	mov	r5, r24
    3ecc:	49 2e       	mov	r4, r25
    3ece:	86 e5       	ldi	r24, 0x56	; 86
    3ed0:	90 e0       	ldi	r25, 0x00	; 0
    3ed2:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3ed6:	78 2e       	mov	r7, r24
    3ed8:	69 2e       	mov	r6, r25
    3eda:	84 e5       	ldi	r24, 0x54	; 84
    3edc:	90 e0       	ldi	r25, 0x00	; 0
    3ede:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3ee2:	4f 92       	push	r4
    3ee4:	5f 92       	push	r5
    3ee6:	6f 92       	push	r6
    3ee8:	7f 92       	push	r7
    3eea:	9f 93       	push	r25
    3eec:	8f 93       	push	r24
    3eee:	bf 92       	push	r11
    3ef0:	af 92       	push	r10
    3ef2:	df 93       	push	r29
    3ef4:	cf 93       	push	r28
    3ef6:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
    3efa:	2d b7       	in	r18, 0x3d	; 61
    3efc:	3e b7       	in	r19, 0x3e	; 62
    3efe:	2c 5e       	subi	r18, 0xEC	; 236
    3f00:	3f 4f       	sbci	r19, 0xFF	; 255
    3f02:	0f b6       	in	r0, 0x3f	; 63
    3f04:	f8 94       	cli
    3f06:	3e bf       	out	0x3e, r19	; 62
    3f08:	0f be       	out	0x3f, r0	; 63
    3f0a:	2d bf       	out	0x3d, r18	; 61
    3f0c:	22 cb       	rjmp	.-2492   	; 0x3552 <menu_color()+0x2c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1290
    } else if (page == 7)  // memory Silver
    3f0e:	87 30       	cpi	r24, 0x07	; 7
    3f10:	09 f0       	breq	.+2      	; 0x3f14 <menu_color()+0x9ee>
    3f12:	6d c0       	rjmp	.+218    	; 0x3fee <menu_color()+0xac8>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1292
    {
      lcd.setCursor(0, 0);
    3f14:	60 e0       	ldi	r22, 0x00	; 0
    3f16:	80 e0       	ldi	r24, 0x00	; 0
    3f18:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1293
      lcd.print("memory Silver:  ");
    3f1c:	87 ef       	ldi	r24, 0xF7	; 247
    3f1e:	94 e0       	ldi	r25, 0x04	; 4
    3f20:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1295

      lcd.setCursor(0, 1);
    3f24:	61 e0       	ldi	r22, 0x01	; 1
    3f26:	80 e0       	ldi	r24, 0x00	; 0
    3f28:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1296
      lcd.print("  RED  GRN  BLU ");
    3f2c:	89 e5       	ldi	r24, 0x59	; 89
    3f2e:	94 e0       	ldi	r25, 0x04	; 4
    3f30:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1298

      lcd.setCursor(0, 2);
    3f34:	62 e0       	ldi	r22, 0x02	; 2
    3f36:	80 e0       	ldi	r24, 0x00	; 0
    3f38:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1299
      lcd.printf("L%4d %4d %4d %4d", EEPROM_read_int(silver_left_r), EEPROM_read_int(silver_left_g), EEPROM_read_int(silver_left_b), EEPROM_read_int(silver_left_c));
    3f3c:	8a e3       	ldi	r24, 0x3A	; 58
    3f3e:	90 e0       	ldi	r25, 0x00	; 0
    3f40:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3f44:	38 2e       	mov	r3, r24
    3f46:	29 2e       	mov	r2, r25
    3f48:	88 e3       	ldi	r24, 0x38	; 56
    3f4a:	90 e0       	ldi	r25, 0x00	; 0
    3f4c:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3f50:	58 2e       	mov	r5, r24
    3f52:	49 2e       	mov	r4, r25
    3f54:	86 e3       	ldi	r24, 0x36	; 54
    3f56:	90 e0       	ldi	r25, 0x00	; 0
    3f58:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3f5c:	78 2e       	mov	r7, r24
    3f5e:	69 2e       	mov	r6, r25
    3f60:	84 e3       	ldi	r24, 0x34	; 52
    3f62:	90 e0       	ldi	r25, 0x00	; 0
    3f64:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3f68:	2f 92       	push	r2
    3f6a:	3f 92       	push	r3
    3f6c:	4f 92       	push	r4
    3f6e:	5f 92       	push	r5
    3f70:	6f 92       	push	r6
    3f72:	7f 92       	push	r7
    3f74:	9f 93       	push	r25
    3f76:	8f 93       	push	r24
    3f78:	88 e0       	ldi	r24, 0x08	; 8
    3f7a:	95 e0       	ldi	r25, 0x05	; 5
    3f7c:	9f 93       	push	r25
    3f7e:	8f 93       	push	r24
    3f80:	df 93       	push	r29
    3f82:	cf 93       	push	r28
    3f84:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1301

      lcd.setCursor(0, 3);
    3f88:	63 e0       	ldi	r22, 0x03	; 3
    3f8a:	80 e0       	ldi	r24, 0x00	; 0
    3f8c:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1302
      lcd.printf("R%4d %4d %4d %4d", EEPROM_read_int(silver_right_r), EEPROM_read_int(silver_right_g), EEPROM_read_int(silver_right_b), EEPROM_read_int(silver_right_c));
    3f90:	82 e6       	ldi	r24, 0x62	; 98
    3f92:	90 e0       	ldi	r25, 0x00	; 0
    3f94:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3f98:	38 2e       	mov	r3, r24
    3f9a:	29 2e       	mov	r2, r25
    3f9c:	80 e6       	ldi	r24, 0x60	; 96
    3f9e:	90 e0       	ldi	r25, 0x00	; 0
    3fa0:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3fa4:	58 2e       	mov	r5, r24
    3fa6:	49 2e       	mov	r4, r25
    3fa8:	8e e5       	ldi	r24, 0x5E	; 94
    3faa:	90 e0       	ldi	r25, 0x00	; 0
    3fac:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3fb0:	78 2e       	mov	r7, r24
    3fb2:	69 2e       	mov	r6, r25
    3fb4:	8c e5       	ldi	r24, 0x5C	; 92
    3fb6:	90 e0       	ldi	r25, 0x00	; 0
    3fb8:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    3fbc:	2f 92       	push	r2
    3fbe:	3f 92       	push	r3
    3fc0:	4f 92       	push	r4
    3fc2:	5f 92       	push	r5
    3fc4:	6f 92       	push	r6
    3fc6:	7f 92       	push	r7
    3fc8:	9f 93       	push	r25
    3fca:	8f 93       	push	r24
    3fcc:	29 e1       	ldi	r18, 0x19	; 25
    3fce:	35 e0       	ldi	r19, 0x05	; 5
    3fd0:	3f 93       	push	r19
    3fd2:	2f 93       	push	r18
    3fd4:	df 93       	push	r29
    3fd6:	cf 93       	push	r28
    3fd8:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
    3fdc:	8d b7       	in	r24, 0x3d	; 61
    3fde:	9e b7       	in	r25, 0x3e	; 62
    3fe0:	48 96       	adiw	r24, 0x18	; 24
    3fe2:	0f b6       	in	r0, 0x3f	; 63
    3fe4:	f8 94       	cli
    3fe6:	9e bf       	out	0x3e, r25	; 62
    3fe8:	0f be       	out	0x3f, r0	; 63
    3fea:	8d bf       	out	0x3d, r24	; 61
    3fec:	b2 ca       	rjmp	.-2716   	; 0x3552 <menu_color()+0x2c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1303
    } else if (page == 8)  // APDS Front
    3fee:	88 30       	cpi	r24, 0x08	; 8
    3ff0:	09 f0       	breq	.+2      	; 0x3ff4 <menu_color()+0xace>
    3ff2:	af ca       	rjmp	.-2722   	; 0x3552 <menu_color()+0x2c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1305
    {
      lcd.setCursor(0, 0);
    3ff4:	60 e0       	ldi	r22, 0x00	; 0
    3ff6:	80 e0       	ldi	r24, 0x00	; 0
    3ff8:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1306
      lcd.print("APDS Front: ");
    3ffc:	8a e2       	ldi	r24, 0x2A	; 42
    3ffe:	95 e0       	ldi	r25, 0x05	; 5
    4000:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1307
      lcd.setCursor(0, 1);
    4004:	61 e0       	ldi	r22, 0x01	; 1
    4006:	80 e0       	ldi	r24, 0x00	; 0
    4008:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1308
      lcd.print("  RED  GRN  BLU ");
    400c:	89 e5       	ldi	r24, 0x59	; 89
    400e:	94 e0       	ldi	r25, 0x04	; 4
    4010:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1310

      lcd.setCursor(0, 2);
    4014:	62 e0       	ldi	r22, 0x02	; 2
    4016:	80 e0       	ldi	r24, 0x00	; 0
    4018:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1311
      lcd.printf(" %4d %4d %4d %4d", red, green, blue, clear);
    401c:	80 91 c4 08 	lds	r24, 0x08C4	; 0x8008c4 <clear+0x1>
    4020:	8f 93       	push	r24
    4022:	80 91 c3 08 	lds	r24, 0x08C3	; 0x8008c3 <clear>
    4026:	8f 93       	push	r24
    4028:	80 91 c6 08 	lds	r24, 0x08C6	; 0x8008c6 <blue+0x1>
    402c:	8f 93       	push	r24
    402e:	80 91 c5 08 	lds	r24, 0x08C5	; 0x8008c5 <blue>
    4032:	8f 93       	push	r24
    4034:	80 91 c8 08 	lds	r24, 0x08C8	; 0x8008c8 <green+0x1>
    4038:	8f 93       	push	r24
    403a:	80 91 c7 08 	lds	r24, 0x08C7	; 0x8008c7 <green>
    403e:	8f 93       	push	r24
    4040:	80 91 ca 08 	lds	r24, 0x08CA	; 0x8008ca <red+0x1>
    4044:	8f 93       	push	r24
    4046:	80 91 c9 08 	lds	r24, 0x08C9	; 0x8008c9 <red>
    404a:	8f 93       	push	r24
    404c:	9f 92       	push	r9
    404e:	8f 92       	push	r8
    4050:	df 93       	push	r29
    4052:	cf 93       	push	r28
    4054:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1313

      lcd.setCursor(12, 0);
    4058:	60 e0       	ldi	r22, 0x00	; 0
    405a:	8c e0       	ldi	r24, 0x0C	; 12
    405c:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1314
      if (color_F == RED) {
    4060:	83 e0       	ldi	r24, 0x03	; 3
    4062:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <color(char)>
    4066:	2d b7       	in	r18, 0x3d	; 61
    4068:	3e b7       	in	r19, 0x3e	; 62
    406a:	24 5f       	subi	r18, 0xF4	; 244
    406c:	3f 4f       	sbci	r19, 0xFF	; 255
    406e:	0f b6       	in	r0, 0x3f	; 63
    4070:	f8 94       	cli
    4072:	3e bf       	out	0x3e, r19	; 62
    4074:	0f be       	out	0x3f, r0	; 63
    4076:	2d bf       	out	0x3d, r18	; 61
    4078:	81 11       	cpse	r24, r1
    407a:	3a c0       	rjmp	.+116    	; 0x40f0 <menu_color()+0xbca>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1315
        lcd.setCursor(12, 0);
    407c:	60 e0       	ldi	r22, 0x00	; 0
    407e:	8c e0       	ldi	r24, 0x0C	; 12
    4080:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1316
        lcd.print("RED ");
    4084:	8a e6       	ldi	r24, 0x6A	; 106
    4086:	94 e0       	ldi	r25, 0x04	; 4
    4088:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1317
        lcd.setCursor(0, 3);
    408c:	63 e0       	ldi	r22, 0x03	; 3
    408e:	80 e0       	ldi	r24, 0x00	; 0
    4090:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1318
        lcd.printf("M%4d %4d %4d %4d ", EEPROM_read_int(red_front_r), EEPROM_read_int(red_front_g), EEPROM_read_int(red_front_b), EEPROM_read_int(red_front_c));
    4094:	8a e6       	ldi	r24, 0x6A	; 106
    4096:	90 e0       	ldi	r25, 0x00	; 0
    4098:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    409c:	38 2e       	mov	r3, r24
    409e:	29 2e       	mov	r2, r25
    40a0:	88 e6       	ldi	r24, 0x68	; 104
    40a2:	90 e0       	ldi	r25, 0x00	; 0
    40a4:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    40a8:	58 2e       	mov	r5, r24
    40aa:	49 2e       	mov	r4, r25
    40ac:	86 e6       	ldi	r24, 0x66	; 102
    40ae:	90 e0       	ldi	r25, 0x00	; 0
    40b0:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    40b4:	78 2e       	mov	r7, r24
    40b6:	69 2e       	mov	r6, r25
    40b8:	84 e6       	ldi	r24, 0x64	; 100
    40ba:	90 e0       	ldi	r25, 0x00	; 0
    40bc:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    40c0:	2f 92       	push	r2
    40c2:	3f 92       	push	r3
    40c4:	4f 92       	push	r4
    40c6:	5f 92       	push	r5
    40c8:	6f 92       	push	r6
    40ca:	7f 92       	push	r7
    40cc:	9f 93       	push	r25
    40ce:	8f 93       	push	r24
    40d0:	ff 92       	push	r15
    40d2:	ef 92       	push	r14
    40d4:	df 93       	push	r29
    40d6:	cf 93       	push	r28
    40d8:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
    40dc:	2d b7       	in	r18, 0x3d	; 61
    40de:	3e b7       	in	r19, 0x3e	; 62
    40e0:	24 5f       	subi	r18, 0xF4	; 244
    40e2:	3f 4f       	sbci	r19, 0xFF	; 255
    40e4:	0f b6       	in	r0, 0x3f	; 63
    40e6:	f8 94       	cli
    40e8:	3e bf       	out	0x3e, r19	; 62
    40ea:	0f be       	out	0x3f, r0	; 63
    40ec:	2d bf       	out	0x3d, r18	; 61
    40ee:	31 ca       	rjmp	.-2974   	; 0x3552 <menu_color()+0x2c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1319
      } else if (color_F == GREEN) {
    40f0:	83 e0       	ldi	r24, 0x03	; 3
    40f2:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <color(char)>
    40f6:	81 30       	cpi	r24, 0x01	; 1
    40f8:	d1 f5       	brne	.+116    	; 0x416e <menu_color()+0xc48>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1320
        lcd.setCursor(12, 0);
    40fa:	60 e0       	ldi	r22, 0x00	; 0
    40fc:	8c e0       	ldi	r24, 0x0C	; 12
    40fe:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1321
        lcd.print("GRN ");
    4102:	81 e8       	ldi	r24, 0x81	; 129
    4104:	94 e0       	ldi	r25, 0x04	; 4
    4106:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1322
        lcd.setCursor(0, 3);
    410a:	63 e0       	ldi	r22, 0x03	; 3
    410c:	80 e0       	ldi	r24, 0x00	; 0
    410e:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1323
        lcd.printf("M%4d %4d %4d %4d ", EEPROM_read_int(green_front_r), EEPROM_read_int(green_front_g), EEPROM_read_int(green_front_b), EEPROM_read_int(green_front_c));
    4112:	82 e7       	ldi	r24, 0x72	; 114
    4114:	90 e0       	ldi	r25, 0x00	; 0
    4116:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    411a:	38 2e       	mov	r3, r24
    411c:	29 2e       	mov	r2, r25
    411e:	80 e7       	ldi	r24, 0x70	; 112
    4120:	90 e0       	ldi	r25, 0x00	; 0
    4122:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    4126:	58 2e       	mov	r5, r24
    4128:	49 2e       	mov	r4, r25
    412a:	8e e6       	ldi	r24, 0x6E	; 110
    412c:	90 e0       	ldi	r25, 0x00	; 0
    412e:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    4132:	78 2e       	mov	r7, r24
    4134:	69 2e       	mov	r6, r25
    4136:	8c e6       	ldi	r24, 0x6C	; 108
    4138:	90 e0       	ldi	r25, 0x00	; 0
    413a:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    413e:	2f 92       	push	r2
    4140:	3f 92       	push	r3
    4142:	4f 92       	push	r4
    4144:	5f 92       	push	r5
    4146:	6f 92       	push	r6
    4148:	7f 92       	push	r7
    414a:	9f 93       	push	r25
    414c:	8f 93       	push	r24
    414e:	ff 92       	push	r15
    4150:	ef 92       	push	r14
    4152:	df 93       	push	r29
    4154:	cf 93       	push	r28
    4156:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
    415a:	2d b7       	in	r18, 0x3d	; 61
    415c:	3e b7       	in	r19, 0x3e	; 62
    415e:	24 5f       	subi	r18, 0xF4	; 244
    4160:	3f 4f       	sbci	r19, 0xFF	; 255
    4162:	0f b6       	in	r0, 0x3f	; 63
    4164:	f8 94       	cli
    4166:	3e bf       	out	0x3e, r19	; 62
    4168:	0f be       	out	0x3f, r0	; 63
    416a:	2d bf       	out	0x3d, r18	; 61
    416c:	f2 c9       	rjmp	.-3100   	; 0x3552 <menu_color()+0x2c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1324
      } else if (color_F == WHITE) {
    416e:	83 e0       	ldi	r24, 0x03	; 3
    4170:	50 cd       	rjmp	.-1376   	; 0x3c12 <menu_color()+0x6ec>

00004172 <global constructors keyed to 65535_0_sport_main_code_2023.ino.cpp.o.2355>:
_GLOBAL__I_65535_0_sport_main_code_2023.ino.cpp.o.2355():
    4172:	e4 e7       	ldi	r30, 0x74	; 116
    4174:	f9 e0       	ldi	r31, 0x09	; 9
    4176:	13 82       	std	Z+3, r1	; 0x03
    4178:	12 82       	std	Z+2, r1	; 0x02
    417a:	88 ee       	ldi	r24, 0xE8	; 232
    417c:	93 e0       	ldi	r25, 0x03	; 3
    417e:	a0 e0       	ldi	r26, 0x00	; 0
    4180:	b0 e0       	ldi	r27, 0x00	; 0
    4182:	84 83       	std	Z+4, r24	; 0x04
    4184:	95 83       	std	Z+5, r25	; 0x05
    4186:	a6 83       	std	Z+6, r26	; 0x06
    4188:	b7 83       	std	Z+7, r27	; 0x07
    418a:	2c e0       	ldi	r18, 0x0C	; 12
    418c:	33 e0       	ldi	r19, 0x03	; 3
    418e:	31 83       	std	Z+1, r19	; 0x01
    4190:	20 83       	st	Z, r18
    4192:	48 e9       	ldi	r20, 0x98	; 152
    4194:	50 e0       	ldi	r21, 0x00	; 0
    4196:	55 87       	std	Z+13, r21	; 0x0d
    4198:	44 87       	std	Z+12, r20	; 0x0c
    419a:	49 e9       	ldi	r20, 0x99	; 153
    419c:	50 e0       	ldi	r21, 0x00	; 0
    419e:	57 87       	std	Z+15, r21	; 0x0f
    41a0:	46 87       	std	Z+14, r20	; 0x0e
    41a2:	4b e9       	ldi	r20, 0x9B	; 155
    41a4:	50 e0       	ldi	r21, 0x00	; 0
    41a6:	51 8b       	std	Z+17, r21	; 0x11
    41a8:	40 8b       	std	Z+16, r20	; 0x10
    41aa:	4a e9       	ldi	r20, 0x9A	; 154
    41ac:	50 e0       	ldi	r21, 0x00	; 0
    41ae:	53 8b       	std	Z+19, r21	; 0x13
    41b0:	42 8b       	std	Z+18, r20	; 0x12
    41b2:	4d e9       	ldi	r20, 0x9D	; 157
    41b4:	50 e0       	ldi	r21, 0x00	; 0
    41b6:	55 8b       	std	Z+21, r21	; 0x15
    41b8:	44 8b       	std	Z+20, r20	; 0x14
    41ba:	4c e9       	ldi	r20, 0x9C	; 156
    41bc:	50 e0       	ldi	r21, 0x00	; 0
    41be:	57 8b       	std	Z+23, r21	; 0x17
    41c0:	46 8b       	std	Z+22, r20	; 0x16
    41c2:	11 8e       	std	Z+25, r1	; 0x19
    41c4:	12 8e       	std	Z+26, r1	; 0x1a
    41c6:	13 8e       	std	Z+27, r1	; 0x1b
    41c8:	14 8e       	std	Z+28, r1	; 0x1c
    41ca:	e1 e1       	ldi	r30, 0x11	; 17
    41cc:	fa e0       	ldi	r31, 0x0A	; 10
    41ce:	13 82       	std	Z+3, r1	; 0x03
    41d0:	12 82       	std	Z+2, r1	; 0x02
    41d2:	84 83       	std	Z+4, r24	; 0x04
    41d4:	95 83       	std	Z+5, r25	; 0x05
    41d6:	a6 83       	std	Z+6, r26	; 0x06
    41d8:	b7 83       	std	Z+7, r27	; 0x07
    41da:	31 83       	std	Z+1, r19	; 0x01
    41dc:	20 83       	st	Z, r18
    41de:	20 e9       	ldi	r18, 0x90	; 144
    41e0:	30 e0       	ldi	r19, 0x00	; 0
    41e2:	35 87       	std	Z+13, r19	; 0x0d
    41e4:	24 87       	std	Z+12, r18	; 0x0c
    41e6:	29 e2       	ldi	r18, 0x29	; 41
    41e8:	30 e0       	ldi	r19, 0x00	; 0
    41ea:	37 87       	std	Z+15, r19	; 0x0f
    41ec:	26 87       	std	Z+14, r18	; 0x0e
    41ee:	2b e2       	ldi	r18, 0x2B	; 43
    41f0:	30 e0       	ldi	r19, 0x00	; 0
    41f2:	31 8b       	std	Z+17, r19	; 0x11
    41f4:	20 8b       	std	Z+16, r18	; 0x10
    41f6:	2a e2       	ldi	r18, 0x2A	; 42
    41f8:	30 e0       	ldi	r19, 0x00	; 0
    41fa:	33 8b       	std	Z+19, r19	; 0x13
    41fc:	22 8b       	std	Z+18, r18	; 0x12
    41fe:	25 e9       	ldi	r18, 0x95	; 149
    4200:	30 e0       	ldi	r19, 0x00	; 0
    4202:	35 8b       	std	Z+21, r19	; 0x15
    4204:	24 8b       	std	Z+20, r18	; 0x14
    4206:	2c e2       	ldi	r18, 0x2C	; 44
    4208:	30 e0       	ldi	r19, 0x00	; 0
    420a:	37 8b       	std	Z+23, r19	; 0x17
    420c:	26 8b       	std	Z+22, r18	; 0x16
    420e:	11 8e       	std	Z+25, r1	; 0x19
    4210:	12 8e       	std	Z+26, r1	; 0x1a
    4212:	13 8e       	std	Z+27, r1	; 0x1b
    4214:	14 8e       	std	Z+28, r1	; 0x1c
    4216:	ee ea       	ldi	r30, 0xAE	; 174
    4218:	fa e0       	ldi	r31, 0x0A	; 10
    421a:	13 82       	std	Z+3, r1	; 0x03
    421c:	12 82       	std	Z+2, r1	; 0x02
    421e:	84 83       	std	Z+4, r24	; 0x04
    4220:	95 83       	std	Z+5, r25	; 0x05
    4222:	a6 83       	std	Z+6, r26	; 0x06
    4224:	b7 83       	std	Z+7, r27	; 0x07
    4226:	8e e1       	ldi	r24, 0x1E	; 30
    4228:	93 e0       	ldi	r25, 0x03	; 3
    422a:	91 83       	std	Z+1, r25	; 0x01
    422c:	80 83       	st	Z, r24
    422e:	ea eb       	ldi	r30, 0xBA	; 186
    4230:	fa e0       	ldi	r31, 0x0A	; 10
    4232:	13 82       	std	Z+3, r1	; 0x03
    4234:	12 82       	std	Z+2, r1	; 0x02
    4236:	80 e3       	ldi	r24, 0x30	; 48
    4238:	93 e0       	ldi	r25, 0x03	; 3
    423a:	91 83       	std	Z+1, r25	; 0x01
    423c:	80 83       	st	Z, r24
    423e:	8c e1       	ldi	r24, 0x1C	; 28
    4240:	84 83       	std	Z+4, r24	; 0x04
    4242:	8f ef       	ldi	r24, 0xFF	; 255
    4244:	85 83       	std	Z+5, r24	; 0x05
    4246:	8e e1       	ldi	r24, 0x1E	; 30
    4248:	86 83       	std	Z+6, r24	; 0x06
    424a:	8f e1       	ldi	r24, 0x1F	; 31
    424c:	87 83       	std	Z+7, r24	; 0x07
    424e:	80 e2       	ldi	r24, 0x20	; 32
    4250:	80 87       	std	Z+8, r24	; 0x08
    4252:	81 e2       	ldi	r24, 0x21	; 33
    4254:	81 87       	std	Z+9, r24	; 0x09
    4256:	82 e2       	ldi	r24, 0x22	; 34
    4258:	82 87       	std	Z+10, r24	; 0x0a
    425a:	13 86       	std	Z+11, r1	; 0x0b
    425c:	14 86       	std	Z+12, r1	; 0x0c
    425e:	15 86       	std	Z+13, r1	; 0x0d
    4260:	16 86       	std	Z+14, r1	; 0x0e
    4262:	17 86       	std	Z+15, r1	; 0x0f
    4264:	61 e0       	ldi	r22, 0x01	; 1
    4266:	80 e1       	ldi	r24, 0x10	; 16
    4268:	0c 94 fd 05 	jmp	0xbfa	; 0xbfa <LiquidCrystal::begin(unsigned char, unsigned char, unsigned char) [clone .constprop.36]>

0000426c <main>:
init():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:945

void init()
{
  // this needs to be called before setup() or some functions won't
  // work there
  sei();
    426c:	78 94       	sei
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:963
#endif

  // Set timer 0 prescale factor to 64
#if defined(__AVR_ATmega64__) || defined(__AVR_ATmega128__)
  // CPU specific: different values for the ATmega64/128
  TCCR0 |= _BV(WGM01) | _BV(WGM00) | _BV(CS02);
    426e:	83 b7       	in	r24, 0x33	; 51
    4270:	8c 64       	ori	r24, 0x4C	; 76
    4272:	83 bf       	out	0x33, r24	; 51
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:982
  #error Timer 0 prescale factor 64 not set correctly
#endif

// Enable timer 0 overflow interrupt
#if defined(TIMSK) && defined(TOIE0)
  TIMSK |= _BV(TOIE0);
    4274:	87 b7       	in	r24, 0x37	; 55
    4276:	81 60       	ori	r24, 0x01	; 1
    4278:	87 bf       	out	0x37, r24	; 55
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:995
// this is better for motors as it ensures an even waveform
// note, however, that fast pwm mode can achieve a frequency of up
// 8 MHz (with a 16 MHz clock) at 50% duty cycle

#if defined(TCCR1B) && defined(CS11) && defined(CS10)
  TCCR1B = _BV(CS11); // Set timer 1 prescale factor to 64
    427a:	c2 e0       	ldi	r28, 0x02	; 2
    427c:	ce bd       	out	0x2e, r28	; 46
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:997
#if F_CPU >= 8000000L
  TCCR1B |= _BV(CS10);
    427e:	8e b5       	in	r24, 0x2e	; 46
    4280:	81 60       	ori	r24, 0x01	; 1
    4282:	8e bd       	out	0x2e, r24	; 46
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:1006
#if F_CPU >= 8000000L
  TCCR1 |= _BV(CS10);
#endif
#endif
#if defined(TCCR1A) && defined(WGM10)
  TCCR1A |= _BV(WGM10); // Put timer 1 in 8-bit phase correct pwm mode
    4284:	8f b5       	in	r24, 0x2f	; 47
    4286:	81 60       	ori	r24, 0x01	; 1
    4288:	8f bd       	out	0x2f, r24	; 47
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:1011
#endif

// Set timer 2 prescale factor to 64
#if defined(TCCR2) && defined(CS22)
  TCCR2 |= _BV(CS22);
    428a:	85 b5       	in	r24, 0x25	; 37
    428c:	84 60       	ori	r24, 0x04	; 4
    428e:	85 bd       	out	0x25, r24	; 37
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:1020
  TCCR2A |= _BV(CS22);
#endif

// Configure timer 2 for phase correct pwm (8-bit)
#if defined(TCCR2) && defined(WGM20)
  TCCR2 |= _BV(WGM20);
    4290:	85 b5       	in	r24, 0x25	; 37
    4292:	80 64       	ori	r24, 0x40	; 64
    4294:	85 bd       	out	0x25, r24	; 37
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:1028
//#else
  // Timer 2 not finished (may not be present on this CPU)
#endif

#if defined(TCCR3B) && defined(CS31) && defined(WGM30)
  TCCR3B |= _BV(CS31) | _BV(CS30); // Set timer 3 prescale factor to 64
    4296:	80 91 8a 00 	lds	r24, 0x008A	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
    429a:	83 60       	ori	r24, 0x03	; 3
    429c:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:1029
  TCCR3A |= _BV(WGM30);            // Put timer 3 in 8-bit phase correct pwm mode
    42a0:	80 91 8b 00 	lds	r24, 0x008B	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
    42a4:	81 60       	ori	r24, 0x01	; 1
    42a6:	80 93 8b 00 	sts	0x008B, r24	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:1052
#if defined(ADCSRA)
  // set a2d prescaler so we are inside the desired 50-200 KHz range.
  #if F_CPU >= 16000000 // 16 MHz / 128 = 125 KHz
    ADCSRA = _BV(ADPS2) | _BV(ADPS1) | _BV(ADPS0) | _BV(ADEN);
  #elif F_CPU >= 8000000 // 8 MHz / 64 = 125 KHz
    ADCSRA = _BV(ADPS2) | _BV(ADPS1) | _BV(ADEN);
    42aa:	86 e8       	ldi	r24, 0x86	; 134
    42ac:	86 b9       	out	0x06, r24	; 6
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/wiring.c:1070
  // here so they can be used as normal digital i/o; they will be
  // reconnected in Serial.begin()
#if defined(UCSRB)
  UCSRB = 0;
#elif defined(UCSR0B)
  UCSR0B = 0;
    42ae:	1a b8       	out	0x0a, r1	; 10
robot_setup():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1453
    }
  }
}

void robot_setup() {
  TCCR1A = 0;  // Clear the register
    42b0:	1f bc       	out	0x2f, r1	; 47
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1455
  // Set the Timer/Counter 1 Mode to "Normal" mode
  TCCR1A |= (0 << WGM10) | (0 << WGM11);
    42b2:	8f b5       	in	r24, 0x2f	; 47
    42b4:	8f bd       	out	0x2f, r24	; 47
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1456
  TCCR1B |= (0 << WGM12) | (0 << WGM13);
    42b6:	8e b5       	in	r24, 0x2e	; 46
    42b8:	8e bd       	out	0x2e, r24	; 46
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1458
  // Set the Timer/Counter 1 clock source to "External Crystal Oscillator"
  TCCR1B |= (1 << CS12) | (0 << CS11) | (0 << CS10);
    42ba:	8e b5       	in	r24, 0x2e	; 46
    42bc:	84 60       	ori	r24, 0x04	; 4
    42be:	8e bd       	out	0x2e, r24	; 46
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1459
  pinMode(13, OUTPUT);
    42c0:	61 e0       	ldi	r22, 0x01	; 1
    42c2:	8d e0       	ldi	r24, 0x0D	; 13
    42c4:	0e 94 3a 02 	call	0x474	; 0x474 <pinMode>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1460
  pinMode(12, OUTPUT);
    42c8:	61 e0       	ldi	r22, 0x01	; 1
    42ca:	8c e0       	ldi	r24, 0x0C	; 12
    42cc:	0e 94 3a 02 	call	0x474	; 0x474 <pinMode>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1461
  pinMode(6, INPUT_PULLUP);
    42d0:	62 e0       	ldi	r22, 0x02	; 2
    42d2:	86 e0       	ldi	r24, 0x06	; 6
    42d4:	0e 94 3a 02 	call	0x474	; 0x474 <pinMode>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1462
  pinMode(35, OUTPUT);
    42d8:	61 e0       	ldi	r22, 0x01	; 1
    42da:	83 e2       	ldi	r24, 0x23	; 35
    42dc:	0e 94 3a 02 	call	0x474	; 0x474 <pinMode>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1463
  pinMode(37, INPUT_PULLUP);  // sbl
    42e0:	62 e0       	ldi	r22, 0x02	; 2
    42e2:	85 e2       	ldi	r24, 0x25	; 37
    42e4:	0e 94 3a 02 	call	0x474	; 0x474 <pinMode>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1464
  pinMode(38, INPUT_PULLUP);  // sbr
    42e8:	62 e0       	ldi	r22, 0x02	; 2
    42ea:	86 e2       	ldi	r24, 0x26	; 38
    42ec:	0e 94 3a 02 	call	0x474	; 0x474 <pinMode>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1465
  pinMode(start_pin, INPUT_PULLUP);
    42f0:	62 e0       	ldi	r22, 0x02	; 2
    42f2:	86 e0       	ldi	r24, 0x06	; 6
    42f4:	0e 94 3a 02 	call	0x474	; 0x474 <pinMode>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1466
  pinMode(next_page_pin, INPUT_PULLUP);
    42f8:	62 e0       	ldi	r22, 0x02	; 2
    42fa:	88 e0       	ldi	r24, 0x08	; 8
    42fc:	0e 94 3a 02 	call	0x474	; 0x474 <pinMode>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1467
  pinMode(previuse_page_pin, INPUT_PULLUP);
    4300:	62 e0       	ldi	r22, 0x02	; 2
    4302:	89 e0       	ldi	r24, 0x09	; 9
    4304:	0e 94 3a 02 	call	0x474	; 0x474 <pinMode>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1468
  pinMode(increase_pin, INPUT_PULLUP);
    4308:	62 e0       	ldi	r22, 0x02	; 2
    430a:	8a e0       	ldi	r24, 0x0A	; 10
    430c:	0e 94 3a 02 	call	0x474	; 0x474 <pinMode>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1469
  pinMode(decrease_pin, INPUT_PULLUP);
    4310:	62 e0       	ldi	r22, 0x02	; 2
    4312:	8b e0       	ldi	r24, 0x0B	; 11
    4314:	0e 94 3a 02 	call	0x474	; 0x474 <pinMode>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1470
  pinMode(MUX_A, OUTPUT);
    4318:	61 e0       	ldi	r22, 0x01	; 1
    431a:	8c e2       	ldi	r24, 0x2C	; 44
    431c:	0e 94 3a 02 	call	0x474	; 0x474 <pinMode>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1471
  pinMode(MUX_B, OUTPUT);
    4320:	61 e0       	ldi	r22, 0x01	; 1
    4322:	8b e2       	ldi	r24, 0x2B	; 43
    4324:	0e 94 3a 02 	call	0x474	; 0x474 <pinMode>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1472
  pinMode(MUX_C, OUTPUT);
    4328:	61 e0       	ldi	r22, 0x01	; 1
    432a:	8a e2       	ldi	r24, 0x2A	; 42
    432c:	0e 94 3a 02 	call	0x474	; 0x474 <pinMode>
begin():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:63

// Public Methods //////////////////////////////////////////////////////////////

void TwoWire::begin(void)
{
  rxBufferIndex = 0;
    4330:	10 92 37 09 	sts	0x0937, r1	; 0x800937 <TwoWire::rxBufferIndex>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:64
  rxBufferLength = 0;
    4334:	10 92 36 09 	sts	0x0936, r1	; 0x800936 <TwoWire::rxBufferLength>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:66

  txBufferIndex = 0;
    4338:	10 92 f3 08 	sts	0x08F3, r1	; 0x8008f3 <TwoWire::txBufferIndex>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire/TwoWire.cpp:67
  txBufferLength = 0;
    433c:	10 92 15 09 	sts	0x0915, r1	; 0x800915 <TwoWire::txBufferLength>
twi_init():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:79
 * Output   none
 */
void twi_init(void)
{
  // initialize state
  twi_state = TWI_READY;
    4340:	10 92 f1 08 	sts	0x08F1, r1	; 0x8008f1 <twi_state>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:80
  twi_sendStop = true; // default value
    4344:	81 e0       	ldi	r24, 0x01	; 1
    4346:	80 93 f0 08 	sts	0x08F0, r24	; 0x8008f0 <twi_sendStop>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:81
  twi_inRepStart = false;
    434a:	10 92 e9 08 	sts	0x08E9, r1	; 0x8008e9 <twi_inRepStart>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:84

  // activate internal pullups for twi.
  digitalWrite(SDA, 1);
    434e:	61 e0       	ldi	r22, 0x01	; 1
    4350:	83 e1       	ldi	r24, 0x13	; 19
    4352:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:85
  digitalWrite(SCL, 1);
    4356:	61 e0       	ldi	r22, 0x01	; 1
    4358:	82 e1       	ldi	r24, 0x12	; 18
    435a:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:88

  // initialize twi prescaler and bit rate
  TWSR &= ~(_BV(TWPS0) | _BV(TWPS1));
    435e:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
    4362:	8c 7f       	andi	r24, 0xFC	; 252
    4364:	80 93 71 00 	sts	0x0071, r24	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:89
  TWBR = ((F_CPU / TWI_FREQ) - 16) / 2;
    4368:	8f e2       	ldi	r24, 0x2F	; 47
    436a:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:97
  SCL Frequency = CPU Clock Frequency / (16 + (2 * TWBR))
  note: TWBR should be 10 or higher for master mode
  It is 72 for a 16mhz Wiring board with 100kHz TWI */

  // enable twi module, acks, and twi interrupt
  TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWEA);
    436e:	85 e4       	ldi	r24, 0x45	; 69
    4370:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
twi_attachSlaveTxEvent():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:402
 * Input    function: callback function to use
 * Output   none
 */
void twi_attachSlaveTxEvent( void (*function)(void) )
{
  twi_onSlaveTransmit = function;
    4374:	8d e8       	ldi	r24, 0x8D	; 141
    4376:	93 e0       	ldi	r25, 0x03	; 3
    4378:	90 93 c2 08 	sts	0x08C2, r25	; 0x8008c2 <twi_onSlaveTransmit+0x1>
    437c:	80 93 c1 08 	sts	0x08C1, r24	; 0x8008c1 <twi_onSlaveTransmit>
twi_attachSlaveRxEvent():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\Wire\src\TwoWire\utility/twi.c:391
 * Input    function: callback function to use
 * Output   none
 */
void twi_attachSlaveRxEvent( void (*function)(uint8_t*, int) )
{
  twi_onSlaveReceive = function;
    4380:	8e e8       	ldi	r24, 0x8E	; 142
    4382:	93 e0       	ldi	r25, 0x03	; 3
    4384:	90 93 c0 08 	sts	0x08C0, r25	; 0x8008c0 <twi_onSlaveReceive+0x1>
    4388:	80 93 bf 08 	sts	0x08BF, r24	; 0x8008bf <twi_onSlaveReceive>
begin():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:121

void HardwareSerial::begin(unsigned long baud, byte config)
{
  // Try u2x mode first
  uint16_t baud_setting = (F_CPU / 4 / baud - 1) / 2;
  *_ucsra = 1 << U2X0;
    438c:	e0 91 21 0a 	lds	r30, 0x0A21	; 0x800a21 <Serial+0x10>
    4390:	f0 91 22 0a 	lds	r31, 0x0A22	; 0x800a22 <Serial+0x11>
    4394:	c0 83       	st	Z, r28
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:135
    *_ucsra = 0;
    baud_setting = (F_CPU / 8 / baud - 1) / 2;
  }

  // assign the baud_setting, a.k.a. ubrr (USART Baud Rate Register)
  *_ubrrh = baud_setting >> 8;
    4396:	e0 91 1d 0a 	lds	r30, 0x0A1D	; 0x800a1d <Serial+0xc>
    439a:	f0 91 1e 0a 	lds	r31, 0x0A1E	; 0x800a1e <Serial+0xd>
    439e:	10 82       	st	Z, r1
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:136
  *_ubrrl = baud_setting;
    43a0:	e0 91 1f 0a 	lds	r30, 0x0A1F	; 0x800a1f <Serial+0xe>
    43a4:	f0 91 20 0a 	lds	r31, 0x0A20	; 0x800a20 <Serial+0xf>
    43a8:	1b e0       	ldi	r17, 0x0B	; 11
    43aa:	10 83       	st	Z, r17
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:138

  _written = false;
    43ac:	10 92 29 0a 	sts	0x0A29, r1	; 0x800a29 <Serial+0x18>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:146
#if defined(__AVR_ATmega8__) || defined(__AVR_ATmega8515__) || defined(__AVR_ATmega162__) \
|| defined(__AVR_ATmega8535__) || defined(__AVR_ATmega16__)|| defined(__AVR_ATmega32__)   \
|| defined(__AVR_ATmega162__)
  config |= 0x80; // select UCSRC register (shared with UBRRH)
#endif
  *_ucsrc = config;
    43b0:	e0 91 25 0a 	lds	r30, 0x0A25	; 0x800a25 <Serial+0x14>
    43b4:	f0 91 26 0a 	lds	r31, 0x0A26	; 0x800a26 <Serial+0x15>
    43b8:	d6 e0       	ldi	r29, 0x06	; 6
    43ba:	d0 83       	st	Z, r29
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:148
  
  *_ucsrb |= _BV(RXEN0) | _BV(TXEN0) | _BV(RXCIE0);
    43bc:	e0 91 23 0a 	lds	r30, 0x0A23	; 0x800a23 <Serial+0x12>
    43c0:	f0 91 24 0a 	lds	r31, 0x0A24	; 0x800a24 <Serial+0x13>
    43c4:	80 81       	ld	r24, Z
    43c6:	88 69       	ori	r24, 0x98	; 152
    43c8:	80 83       	st	Z, r24
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:149
  *_ucsrb &= ~_BV(UDRIE0);
    43ca:	e0 91 23 0a 	lds	r30, 0x0A23	; 0x800a23 <Serial+0x12>
    43ce:	f0 91 24 0a 	lds	r31, 0x0A24	; 0x800a24 <Serial+0x13>
    43d2:	80 81       	ld	r24, Z
    43d4:	8f 7d       	andi	r24, 0xDF	; 223
    43d6:	80 83       	st	Z, r24
dxl_init():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:253
    delay(10);
}

void dxl_init(long int baudRate)
{
    pinMode(M_TX_PIN, OUTPUT);
    43d8:	61 e0       	ldi	r22, 0x01	; 1
    43da:	85 e1       	ldi	r24, 0x15	; 21
    43dc:	0e 94 3a 02 	call	0x474	; 0x474 <pinMode>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_DXL2023.h:254
    pinMode(M_DIR_PIN, OUTPUT);
    43e0:	61 e0       	ldi	r22, 0x01	; 1
    43e2:	86 e1       	ldi	r24, 0x16	; 22
    43e4:	0e 94 3a 02 	call	0x474	; 0x474 <pinMode>
begin():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:121

void HardwareSerial::begin(unsigned long baud, byte config)
{
  // Try u2x mode first
  uint16_t baud_setting = (F_CPU / 4 / baud - 1) / 2;
  *_ucsra = 1 << U2X0;
    43e8:	e0 91 84 09 	lds	r30, 0x0984	; 0x800984 <Serial1+0x10>
    43ec:	f0 91 85 09 	lds	r31, 0x0985	; 0x800985 <Serial1+0x11>
    43f0:	c0 83       	st	Z, r28
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:135
    *_ucsra = 0;
    baud_setting = (F_CPU / 8 / baud - 1) / 2;
  }

  // assign the baud_setting, a.k.a. ubrr (USART Baud Rate Register)
  *_ubrrh = baud_setting >> 8;
    43f2:	e0 91 80 09 	lds	r30, 0x0980	; 0x800980 <Serial1+0xc>
    43f6:	f0 91 81 09 	lds	r31, 0x0981	; 0x800981 <Serial1+0xd>
    43fa:	10 82       	st	Z, r1
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:136
  *_ubrrl = baud_setting;
    43fc:	e0 91 82 09 	lds	r30, 0x0982	; 0x800982 <Serial1+0xe>
    4400:	f0 91 83 09 	lds	r31, 0x0983	; 0x800983 <Serial1+0xf>
    4404:	10 83       	st	Z, r17
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:138

  _written = false;
    4406:	10 92 8c 09 	sts	0x098C, r1	; 0x80098c <Serial1+0x18>
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:146
#if defined(__AVR_ATmega8__) || defined(__AVR_ATmega8515__) || defined(__AVR_ATmega162__) \
|| defined(__AVR_ATmega8535__) || defined(__AVR_ATmega16__)|| defined(__AVR_ATmega32__)   \
|| defined(__AVR_ATmega162__)
  config |= 0x80; // select UCSRC register (shared with UBRRH)
#endif
  *_ucsrc = config;
    440a:	e0 91 88 09 	lds	r30, 0x0988	; 0x800988 <Serial1+0x14>
    440e:	f0 91 89 09 	lds	r31, 0x0989	; 0x800989 <Serial1+0x15>
    4412:	d0 83       	st	Z, r29
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:148
  
  *_ucsrb |= _BV(RXEN0) | _BV(TXEN0) | _BV(RXCIE0);
    4414:	e0 91 86 09 	lds	r30, 0x0986	; 0x800986 <Serial1+0x12>
    4418:	f0 91 87 09 	lds	r31, 0x0987	; 0x800987 <Serial1+0x13>
    441c:	80 81       	ld	r24, Z
    441e:	88 69       	ori	r24, 0x98	; 152
    4420:	80 83       	st	Z, r24
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/HardwareSerial.cpp:149
  *_ucsrb &= ~_BV(UDRIE0);
    4422:	e0 91 86 09 	lds	r30, 0x0986	; 0x800986 <Serial1+0x12>
    4426:	f0 91 87 09 	lds	r31, 0x0987	; 0x800987 <Serial1+0x13>
    442a:	80 81       	ld	r24, Z
    442c:	8f 7d       	andi	r24, 0xDF	; 223
    442e:	80 83       	st	Z, r24
robot_setup():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1477

  Wire.begin();
  Serial.begin(115200);
  dxl_init(115200);
  lcd.begin(20, 4);
    4430:	64 e0       	ldi	r22, 0x04	; 4
    4432:	84 e1       	ldi	r24, 0x14	; 20
    4434:	0e 94 fd 05 	call	0xbfa	; 0xbfa <LiquidCrystal::begin(unsigned char, unsigned char, unsigned char) [clone .constprop.36]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1478
  delay(800);
    4438:	60 e2       	ldi	r22, 0x20	; 32
    443a:	73 e0       	ldi	r23, 0x03	; 3
    443c:	80 e0       	ldi	r24, 0x00	; 0
    443e:	90 e0       	ldi	r25, 0x00	; 0
    4440:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <delay>
setup():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_main_code_2023.ino:13
{

  robot_setup();

  //eeprom set in code
  T90=136;spd=255;range_value=20;
    4444:	88 e8       	ldi	r24, 0x88	; 136
    4446:	90 e0       	ldi	r25, 0x00	; 0
    4448:	90 93 e2 08 	sts	0x08E2, r25	; 0x8008e2 <T90+0x1>
    444c:	80 93 e1 08 	sts	0x08E1, r24	; 0x8008e1 <T90>
    4450:	8f ef       	ldi	r24, 0xFF	; 255
    4452:	90 e0       	ldi	r25, 0x00	; 0
    4454:	90 93 e0 08 	sts	0x08E0, r25	; 0x8008e0 <spd+0x1>
    4458:	80 93 df 08 	sts	0x08DF, r24	; 0x8008df <spd>
    445c:	84 e1       	ldi	r24, 0x14	; 20
    445e:	90 e0       	ldi	r25, 0x00	; 0
    4460:	90 93 de 08 	sts	0x08DE, r25	; 0x8008de <range_value+0x1>
    4464:	80 93 dd 08 	sts	0x08DD, r24	; 0x8008dd <range_value>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_main_code_2023.ino:14
  EEPROM_write_int(T90_address, T90);
    4468:	68 e8       	ldi	r22, 0x88	; 136
    446a:	70 e0       	ldi	r23, 0x00	; 0
    446c:	88 e9       	ldi	r24, 0x98	; 152
    446e:	90 e0       	ldi	r25, 0x00	; 0
    4470:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_main_code_2023.ino:15
  EEPROM_write_int(spd_address, spd);
    4474:	60 91 df 08 	lds	r22, 0x08DF	; 0x8008df <spd>
    4478:	70 91 e0 08 	lds	r23, 0x08E0	; 0x8008e0 <spd+0x1>
    447c:	86 e9       	ldi	r24, 0x96	; 150
    447e:	90 e0       	ldi	r25, 0x00	; 0
    4480:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_main_code_2023.ino:16
  EEPROM_write_int(range_address, range_value);
    4484:	60 91 dd 08 	lds	r22, 0x08DD	; 0x8008dd <range_value>
    4488:	70 91 de 08 	lds	r23, 0x08DE	; 0x8008de <range_value+0x1>
    448c:	8a e9       	ldi	r24, 0x9A	; 154
    448e:	90 e0       	ldi	r25, 0x00	; 0
    4490:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_main_code_2023.ino:19
  
  //compass eeprom
  DN=96,DE=188,DS=277;
    4494:	80 e6       	ldi	r24, 0x60	; 96
    4496:	90 e0       	ldi	r25, 0x00	; 0
    4498:	90 93 dc 08 	sts	0x08DC, r25	; 0x8008dc <DN+0x1>
    449c:	80 93 db 08 	sts	0x08DB, r24	; 0x8008db <DN>
    44a0:	8c eb       	ldi	r24, 0xBC	; 188
    44a2:	90 e0       	ldi	r25, 0x00	; 0
    44a4:	90 93 da 08 	sts	0x08DA, r25	; 0x8008da <DE+0x1>
    44a8:	80 93 d9 08 	sts	0x08D9, r24	; 0x8008d9 <DE>
    44ac:	85 e1       	ldi	r24, 0x15	; 21
    44ae:	91 e0       	ldi	r25, 0x01	; 1
    44b0:	90 93 d8 08 	sts	0x08D8, r25	; 0x8008d8 <DS+0x1>
    44b4:	80 93 d7 08 	sts	0x08D7, r24	; 0x8008d7 <DS>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_main_code_2023.ino:20
  EEPROM_write_int(DN_address, DN);
    44b8:	60 e6       	ldi	r22, 0x60	; 96
    44ba:	70 e0       	ldi	r23, 0x00	; 0
    44bc:	8c e9       	ldi	r24, 0x9C	; 156
    44be:	90 e0       	ldi	r25, 0x00	; 0
    44c0:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_main_code_2023.ino:21
  EEPROM_write_int(DE_address, DE);
    44c4:	60 91 d9 08 	lds	r22, 0x08D9	; 0x8008d9 <DE>
    44c8:	70 91 da 08 	lds	r23, 0x08DA	; 0x8008da <DE+0x1>
    44cc:	8e e9       	ldi	r24, 0x9E	; 158
    44ce:	90 e0       	ldi	r25, 0x00	; 0
    44d0:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_main_code_2023.ino:22
  EEPROM_write_int(DS_address, DS);
    44d4:	60 91 d7 08 	lds	r22, 0x08D7	; 0x8008d7 <DS>
    44d8:	70 91 d8 08 	lds	r23, 0x08D8	; 0x8008d8 <DS+0x1>
    44dc:	80 ea       	ldi	r24, 0xA0	; 160
    44de:	90 e0       	ldi	r25, 0x00	; 0
    44e0:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_main_code_2023.ino:25

  // servo positions
  basket_up=275,basket_normal=500,arm_normal=660,arm_down=190,arm_dropping=800,gripper_close=900,gripper_open=590;
    44e4:	84 ef       	ldi	r24, 0xF4	; 244
    44e6:	91 e0       	ldi	r25, 0x01	; 1
    44e8:	90 93 d6 08 	sts	0x08D6, r25	; 0x8008d6 <basket_normal+0x1>
    44ec:	80 93 d5 08 	sts	0x08D5, r24	; 0x8008d5 <basket_normal>
    44f0:	84 e9       	ldi	r24, 0x94	; 148
    44f2:	92 e0       	ldi	r25, 0x02	; 2
    44f4:	90 93 d4 08 	sts	0x08D4, r25	; 0x8008d4 <arm_normal+0x1>
    44f8:	80 93 d3 08 	sts	0x08D3, r24	; 0x8008d3 <arm_normal>
    44fc:	8e eb       	ldi	r24, 0xBE	; 190
    44fe:	90 e0       	ldi	r25, 0x00	; 0
    4500:	90 93 d2 08 	sts	0x08D2, r25	; 0x8008d2 <arm_down+0x1>
    4504:	80 93 d1 08 	sts	0x08D1, r24	; 0x8008d1 <arm_down>
    4508:	80 e2       	ldi	r24, 0x20	; 32
    450a:	93 e0       	ldi	r25, 0x03	; 3
    450c:	90 93 d0 08 	sts	0x08D0, r25	; 0x8008d0 <arm_dropping+0x1>
    4510:	80 93 cf 08 	sts	0x08CF, r24	; 0x8008cf <arm_dropping>
    4514:	84 e8       	ldi	r24, 0x84	; 132
    4516:	93 e0       	ldi	r25, 0x03	; 3
    4518:	90 93 ce 08 	sts	0x08CE, r25	; 0x8008ce <gripper_close+0x1>
    451c:	80 93 cd 08 	sts	0x08CD, r24	; 0x8008cd <gripper_close>
    4520:	8e e4       	ldi	r24, 0x4E	; 78
    4522:	92 e0       	ldi	r25, 0x02	; 2
    4524:	90 93 cc 08 	sts	0x08CC, r25	; 0x8008cc <gripper_open+0x1>
    4528:	80 93 cb 08 	sts	0x08CB, r24	; 0x8008cb <gripper_open>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_main_code_2023.ino:26
  EEPROM_write_int(basket_up_address, basket_up);
    452c:	63 e1       	ldi	r22, 0x13	; 19
    452e:	71 e0       	ldi	r23, 0x01	; 1
    4530:	84 ea       	ldi	r24, 0xA4	; 164
    4532:	90 e0       	ldi	r25, 0x00	; 0
    4534:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_main_code_2023.ino:27
  EEPROM_write_int(basket_normal_address, basket_normal);
    4538:	60 91 d5 08 	lds	r22, 0x08D5	; 0x8008d5 <basket_normal>
    453c:	70 91 d6 08 	lds	r23, 0x08D6	; 0x8008d6 <basket_normal+0x1>
    4540:	86 ea       	ldi	r24, 0xA6	; 166
    4542:	90 e0       	ldi	r25, 0x00	; 0
    4544:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_main_code_2023.ino:28
  EEPROM_write_int(arm_normal_address, arm_normal);
    4548:	60 91 d3 08 	lds	r22, 0x08D3	; 0x8008d3 <arm_normal>
    454c:	70 91 d4 08 	lds	r23, 0x08D4	; 0x8008d4 <arm_normal+0x1>
    4550:	88 ea       	ldi	r24, 0xA8	; 168
    4552:	90 e0       	ldi	r25, 0x00	; 0
    4554:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_main_code_2023.ino:29
  EEPROM_write_int(arm_down_address, arm_down);
    4558:	60 91 d1 08 	lds	r22, 0x08D1	; 0x8008d1 <arm_down>
    455c:	70 91 d2 08 	lds	r23, 0x08D2	; 0x8008d2 <arm_down+0x1>
    4560:	8a ea       	ldi	r24, 0xAA	; 170
    4562:	90 e0       	ldi	r25, 0x00	; 0
    4564:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_main_code_2023.ino:30
  EEPROM_write_int(arm_dropping_address, arm_dropping);
    4568:	60 91 cf 08 	lds	r22, 0x08CF	; 0x8008cf <arm_dropping>
    456c:	70 91 d0 08 	lds	r23, 0x08D0	; 0x8008d0 <arm_dropping+0x1>
    4570:	8c ea       	ldi	r24, 0xAC	; 172
    4572:	90 e0       	ldi	r25, 0x00	; 0
    4574:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_main_code_2023.ino:31
  EEPROM_write_int(gripper_close_address, gripper_close);
    4578:	60 91 cd 08 	lds	r22, 0x08CD	; 0x8008cd <gripper_close>
    457c:	70 91 ce 08 	lds	r23, 0x08CE	; 0x8008ce <gripper_close+0x1>
    4580:	8e ea       	ldi	r24, 0xAE	; 174
    4582:	90 e0       	ldi	r25, 0x00	; 0
    4584:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_main_code_2023.ino:32
  EEPROM_write_int(gripper_open_address, gripper_open);
    4588:	60 91 cb 08 	lds	r22, 0x08CB	; 0x8008cb <gripper_open>
    458c:	70 91 cc 08 	lds	r23, 0x08CC	; 0x8008cc <gripper_open+0x1>
    4590:	80 eb       	ldi	r24, 0xB0	; 176
    4592:	90 e0       	ldi	r25, 0x00	; 0
    4594:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
menu():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1337
}

void menu(void) {
  static unsigned char page = 1, last_page = 6;
  int battery;
  lcd.clear();
    4598:	0e 94 f6 05 	call	0xbec	; 0xbec <LiquidCrystal::clear() [clone .constprop.38]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1338
  lcd.print("Error: check switch");
    459c:	88 e6       	ldi	r24, 0x68	; 104
    459e:	96 e0       	ldi	r25, 0x06	; 6
    45a0:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1340

  lcd.setCursor(0, 1);
    45a4:	61 e0       	ldi	r22, 0x01	; 1
    45a6:	80 e0       	ldi	r24, 0x00	; 0
    45a8:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1341
  lcd.printf("SBL=%d   SBR=%d", SBL, SBR);
    45ac:	86 e2       	ldi	r24, 0x26	; 38
    45ae:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    45b2:	ec 01       	movw	r28, r24
    45b4:	85 e2       	ldi	r24, 0x25	; 37
    45b6:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    45ba:	df 93       	push	r29
    45bc:	cf 93       	push	r28
    45be:	9f 93       	push	r25
    45c0:	8f 93       	push	r24
    45c2:	8c e7       	ldi	r24, 0x7C	; 124
    45c4:	96 e0       	ldi	r25, 0x06	; 6
    45c6:	9f 93       	push	r25
    45c8:	8f 93       	push	r24
    45ca:	ca eb       	ldi	r28, 0xBA	; 186
    45cc:	da e0       	ldi	r29, 0x0A	; 10
    45ce:	df 93       	push	r29
    45d0:	cf 93       	push	r28
    45d2:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1343

  lcd.setCursor(0, 3);
    45d6:	63 e0       	ldi	r22, 0x03	; 3
    45d8:	80 e0       	ldi	r24, 0x00	; 0
    45da:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1344
  lcd.printf("p_p=%d next_p=%d Ent=%d", previuse_page, next_page, start);
    45de:	86 e0       	ldi	r24, 0x06	; 6
    45e0:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    45e4:	f8 2e       	mov	r15, r24
    45e6:	e9 2e       	mov	r14, r25
    45e8:	88 e0       	ldi	r24, 0x08	; 8
    45ea:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    45ee:	18 2f       	mov	r17, r24
    45f0:	09 2f       	mov	r16, r25
    45f2:	89 e0       	ldi	r24, 0x09	; 9
    45f4:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    45f8:	ef 92       	push	r14
    45fa:	ff 92       	push	r15
    45fc:	0f 93       	push	r16
    45fe:	1f 93       	push	r17
    4600:	9f 93       	push	r25
    4602:	8f 93       	push	r24
    4604:	8c e8       	ldi	r24, 0x8C	; 140
    4606:	96 e0       	ldi	r25, 0x06	; 6
    4608:	9f 93       	push	r25
    460a:	8f 93       	push	r24
    460c:	df 93       	push	r29
    460e:	cf 93       	push	r28
    4610:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1346

  if (start == 0 || next_page == 0 || previuse_page == 0 || SBL == 0 || SBR == 0)
    4614:	86 e0       	ldi	r24, 0x06	; 6
    4616:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    461a:	2d b7       	in	r18, 0x3d	; 61
    461c:	3e b7       	in	r19, 0x3e	; 62
    461e:	2e 5e       	subi	r18, 0xEE	; 238
    4620:	3f 4f       	sbci	r19, 0xFF	; 255
    4622:	0f b6       	in	r0, 0x3f	; 63
    4624:	f8 94       	cli
    4626:	3e bf       	out	0x3e, r19	; 62
    4628:	0f be       	out	0x3f, r0	; 63
    462a:	2d bf       	out	0x3d, r18	; 61
    462c:	89 2b       	or	r24, r25
    462e:	09 f0       	breq	.+2      	; 0x4632 <main+0x3c6>
    4630:	18 c3       	rjmp	.+1584   	; 0x4c62 <main+0x9f6>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1347
    beep(10);
    4632:	8a e0       	ldi	r24, 0x0A	; 10
    4634:	90 e0       	ldi	r25, 0x00	; 0
    4636:	0e 94 65 08 	call	0x10ca	; 0x10ca <beep(int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1348
  lcd.clear();
    463a:	0e 94 f6 05 	call	0xbec	; 0xbec <LiquidCrystal::clear() [clone .constprop.38]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1356
      while (next_page == 0)
        ;
      delay(50);
      page++;
      if (page > last_page)
        page = 1;
    463e:	dd 24       	eor	r13, r13
    4640:	d3 94       	inc	r13
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1365
      while (previuse_page == 0)
        ;
      delay(50);
      page--;
      if (page < 1)
        page = last_page;
    4642:	56 e0       	ldi	r21, 0x06	; 6
    4644:	c5 2e       	mov	r12, r21
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1400
        lcd.print("Rescue Team");
        beep(1);
        break;
      }
      battery = analogRead(A7);
      battery = (battery * 5 / 102.3) * 3.1;
    4646:	65 e0       	ldi	r22, 0x05	; 5
    4648:	b6 2e       	mov	r11, r22
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1402
      lcd.setCursor(8, 0);
      lcd.printf("bat=%3d ", battery);
    464a:	cf ef       	ldi	r28, 0xFF	; 255
    464c:	d6 e0       	ldi	r29, 0x06	; 6
    464e:	0a eb       	ldi	r16, 0xBA	; 186
    4650:	1a e0       	ldi	r17, 0x0A	; 10
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1350

  if (start == 0 || next_page == 0 || previuse_page == 0 || SBL == 0 || SBR == 0)
    beep(10);
  lcd.clear();
  while (1) {
    if (next_page == 0) {
    4652:	88 e0       	ldi	r24, 0x08	; 8
    4654:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    4658:	89 2b       	or	r24, r25
    465a:	a9 f4       	brne	.+42     	; 0x4686 <main+0x41a>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1351
      while (next_page == 0)
    465c:	88 e0       	ldi	r24, 0x08	; 8
    465e:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    4662:	89 2b       	or	r24, r25
    4664:	d9 f3       	breq	.-10     	; 0x465c <main+0x3f0>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1353
        ;
      delay(50);
    4666:	62 e3       	ldi	r22, 0x32	; 50
    4668:	70 e0       	ldi	r23, 0x00	; 0
    466a:	80 e0       	ldi	r24, 0x00	; 0
    466c:	90 e0       	ldi	r25, 0x00	; 0
    466e:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <delay>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1354
      page++;
    4672:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <menu()::page>
    4676:	8f 5f       	subi	r24, 0xFF	; 255
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1355
      if (page > last_page)
    4678:	87 30       	cpi	r24, 0x07	; 7
    467a:	08 f0       	brcs	.+2      	; 0x467e <main+0x412>
    467c:	0b c3       	rjmp	.+1558   	; 0x4c94 <main+0xa28>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1354
  while (1) {
    if (next_page == 0) {
      while (next_page == 0)
        ;
      delay(50);
      page++;
    467e:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <menu()::page>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1357
      if (page > last_page)
        page = 1;
      lcd.clear();
    4682:	0e 94 f6 05 	call	0xbec	; 0xbec <LiquidCrystal::clear() [clone .constprop.38]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1359
    }
    if (previuse_page == 0) {
    4686:	89 e0       	ldi	r24, 0x09	; 9
    4688:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    468c:	89 2b       	or	r24, r25
    468e:	a1 f4       	brne	.+40     	; 0x46b8 <main+0x44c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1360
      while (previuse_page == 0)
    4690:	89 e0       	ldi	r24, 0x09	; 9
    4692:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    4696:	89 2b       	or	r24, r25
    4698:	d9 f3       	breq	.-10     	; 0x4690 <main+0x424>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1362
        ;
      delay(50);
    469a:	62 e3       	ldi	r22, 0x32	; 50
    469c:	70 e0       	ldi	r23, 0x00	; 0
    469e:	80 e0       	ldi	r24, 0x00	; 0
    46a0:	90 e0       	ldi	r25, 0x00	; 0
    46a2:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <delay>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1363
      page--;
    46a6:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <menu()::page>
    46aa:	81 50       	subi	r24, 0x01	; 1
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1364
      if (page < 1)
    46ac:	09 f4       	brne	.+2      	; 0x46b0 <main+0x444>
    46ae:	f5 c2       	rjmp	.+1514   	; 0x4c9a <main+0xa2e>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1363
    }
    if (previuse_page == 0) {
      while (previuse_page == 0)
        ;
      delay(50);
      page--;
    46b0:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <menu()::page>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1366
      if (page < 1)
        page = last_page;
      lcd.clear();
    46b4:	0e 94 f6 05 	call	0xbec	; 0xbec <LiquidCrystal::clear() [clone .constprop.38]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1368
    }
    if (page <= 4) {
    46b8:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <menu()::page>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1369
      lcd.setCursor(2, 0);
    46bc:	60 e0       	ldi	r22, 0x00	; 0
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1368
      page--;
      if (page < 1)
        page = last_page;
      lcd.clear();
    }
    if (page <= 4) {
    46be:	85 30       	cpi	r24, 0x05	; 5
    46c0:	08 f0       	brcs	.+2      	; 0x46c4 <main+0x458>
    46c2:	ee c2       	rjmp	.+1500   	; 0x4ca0 <main+0xa34>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1369
      lcd.setCursor(2, 0);
    46c4:	82 e0       	ldi	r24, 0x02	; 2
    46c6:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1370
      lcd.print("Start ");
    46ca:	84 ea       	ldi	r24, 0xA4	; 164
    46cc:	96 e0       	ldi	r25, 0x06	; 6
    46ce:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1371
      lcd.setCursor(2, 1);
    46d2:	61 e0       	ldi	r22, 0x01	; 1
    46d4:	82 e0       	ldi	r24, 0x02	; 2
    46d6:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1372
      lcd.print("Test Sensor   ");
    46da:	8b ea       	ldi	r24, 0xAB	; 171
    46dc:	96 e0       	ldi	r25, 0x06	; 6
    46de:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1373
      lcd.setCursor(2, 2);
    46e2:	62 e0       	ldi	r22, 0x02	; 2
    46e4:	82 e0       	ldi	r24, 0x02	; 2
    46e6:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1374
      lcd.print("Setup         ");
    46ea:	8a eb       	ldi	r24, 0xBA	; 186
    46ec:	96 e0       	ldi	r25, 0x06	; 6
    46ee:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1375
      lcd.setCursor(2, 3);
    46f2:	63 e0       	ldi	r22, 0x03	; 3
    46f4:	82 e0       	ldi	r24, 0x02	; 2
    46f6:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1376
      lcd.print("Test Color    ");
    46fa:	89 ec       	ldi	r24, 0xC9	; 201
    46fc:	96 e0       	ldi	r25, 0x06	; 6
    46fe:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1377
      lcd.setCursor(0, page - 1);
    4702:	60 91 05 01 	lds	r22, 0x0105	; 0x800105 <menu()::page>
    4706:	61 50       	subi	r22, 0x01	; 1
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1384
    } else if (page > 4) {
      lcd.setCursor(2, 0);
      lcd.print("Test Motor   ");
      lcd.setCursor(2, 1);
      lcd.print("color calib ");
      lcd.setCursor(0, page - 5);
    4708:	80 e0       	ldi	r24, 0x00	; 0
    470a:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1385
      lcd.print("> ");
    470e:	81 eb       	ldi	r24, 0xB1	; 177
    4710:	97 e0       	ldi	r25, 0x07	; 7
    4712:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1388
    }

    if (page == 1)  // start
    4716:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <menu()::page>
    471a:	81 30       	cpi	r24, 0x01	; 1
    471c:	09 f0       	breq	.+2      	; 0x4720 <main+0x4b4>
    471e:	1f c3       	rjmp	.+1598   	; 0x4d5e <main+0xaf2>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1390
    {
      if (start == 0) {
    4720:	86 e0       	ldi	r24, 0x06	; 6
    4722:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    4726:	89 2b       	or	r24, r25
    4728:	09 f0       	breq	.+2      	; 0x472c <main+0x4c0>
    472a:	cd c2       	rjmp	.+1434   	; 0x4cc6 <main+0xa5a>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1391
        while (start == 0)
    472c:	86 e0       	ldi	r24, 0x06	; 6
    472e:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    4732:	89 2b       	or	r24, r25
    4734:	d9 f3       	breq	.-10     	; 0x472c <main+0x4c0>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1393
          ;
        lcd.clear();
    4736:	0e 94 f6 05 	call	0xbec	; 0xbec <LiquidCrystal::clear() [clone .constprop.38]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1395

        lcd.print("Rescue Team");
    473a:	83 ef       	ldi	r24, 0xF3	; 243
    473c:	96 e0       	ldi	r25, 0x06	; 6
    473e:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1396
        beep(1);
    4742:	81 e0       	ldi	r24, 0x01	; 1
    4744:	90 e0       	ldi	r25, 0x00	; 0
    4746:	0e 94 65 08 	call	0x10ca	; 0x10ca <beep(int)>
setup():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_main_code_2023.ino:39
  //ev zone setup
  barband[0]=0;barband[1]=0;barband[2]=0;barband[3]=0;
  
  menu();
  //move_arm(arm_normal,500);move_gripper(gripper_open,500);delay(1500);
  go(60,60);
    474a:	6c e3       	ldi	r22, 0x3C	; 60
    474c:	70 e0       	ldi	r23, 0x00	; 0
    474e:	8c e3       	ldi	r24, 0x3C	; 60
    4750:	90 e0       	ldi	r25, 0x00	; 0
    4752:	0e 94 07 07 	call	0xe0e	; 0xe0e <go(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_main_code_2023.ino:40
  while ((SM + SL1 + SL2 + SL3 + SL4 + SL5 + SL6 + SR1 + SR2 + SR3 + SR4 + SR5 + SR6) > 5);
    4756:	40 e0       	ldi	r20, 0x00	; 0
    4758:	60 e0       	ldi	r22, 0x00	; 0
    475a:	80 e0       	ldi	r24, 0x00	; 0
    475c:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    4760:	ec 01       	movw	r28, r24
    4762:	40 e0       	ldi	r20, 0x00	; 0
    4764:	60 e0       	ldi	r22, 0x00	; 0
    4766:	81 e0       	ldi	r24, 0x01	; 1
    4768:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    476c:	c8 0f       	add	r28, r24
    476e:	d9 1f       	adc	r29, r25
    4770:	40 e0       	ldi	r20, 0x00	; 0
    4772:	60 e0       	ldi	r22, 0x00	; 0
    4774:	82 e0       	ldi	r24, 0x02	; 2
    4776:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    477a:	c8 0f       	add	r28, r24
    477c:	d9 1f       	adc	r29, r25
    477e:	40 e0       	ldi	r20, 0x00	; 0
    4780:	60 e0       	ldi	r22, 0x00	; 0
    4782:	83 e0       	ldi	r24, 0x03	; 3
    4784:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    4788:	c8 0f       	add	r28, r24
    478a:	d9 1f       	adc	r29, r25
    478c:	40 e0       	ldi	r20, 0x00	; 0
    478e:	60 e0       	ldi	r22, 0x00	; 0
    4790:	84 e0       	ldi	r24, 0x04	; 4
    4792:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    4796:	c8 0f       	add	r28, r24
    4798:	d9 1f       	adc	r29, r25
    479a:	40 e0       	ldi	r20, 0x00	; 0
    479c:	60 e0       	ldi	r22, 0x00	; 0
    479e:	85 e0       	ldi	r24, 0x05	; 5
    47a0:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    47a4:	c8 0f       	add	r28, r24
    47a6:	d9 1f       	adc	r29, r25
    47a8:	40 e0       	ldi	r20, 0x00	; 0
    47aa:	60 e0       	ldi	r22, 0x00	; 0
    47ac:	86 e0       	ldi	r24, 0x06	; 6
    47ae:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    47b2:	c8 0f       	add	r28, r24
    47b4:	d9 1f       	adc	r29, r25
    47b6:	40 e0       	ldi	r20, 0x00	; 0
    47b8:	61 e0       	ldi	r22, 0x01	; 1
    47ba:	81 e0       	ldi	r24, 0x01	; 1
    47bc:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    47c0:	c8 0f       	add	r28, r24
    47c2:	d9 1f       	adc	r29, r25
    47c4:	40 e0       	ldi	r20, 0x00	; 0
    47c6:	61 e0       	ldi	r22, 0x01	; 1
    47c8:	82 e0       	ldi	r24, 0x02	; 2
    47ca:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    47ce:	c8 0f       	add	r28, r24
    47d0:	d9 1f       	adc	r29, r25
    47d2:	40 e0       	ldi	r20, 0x00	; 0
    47d4:	61 e0       	ldi	r22, 0x01	; 1
    47d6:	83 e0       	ldi	r24, 0x03	; 3
    47d8:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    47dc:	c8 0f       	add	r28, r24
    47de:	d9 1f       	adc	r29, r25
    47e0:	40 e0       	ldi	r20, 0x00	; 0
    47e2:	61 e0       	ldi	r22, 0x01	; 1
    47e4:	84 e0       	ldi	r24, 0x04	; 4
    47e6:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    47ea:	c8 0f       	add	r28, r24
    47ec:	d9 1f       	adc	r29, r25
    47ee:	40 e0       	ldi	r20, 0x00	; 0
    47f0:	61 e0       	ldi	r22, 0x01	; 1
    47f2:	85 e0       	ldi	r24, 0x05	; 5
    47f4:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    47f8:	c8 0f       	add	r28, r24
    47fa:	d9 1f       	adc	r29, r25
    47fc:	40 e0       	ldi	r20, 0x00	; 0
    47fe:	61 e0       	ldi	r22, 0x01	; 1
    4800:	86 e0       	ldi	r24, 0x06	; 6
    4802:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    4806:	8c 0f       	add	r24, r28
    4808:	9d 1f       	adc	r25, r29
    480a:	06 97       	sbiw	r24, 0x06	; 6
    480c:	0c f0       	brlt	.+2      	; 0x4810 <main+0x5a4>
    480e:	a3 cf       	rjmp	.-186    	; 0x4756 <main+0x4ea>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_main_code_2023.ino:41
  move(forward,T90/2);
    4810:	60 91 e1 08 	lds	r22, 0x08E1	; 0x8008e1 <T90>
    4814:	70 91 e2 08 	lds	r23, 0x08E2	; 0x8008e2 <T90+0x1>
    4818:	77 ff       	sbrs	r23, 7
    481a:	02 c0       	rjmp	.+4      	; 0x4820 <main+0x5b4>
    481c:	6f 5f       	subi	r22, 0xFF	; 255
    481e:	7f 4f       	sbci	r23, 0xFF	; 255
    4820:	75 95       	asr	r23
    4822:	67 95       	ror	r22
    4824:	44 eb       	ldi	r20, 0xB4	; 180
    4826:	50 e0       	ldi	r21, 0x00	; 0
    4828:	8a e0       	ldi	r24, 0x0A	; 10
    482a:	90 e0       	ldi	r25, 0x00	; 0
    482c:	0e 94 6c 07 	call	0xed8	; 0xed8 <move(int, int, int)>
track():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1774
      if (direction == Right) {
        move(Right, T90, 100);
      } else {
        move(Left, T90, 100);
      }
      move(forward, T90 / 6, 100);
    4830:	86 e0       	ldi	r24, 0x06	; 6
    4832:	88 2e       	mov	r8, r24
    4834:	91 2c       	mov	r9, r1
wlift():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1527
    }
    if (inter_cnt == 2) {
      move(Back, T90 / 2, 100);
      move_arm(345, 500);
      delay(300);  //arm_normal
      move(forward, T90 / 5, 50);
    4836:	95 e0       	ldi	r25, 0x05	; 5
    4838:	69 2e       	mov	r6, r25
    483a:	71 2c       	mov	r7, r1
loop():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_main_code_2023.ino:48




void loop(){
  linefollow();
    483c:	0e 94 db 07 	call	0xfb6	; 0xfb6 <linefollow()>
color_detection():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1939
*/
void color_detection() {
  int T90 = EEPROM_read_int(T90_address);
  int inter_detected = false;
  int deadend_detected = false;
  left_card = color_L;
    4840:	81 e0       	ldi	r24, 0x01	; 1
    4842:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <color(char)>
    4846:	08 2e       	mov	r0, r24
    4848:	00 0c       	add	r0, r0
    484a:	99 0b       	sbc	r25, r25
    484c:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <left_card+0x1>
    4850:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <left_card>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1940
  if (left_card != WHITE) {
    4854:	87 30       	cpi	r24, 0x07	; 7
    4856:	91 05       	cpc	r25, r1
    4858:	11 f4       	brne	.+4      	; 0x485e <main+0x5f2>
    485a:	0c 94 a6 2f 	jmp	0x5f4c	; 0x5f4c <main+0x1ce0>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1941
    if (left_card == GREEN) {
    485e:	01 97       	sbiw	r24, 0x01	; 1
    4860:	09 f0       	breq	.+2      	; 0x4864 <main+0x5f8>
    4862:	9d c0       	rjmp	.+314    	; 0x499e <main+0x732>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1942
        go(0, 0);
    4864:	70 e0       	ldi	r23, 0x00	; 0
    4866:	60 e0       	ldi	r22, 0x00	; 0
    4868:	90 e0       	ldi	r25, 0x00	; 0
    486a:	80 e0       	ldi	r24, 0x00	; 0
    486c:	0e 94 07 07 	call	0xe0e	; 0xe0e <go(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1943
      if (color_L == GREEN) {
    4870:	81 e0       	ldi	r24, 0x01	; 1
    4872:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <color(char)>
    4876:	81 30       	cpi	r24, 0x01	; 1
    4878:	09 f0       	breq	.+2      	; 0x487c <main+0x610>
    487a:	6a c1       	rjmp	.+724    	; 0x4b50 <main+0x8e4>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1944
        lcd.clear();
    487c:	0e 94 f6 05 	call	0xbec	; 0xbec <LiquidCrystal::clear() [clone .constprop.38]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1945
        lcd.print("Football");
    4880:	8c e1       	ldi	r24, 0x1C	; 28
    4882:	98 e0       	ldi	r25, 0x08	; 8
    4884:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
football():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1732
    delay(10);
    return vl_double_check(xv);
  } else return vl_dis;
}
void football() {
  int T90 = EEPROM_read_int(T90_address);
    4888:	88 e9       	ldi	r24, 0x98	; 152
    488a:	90 e0       	ldi	r25, 0x00	; 0
    488c:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    4890:	ec 01       	movw	r28, r24
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1736
  int arm_dropping = EEPROM_read_int(arm_dropping_address);
  int arm_normal = EEPROM_read_int(arm_normal_address);
  while (1) {
    linefollow();
    4892:	0e 94 db 07 	call	0xfb6	; 0xfb6 <linefollow()>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1737
    if (intersectionL && intersectionR) {
    4896:	40 e0       	ldi	r20, 0x00	; 0
    4898:	60 e0       	ldi	r22, 0x00	; 0
    489a:	80 e0       	ldi	r24, 0x00	; 0
    489c:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    48a0:	89 2b       	or	r24, r25
    48a2:	11 f4       	brne	.+4      	; 0x48a8 <main+0x63c>
    48a4:	0c 94 75 2c 	jmp	0x58ea	; 0x58ea <main+0x167e>
    48a8:	40 e0       	ldi	r20, 0x00	; 0
    48aa:	62 e0       	ldi	r22, 0x02	; 2
    48ac:	82 e0       	ldi	r24, 0x02	; 2
    48ae:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    48b2:	89 2b       	or	r24, r25
    48b4:	71 f3       	breq	.-36     	; 0x4892 <main+0x626>
    48b6:	40 e0       	ldi	r20, 0x00	; 0
    48b8:	60 e0       	ldi	r22, 0x00	; 0
    48ba:	80 e0       	ldi	r24, 0x00	; 0
    48bc:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    48c0:	89 2b       	or	r24, r25
    48c2:	11 f4       	brne	.+4      	; 0x48c8 <main+0x65c>
    48c4:	0c 94 89 2c 	jmp	0x5912	; 0x5912 <main+0x16a6>
    48c8:	40 e0       	ldi	r20, 0x00	; 0
    48ca:	63 e0       	ldi	r22, 0x03	; 3
    48cc:	82 e0       	ldi	r24, 0x02	; 2
    48ce:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    48d2:	89 2b       	or	r24, r25
    48d4:	f1 f2       	breq	.-68     	; 0x4892 <main+0x626>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1738
      go(0, 0);
    48d6:	70 e0       	ldi	r23, 0x00	; 0
    48d8:	60 e0       	ldi	r22, 0x00	; 0
    48da:	90 e0       	ldi	r25, 0x00	; 0
    48dc:	80 e0       	ldi	r24, 0x00	; 0
    48de:	0e 94 07 07 	call	0xe0e	; 0xe0e <go(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1739
      move(Back, T90 / 8, 100);
    48e2:	be 01       	movw	r22, r28
    48e4:	d7 ff       	sbrs	r29, 7
    48e6:	02 c0       	rjmp	.+4      	; 0x48ec <main+0x680>
    48e8:	69 5f       	subi	r22, 0xF9	; 249
    48ea:	7f 4f       	sbci	r23, 0xFF	; 255
    48ec:	13 e0       	ldi	r17, 0x03	; 3
    48ee:	75 95       	asr	r23
    48f0:	67 95       	ror	r22
    48f2:	1a 95       	dec	r17
    48f4:	e1 f7       	brne	.-8      	; 0x48ee <main+0x682>
    48f6:	44 e6       	ldi	r20, 0x64	; 100
    48f8:	50 e0       	ldi	r21, 0x00	; 0
    48fa:	8d e0       	ldi	r24, 0x0D	; 13
    48fc:	90 e0       	ldi	r25, 0x00	; 0
    48fe:	0e 94 6c 07 	call	0xed8	; 0xed8 <move(int, int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1740
      beep(3);
    4902:	83 e0       	ldi	r24, 0x03	; 3
    4904:	90 e0       	ldi	r25, 0x00	; 0
    4906:	0e 94 65 08 	call	0x10ca	; 0x10ca <beep(int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1742
      
        move(Right, T90 / 6, 100);
    490a:	ce 01       	movw	r24, r28
    490c:	b4 01       	movw	r22, r8
    490e:	0e 94 17 35 	call	0x6a2e	; 0x6a2e <__divmodhi4>
    4912:	8b 01       	movw	r16, r22
    4914:	44 e6       	ldi	r20, 0x64	; 100
    4916:	50 e0       	ldi	r21, 0x00	; 0
    4918:	8c e0       	ldi	r24, 0x0C	; 12
    491a:	90 e0       	ldi	r25, 0x00	; 0
    491c:	0e 94 6c 07 	call	0xed8	; 0xed8 <move(int, int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1743
        move(forward, T90 / 4, 60);
    4920:	be 01       	movw	r22, r28
    4922:	d7 ff       	sbrs	r29, 7
    4924:	02 c0       	rjmp	.+4      	; 0x492a <main+0x6be>
    4926:	6d 5f       	subi	r22, 0xFD	; 253
    4928:	7f 4f       	sbci	r23, 0xFF	; 255
    492a:	75 95       	asr	r23
    492c:	67 95       	ror	r22
    492e:	75 95       	asr	r23
    4930:	67 95       	ror	r22
    4932:	4c e3       	ldi	r20, 0x3C	; 60
    4934:	50 e0       	ldi	r21, 0x00	; 0
    4936:	8a e0       	ldi	r24, 0x0A	; 10
    4938:	90 e0       	ldi	r25, 0x00	; 0
    493a:	0e 94 6c 07 	call	0xed8	; 0xed8 <move(int, int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1744
        move_arm(550, 1000);
    493e:	68 ee       	ldi	r22, 0xE8	; 232
    4940:	73 e0       	ldi	r23, 0x03	; 3
    4942:	86 e2       	ldi	r24, 0x26	; 38
    4944:	92 e0       	ldi	r25, 0x02	; 2
    4946:	0e 94 c8 08 	call	0x1190	; 0x1190 <move_arm(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1745
        delay(1000);
    494a:	68 ee       	ldi	r22, 0xE8	; 232
    494c:	73 e0       	ldi	r23, 0x03	; 3
    494e:	80 e0       	ldi	r24, 0x00	; 0
    4950:	90 e0       	ldi	r25, 0x00	; 0
    4952:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <delay>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1746
        move_arm(100, 500);
    4956:	64 ef       	ldi	r22, 0xF4	; 244
    4958:	71 e0       	ldi	r23, 0x01	; 1
    495a:	84 e6       	ldi	r24, 0x64	; 100
    495c:	90 e0       	ldi	r25, 0x00	; 0
    495e:	0e 94 c8 08 	call	0x1190	; 0x1190 <move_arm(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1747
        delay(1000);
    4962:	68 ee       	ldi	r22, 0xE8	; 232
    4964:	73 e0       	ldi	r23, 0x03	; 3
    4966:	80 e0       	ldi	r24, 0x00	; 0
    4968:	90 e0       	ldi	r25, 0x00	; 0
    496a:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <delay>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1748
        move(Back, T90 / 6, 100);
    496e:	44 e6       	ldi	r20, 0x64	; 100
    4970:	50 e0       	ldi	r21, 0x00	; 0
    4972:	b8 01       	movw	r22, r16
    4974:	8d e0       	ldi	r24, 0x0D	; 13
    4976:	90 e0       	ldi	r25, 0x00	; 0
    4978:	0e 94 6c 07 	call	0xed8	; 0xed8 <move(int, int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1749
        move(Left, T90 * 2, 150);
    497c:	be 01       	movw	r22, r28
    497e:	66 0f       	add	r22, r22
    4980:	77 1f       	adc	r23, r23
    4982:	46 e9       	ldi	r20, 0x96	; 150
    4984:	50 e0       	ldi	r21, 0x00	; 0
    4986:	8b e0       	ldi	r24, 0x0B	; 11
    4988:	90 e0       	ldi	r25, 0x00	; 0
    498a:	0e 94 6c 07 	call	0xed8	; 0xed8 <move(int, int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1750
        go(60, 60);
    498e:	6c e3       	ldi	r22, 0x3C	; 60
    4990:	70 e0       	ldi	r23, 0x00	; 0
    4992:	8c e3       	ldi	r24, 0x3C	; 60
    4994:	90 e0       	ldi	r25, 0x00	; 0
    4996:	0e 94 07 07 	call	0xe0e	; 0xe0e <go(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1756
        break;
      
    }
  }

  get_back();
    499a:	0e 94 e4 0e 	call	0x1dc8	; 0x1dc8 <get_back()>
color_detection():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1949
        lcd.clear();
        lcd.print("Football");
        football();
      }
    }
    if (left_card == SILVER) {
    499e:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <left_card>
    49a2:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <left_card+0x1>
    49a6:	05 97       	sbiw	r24, 0x05	; 5
    49a8:	09 f0       	breq	.+2      	; 0x49ac <main+0x740>
    49aa:	d2 c0       	rjmp	.+420    	; 0x4b50 <main+0x8e4>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1950
      go(0, 0);
    49ac:	70 e0       	ldi	r23, 0x00	; 0
    49ae:	60 e0       	ldi	r22, 0x00	; 0
    49b0:	90 e0       	ldi	r25, 0x00	; 0
    49b2:	80 e0       	ldi	r24, 0x00	; 0
    49b4:	0e 94 07 07 	call	0xe0e	; 0xe0e <go(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1951
      if (color_L == SILVER) {
    49b8:	81 e0       	ldi	r24, 0x01	; 1
    49ba:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <color(char)>
    49be:	85 30       	cpi	r24, 0x05	; 5
    49c0:	11 f0       	breq	.+4      	; 0x49c6 <main+0x75a>
    49c2:	0c 94 f6 2d 	jmp	0x5bec	; 0x5bec <main+0x1980>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1952
        lcd.clear();
    49c6:	0e 94 f6 05 	call	0xbec	; 0xbec <LiquidCrystal::clear() [clone .constprop.38]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1953
        lcd.print("Obstacle");
    49ca:	85 e2       	ldi	r24, 0x25	; 37
    49cc:	98 e0       	ldi	r25, 0x08	; 8
    49ce:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
obstacle():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1833
  move(Left, T90 * 2, 120);
  go(60, 60);
  get_back();
}
void obstacle() {
  int T90 = EEPROM_read_int(T90_address);
    49d2:	88 e9       	ldi	r24, 0x98	; 152
    49d4:	90 e0       	ldi	r25, 0x00	; 0
    49d6:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    49da:	ec 01       	movw	r28, r24
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1835
  int inter_cnt = 0;  //intersection counting
  while (!intersectionL && !intersectionR) {
    49dc:	40 e0       	ldi	r20, 0x00	; 0
    49de:	60 e0       	ldi	r22, 0x00	; 0
    49e0:	80 e0       	ldi	r24, 0x00	; 0
    49e2:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    49e6:	89 2b       	or	r24, r25
    49e8:	09 f4       	brne	.+2      	; 0x49ec <main+0x780>
    49ea:	a7 c7       	rjmp	.+3918   	; 0x593a <main+0x16ce>
    49ec:	40 e0       	ldi	r20, 0x00	; 0
    49ee:	62 e0       	ldi	r22, 0x02	; 2
    49f0:	82 e0       	ldi	r24, 0x02	; 2
    49f2:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    49f6:	89 2b       	or	r24, r25
    49f8:	09 f4       	brne	.+2      	; 0x49fc <main+0x790>
    49fa:	af c7       	rjmp	.+3934   	; 0x595a <main+0x16ee>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1838
    linefollow();
  }
  go(0, 0);
    49fc:	70 e0       	ldi	r23, 0x00	; 0
    49fe:	60 e0       	ldi	r22, 0x00	; 0
    4a00:	90 e0       	ldi	r25, 0x00	; 0
    4a02:	80 e0       	ldi	r24, 0x00	; 0
    4a04:	0e 94 07 07 	call	0xe0e	; 0xe0e <go(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1840
  inter_cnt = 1;
  beep(2);
    4a08:	82 e0       	ldi	r24, 0x02	; 2
    4a0a:	90 e0       	ldi	r25, 0x00	; 0
    4a0c:	0e 94 65 08 	call	0x10ca	; 0x10ca <beep(int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1841
  move(forward, T90 / 8, 100);
    4a10:	be 01       	movw	r22, r28
    4a12:	d7 ff       	sbrs	r29, 7
    4a14:	02 c0       	rjmp	.+4      	; 0x4a1a <main+0x7ae>
    4a16:	69 5f       	subi	r22, 0xF9	; 249
    4a18:	7f 4f       	sbci	r23, 0xFF	; 255
    4a1a:	f3 e0       	ldi	r31, 0x03	; 3
    4a1c:	75 95       	asr	r23
    4a1e:	67 95       	ror	r22
    4a20:	fa 95       	dec	r31
    4a22:	e1 f7       	brne	.-8      	; 0x4a1c <main+0x7b0>
    4a24:	44 e6       	ldi	r20, 0x64	; 100
    4a26:	50 e0       	ldi	r21, 0x00	; 0
    4a28:	8a e0       	ldi	r24, 0x0A	; 10
    4a2a:	90 e0       	ldi	r25, 0x00	; 0
    4a2c:	0e 94 6c 07 	call	0xed8	; 0xed8 <move(int, int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1844

  while (1) {
    go(100, 100);
    4a30:	64 e6       	ldi	r22, 0x64	; 100
    4a32:	70 e0       	ldi	r23, 0x00	; 0
    4a34:	84 e6       	ldi	r24, 0x64	; 100
    4a36:	90 e0       	ldi	r25, 0x00	; 0
    4a38:	0e 94 07 07 	call	0xe0e	; 0xe0e <go(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1845
    if (intersectionL && intersectionR) {
    4a3c:	40 e0       	ldi	r20, 0x00	; 0
    4a3e:	60 e0       	ldi	r22, 0x00	; 0
    4a40:	80 e0       	ldi	r24, 0x00	; 0
    4a42:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    4a46:	89 2b       	or	r24, r25
    4a48:	09 f4       	brne	.+2      	; 0x4a4c <main+0x7e0>
    4a4a:	a8 c7       	rjmp	.+3920   	; 0x599c <main+0x1730>
    4a4c:	40 e0       	ldi	r20, 0x00	; 0
    4a4e:	62 e0       	ldi	r22, 0x02	; 2
    4a50:	82 e0       	ldi	r24, 0x02	; 2
    4a52:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    4a56:	89 2b       	or	r24, r25
    4a58:	59 f3       	breq	.-42     	; 0x4a30 <main+0x7c4>
    4a5a:	40 e0       	ldi	r20, 0x00	; 0
    4a5c:	60 e0       	ldi	r22, 0x00	; 0
    4a5e:	80 e0       	ldi	r24, 0x00	; 0
    4a60:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    4a64:	89 2b       	or	r24, r25
    4a66:	09 f4       	brne	.+2      	; 0x4a6a <main+0x7fe>
    4a68:	aa c7       	rjmp	.+3924   	; 0x59be <main+0x1752>
    4a6a:	40 e0       	ldi	r20, 0x00	; 0
    4a6c:	63 e0       	ldi	r22, 0x03	; 3
    4a6e:	82 e0       	ldi	r24, 0x02	; 2
    4a70:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    4a74:	89 2b       	or	r24, r25
    4a76:	e1 f2       	breq	.-72     	; 0x4a30 <main+0x7c4>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1846
      go(60, 60);
    4a78:	6c e3       	ldi	r22, 0x3C	; 60
    4a7a:	70 e0       	ldi	r23, 0x00	; 0
    4a7c:	8c e3       	ldi	r24, 0x3C	; 60
    4a7e:	90 e0       	ldi	r25, 0x00	; 0
    4a80:	0e 94 07 07 	call	0xe0e	; 0xe0e <go(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1847
      while (intersectionL || intersectionR)
    4a84:	40 e0       	ldi	r20, 0x00	; 0
    4a86:	60 e0       	ldi	r22, 0x00	; 0
    4a88:	80 e0       	ldi	r24, 0x00	; 0
    4a8a:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    4a8e:	89 2b       	or	r24, r25
    4a90:	09 f4       	brne	.+2      	; 0x4a94 <main+0x828>
    4a92:	a6 c7       	rjmp	.+3916   	; 0x59e0 <main+0x1774>
    4a94:	40 e0       	ldi	r20, 0x00	; 0
    4a96:	62 e0       	ldi	r22, 0x02	; 2
    4a98:	82 e0       	ldi	r24, 0x02	; 2
    4a9a:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    4a9e:	89 2b       	or	r24, r25
    4aa0:	89 f7       	brne	.-30     	; 0x4a84 <main+0x818>
    4aa2:	40 e0       	ldi	r20, 0x00	; 0
    4aa4:	60 e0       	ldi	r22, 0x00	; 0
    4aa6:	80 e0       	ldi	r24, 0x00	; 0
    4aa8:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    4aac:	89 2b       	or	r24, r25
    4aae:	09 f4       	brne	.+2      	; 0x4ab2 <main+0x846>
    4ab0:	a8 c7       	rjmp	.+3920   	; 0x5a02 <main+0x1796>
    4ab2:	40 e0       	ldi	r20, 0x00	; 0
    4ab4:	63 e0       	ldi	r22, 0x03	; 3
    4ab6:	82 e0       	ldi	r24, 0x02	; 2
    4ab8:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    4abc:	89 2b       	or	r24, r25
    4abe:	11 f7       	brne	.-60     	; 0x4a84 <main+0x818>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1849
        ;
      move(forward, T90 / 4, 60);
    4ac0:	be 01       	movw	r22, r28
    4ac2:	d7 ff       	sbrs	r29, 7
    4ac4:	02 c0       	rjmp	.+4      	; 0x4aca <main+0x85e>
    4ac6:	6d 5f       	subi	r22, 0xFD	; 253
    4ac8:	7f 4f       	sbci	r23, 0xFF	; 255
    4aca:	75 95       	asr	r23
    4acc:	67 95       	ror	r22
    4ace:	75 95       	asr	r23
    4ad0:	67 95       	ror	r22
    4ad2:	4c e3       	ldi	r20, 0x3C	; 60
    4ad4:	50 e0       	ldi	r21, 0x00	; 0
    4ad6:	8a e0       	ldi	r24, 0x0A	; 10
    4ad8:	90 e0       	ldi	r25, 0x00	; 0
    4ada:	0e 94 6c 07 	call	0xed8	; 0xed8 <move(int, int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1860
      move(Left, T90 * 1.9, 150);
      go(60, 60);
      break;
    }
    if (inter_cnt == 2) {
      move(forward, T90 / 3, 100);
    4ade:	ce 01       	movw	r24, r28
    4ae0:	63 e0       	ldi	r22, 0x03	; 3
    4ae2:	70 e0       	ldi	r23, 0x00	; 0
    4ae4:	0e 94 17 35 	call	0x6a2e	; 0x6a2e <__divmodhi4>
    4ae8:	44 e6       	ldi	r20, 0x64	; 100
    4aea:	50 e0       	ldi	r21, 0x00	; 0
    4aec:	8a e0       	ldi	r24, 0x0A	; 10
    4aee:	90 e0       	ldi	r25, 0x00	; 0
    4af0:	0e 94 6c 07 	call	0xed8	; 0xed8 <move(int, int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1861
      move(Back, T90 * 1.7, 150);
    4af4:	be 01       	movw	r22, r28
    4af6:	dd 0f       	add	r29, r29
    4af8:	88 0b       	sbc	r24, r24
    4afa:	99 0b       	sbc	r25, r25
    4afc:	0e 94 e6 33 	call	0x67cc	; 0x67cc <__floatsisf>
    4b00:	6b 01       	movw	r12, r22
    4b02:	7c 01       	movw	r14, r24
    4b04:	2a e9       	ldi	r18, 0x9A	; 154
    4b06:	39 e9       	ldi	r19, 0x99	; 153
    4b08:	49 ed       	ldi	r20, 0xD9	; 217
    4b0a:	5f e3       	ldi	r21, 0x3F	; 63
    4b0c:	0e 94 96 34 	call	0x692c	; 0x692c <__mulsf3>
    4b10:	0e 94 ae 33 	call	0x675c	; 0x675c <__fixsfsi>
    4b14:	46 e9       	ldi	r20, 0x96	; 150
    4b16:	50 e0       	ldi	r21, 0x00	; 0
    4b18:	8d e0       	ldi	r24, 0x0D	; 13
    4b1a:	90 e0       	ldi	r25, 0x00	; 0
    4b1c:	0e 94 6c 07 	call	0xed8	; 0xed8 <move(int, int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1862
      move(Left, T90 * 1.9, 150);
    4b20:	23 e3       	ldi	r18, 0x33	; 51
    4b22:	33 e3       	ldi	r19, 0x33	; 51
    4b24:	43 ef       	ldi	r20, 0xF3	; 243
    4b26:	5f e3       	ldi	r21, 0x3F	; 63
    4b28:	c7 01       	movw	r24, r14
    4b2a:	b6 01       	movw	r22, r12
    4b2c:	0e 94 96 34 	call	0x692c	; 0x692c <__mulsf3>
    4b30:	0e 94 ae 33 	call	0x675c	; 0x675c <__fixsfsi>
    4b34:	46 e9       	ldi	r20, 0x96	; 150
    4b36:	50 e0       	ldi	r21, 0x00	; 0
    4b38:	8b e0       	ldi	r24, 0x0B	; 11
    4b3a:	90 e0       	ldi	r25, 0x00	; 0
    4b3c:	0e 94 6c 07 	call	0xed8	; 0xed8 <move(int, int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1863
      go(60, 60);
    4b40:	6c e3       	ldi	r22, 0x3C	; 60
    4b42:	70 e0       	ldi	r23, 0x00	; 0
    4b44:	8c e3       	ldi	r24, 0x3C	; 60
    4b46:	90 e0       	ldi	r25, 0x00	; 0
    4b48:	0e 94 07 07 	call	0xe0e	; 0xe0e <go(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1867
      break;
    }
  }
  get_back();
    4b4c:	0e 94 e4 0e 	call	0x1dc8	; 0x1dc8 <get_back()>
color_detection():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1957
        lcd.clear();
        lcd.print("Obstacle");
        obstacle();
      }
    }
    if (left_card == BLUE) {
    4b50:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <left_card>
    4b54:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <left_card+0x1>
    4b58:	02 97       	sbiw	r24, 0x02	; 2
    4b5a:	11 f0       	breq	.+4      	; 0x4b60 <main+0x8f4>
    4b5c:	0c 94 f6 2d 	jmp	0x5bec	; 0x5bec <main+0x1980>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1958
      go(0, 0);
    4b60:	70 e0       	ldi	r23, 0x00	; 0
    4b62:	60 e0       	ldi	r22, 0x00	; 0
    4b64:	90 e0       	ldi	r25, 0x00	; 0
    4b66:	80 e0       	ldi	r24, 0x00	; 0
    4b68:	0e 94 07 07 	call	0xe0e	; 0xe0e <go(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1959
      if (color_L == BLUE) {
    4b6c:	81 e0       	ldi	r24, 0x01	; 1
    4b6e:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <color(char)>
    4b72:	82 30       	cpi	r24, 0x02	; 2
    4b74:	11 f0       	breq	.+4      	; 0x4b7a <main+0x90e>
    4b76:	0c 94 3b 2f 	jmp	0x5e76	; 0x5e76 <main+0x1c0a>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1960
        lcd.clear();
    4b7a:	0e 94 f6 05 	call	0xbec	; 0xbec <LiquidCrystal::clear() [clone .constprop.38]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1961
        lcd.print("weight lift");
    4b7e:	8e e2       	ldi	r24, 0x2E	; 46
    4b80:	98 e0       	ldi	r25, 0x08	; 8
    4b82:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
wlift():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1498
    move(forward, T90 / 3, 150);
  }
  go(60, 60);
}
void wlift() {
  int T90 = EEPROM_read_int(T90_address);
    4b86:	88 e9       	ldi	r24, 0x98	; 152
    4b88:	90 e0       	ldi	r25, 0x00	; 0
    4b8a:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    4b8e:	6c 01       	movw	r12, r24
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1502
  int gripper_close = EEPROM_read_int(gripper_close_address);
  int gripper_open = EEPROM_read_int(gripper_open_address);
  int inter_cnt = 0;  //intersection counting
  delay(50);
    4b90:	62 e3       	ldi	r22, 0x32	; 50
    4b92:	70 e0       	ldi	r23, 0x00	; 0
    4b94:	80 e0       	ldi	r24, 0x00	; 0
    4b96:	90 e0       	ldi	r25, 0x00	; 0
    4b98:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <delay>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1503
  move_arm(800, 400);
    4b9c:	60 e9       	ldi	r22, 0x90	; 144
    4b9e:	71 e0       	ldi	r23, 0x01	; 1
    4ba0:	80 e2       	ldi	r24, 0x20	; 32
    4ba2:	93 e0       	ldi	r25, 0x03	; 3
    4ba4:	0e 94 c8 08 	call	0x1190	; 0x1190 <move_arm(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1504
  delay(500);
    4ba8:	64 ef       	ldi	r22, 0xF4	; 244
    4baa:	71 e0       	ldi	r23, 0x01	; 1
    4bac:	80 e0       	ldi	r24, 0x00	; 0
    4bae:	90 e0       	ldi	r25, 0x00	; 0
    4bb0:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <delay>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1505
  go(80, 80);
    4bb4:	60 e5       	ldi	r22, 0x50	; 80
    4bb6:	70 e0       	ldi	r23, 0x00	; 0
    4bb8:	80 e5       	ldi	r24, 0x50	; 80
    4bba:	90 e0       	ldi	r25, 0x00	; 0
    4bbc:	0e 94 07 07 	call	0xe0e	; 0xe0e <go(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1524
      } else if (inter_cnt == 3) {
        inter_cnt += 1;
      }
    }
    if (inter_cnt == 2) {
      move(Back, T90 / 2, 100);
    4bc0:	86 01       	movw	r16, r12
    4bc2:	d7 fe       	sbrs	r13, 7
    4bc4:	02 c0       	rjmp	.+4      	; 0x4bca <main+0x95e>
    4bc6:	0f 5f       	subi	r16, 0xFF	; 255
    4bc8:	1f 4f       	sbci	r17, 0xFF	; 255
    4bca:	15 95       	asr	r17
    4bcc:	07 95       	ror	r16
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1527
      move_arm(345, 500);
      delay(300);  //arm_normal
      move(forward, T90 / 5, 50);
    4bce:	c6 01       	movw	r24, r12
    4bd0:	b3 01       	movw	r22, r6
    4bd2:	0e 94 17 35 	call	0x6a2e	; 0x6a2e <__divmodhi4>
    4bd6:	7b 01       	movw	r14, r22
main():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1501
}
void wlift() {
  int T90 = EEPROM_read_int(T90_address);
  int gripper_close = EEPROM_read_int(gripper_close_address);
  int gripper_open = EEPROM_read_int(gripper_open_address);
  int inter_cnt = 0;  //intersection counting
    4bd8:	d0 e0       	ldi	r29, 0x00	; 0
    4bda:	c0 e0       	ldi	r28, 0x00	; 0
wlift():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1507
  delay(50);
  move_arm(800, 400);
  delay(500);
  go(80, 80);
  while (1) {
    lcd.clear();
    4bdc:	0e 94 f6 05 	call	0xbec	; 0xbec <LiquidCrystal::clear() [clone .constprop.38]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1508
    lcd.print(inter_cnt);
    4be0:	ce 01       	movw	r24, r28
    4be2:	0e 94 0d 0a 	call	0x141a	; 0x141a <Print::print(int, int) [clone .constprop.4]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1509
    linefollow();
    4be6:	0e 94 db 07 	call	0xfb6	; 0xfb6 <linefollow()>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1510
    if (intersectionL && intersectionR) {
    4bea:	40 e0       	ldi	r20, 0x00	; 0
    4bec:	60 e0       	ldi	r22, 0x00	; 0
    4bee:	80 e0       	ldi	r24, 0x00	; 0
    4bf0:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    4bf4:	89 2b       	or	r24, r25
    4bf6:	09 f4       	brne	.+2      	; 0x4bfa <main+0x98e>
    4bf8:	15 c7       	rjmp	.+3626   	; 0x5a24 <main+0x17b8>
    4bfa:	40 e0       	ldi	r20, 0x00	; 0
    4bfc:	62 e0       	ldi	r22, 0x02	; 2
    4bfe:	82 e0       	ldi	r24, 0x02	; 2
    4c00:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    4c04:	89 2b       	or	r24, r25
    4c06:	09 f4       	brne	.+2      	; 0x4c0a <main+0x99e>
    4c08:	1d c7       	rjmp	.+3642   	; 0x5a44 <main+0x17d8>
    4c0a:	40 e0       	ldi	r20, 0x00	; 0
    4c0c:	60 e0       	ldi	r22, 0x00	; 0
    4c0e:	80 e0       	ldi	r24, 0x00	; 0
    4c10:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    4c14:	89 2b       	or	r24, r25
    4c16:	09 f4       	brne	.+2      	; 0x4c1a <main+0x9ae>
    4c18:	57 c7       	rjmp	.+3758   	; 0x5ac8 <main+0x185c>
    4c1a:	40 e0       	ldi	r20, 0x00	; 0
    4c1c:	63 e0       	ldi	r22, 0x03	; 3
    4c1e:	82 e0       	ldi	r24, 0x02	; 2
    4c20:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    4c24:	89 2b       	or	r24, r25
    4c26:	09 f4       	brne	.+2      	; 0x4c2a <main+0x9be>
    4c28:	0d c7       	rjmp	.+3610   	; 0x5a44 <main+0x17d8>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1511
      if (inter_cnt == 0) {
    4c2a:	20 97       	sbiw	r28, 0x00	; 0
    4c2c:	09 f0       	breq	.+2      	; 0x4c30 <main+0x9c4>
    4c2e:	8d c7       	rjmp	.+3866   	; 0x5b4a <main+0x18de>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1512
        go(50, 50);
    4c30:	62 e3       	ldi	r22, 0x32	; 50
    4c32:	70 e0       	ldi	r23, 0x00	; 0
    4c34:	82 e3       	ldi	r24, 0x32	; 50
    4c36:	90 e0       	ldi	r25, 0x00	; 0
    4c38:	0e 94 07 07 	call	0xe0e	; 0xe0e <go(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1513
        while (intersectionL && intersectionR)
    4c3c:	40 e0       	ldi	r20, 0x00	; 0
    4c3e:	60 e0       	ldi	r22, 0x00	; 0
    4c40:	80 e0       	ldi	r24, 0x00	; 0
    4c42:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    4c46:	89 2b       	or	r24, r25
    4c48:	09 f4       	brne	.+2      	; 0x4c4c <main+0x9e0>
    4c4a:	4f c7       	rjmp	.+3742   	; 0x5aea <main+0x187e>
    4c4c:	40 e0       	ldi	r20, 0x00	; 0
    4c4e:	62 e0       	ldi	r22, 0x02	; 2
    4c50:	82 e0       	ldi	r24, 0x02	; 2
    4c52:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    4c56:	89 2b       	or	r24, r25
    4c58:	09 f0       	breq	.+2      	; 0x4c5c <main+0x9f0>
    4c5a:	58 c7       	rjmp	.+3760   	; 0x5b0c <main+0x18a0>
main():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1535
      lcd.clear();
      lcd.print("picking up");
      move_arm(780, 200);  //PICKUP
      delay(1500);
      move(forward, T90 / 2, 100);
      inter_cnt += 1;
    4c5c:	c1 e0       	ldi	r28, 0x01	; 1
    4c5e:	d0 e0       	ldi	r29, 0x00	; 0
    4c60:	bd cf       	rjmp	.-134    	; 0x4bdc <main+0x970>
menu():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1346
  lcd.printf("SBL=%d   SBR=%d", SBL, SBR);

  lcd.setCursor(0, 3);
  lcd.printf("p_p=%d next_p=%d Ent=%d", previuse_page, next_page, start);

  if (start == 0 || next_page == 0 || previuse_page == 0 || SBL == 0 || SBR == 0)
    4c62:	88 e0       	ldi	r24, 0x08	; 8
    4c64:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    4c68:	89 2b       	or	r24, r25
    4c6a:	09 f4       	brne	.+2      	; 0x4c6e <main+0xa02>
    4c6c:	e2 cc       	rjmp	.-1596   	; 0x4632 <main+0x3c6>
    4c6e:	89 e0       	ldi	r24, 0x09	; 9
    4c70:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    4c74:	89 2b       	or	r24, r25
    4c76:	09 f4       	brne	.+2      	; 0x4c7a <main+0xa0e>
    4c78:	dc cc       	rjmp	.-1608   	; 0x4632 <main+0x3c6>
    4c7a:	85 e2       	ldi	r24, 0x25	; 37
    4c7c:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    4c80:	89 2b       	or	r24, r25
    4c82:	09 f4       	brne	.+2      	; 0x4c86 <main+0xa1a>
    4c84:	d6 cc       	rjmp	.-1620   	; 0x4632 <main+0x3c6>
    4c86:	86 e2       	ldi	r24, 0x26	; 38
    4c88:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    4c8c:	89 2b       	or	r24, r25
    4c8e:	09 f4       	brne	.+2      	; 0x4c92 <main+0xa26>
    4c90:	d0 cc       	rjmp	.-1632   	; 0x4632 <main+0x3c6>
    4c92:	d3 cc       	rjmp	.-1626   	; 0x463a <main+0x3ce>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1356
      while (next_page == 0)
        ;
      delay(50);
      page++;
      if (page > last_page)
        page = 1;
    4c94:	d0 92 05 01 	sts	0x0105, r13	; 0x800105 <menu()::page>
    4c98:	f4 cc       	rjmp	.-1560   	; 0x4682 <main+0x416>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1365
      while (previuse_page == 0)
        ;
      delay(50);
      page--;
      if (page < 1)
        page = last_page;
    4c9a:	c0 92 05 01 	sts	0x0105, r12	; 0x800105 <menu()::page>
    4c9e:	0a cd       	rjmp	.-1516   	; 0x46b4 <main+0x448>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1380
      lcd.setCursor(2, 3);
      lcd.print("Test Color    ");
      lcd.setCursor(0, page - 1);
      lcd.print("> ");
    } else if (page > 4) {
      lcd.setCursor(2, 0);
    4ca0:	82 e0       	ldi	r24, 0x02	; 2
    4ca2:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1381
      lcd.print("Test Motor   ");
    4ca6:	88 ed       	ldi	r24, 0xD8	; 216
    4ca8:	96 e0       	ldi	r25, 0x06	; 6
    4caa:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1382
      lcd.setCursor(2, 1);
    4cae:	61 e0       	ldi	r22, 0x01	; 1
    4cb0:	82 e0       	ldi	r24, 0x02	; 2
    4cb2:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1383
      lcd.print("color calib ");
    4cb6:	86 ee       	ldi	r24, 0xE6	; 230
    4cb8:	96 e0       	ldi	r25, 0x06	; 6
    4cba:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1384
      lcd.setCursor(0, page - 5);
    4cbe:	60 91 05 01 	lds	r22, 0x0105	; 0x800105 <menu()::page>
    4cc2:	65 50       	subi	r22, 0x05	; 5
    4cc4:	21 cd       	rjmp	.-1470   	; 0x4708 <main+0x49c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1399

        lcd.print("Rescue Team");
        beep(1);
        break;
      }
      battery = analogRead(A7);
    4cc6:	84 e3       	ldi	r24, 0x34	; 52
    4cc8:	0e 94 ea 02 	call	0x5d4	; 0x5d4 <analogRead>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1400
      battery = (battery * 5 / 102.3) * 3.1;
    4ccc:	b8 9e       	mul	r11, r24
    4cce:	b0 01       	movw	r22, r0
    4cd0:	b9 9e       	mul	r11, r25
    4cd2:	70 0d       	add	r23, r0
    4cd4:	11 24       	eor	r1, r1
    4cd6:	07 2e       	mov	r0, r23
    4cd8:	00 0c       	add	r0, r0
    4cda:	88 0b       	sbc	r24, r24
    4cdc:	99 0b       	sbc	r25, r25
    4cde:	0e 94 e6 33 	call	0x67cc	; 0x67cc <__floatsisf>
    4ce2:	2a e9       	ldi	r18, 0x9A	; 154
    4ce4:	39 e9       	ldi	r19, 0x99	; 153
    4ce6:	4c ec       	ldi	r20, 0xCC	; 204
    4ce8:	52 e4       	ldi	r21, 0x42	; 66
    4cea:	0e 94 3c 33 	call	0x6678	; 0x6678 <__divsf3>
    4cee:	26 e6       	ldi	r18, 0x66	; 102
    4cf0:	36 e6       	ldi	r19, 0x66	; 102
    4cf2:	46 e4       	ldi	r20, 0x46	; 70
    4cf4:	50 e4       	ldi	r21, 0x40	; 64
    4cf6:	0e 94 96 34 	call	0x692c	; 0x692c <__mulsf3>
    4cfa:	0e 94 ae 33 	call	0x675c	; 0x675c <__fixsfsi>
    4cfe:	a6 2e       	mov	r10, r22
    4d00:	97 2e       	mov	r9, r23
    4d02:	e6 2e       	mov	r14, r22
    4d04:	f7 2e       	mov	r15, r23
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1401
      lcd.setCursor(8, 0);
    4d06:	60 e0       	ldi	r22, 0x00	; 0
    4d08:	88 e0       	ldi	r24, 0x08	; 8
    4d0a:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1402
      lcd.printf("bat=%3d ", battery);
    4d0e:	9f 92       	push	r9
    4d10:	af 92       	push	r10
    4d12:	df 93       	push	r29
    4d14:	cf 93       	push	r28
    4d16:	1f 93       	push	r17
    4d18:	0f 93       	push	r16
    4d1a:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1404

      if (battery < 105) {
    4d1e:	0f 90       	pop	r0
    4d20:	0f 90       	pop	r0
    4d22:	0f 90       	pop	r0
    4d24:	0f 90       	pop	r0
    4d26:	0f 90       	pop	r0
    4d28:	0f 90       	pop	r0
    4d2a:	99 e6       	ldi	r25, 0x69	; 105
    4d2c:	e9 16       	cp	r14, r25
    4d2e:	f1 04       	cpc	r15, r1
    4d30:	0c f0       	brlt	.+2      	; 0x4d34 <main+0xac8>
    4d32:	8f cc       	rjmp	.-1762   	; 0x4652 <main+0x3e6>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1405
        LED_on;
    4d34:	61 e0       	ldi	r22, 0x01	; 1
    4d36:	8d e0       	ldi	r24, 0x0D	; 13
    4d38:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1406
        delay(50);
    4d3c:	62 e3       	ldi	r22, 0x32	; 50
    4d3e:	70 e0       	ldi	r23, 0x00	; 0
    4d40:	80 e0       	ldi	r24, 0x00	; 0
    4d42:	90 e0       	ldi	r25, 0x00	; 0
    4d44:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <delay>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1407
        LED_off;
    4d48:	60 e0       	ldi	r22, 0x00	; 0
    4d4a:	8d e0       	ldi	r24, 0x0D	; 13
    4d4c:	0e 94 0c 02 	call	0x418	; 0x418 <digitalWrite>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1408
        delay(50);
    4d50:	62 e3       	ldi	r22, 0x32	; 50
    4d52:	70 e0       	ldi	r23, 0x00	; 0
    4d54:	80 e0       	ldi	r24, 0x00	; 0
    4d56:	90 e0       	ldi	r25, 0x00	; 0
    4d58:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <delay>
    4d5c:	7a cc       	rjmp	.-1804   	; 0x4652 <main+0x3e6>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1410
      }
    } else if (page == 2)  // Test Sensor
    4d5e:	82 30       	cpi	r24, 0x02	; 2
    4d60:	69 f4       	brne	.+26     	; 0x4d7c <main+0xb10>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1412
    {
      if (start == 0) {
    4d62:	86 e0       	ldi	r24, 0x06	; 6
    4d64:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    4d68:	89 2b       	or	r24, r25
    4d6a:	09 f0       	breq	.+2      	; 0x4d6e <main+0xb02>
    4d6c:	72 cc       	rjmp	.-1820   	; 0x4652 <main+0x3e6>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1413
        while (start == 0)
    4d6e:	86 e0       	ldi	r24, 0x06	; 6
    4d70:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    4d74:	89 2b       	or	r24, r25
    4d76:	d9 f3       	breq	.-10     	; 0x4d6e <main+0xb02>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1415
          ;
        menu_sensor();
    4d78:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <menu_sensor()>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1417
      }
    } else if (page == 3)  // Setup
    4d7c:	83 30       	cpi	r24, 0x03	; 3
    4d7e:	09 f0       	breq	.+2      	; 0x4d82 <main+0xb16>
    4d80:	44 c2       	rjmp	.+1160   	; 0x520a <main+0xf9e>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1419
    {
      if (start == 0) {
    4d82:	86 e0       	ldi	r24, 0x06	; 6
    4d84:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    4d88:	89 2b       	or	r24, r25
    4d8a:	09 f0       	breq	.+2      	; 0x4d8e <main+0xb22>
    4d8c:	62 cc       	rjmp	.-1852   	; 0x4652 <main+0x3e6>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1420
        while (start == 0)
    4d8e:	86 e0       	ldi	r24, 0x06	; 6
    4d90:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    4d94:	89 2b       	or	r24, r25
    4d96:	d9 f3       	breq	.-10     	; 0x4d8e <main+0xb22>
menu_setup():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:644
  }
}

void menu_setup(void) {
  static char page = 1, last_page = 8;
  int spd = EEPROM_read_int(spd_address);
    4d98:	86 e9       	ldi	r24, 0x96	; 150
    4d9a:	90 e0       	ldi	r25, 0x00	; 0
    4d9c:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    4da0:	8c 01       	movw	r16, r24
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:645
  int T90 = EEPROM_read_int(T90_address);
    4da2:	88 e9       	ldi	r24, 0x98	; 152
    4da4:	90 e0       	ldi	r25, 0x00	; 0
    4da6:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    4daa:	7c 01       	movw	r14, r24
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:646
  int range_value = EEPROM_read_int(range_address);
    4dac:	8a e9       	ldi	r24, 0x9A	; 154
    4dae:	90 e0       	ldi	r25, 0x00	; 0
    4db0:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    4db4:	6c 01       	movw	r12, r24
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:647
  int DN = EEPROM_read_int(DN_address);
    4db6:	8c e9       	ldi	r24, 0x9C	; 156
    4db8:	90 e0       	ldi	r25, 0x00	; 0
    4dba:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    4dbe:	98 2e       	mov	r9, r24
    4dc0:	89 2e       	mov	r8, r25
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:648
  int DE = EEPROM_read_int(DE_address);
    4dc2:	8e e9       	ldi	r24, 0x9E	; 158
    4dc4:	90 e0       	ldi	r25, 0x00	; 0
    4dc6:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    4dca:	78 2e       	mov	r7, r24
    4dcc:	69 2e       	mov	r6, r25
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:649
  int DS = EEPROM_read_int(DS_address);
    4dce:	80 ea       	ldi	r24, 0xA0	; 160
    4dd0:	90 e0       	ldi	r25, 0x00	; 0
    4dd2:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    4dd6:	58 2e       	mov	r5, r24
    4dd8:	49 2e       	mov	r4, r25
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:650
  int ev_s_ball = EEPROM_read_int(DW_address);
    4dda:	82 ea       	ldi	r24, 0xA2	; 162
    4ddc:	90 e0       	ldi	r25, 0x00	; 0
    4dde:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    4de2:	1c 01       	movw	r2, r24
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:652

  lcd.clear();
    4de4:	0e 94 f6 05 	call	0xbec	; 0xbec <LiquidCrystal::clear() [clone .constprop.38]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:691
      lcd.setCursor(0, page - 1);
      lcd.print(">");
    } else if (page < 9) {

      lcd.setCursor(2, 0);
      lcd.printf("DN  %d  deg: %d ", DN, deg);
    4de8:	ca eb       	ldi	r28, 0xBA	; 186
    4dea:	da e0       	ldi	r29, 0x0A	; 10
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:655
  int ev_s_ball = EEPROM_read_int(DW_address);

  lcd.clear();

  while (1) {
    if (next_page == 0) {
    4dec:	88 e0       	ldi	r24, 0x08	; 8
    4dee:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    4df2:	89 2b       	or	r24, r25
    4df4:	a9 f4       	brne	.+42     	; 0x4e20 <main+0xbb4>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:656
      while (next_page == 0)
    4df6:	88 e0       	ldi	r24, 0x08	; 8
    4df8:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    4dfc:	89 2b       	or	r24, r25
    4dfe:	d9 f3       	breq	.-10     	; 0x4df6 <main+0xb8a>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:658
        ;
      delay(50);
    4e00:	62 e3       	ldi	r22, 0x32	; 50
    4e02:	70 e0       	ldi	r23, 0x00	; 0
    4e04:	80 e0       	ldi	r24, 0x00	; 0
    4e06:	90 e0       	ldi	r25, 0x00	; 0
    4e08:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <delay>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:659
      page++;
    4e0c:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <menu_setup()::page>
    4e10:	8f 5f       	subi	r24, 0xFF	; 255
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:660
      if (page > last_page)
    4e12:	89 30       	cpi	r24, 0x09	; 9
    4e14:	0c f0       	brlt	.+2      	; 0x4e18 <main+0xbac>
    4e16:	8f c0       	rjmp	.+286    	; 0x4f36 <main+0xcca>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:661
        page = 1;
    4e18:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <menu_setup()::page>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:662
      lcd.clear();
    4e1c:	0e 94 f6 05 	call	0xbec	; 0xbec <LiquidCrystal::clear() [clone .constprop.38]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:664
    }
    if (previuse_page == 0) {
    4e20:	89 e0       	ldi	r24, 0x09	; 9
    4e22:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    4e26:	89 2b       	or	r24, r25
    4e28:	a9 f4       	brne	.+42     	; 0x4e54 <main+0xbe8>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:665
      while (previuse_page == 0)
    4e2a:	89 e0       	ldi	r24, 0x09	; 9
    4e2c:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    4e30:	89 2b       	or	r24, r25
    4e32:	d9 f3       	breq	.-10     	; 0x4e2a <main+0xbbe>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:667
        ;
      delay(50);
    4e34:	62 e3       	ldi	r22, 0x32	; 50
    4e36:	70 e0       	ldi	r23, 0x00	; 0
    4e38:	80 e0       	ldi	r24, 0x00	; 0
    4e3a:	90 e0       	ldi	r25, 0x00	; 0
    4e3c:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <delay>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:668
      page--;
    4e40:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <menu_setup()::page>
    4e44:	81 50       	subi	r24, 0x01	; 1
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:669
      if (page < 1)
    4e46:	18 16       	cp	r1, r24
    4e48:	0c f0       	brlt	.+2      	; 0x4e4c <main+0xbe0>
    4e4a:	77 c0       	rjmp	.+238    	; 0x4f3a <main+0xcce>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:670
        page = last_page;
    4e4c:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <menu_setup()::page>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:671
      lcd.clear();
    4e50:	0e 94 f6 05 	call	0xbec	; 0xbec <LiquidCrystal::clear() [clone .constprop.38]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:673
    }
    if (page < 5) {
    4e54:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <menu_setup()::page>
    4e58:	85 30       	cpi	r24, 0x05	; 5
    4e5a:	0c f0       	brlt	.+2      	; 0x4e5e <main+0xbf2>
    4e5c:	70 c0       	rjmp	.+224    	; 0x4f3e <main+0xcd2>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:674
      lcd.setCursor(2, 0);
    4e5e:	60 e0       	ldi	r22, 0x00	; 0
    4e60:	82 e0       	ldi	r24, 0x02	; 2
    4e62:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:675
      lcd.printf("speed     %3d ", spd);
    4e66:	1f 93       	push	r17
    4e68:	0f 93       	push	r16
    4e6a:	28 e0       	ldi	r18, 0x08	; 8
    4e6c:	37 e0       	ldi	r19, 0x07	; 7
    4e6e:	3f 93       	push	r19
    4e70:	2f 93       	push	r18
    4e72:	df 93       	push	r29
    4e74:	cf 93       	push	r28
    4e76:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:677

      lcd.setCursor(2, 1);
    4e7a:	61 e0       	ldi	r22, 0x01	; 1
    4e7c:	82 e0       	ldi	r24, 0x02	; 2
    4e7e:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:678
      lcd.printf("T90       %3d ", T90);
    4e82:	ff 92       	push	r15
    4e84:	ef 92       	push	r14
    4e86:	87 e1       	ldi	r24, 0x17	; 23
    4e88:	97 e0       	ldi	r25, 0x07	; 7
    4e8a:	9f 93       	push	r25
    4e8c:	8f 93       	push	r24
    4e8e:	df 93       	push	r29
    4e90:	cf 93       	push	r28
    4e92:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:680

      lcd.setCursor(2, 2);
    4e96:	62 e0       	ldi	r22, 0x02	; 2
    4e98:	82 e0       	ldi	r24, 0x02	; 2
    4e9a:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:681
      lcd.printf("calib rng %3d ", range);
    4e9e:	8a e9       	ldi	r24, 0x9A	; 154
    4ea0:	90 e0       	ldi	r25, 0x00	; 0
    4ea2:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    4ea6:	9f 93       	push	r25
    4ea8:	8f 93       	push	r24
    4eaa:	26 e2       	ldi	r18, 0x26	; 38
    4eac:	37 e0       	ldi	r19, 0x07	; 7
    4eae:	3f 93       	push	r19
    4eb0:	2f 93       	push	r18
    4eb2:	df 93       	push	r29
    4eb4:	cf 93       	push	r28
    4eb6:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:683

      lcd.setCursor(2, 3);
    4eba:	63 e0       	ldi	r22, 0x03	; 3
    4ebc:	82 e0       	ldi	r24, 0x02	; 2
    4ebe:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:684
      lcd.printf("reset memory   ");
    4ec2:	85 e3       	ldi	r24, 0x35	; 53
    4ec4:	97 e0       	ldi	r25, 0x07	; 7
    4ec6:	9f 93       	push	r25
    4ec8:	8f 93       	push	r24
    4eca:	df 93       	push	r29
    4ecc:	cf 93       	push	r28
    4ece:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:686

      lcd.setCursor(0, page - 1);
    4ed2:	60 91 03 01 	lds	r22, 0x0103	; 0x800103 <menu_setup()::page>
    4ed6:	61 50       	subi	r22, 0x01	; 1
    4ed8:	80 e0       	ldi	r24, 0x00	; 0
    4eda:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:687
      lcd.print(">");
    4ede:	85 e4       	ldi	r24, 0x45	; 69
    4ee0:	97 e0       	ldi	r25, 0x07	; 7
    4ee2:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
    4ee6:	2d b7       	in	r18, 0x3d	; 61
    4ee8:	3e b7       	in	r19, 0x3e	; 62
    4eea:	2a 5e       	subi	r18, 0xEA	; 234
    4eec:	3f 4f       	sbci	r19, 0xFF	; 255
    4eee:	0f b6       	in	r0, 0x3f	; 63
    4ef0:	f8 94       	cli
    4ef2:	3e bf       	out	0x3e, r19	; 62
    4ef4:	0f be       	out	0x3f, r0	; 63
    4ef6:	2d bf       	out	0x3d, r18	; 61
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:706

      lcd.setCursor(0, page - 5);
      lcd.print(">");
    }

    if (page == 1)  // spd
    4ef8:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <menu_setup()::page>
    4efc:	81 30       	cpi	r24, 0x01	; 1
    4efe:	09 f0       	breq	.+2      	; 0x4f02 <main+0xc96>
    4f00:	9b c0       	rjmp	.+310    	; 0x5038 <main+0xdcc>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:708
    {
      if (increase == 0) {
    4f02:	8a e0       	ldi	r24, 0x0A	; 10
    4f04:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    4f08:	89 2b       	or	r24, r25
    4f0a:	09 f0       	breq	.+2      	; 0x4f0e <main+0xca2>
    4f0c:	6b c0       	rjmp	.+214    	; 0x4fe4 <main+0xd78>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:709
        delay(120);
    4f0e:	68 e7       	ldi	r22, 0x78	; 120
    4f10:	70 e0       	ldi	r23, 0x00	; 0
    4f12:	80 e0       	ldi	r24, 0x00	; 0
    4f14:	90 e0       	ldi	r25, 0x00	; 0
    4f16:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <delay>
    4f1a:	06 5f       	subi	r16, 0xF6	; 246
    4f1c:	1f 4f       	sbci	r17, 0xFF	; 255
    4f1e:	0f 3f       	cpi	r16, 0xFF	; 255
    4f20:	11 05       	cpc	r17, r1
    4f22:	19 f0       	breq	.+6      	; 0x4f2a <main+0xcbe>
    4f24:	14 f0       	brlt	.+4      	; 0x4f2a <main+0xcbe>
    4f26:	0f ef       	ldi	r16, 0xFF	; 255
    4f28:	10 e0       	ldi	r17, 0x00	; 0
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:725
      } else if (start == 0) {
        go(spd, spd);
        while (start == 0)
          ;
        go(0, 0);
        EEPROM_write_int(spd_address, spd);
    4f2a:	b8 01       	movw	r22, r16
    4f2c:	86 e9       	ldi	r24, 0x96	; 150
    4f2e:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:790
    {
      if (start == 0) {
        while (start == 0)
          ;
        DS = deg;
        EEPROM_write_int(DS_address, DS);
    4f30:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
    4f34:	5b cf       	rjmp	.-330    	; 0x4dec <main+0xb80>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:661
      while (next_page == 0)
        ;
      delay(50);
      page++;
      if (page > last_page)
        page = 1;
    4f36:	81 e0       	ldi	r24, 0x01	; 1
    4f38:	6f cf       	rjmp	.-290    	; 0x4e18 <main+0xbac>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:670
      while (previuse_page == 0)
        ;
      delay(50);
      page--;
      if (page < 1)
        page = last_page;
    4f3a:	88 e0       	ldi	r24, 0x08	; 8
    4f3c:	87 cf       	rjmp	.-242    	; 0x4e4c <main+0xbe0>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:688
      lcd.setCursor(2, 3);
      lcd.printf("reset memory   ");

      lcd.setCursor(0, page - 1);
      lcd.print(">");
    } else if (page < 9) {
    4f3e:	89 30       	cpi	r24, 0x09	; 9
    4f40:	dc f6       	brge	.-74     	; 0x4ef8 <main+0xc8c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:690

      lcd.setCursor(2, 0);
    4f42:	60 e0       	ldi	r22, 0x00	; 0
    4f44:	82 e0       	ldi	r24, 0x02	; 2
    4f46:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:691
      lcd.printf("DN  %d  deg: %d ", DN, deg);
    4f4a:	81 e0       	ldi	r24, 0x01	; 1
    4f4c:	90 e0       	ldi	r25, 0x00	; 0
    4f4e:	0e 94 f8 16 	call	0x2df0	; 0x2df0 <cmps(int)>
    4f52:	9f 93       	push	r25
    4f54:	8f 93       	push	r24
    4f56:	8f 92       	push	r8
    4f58:	9f 92       	push	r9
    4f5a:	87 e4       	ldi	r24, 0x47	; 71
    4f5c:	97 e0       	ldi	r25, 0x07	; 7
    4f5e:	9f 93       	push	r25
    4f60:	8f 93       	push	r24
    4f62:	df 93       	push	r29
    4f64:	cf 93       	push	r28
    4f66:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:693

      lcd.setCursor(2, 1);
    4f6a:	61 e0       	ldi	r22, 0x01	; 1
    4f6c:	82 e0       	ldi	r24, 0x02	; 2
    4f6e:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:694
      lcd.printf("DE  %d ", DE);
    4f72:	6f 92       	push	r6
    4f74:	7f 92       	push	r7
    4f76:	28 e5       	ldi	r18, 0x58	; 88
    4f78:	37 e0       	ldi	r19, 0x07	; 7
    4f7a:	3f 93       	push	r19
    4f7c:	2f 93       	push	r18
    4f7e:	df 93       	push	r29
    4f80:	cf 93       	push	r28
    4f82:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:696

      lcd.setCursor(2, 2);
    4f86:	62 e0       	ldi	r22, 0x02	; 2
    4f88:	82 e0       	ldi	r24, 0x02	; 2
    4f8a:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:697
      lcd.printf("DS  %d ", DS);
    4f8e:	4f 92       	push	r4
    4f90:	5f 92       	push	r5
    4f92:	80 e6       	ldi	r24, 0x60	; 96
    4f94:	97 e0       	ldi	r25, 0x07	; 7
    4f96:	9f 93       	push	r25
    4f98:	8f 93       	push	r24
    4f9a:	df 93       	push	r29
    4f9c:	cf 93       	push	r28
    4f9e:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:699

      lcd.setCursor(2, 3);
    4fa2:	63 e0       	ldi	r22, 0x03	; 3
    4fa4:	82 e0       	ldi	r24, 0x02	; 2
    4fa6:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:700
      lcd.printf("ev_s_ball  %d ", ev_s_ball);
    4faa:	3f 92       	push	r3
    4fac:	2f 92       	push	r2
    4fae:	28 e6       	ldi	r18, 0x68	; 104
    4fb0:	37 e0       	ldi	r19, 0x07	; 7
    4fb2:	3f 93       	push	r19
    4fb4:	2f 93       	push	r18
    4fb6:	df 93       	push	r29
    4fb8:	cf 93       	push	r28
    4fba:	0e 94 50 09 	call	0x12a0	; 0x12a0 <Print::printf(char const*, ...) [clone .constprop.28]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:702

      lcd.setCursor(0, page - 5);
    4fbe:	60 91 03 01 	lds	r22, 0x0103	; 0x800103 <menu_setup()::page>
    4fc2:	65 50       	subi	r22, 0x05	; 5
    4fc4:	80 e0       	ldi	r24, 0x00	; 0
    4fc6:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:703
      lcd.print(">");
    4fca:	85 e4       	ldi	r24, 0x45	; 69
    4fcc:	97 e0       	ldi	r25, 0x07	; 7
    4fce:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
    4fd2:	8d b7       	in	r24, 0x3d	; 61
    4fd4:	9e b7       	in	r25, 0x3e	; 62
    4fd6:	4a 96       	adiw	r24, 0x1a	; 26
    4fd8:	0f b6       	in	r0, 0x3f	; 63
    4fda:	f8 94       	cli
    4fdc:	9e bf       	out	0x3e, r25	; 62
    4fde:	0f be       	out	0x3f, r0	; 63
    4fe0:	8d bf       	out	0x3d, r24	; 61
    4fe2:	8a cf       	rjmp	.-236    	; 0x4ef8 <main+0xc8c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:714
        delay(120);
        spd += 10;
        if (spd > 255)
          spd = 255;
        EEPROM_write_int(spd_address, spd);
      } else if (decrease == 0) {
    4fe4:	8b e0       	ldi	r24, 0x0B	; 11
    4fe6:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    4fea:	89 2b       	or	r24, r25
    4fec:	79 f4       	brne	.+30     	; 0x500c <main+0xda0>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:715
        delay(120);
    4fee:	68 e7       	ldi	r22, 0x78	; 120
    4ff0:	70 e0       	ldi	r23, 0x00	; 0
    4ff2:	80 e0       	ldi	r24, 0x00	; 0
    4ff4:	90 e0       	ldi	r25, 0x00	; 0
    4ff6:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <delay>
    4ffa:	0a 50       	subi	r16, 0x0A	; 10
    4ffc:	11 09       	sbc	r17, r1
    4ffe:	0a 30       	cpi	r16, 0x0A	; 10
    5000:	11 05       	cpc	r17, r1
    5002:	0c f0       	brlt	.+2      	; 0x5006 <main+0xd9a>
    5004:	92 cf       	rjmp	.-220    	; 0x4f2a <main+0xcbe>
    5006:	0a e0       	ldi	r16, 0x0A	; 10
    5008:	10 e0       	ldi	r17, 0x00	; 0
    500a:	8f cf       	rjmp	.-226    	; 0x4f2a <main+0xcbe>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:720
        spd -= 10;
        if (spd < 10)
          spd = 10;
        EEPROM_write_int(spd_address, spd);
      } else if (start == 0) {
    500c:	86 e0       	ldi	r24, 0x06	; 6
    500e:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    5012:	89 2b       	or	r24, r25
    5014:	09 f0       	breq	.+2      	; 0x5018 <main+0xdac>
    5016:	ea ce       	rjmp	.-556    	; 0x4dec <main+0xb80>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:721
        go(spd, spd);
    5018:	b8 01       	movw	r22, r16
    501a:	c8 01       	movw	r24, r16
    501c:	0e 94 07 07 	call	0xe0e	; 0xe0e <go(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:722
        while (start == 0)
    5020:	86 e0       	ldi	r24, 0x06	; 6
    5022:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    5026:	89 2b       	or	r24, r25
    5028:	d9 f3       	breq	.-10     	; 0x5020 <main+0xdb4>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:724
          ;
        go(0, 0);
    502a:	70 e0       	ldi	r23, 0x00	; 0
    502c:	60 e0       	ldi	r22, 0x00	; 0
    502e:	90 e0       	ldi	r25, 0x00	; 0
    5030:	80 e0       	ldi	r24, 0x00	; 0
    5032:	0e 94 07 07 	call	0xe0e	; 0xe0e <go(int, int)>
    5036:	79 cf       	rjmp	.-270    	; 0x4f2a <main+0xcbe>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:727
        EEPROM_write_int(spd_address, spd);
      }
    } else if (page == 2)  // T90
    5038:	82 30       	cpi	r24, 0x02	; 2
    503a:	d9 f5       	brne	.+118    	; 0x50b2 <main+0xe46>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:729
    {
      if (increase == 0) {
    503c:	8a e0       	ldi	r24, 0x0A	; 10
    503e:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    5042:	89 2b       	or	r24, r25
    5044:	69 f4       	brne	.+26     	; 0x5060 <main+0xdf4>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:730
        delay(200);
    5046:	68 ec       	ldi	r22, 0xC8	; 200
    5048:	70 e0       	ldi	r23, 0x00	; 0
    504a:	80 e0       	ldi	r24, 0x00	; 0
    504c:	90 e0       	ldi	r25, 0x00	; 0
    504e:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <delay>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:731
        T90 += 1;
    5052:	9f ef       	ldi	r25, 0xFF	; 255
    5054:	e9 1a       	sub	r14, r25
    5056:	f9 0a       	sbc	r15, r25
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:736
        EEPROM_write_int(T90_address, T90);
      } else if (decrease == 0) {
        delay(200);
        T90 -= 1;
        EEPROM_write_int(T90_address, T90);
    5058:	b7 01       	movw	r22, r14
    505a:	88 e9       	ldi	r24, 0x98	; 152
    505c:	90 e0       	ldi	r25, 0x00	; 0
    505e:	68 cf       	rjmp	.-304    	; 0x4f30 <main+0xcc4>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:733
    {
      if (increase == 0) {
        delay(200);
        T90 += 1;
        EEPROM_write_int(T90_address, T90);
      } else if (decrease == 0) {
    5060:	8b e0       	ldi	r24, 0x0B	; 11
    5062:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    5066:	89 2b       	or	r24, r25
    5068:	51 f4       	brne	.+20     	; 0x507e <main+0xe12>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:734
        delay(200);
    506a:	68 ec       	ldi	r22, 0xC8	; 200
    506c:	70 e0       	ldi	r23, 0x00	; 0
    506e:	80 e0       	ldi	r24, 0x00	; 0
    5070:	90 e0       	ldi	r25, 0x00	; 0
    5072:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <delay>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:735
        T90 -= 1;
    5076:	21 e0       	ldi	r18, 0x01	; 1
    5078:	e2 1a       	sub	r14, r18
    507a:	f1 08       	sbc	r15, r1
    507c:	ed cf       	rjmp	.-38     	; 0x5058 <main+0xdec>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:737
        EEPROM_write_int(T90_address, T90);
      } else if (start == 0) {
    507e:	86 e0       	ldi	r24, 0x06	; 6
    5080:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    5084:	89 2b       	or	r24, r25
    5086:	09 f0       	breq	.+2      	; 0x508a <main+0xe1e>
    5088:	b1 ce       	rjmp	.-670    	; 0x4dec <main+0xb80>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:738
        while (start == 0)
    508a:	86 e0       	ldi	r24, 0x06	; 6
    508c:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    5090:	89 2b       	or	r24, r25
    5092:	d9 f3       	breq	.-10     	; 0x508a <main+0xe1e>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:740
          ;
        lcd.clear();
    5094:	0e 94 f6 05 	call	0xbec	; 0xbec <LiquidCrystal::clear() [clone .constprop.38]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:741
        EEPROM_write_int(T90_address, T90);
    5098:	b7 01       	movw	r22, r14
    509a:	88 e9       	ldi	r24, 0x98	; 152
    509c:	90 e0       	ldi	r25, 0x00	; 0
    509e:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:742
        move(Left, T90, 200);
    50a2:	48 ec       	ldi	r20, 0xC8	; 200
    50a4:	50 e0       	ldi	r21, 0x00	; 0
    50a6:	b7 01       	movw	r22, r14
    50a8:	8b e0       	ldi	r24, 0x0B	; 11
    50aa:	90 e0       	ldi	r25, 0x00	; 0
    50ac:	0e 94 6c 07 	call	0xed8	; 0xed8 <move(int, int, int)>
    50b0:	9d ce       	rjmp	.-710    	; 0x4dec <main+0xb80>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:744
      }
    } else if (page == 3)  // range
    50b2:	83 30       	cpi	r24, 0x03	; 3
    50b4:	81 f5       	brne	.+96     	; 0x5116 <main+0xeaa>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:746
    {
      if (increase == 0) {
    50b6:	8a e0       	ldi	r24, 0x0A	; 10
    50b8:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    50bc:	89 2b       	or	r24, r25
    50be:	a1 f4       	brne	.+40     	; 0x50e8 <main+0xe7c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:747
        delay(100);
    50c0:	64 e6       	ldi	r22, 0x64	; 100
    50c2:	70 e0       	ldi	r23, 0x00	; 0
    50c4:	80 e0       	ldi	r24, 0x00	; 0
    50c6:	90 e0       	ldi	r25, 0x00	; 0
    50c8:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <delay>
    50cc:	3f ef       	ldi	r19, 0xFF	; 255
    50ce:	c3 1a       	sub	r12, r19
    50d0:	d3 0a       	sbc	r13, r19
    50d2:	81 e5       	ldi	r24, 0x51	; 81
    50d4:	c8 16       	cp	r12, r24
    50d6:	d1 04       	cpc	r13, r1
    50d8:	1c f0       	brlt	.+6      	; 0x50e0 <main+0xe74>
    50da:	40 e5       	ldi	r20, 0x50	; 80
    50dc:	c4 2e       	mov	r12, r20
    50de:	d1 2c       	mov	r13, r1
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:757
      } else if (decrease == 0) {
        delay(100);
        range_value -= 1;
        if (range_value < 5)
          range_value = 5;
        EEPROM_write_int(range_address, range_value);
    50e0:	b6 01       	movw	r22, r12
    50e2:	8a e9       	ldi	r24, 0x9A	; 154
    50e4:	90 e0       	ldi	r25, 0x00	; 0
    50e6:	24 cf       	rjmp	.-440    	; 0x4f30 <main+0xcc4>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:752
        delay(100);
        range_value += 1;
        if (range_value > 80)
          range_value = 80;
        EEPROM_write_int(range_address, range_value);
      } else if (decrease == 0) {
    50e8:	8b e0       	ldi	r24, 0x0B	; 11
    50ea:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    50ee:	89 2b       	or	r24, r25
    50f0:	09 f0       	breq	.+2      	; 0x50f4 <main+0xe88>
    50f2:	7c ce       	rjmp	.-776    	; 0x4dec <main+0xb80>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:753
        delay(100);
    50f4:	64 e6       	ldi	r22, 0x64	; 100
    50f6:	70 e0       	ldi	r23, 0x00	; 0
    50f8:	80 e0       	ldi	r24, 0x00	; 0
    50fa:	90 e0       	ldi	r25, 0x00	; 0
    50fc:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <delay>
    5100:	91 e0       	ldi	r25, 0x01	; 1
    5102:	c9 1a       	sub	r12, r25
    5104:	d1 08       	sbc	r13, r1
    5106:	25 e0       	ldi	r18, 0x05	; 5
    5108:	c2 16       	cp	r12, r18
    510a:	d1 04       	cpc	r13, r1
    510c:	4c f7       	brge	.-46     	; 0x50e0 <main+0xe74>
    510e:	35 e0       	ldi	r19, 0x05	; 5
    5110:	c3 2e       	mov	r12, r19
    5112:	d1 2c       	mov	r13, r1
    5114:	e5 cf       	rjmp	.-54     	; 0x50e0 <main+0xe74>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:759
        range_value -= 1;
        if (range_value < 5)
          range_value = 5;
        EEPROM_write_int(range_address, range_value);
      }
    } else if (page == 4)  // reset memory
    5116:	84 30       	cpi	r24, 0x04	; 4
    5118:	d1 f4       	brne	.+52     	; 0x514e <main+0xee2>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:761
    {
      if (start == 0) {
    511a:	86 e0       	ldi	r24, 0x06	; 6
    511c:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    5120:	5c 01       	movw	r10, r24
    5122:	89 2b       	or	r24, r25
    5124:	09 f0       	breq	.+2      	; 0x5128 <main+0xebc>
    5126:	62 ce       	rjmp	.-828    	; 0x4dec <main+0xb80>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:762
        lcd.clear();
    5128:	0e 94 f6 05 	call	0xbec	; 0xbec <LiquidCrystal::clear() [clone .constprop.38]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:763
        while (start == 0)
    512c:	86 e0       	ldi	r24, 0x06	; 6
    512e:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    5132:	89 2b       	or	r24, r25
    5134:	d9 f3       	breq	.-10     	; 0x512c <main+0xec0>
operator=():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\libraries\EEPROM\src/EEPROM.h:47
    operator uint8_t() const             { return **this; }

    //Assignment/write members.
    EERef &operator=( const EERef &ref ) { return *this = *ref; }
    EERef &operator=( uint8_t in )       { return eeprom_write_byte( (uint8_t*) index, in ), *this;  }
    5136:	60 e0       	ldi	r22, 0x00	; 0
    5138:	c5 01       	movw	r24, r10
    513a:	0e 94 2a 33 	call	0x6654	; 0x6654 <eeprom_write_byte>
menu_setup():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:765
          ;
        for (int i = 0; i < 200; i++)
    513e:	3f ef       	ldi	r19, 0xFF	; 255
    5140:	a3 1a       	sub	r10, r19
    5142:	b3 0a       	sbc	r11, r19
    5144:	88 ec       	ldi	r24, 0xC8	; 200
    5146:	a8 16       	cp	r10, r24
    5148:	b1 04       	cpc	r11, r1
    514a:	a9 f7       	brne	.-22     	; 0x5136 <main+0xeca>
    514c:	4f ce       	rjmp	.-866    	; 0x4dec <main+0xb80>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:768
          EEPROM.write(i, 0);
      }
    } else if (page == 5)  // DN
    514e:	85 30       	cpi	r24, 0x05	; 5
    5150:	b1 f4       	brne	.+44     	; 0x517e <main+0xf12>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:770
    {
      if (start == 0) {
    5152:	86 e0       	ldi	r24, 0x06	; 6
    5154:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    5158:	89 2b       	or	r24, r25
    515a:	09 f0       	breq	.+2      	; 0x515e <main+0xef2>
    515c:	47 ce       	rjmp	.-882    	; 0x4dec <main+0xb80>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:771
        while (start == 0)
    515e:	86 e0       	ldi	r24, 0x06	; 6
    5160:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    5164:	89 2b       	or	r24, r25
    5166:	d9 f3       	breq	.-10     	; 0x515e <main+0xef2>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:773
          ;
        DN = deg;
    5168:	81 e0       	ldi	r24, 0x01	; 1
    516a:	90 e0       	ldi	r25, 0x00	; 0
    516c:	0e 94 f8 16 	call	0x2df0	; 0x2df0 <cmps(int)>
    5170:	98 2e       	mov	r9, r24
    5172:	89 2e       	mov	r8, r25
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:774
        EEPROM_write_int(DN_address, DN);
    5174:	68 2f       	mov	r22, r24
    5176:	79 2f       	mov	r23, r25
    5178:	8c e9       	ldi	r24, 0x9C	; 156
    517a:	90 e0       	ldi	r25, 0x00	; 0
    517c:	d9 ce       	rjmp	.-590    	; 0x4f30 <main+0xcc4>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:776
      }
    } else if (page == 6)  // DE
    517e:	86 30       	cpi	r24, 0x06	; 6
    5180:	a9 f4       	brne	.+42     	; 0x51ac <main+0xf40>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:778
    {
      if (start == 0) {
    5182:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    5186:	89 2b       	or	r24, r25
    5188:	09 f0       	breq	.+2      	; 0x518c <main+0xf20>
    518a:	30 ce       	rjmp	.-928    	; 0x4dec <main+0xb80>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:779
        while (start == 0)
    518c:	86 e0       	ldi	r24, 0x06	; 6
    518e:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    5192:	89 2b       	or	r24, r25
    5194:	d9 f3       	breq	.-10     	; 0x518c <main+0xf20>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:781
          ;
        DE = deg;
    5196:	81 e0       	ldi	r24, 0x01	; 1
    5198:	90 e0       	ldi	r25, 0x00	; 0
    519a:	0e 94 f8 16 	call	0x2df0	; 0x2df0 <cmps(int)>
    519e:	78 2e       	mov	r7, r24
    51a0:	69 2e       	mov	r6, r25
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:782
        EEPROM_write_int(DE_address, DE);
    51a2:	68 2f       	mov	r22, r24
    51a4:	79 2f       	mov	r23, r25
    51a6:	8e e9       	ldi	r24, 0x9E	; 158
    51a8:	90 e0       	ldi	r25, 0x00	; 0
    51aa:	c2 ce       	rjmp	.-636    	; 0x4f30 <main+0xcc4>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:784
      }
    } else if (page == 7)  // DS
    51ac:	87 30       	cpi	r24, 0x07	; 7
    51ae:	b1 f4       	brne	.+44     	; 0x51dc <main+0xf70>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:786
    {
      if (start == 0) {
    51b0:	86 e0       	ldi	r24, 0x06	; 6
    51b2:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    51b6:	89 2b       	or	r24, r25
    51b8:	09 f0       	breq	.+2      	; 0x51bc <main+0xf50>
    51ba:	18 ce       	rjmp	.-976    	; 0x4dec <main+0xb80>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:787
        while (start == 0)
    51bc:	86 e0       	ldi	r24, 0x06	; 6
    51be:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    51c2:	89 2b       	or	r24, r25
    51c4:	d9 f3       	breq	.-10     	; 0x51bc <main+0xf50>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:789
          ;
        DS = deg;
    51c6:	81 e0       	ldi	r24, 0x01	; 1
    51c8:	90 e0       	ldi	r25, 0x00	; 0
    51ca:	0e 94 f8 16 	call	0x2df0	; 0x2df0 <cmps(int)>
    51ce:	58 2e       	mov	r5, r24
    51d0:	49 2e       	mov	r4, r25
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:790
        EEPROM_write_int(DS_address, DS);
    51d2:	68 2f       	mov	r22, r24
    51d4:	79 2f       	mov	r23, r25
    51d6:	80 ea       	ldi	r24, 0xA0	; 160
    51d8:	90 e0       	ldi	r25, 0x00	; 0
    51da:	aa ce       	rjmp	.-684    	; 0x4f30 <main+0xcc4>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:792
      }
    } else if (page == 8)  // DW
    51dc:	88 30       	cpi	r24, 0x08	; 8
    51de:	09 f0       	breq	.+2      	; 0x51e2 <main+0xf76>
    51e0:	05 ce       	rjmp	.-1014   	; 0x4dec <main+0xb80>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:794
    {
      if (start == 0) {
    51e2:	86 e0       	ldi	r24, 0x06	; 6
    51e4:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    51e8:	89 2b       	or	r24, r25
    51ea:	09 f0       	breq	.+2      	; 0x51ee <main+0xf82>
    51ec:	ff cd       	rjmp	.-1026   	; 0x4dec <main+0xb80>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:795
        while (start == 0)
    51ee:	86 e0       	ldi	r24, 0x06	; 6
    51f0:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    51f4:	89 2b       	or	r24, r25
    51f6:	d9 f3       	breq	.-10     	; 0x51ee <main+0xf82>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:798
          ;
        ev_s_ball = 0;
        EEPROM_write_int(DW_address, ev_s_ball);
    51f8:	70 e0       	ldi	r23, 0x00	; 0
    51fa:	60 e0       	ldi	r22, 0x00	; 0
    51fc:	82 ea       	ldi	r24, 0xA2	; 162
    51fe:	90 e0       	ldi	r25, 0x00	; 0
    5200:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
main():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:797
    } else if (page == 8)  // DW
    {
      if (start == 0) {
        while (start == 0)
          ;
        ev_s_ball = 0;
    5204:	21 2c       	mov	r2, r1
    5206:	31 2c       	mov	r3, r1
    5208:	f1 cd       	rjmp	.-1054   	; 0x4dec <main+0xb80>
menu():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1424
      if (start == 0) {
        while (start == 0)
          ;
        menu_setup();
      }
    } else if (page == 4)  // Test Color
    520a:	84 30       	cpi	r24, 0x04	; 4
    520c:	79 f4       	brne	.+30     	; 0x522c <main+0xfc0>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1426
    {
      if (start == 0) {
    520e:	86 e0       	ldi	r24, 0x06	; 6
    5210:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    5214:	89 2b       	or	r24, r25
    5216:	09 f0       	breq	.+2      	; 0x521a <main+0xfae>
    5218:	1c ca       	rjmp	.-3016   	; 0x4652 <main+0x3e6>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1427
        lcd.clear();
    521a:	0e 94 f6 05 	call	0xbec	; 0xbec <LiquidCrystal::clear() [clone .constprop.38]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1428
        while (start == 0)
    521e:	86 e0       	ldi	r24, 0x06	; 6
    5220:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    5224:	89 2b       	or	r24, r25
    5226:	d9 f3       	breq	.-10     	; 0x521e <main+0xfb2>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1430
          ;
        menu_color();
    5228:	0e 94 93 1a 	call	0x3526	; 0x3526 <menu_color()>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1432
      }
    } else if (page == 5)  // Test Motor
    522c:	85 30       	cpi	r24, 0x05	; 5
    522e:	69 f4       	brne	.+26     	; 0x524a <main+0xfde>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1434
    {
      if (start == 0) {
    5230:	86 e0       	ldi	r24, 0x06	; 6
    5232:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    5236:	89 2b       	or	r24, r25
    5238:	09 f0       	breq	.+2      	; 0x523c <main+0xfd0>
    523a:	0b ca       	rjmp	.-3050   	; 0x4652 <main+0x3e6>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1435
        while (start == 0)
    523c:	86 e0       	ldi	r24, 0x06	; 6
    523e:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    5242:	89 2b       	or	r24, r25
    5244:	d9 f3       	breq	.-10     	; 0x523c <main+0xfd0>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1437
          ;
        menu_motor();
    5246:	0e 94 71 17 	call	0x2ee2	; 0x2ee2 <menu_motor()>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1439
      }
    } else if (page == 6)  // color calibration
    524a:	86 30       	cpi	r24, 0x06	; 6
    524c:	09 f0       	breq	.+2      	; 0x5250 <main+0xfe4>
    524e:	01 ca       	rjmp	.-3070   	; 0x4652 <main+0x3e6>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1441
    {
      if (start == 0) {
    5250:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    5254:	89 2b       	or	r24, r25
    5256:	09 f0       	breq	.+2      	; 0x525a <main+0xfee>
    5258:	fc c9       	rjmp	.-3080   	; 0x4652 <main+0x3e6>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1442
        lcd.clear();
    525a:	0e 94 f6 05 	call	0xbec	; 0xbec <LiquidCrystal::clear() [clone .constprop.38]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1443
        while (start == 0)
    525e:	86 e0       	ldi	r24, 0x06	; 6
    5260:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    5264:	89 2b       	or	r24, r25
    5266:	d9 f3       	breq	.-10     	; 0x525e <main+0xff2>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1445
          ;
        delay(200);
    5268:	68 ec       	ldi	r22, 0xC8	; 200
    526a:	70 e0       	ldi	r23, 0x00	; 0
    526c:	80 e0       	ldi	r24, 0x00	; 0
    526e:	90 e0       	ldi	r25, 0x00	; 0
    5270:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <delay>
color_calib():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:410

void color_calib(void) {
  static char page = 1, last_page = 12;
  char red_l_calibrated = 0, red_r_calibrated = 0, grn_l_calibrated = 0, grn_r_calibrated = 0, blu_l_calibrated = 0, blu_r_calibrated = 0, yel_l_calibrated = 0, yel_r_calibrated = 0, sil_l_calibrated = 0, sil_r_calibrated = 0, red_f_calibrated = 0, grn_f_calibrated = 0;

  lcd.clear();
    5274:	0e 94 f6 05 	call	0xbec	; 0xbec <LiquidCrystal::clear() [clone .constprop.38]>
main():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:408
  // delay(5);
}

void color_calib(void) {
  static char page = 1, last_page = 12;
  char red_l_calibrated = 0, red_r_calibrated = 0, grn_l_calibrated = 0, grn_r_calibrated = 0, blu_l_calibrated = 0, blu_r_calibrated = 0, yel_l_calibrated = 0, yel_r_calibrated = 0, sil_l_calibrated = 0, sil_r_calibrated = 0, red_f_calibrated = 0, grn_f_calibrated = 0;
    5278:	81 2c       	mov	r8, r1
    527a:	c0 e0       	ldi	r28, 0x00	; 0
    527c:	00 e0       	ldi	r16, 0x00	; 0
    527e:	10 e0       	ldi	r17, 0x00	; 0
    5280:	d0 e0       	ldi	r29, 0x00	; 0
    5282:	91 2c       	mov	r9, r1
    5284:	a1 2c       	mov	r10, r1
    5286:	b1 2c       	mov	r11, r1
    5288:	c1 2c       	mov	r12, r1
    528a:	d1 2c       	mov	r13, r1
    528c:	e1 2c       	mov	r14, r1
    528e:	f1 2c       	mov	r15, r1
color_calib():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:417
    if (next_page == 0) {
      while (next_page == 0)
        ;
      page++;
      if (page > last_page)
        page = 1;
    5290:	77 24       	eor	r7, r7
    5292:	73 94       	inc	r7
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:426
    if (previuse_page == 0) {
      while (previuse_page == 0)
        ;
      page--;
      if (page < 1)
        page = last_page;
    5294:	2c e0       	ldi	r18, 0x0C	; 12
    5296:	62 2e       	mov	r6, r18
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:412
  static char page = 1, last_page = 12;
  char red_l_calibrated = 0, red_r_calibrated = 0, grn_l_calibrated = 0, grn_r_calibrated = 0, blu_l_calibrated = 0, blu_r_calibrated = 0, yel_l_calibrated = 0, yel_r_calibrated = 0, sil_l_calibrated = 0, sil_r_calibrated = 0, red_f_calibrated = 0, grn_f_calibrated = 0;

  lcd.clear();
  while (1) {
    if (next_page == 0) {
    5298:	88 e0       	ldi	r24, 0x08	; 8
    529a:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    529e:	89 2b       	or	r24, r25
    52a0:	79 f4       	brne	.+30     	; 0x52c0 <main+0x1054>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:413
      while (next_page == 0)
    52a2:	88 e0       	ldi	r24, 0x08	; 8
    52a4:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    52a8:	89 2b       	or	r24, r25
    52aa:	d9 f3       	breq	.-10     	; 0x52a2 <main+0x1036>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:415
        ;
      page++;
    52ac:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <color_calib()::page>
    52b0:	8f 5f       	subi	r24, 0xFF	; 255
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:416
      if (page > last_page)
    52b2:	8d 30       	cpi	r24, 0x0D	; 13
    52b4:	0c f0       	brlt	.+2      	; 0x52b8 <main+0x104c>
    52b6:	a1 c0       	rjmp	.+322    	; 0x53fa <main+0x118e>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:415
  lcd.clear();
  while (1) {
    if (next_page == 0) {
      while (next_page == 0)
        ;
      page++;
    52b8:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <color_calib()::page>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:418
      if (page > last_page)
        page = 1;
      lcd.clear();
    52bc:	0e 94 f6 05 	call	0xbec	; 0xbec <LiquidCrystal::clear() [clone .constprop.38]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:421
    }

    if (previuse_page == 0) {
    52c0:	89 e0       	ldi	r24, 0x09	; 9
    52c2:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    52c6:	89 2b       	or	r24, r25
    52c8:	79 f4       	brne	.+30     	; 0x52e8 <main+0x107c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:422
      while (previuse_page == 0)
    52ca:	89 e0       	ldi	r24, 0x09	; 9
    52cc:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    52d0:	89 2b       	or	r24, r25
    52d2:	d9 f3       	breq	.-10     	; 0x52ca <main+0x105e>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:424
        ;
      page--;
    52d4:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <color_calib()::page>
    52d8:	81 50       	subi	r24, 0x01	; 1
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:425
      if (page < 1)
    52da:	18 16       	cp	r1, r24
    52dc:	0c f0       	brlt	.+2      	; 0x52e0 <main+0x1074>
    52de:	90 c0       	rjmp	.+288    	; 0x5400 <main+0x1194>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:424
    }

    if (previuse_page == 0) {
      while (previuse_page == 0)
        ;
      page--;
    52e0:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <color_calib()::page>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:427
      if (page < 1)
        page = last_page;
      lcd.clear();
    52e4:	0e 94 f6 05 	call	0xbec	; 0xbec <LiquidCrystal::clear() [clone .constprop.38]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:430
    }

    if (start == 0) {
    52e8:	86 e0       	ldi	r24, 0x06	; 6
    52ea:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    52ee:	89 2b       	or	r24, r25
    52f0:	41 f4       	brne	.+16     	; 0x5302 <main+0x1096>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:431
      lcd.clear();
    52f2:	0e 94 f6 05 	call	0xbec	; 0xbec <LiquidCrystal::clear() [clone .constprop.38]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:432
      delay(200);
    52f6:	68 ec       	ldi	r22, 0xC8	; 200
    52f8:	70 e0       	ldi	r23, 0x00	; 0
    52fa:	80 e0       	ldi	r24, 0x00	; 0
    52fc:	90 e0       	ldi	r25, 0x00	; 0
    52fe:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <delay>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:435
    }  // baraye inke age 2 bar khastim calib konim motevajeh beshim

    if (page <= 4) {
    5302:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <color_calib()::page>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:436
      lcd.setCursor(3, 0);
    5306:	60 e0       	ldi	r22, 0x00	; 0
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:435
    if (start == 0) {
      lcd.clear();
      delay(200);
    }  // baraye inke age 2 bar khastim calib konim motevajeh beshim

    if (page <= 4) {
    5308:	85 30       	cpi	r24, 0x05	; 5
    530a:	0c f0       	brlt	.+2      	; 0x530e <main+0x10a2>
    530c:	7c c0       	rjmp	.+248    	; 0x5406 <main+0x119a>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:436
      lcd.setCursor(3, 0);
    530e:	83 e0       	ldi	r24, 0x03	; 3
    5310:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:437
      lcd.print("RED left    ");
    5314:	87 e7       	ldi	r24, 0x77	; 119
    5316:	97 e0       	ldi	r25, 0x07	; 7
    5318:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:438
      if (red_l_calibrated == 1)
    531c:	91 e0       	ldi	r25, 0x01	; 1
    531e:	f9 12       	cpse	r15, r25
    5320:	04 c0       	rjmp	.+8      	; 0x532a <main+0x10be>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:439
        lcd.print("done");
    5322:	84 e8       	ldi	r24, 0x84	; 132
    5324:	97 e0       	ldi	r25, 0x07	; 7
    5326:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:441

      lcd.setCursor(3, 1);
    532a:	61 e0       	ldi	r22, 0x01	; 1
    532c:	83 e0       	ldi	r24, 0x03	; 3
    532e:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:442
      lcd.print("RED right   ");
    5332:	89 e8       	ldi	r24, 0x89	; 137
    5334:	97 e0       	ldi	r25, 0x07	; 7
    5336:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:443
      if (red_r_calibrated == 1)
    533a:	21 e0       	ldi	r18, 0x01	; 1
    533c:	e2 12       	cpse	r14, r18
    533e:	04 c0       	rjmp	.+8      	; 0x5348 <main+0x10dc>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:444
        lcd.print("done");
    5340:	84 e8       	ldi	r24, 0x84	; 132
    5342:	97 e0       	ldi	r25, 0x07	; 7
    5344:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:446

      lcd.setCursor(3, 2);
    5348:	62 e0       	ldi	r22, 0x02	; 2
    534a:	83 e0       	ldi	r24, 0x03	; 3
    534c:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:447
      lcd.print("Green left  ");
    5350:	86 e9       	ldi	r24, 0x96	; 150
    5352:	97 e0       	ldi	r25, 0x07	; 7
    5354:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:448
      if (grn_l_calibrated == 1)
    5358:	31 e0       	ldi	r19, 0x01	; 1
    535a:	d3 12       	cpse	r13, r19
    535c:	04 c0       	rjmp	.+8      	; 0x5366 <main+0x10fa>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:449
        lcd.print("done");
    535e:	84 e8       	ldi	r24, 0x84	; 132
    5360:	97 e0       	ldi	r25, 0x07	; 7
    5362:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:451

      lcd.setCursor(3, 3);
    5366:	63 e0       	ldi	r22, 0x03	; 3
    5368:	83 e0       	ldi	r24, 0x03	; 3
    536a:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:452
      lcd.print("Green right ");
    536e:	83 ea       	ldi	r24, 0xA3	; 163
    5370:	97 e0       	ldi	r25, 0x07	; 7
    5372:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:453
      if (grn_r_calibrated == 1)
    5376:	81 e0       	ldi	r24, 0x01	; 1
    5378:	c8 12       	cpse	r12, r24
    537a:	04 c0       	rjmp	.+8      	; 0x5384 <main+0x1118>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:454
        lcd.print("done");
    537c:	84 e8       	ldi	r24, 0x84	; 132
    537e:	97 e0       	ldi	r25, 0x07	; 7
    5380:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:456

      lcd.setCursor(0, page - 1);
    5384:	60 91 04 01 	lds	r22, 0x0104	; 0x800104 <color_calib()::page>
    5388:	61 50       	subi	r22, 0x01	; 1
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:502
      lcd.setCursor(3, 3);
      lcd.print("Red Front");
      if (red_f_calibrated == 1)
        lcd.print("done");

      lcd.setCursor(0, page - 9);
    538a:	80 e0       	ldi	r24, 0x00	; 0
    538c:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:503
      lcd.print("-> ");
    5390:	80 eb       	ldi	r24, 0xB0	; 176
    5392:	97 e0       	ldi	r25, 0x07	; 7
    5394:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:506
    }

    if (page == 1)  // -> red left
    5398:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <color_calib()::page>
    539c:	81 30       	cpi	r24, 0x01	; 1
    539e:	09 f0       	breq	.+2      	; 0x53a2 <main+0x1136>
    53a0:	ae c0       	rjmp	.+348    	; 0x54fe <main+0x1292>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:508
    {
      if (start == 0) {
    53a2:	86 e0       	ldi	r24, 0x06	; 6
    53a4:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    53a8:	89 2b       	or	r24, r25
    53aa:	09 f0       	breq	.+2      	; 0x53ae <main+0x1142>
    53ac:	75 cf       	rjmp	.-278    	; 0x5298 <main+0x102c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:509
        color_L;
    53ae:	81 e0       	ldi	r24, 0x01	; 1
    53b0:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <color(char)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:514
        // EEPROM_read_int(red_left_r) = red;
        // EEPROM_read_int(red_left_g) = green;
        // EEPROM_read_int(red_left_b) = blue;
        // EEPROM_read_int(red_left_c) = clear;
        EEPROM_write_int(red_left_r, red);
    53b4:	60 91 c9 08 	lds	r22, 0x08C9	; 0x8008c9 <red>
    53b8:	70 91 ca 08 	lds	r23, 0x08CA	; 0x8008ca <red+0x1>
    53bc:	84 e1       	ldi	r24, 0x14	; 20
    53be:	90 e0       	ldi	r25, 0x00	; 0
    53c0:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:515
        EEPROM_write_int(red_left_g, green);
    53c4:	60 91 c7 08 	lds	r22, 0x08C7	; 0x8008c7 <green>
    53c8:	70 91 c8 08 	lds	r23, 0x08C8	; 0x8008c8 <green+0x1>
    53cc:	86 e1       	ldi	r24, 0x16	; 22
    53ce:	90 e0       	ldi	r25, 0x00	; 0
    53d0:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:516
        EEPROM_write_int(red_left_b, blue);
    53d4:	60 91 c5 08 	lds	r22, 0x08C5	; 0x8008c5 <blue>
    53d8:	70 91 c6 08 	lds	r23, 0x08C6	; 0x8008c6 <blue+0x1>
    53dc:	88 e1       	ldi	r24, 0x18	; 24
    53de:	90 e0       	ldi	r25, 0x00	; 0
    53e0:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:517
        EEPROM_write_int(red_left_c, clear);
    53e4:	60 91 c3 08 	lds	r22, 0x08C3	; 0x8008c3 <clear>
    53e8:	70 91 c4 08 	lds	r23, 0x08C4	; 0x8008c4 <clear+0x1>
    53ec:	8a e1       	ldi	r24, 0x1A	; 26
    53ee:	90 e0       	ldi	r25, 0x00	; 0
    53f0:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
main():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:518
        red_l_calibrated = 1;
    53f4:	ff 24       	eor	r15, r15
    53f6:	f3 94       	inc	r15
    53f8:	4f cf       	rjmp	.-354    	; 0x5298 <main+0x102c>
color_calib():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:417
    if (next_page == 0) {
      while (next_page == 0)
        ;
      page++;
      if (page > last_page)
        page = 1;
    53fa:	70 92 04 01 	sts	0x0104, r7	; 0x800104 <color_calib()::page>
    53fe:	5e cf       	rjmp	.-324    	; 0x52bc <main+0x1050>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:426
    if (previuse_page == 0) {
      while (previuse_page == 0)
        ;
      page--;
      if (page < 1)
        page = last_page;
    5400:	60 92 04 01 	sts	0x0104, r6	; 0x800104 <color_calib()::page>
    5404:	6f cf       	rjmp	.-290    	; 0x52e4 <main+0x1078>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:458
      if (grn_r_calibrated == 1)
        lcd.print("done");

      lcd.setCursor(0, page - 1);
      lcd.print("-> ");
    } else if (page <= 8) {
    5406:	89 30       	cpi	r24, 0x09	; 9
    5408:	f4 f5       	brge	.+124    	; 0x5486 <main+0x121a>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:459
      lcd.setCursor(3, 0);
    540a:	83 e0       	ldi	r24, 0x03	; 3
    540c:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:460
      lcd.print("BLUE left   ");
    5410:	84 eb       	ldi	r24, 0xB4	; 180
    5412:	97 e0       	ldi	r25, 0x07	; 7
    5414:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:461
      if (blu_l_calibrated == 1)
    5418:	91 e0       	ldi	r25, 0x01	; 1
    541a:	b9 12       	cpse	r11, r25
    541c:	04 c0       	rjmp	.+8      	; 0x5426 <main+0x11ba>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:462
        lcd.print("done");
    541e:	84 e8       	ldi	r24, 0x84	; 132
    5420:	97 e0       	ldi	r25, 0x07	; 7
    5422:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:464

      lcd.setCursor(3, 1);
    5426:	61 e0       	ldi	r22, 0x01	; 1
    5428:	83 e0       	ldi	r24, 0x03	; 3
    542a:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:465
      lcd.print("BLUE right  ");
    542e:	81 ec       	ldi	r24, 0xC1	; 193
    5430:	97 e0       	ldi	r25, 0x07	; 7
    5432:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:466
      if (blu_r_calibrated == 1)
    5436:	21 e0       	ldi	r18, 0x01	; 1
    5438:	a2 12       	cpse	r10, r18
    543a:	04 c0       	rjmp	.+8      	; 0x5444 <main+0x11d8>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:467
        lcd.print("done");
    543c:	84 e8       	ldi	r24, 0x84	; 132
    543e:	97 e0       	ldi	r25, 0x07	; 7
    5440:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:469

      lcd.setCursor(3, 2);
    5444:	62 e0       	ldi	r22, 0x02	; 2
    5446:	83 e0       	ldi	r24, 0x03	; 3
    5448:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:470
      lcd.print("YELLOW left ");
    544c:	8e ec       	ldi	r24, 0xCE	; 206
    544e:	97 e0       	ldi	r25, 0x07	; 7
    5450:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:471
      if (yel_l_calibrated == 1)
    5454:	31 e0       	ldi	r19, 0x01	; 1
    5456:	93 12       	cpse	r9, r19
    5458:	04 c0       	rjmp	.+8      	; 0x5462 <main+0x11f6>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:472
        lcd.print("done");
    545a:	84 e8       	ldi	r24, 0x84	; 132
    545c:	97 e0       	ldi	r25, 0x07	; 7
    545e:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:474

      lcd.setCursor(3, 3);
    5462:	63 e0       	ldi	r22, 0x03	; 3
    5464:	83 e0       	ldi	r24, 0x03	; 3
    5466:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:475
      lcd.print("YELLOW right ");
    546a:	8b ed       	ldi	r24, 0xDB	; 219
    546c:	97 e0       	ldi	r25, 0x07	; 7
    546e:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:476
      if (yel_r_calibrated == 1)
    5472:	d1 30       	cpi	r29, 0x01	; 1
    5474:	21 f4       	brne	.+8      	; 0x547e <main+0x1212>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:477
        lcd.print("done");
    5476:	84 e8       	ldi	r24, 0x84	; 132
    5478:	97 e0       	ldi	r25, 0x07	; 7
    547a:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:479

      lcd.setCursor(0, page - 5);
    547e:	60 91 04 01 	lds	r22, 0x0104	; 0x800104 <color_calib()::page>
    5482:	65 50       	subi	r22, 0x05	; 5
    5484:	82 cf       	rjmp	.-252    	; 0x538a <main+0x111e>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:482
      lcd.print("-> ");
    } else {
      lcd.setCursor(3, 0);
    5486:	83 e0       	ldi	r24, 0x03	; 3
    5488:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:483
      lcd.print("SILVER left  ");
    548c:	89 ee       	ldi	r24, 0xE9	; 233
    548e:	97 e0       	ldi	r25, 0x07	; 7
    5490:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:484
      if (sil_l_calibrated == 1)
    5494:	11 30       	cpi	r17, 0x01	; 1
    5496:	21 f4       	brne	.+8      	; 0x54a0 <main+0x1234>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:485
        lcd.print("done");
    5498:	84 e8       	ldi	r24, 0x84	; 132
    549a:	97 e0       	ldi	r25, 0x07	; 7
    549c:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:487

      lcd.setCursor(3, 1);
    54a0:	61 e0       	ldi	r22, 0x01	; 1
    54a2:	83 e0       	ldi	r24, 0x03	; 3
    54a4:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:488
      lcd.print("SILVER right ");
    54a8:	87 ef       	ldi	r24, 0xF7	; 247
    54aa:	97 e0       	ldi	r25, 0x07	; 7
    54ac:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:489
      if (sil_r_calibrated == 1)
    54b0:	01 30       	cpi	r16, 0x01	; 1
    54b2:	21 f4       	brne	.+8      	; 0x54bc <main+0x1250>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:490
        lcd.print("done");
    54b4:	84 e8       	ldi	r24, 0x84	; 132
    54b6:	97 e0       	ldi	r25, 0x07	; 7
    54b8:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:492

      lcd.setCursor(3, 2);
    54bc:	62 e0       	ldi	r22, 0x02	; 2
    54be:	83 e0       	ldi	r24, 0x03	; 3
    54c0:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:493
      lcd.print("Green Front ");
    54c4:	85 e0       	ldi	r24, 0x05	; 5
    54c6:	98 e0       	ldi	r25, 0x08	; 8
    54c8:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:494
      if (grn_f_calibrated == 1)
    54cc:	81 e0       	ldi	r24, 0x01	; 1
    54ce:	88 12       	cpse	r8, r24
    54d0:	04 c0       	rjmp	.+8      	; 0x54da <main+0x126e>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:495
        lcd.print("done");
    54d2:	84 e8       	ldi	r24, 0x84	; 132
    54d4:	97 e0       	ldi	r25, 0x07	; 7
    54d6:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:497

      lcd.setCursor(3, 3);
    54da:	63 e0       	ldi	r22, 0x03	; 3
    54dc:	83 e0       	ldi	r24, 0x03	; 3
    54de:	0e 94 9e 06 	call	0xd3c	; 0xd3c <LiquidCrystal::setCursor(unsigned char, unsigned char) [clone .constprop.27]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:498
      lcd.print("Red Front");
    54e2:	82 e1       	ldi	r24, 0x12	; 18
    54e4:	98 e0       	ldi	r25, 0x08	; 8
    54e6:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:499
      if (red_f_calibrated == 1)
    54ea:	c1 30       	cpi	r28, 0x01	; 1
    54ec:	21 f4       	brne	.+8      	; 0x54f6 <main+0x128a>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:500
        lcd.print("done");
    54ee:	84 e8       	ldi	r24, 0x84	; 132
    54f0:	97 e0       	ldi	r25, 0x07	; 7
    54f2:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:502

      lcd.setCursor(0, page - 9);
    54f6:	60 91 04 01 	lds	r22, 0x0104	; 0x800104 <color_calib()::page>
    54fa:	69 50       	subi	r22, 0x09	; 9
    54fc:	46 cf       	rjmp	.-372    	; 0x538a <main+0x111e>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:520
        EEPROM_write_int(red_left_g, green);
        EEPROM_write_int(red_left_b, blue);
        EEPROM_write_int(red_left_c, clear);
        red_l_calibrated = 1;
      }
    } else if (page == 2)  // red right
    54fe:	82 30       	cpi	r24, 0x02	; 2
    5500:	61 f5       	brne	.+88     	; 0x555a <main+0x12ee>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:522
    {
      if (start == 0) {
    5502:	86 e0       	ldi	r24, 0x06	; 6
    5504:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    5508:	89 2b       	or	r24, r25
    550a:	09 f0       	breq	.+2      	; 0x550e <main+0x12a2>
    550c:	c5 ce       	rjmp	.-630    	; 0x5298 <main+0x102c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:523
        color_R;
    550e:	82 e0       	ldi	r24, 0x02	; 2
    5510:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <color(char)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:524
        EEPROM_write_int(red_right_r, red);
    5514:	60 91 c9 08 	lds	r22, 0x08C9	; 0x8008c9 <red>
    5518:	70 91 ca 08 	lds	r23, 0x08CA	; 0x8008ca <red+0x1>
    551c:	8c e3       	ldi	r24, 0x3C	; 60
    551e:	90 e0       	ldi	r25, 0x00	; 0
    5520:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:525
        EEPROM_write_int(red_right_g, green);
    5524:	60 91 c7 08 	lds	r22, 0x08C7	; 0x8008c7 <green>
    5528:	70 91 c8 08 	lds	r23, 0x08C8	; 0x8008c8 <green+0x1>
    552c:	8e e3       	ldi	r24, 0x3E	; 62
    552e:	90 e0       	ldi	r25, 0x00	; 0
    5530:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:526
        EEPROM_write_int(red_right_b, blue);
    5534:	60 91 c5 08 	lds	r22, 0x08C5	; 0x8008c5 <blue>
    5538:	70 91 c6 08 	lds	r23, 0x08C6	; 0x8008c6 <blue+0x1>
    553c:	80 e4       	ldi	r24, 0x40	; 64
    553e:	90 e0       	ldi	r25, 0x00	; 0
    5540:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:527
        EEPROM_write_int(red_right_c, clear);
    5544:	60 91 c3 08 	lds	r22, 0x08C3	; 0x8008c3 <clear>
    5548:	70 91 c4 08 	lds	r23, 0x08C4	; 0x8008c4 <clear+0x1>
    554c:	82 e4       	ldi	r24, 0x42	; 66
    554e:	90 e0       	ldi	r25, 0x00	; 0
    5550:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
main():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:528
        red_r_calibrated = 1;
    5554:	ee 24       	eor	r14, r14
    5556:	e3 94       	inc	r14
    5558:	9f ce       	rjmp	.-706    	; 0x5298 <main+0x102c>
color_calib():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:532
      }
    }

    else if (page == 3)  // grn left
    555a:	83 30       	cpi	r24, 0x03	; 3
    555c:	61 f5       	brne	.+88     	; 0x55b6 <main+0x134a>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:534
    {
      if (start == 0) {
    555e:	86 e0       	ldi	r24, 0x06	; 6
    5560:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    5564:	89 2b       	or	r24, r25
    5566:	09 f0       	breq	.+2      	; 0x556a <main+0x12fe>
    5568:	97 ce       	rjmp	.-722    	; 0x5298 <main+0x102c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:535
        color_L;
    556a:	81 e0       	ldi	r24, 0x01	; 1
    556c:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <color(char)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:536
        EEPROM_write_int(green_left_r, red);
    5570:	60 91 c9 08 	lds	r22, 0x08C9	; 0x8008c9 <red>
    5574:	70 91 ca 08 	lds	r23, 0x08CA	; 0x8008ca <red+0x1>
    5578:	8c e1       	ldi	r24, 0x1C	; 28
    557a:	90 e0       	ldi	r25, 0x00	; 0
    557c:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:537
        EEPROM_write_int(green_left_g, green);
    5580:	60 91 c7 08 	lds	r22, 0x08C7	; 0x8008c7 <green>
    5584:	70 91 c8 08 	lds	r23, 0x08C8	; 0x8008c8 <green+0x1>
    5588:	8e e1       	ldi	r24, 0x1E	; 30
    558a:	90 e0       	ldi	r25, 0x00	; 0
    558c:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:538
        EEPROM_write_int(green_left_b, blue);
    5590:	60 91 c5 08 	lds	r22, 0x08C5	; 0x8008c5 <blue>
    5594:	70 91 c6 08 	lds	r23, 0x08C6	; 0x8008c6 <blue+0x1>
    5598:	80 e2       	ldi	r24, 0x20	; 32
    559a:	90 e0       	ldi	r25, 0x00	; 0
    559c:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:539
        EEPROM_write_int(green_left_c, clear);
    55a0:	60 91 c3 08 	lds	r22, 0x08C3	; 0x8008c3 <clear>
    55a4:	70 91 c4 08 	lds	r23, 0x08C4	; 0x8008c4 <clear+0x1>
    55a8:	82 e2       	ldi	r24, 0x22	; 34
    55aa:	90 e0       	ldi	r25, 0x00	; 0
    55ac:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
main():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:540
        grn_l_calibrated = 1;
    55b0:	dd 24       	eor	r13, r13
    55b2:	d3 94       	inc	r13
    55b4:	71 ce       	rjmp	.-798    	; 0x5298 <main+0x102c>
color_calib():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:542
      }
    } else if (page == 4)  // grn right
    55b6:	84 30       	cpi	r24, 0x04	; 4
    55b8:	61 f5       	brne	.+88     	; 0x5612 <main+0x13a6>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:544
    {
      if (start == 0) {
    55ba:	86 e0       	ldi	r24, 0x06	; 6
    55bc:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    55c0:	89 2b       	or	r24, r25
    55c2:	09 f0       	breq	.+2      	; 0x55c6 <main+0x135a>
    55c4:	69 ce       	rjmp	.-814    	; 0x5298 <main+0x102c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:545
        color_R;
    55c6:	82 e0       	ldi	r24, 0x02	; 2
    55c8:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <color(char)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:546
        EEPROM_write_int(green_right_r, red);
    55cc:	60 91 c9 08 	lds	r22, 0x08C9	; 0x8008c9 <red>
    55d0:	70 91 ca 08 	lds	r23, 0x08CA	; 0x8008ca <red+0x1>
    55d4:	84 e4       	ldi	r24, 0x44	; 68
    55d6:	90 e0       	ldi	r25, 0x00	; 0
    55d8:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:547
        EEPROM_write_int(green_right_g, green);
    55dc:	60 91 c7 08 	lds	r22, 0x08C7	; 0x8008c7 <green>
    55e0:	70 91 c8 08 	lds	r23, 0x08C8	; 0x8008c8 <green+0x1>
    55e4:	86 e4       	ldi	r24, 0x46	; 70
    55e6:	90 e0       	ldi	r25, 0x00	; 0
    55e8:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:548
        EEPROM_write_int(green_right_b, blue);
    55ec:	60 91 c5 08 	lds	r22, 0x08C5	; 0x8008c5 <blue>
    55f0:	70 91 c6 08 	lds	r23, 0x08C6	; 0x8008c6 <blue+0x1>
    55f4:	88 e4       	ldi	r24, 0x48	; 72
    55f6:	90 e0       	ldi	r25, 0x00	; 0
    55f8:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:549
        EEPROM_write_int(green_right_c, clear);
    55fc:	60 91 c3 08 	lds	r22, 0x08C3	; 0x8008c3 <clear>
    5600:	70 91 c4 08 	lds	r23, 0x08C4	; 0x8008c4 <clear+0x1>
    5604:	8a e4       	ldi	r24, 0x4A	; 74
    5606:	90 e0       	ldi	r25, 0x00	; 0
    5608:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
main():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:550
        grn_r_calibrated = 1;
    560c:	cc 24       	eor	r12, r12
    560e:	c3 94       	inc	r12
    5610:	43 ce       	rjmp	.-890    	; 0x5298 <main+0x102c>
color_calib():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:554
      }
    }

    else if (page == 5)  // blu left
    5612:	85 30       	cpi	r24, 0x05	; 5
    5614:	61 f5       	brne	.+88     	; 0x566e <main+0x1402>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:556
    {
      if (start == 0) {
    5616:	86 e0       	ldi	r24, 0x06	; 6
    5618:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    561c:	89 2b       	or	r24, r25
    561e:	09 f0       	breq	.+2      	; 0x5622 <main+0x13b6>
    5620:	3b ce       	rjmp	.-906    	; 0x5298 <main+0x102c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:557
        color_L;
    5622:	81 e0       	ldi	r24, 0x01	; 1
    5624:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <color(char)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:558
        EEPROM_write_int(blue_left_r, red);
    5628:	60 91 c9 08 	lds	r22, 0x08C9	; 0x8008c9 <red>
    562c:	70 91 ca 08 	lds	r23, 0x08CA	; 0x8008ca <red+0x1>
    5630:	84 e2       	ldi	r24, 0x24	; 36
    5632:	90 e0       	ldi	r25, 0x00	; 0
    5634:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:559
        EEPROM_write_int(blue_left_g, green);
    5638:	60 91 c7 08 	lds	r22, 0x08C7	; 0x8008c7 <green>
    563c:	70 91 c8 08 	lds	r23, 0x08C8	; 0x8008c8 <green+0x1>
    5640:	86 e2       	ldi	r24, 0x26	; 38
    5642:	90 e0       	ldi	r25, 0x00	; 0
    5644:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:560
        EEPROM_write_int(blue_left_b, blue);
    5648:	60 91 c5 08 	lds	r22, 0x08C5	; 0x8008c5 <blue>
    564c:	70 91 c6 08 	lds	r23, 0x08C6	; 0x8008c6 <blue+0x1>
    5650:	88 e2       	ldi	r24, 0x28	; 40
    5652:	90 e0       	ldi	r25, 0x00	; 0
    5654:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:561
        EEPROM_write_int(blue_left_c, clear);
    5658:	60 91 c3 08 	lds	r22, 0x08C3	; 0x8008c3 <clear>
    565c:	70 91 c4 08 	lds	r23, 0x08C4	; 0x8008c4 <clear+0x1>
    5660:	8a e2       	ldi	r24, 0x2A	; 42
    5662:	90 e0       	ldi	r25, 0x00	; 0
    5664:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
main():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:562
        blu_l_calibrated = 1;
    5668:	bb 24       	eor	r11, r11
    566a:	b3 94       	inc	r11
    566c:	15 ce       	rjmp	.-982    	; 0x5298 <main+0x102c>
color_calib():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:564
      }
    } else if (page == 6)  // blu right
    566e:	86 30       	cpi	r24, 0x06	; 6
    5670:	59 f5       	brne	.+86     	; 0x56c8 <main+0x145c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:566
    {
      if (start == 0) {
    5672:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    5676:	89 2b       	or	r24, r25
    5678:	09 f0       	breq	.+2      	; 0x567c <main+0x1410>
    567a:	0e ce       	rjmp	.-996    	; 0x5298 <main+0x102c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:567
        color_R;
    567c:	82 e0       	ldi	r24, 0x02	; 2
    567e:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <color(char)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:568
        EEPROM_write_int(blue_right_r, red);
    5682:	60 91 c9 08 	lds	r22, 0x08C9	; 0x8008c9 <red>
    5686:	70 91 ca 08 	lds	r23, 0x08CA	; 0x8008ca <red+0x1>
    568a:	8c e4       	ldi	r24, 0x4C	; 76
    568c:	90 e0       	ldi	r25, 0x00	; 0
    568e:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:569
        EEPROM_write_int(blue_right_g, green);
    5692:	60 91 c7 08 	lds	r22, 0x08C7	; 0x8008c7 <green>
    5696:	70 91 c8 08 	lds	r23, 0x08C8	; 0x8008c8 <green+0x1>
    569a:	8e e4       	ldi	r24, 0x4E	; 78
    569c:	90 e0       	ldi	r25, 0x00	; 0
    569e:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:570
        EEPROM_write_int(blue_right_b, blue);
    56a2:	60 91 c5 08 	lds	r22, 0x08C5	; 0x8008c5 <blue>
    56a6:	70 91 c6 08 	lds	r23, 0x08C6	; 0x8008c6 <blue+0x1>
    56aa:	80 e5       	ldi	r24, 0x50	; 80
    56ac:	90 e0       	ldi	r25, 0x00	; 0
    56ae:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:571
        EEPROM_write_int(blue_right_c, clear);
    56b2:	60 91 c3 08 	lds	r22, 0x08C3	; 0x8008c3 <clear>
    56b6:	70 91 c4 08 	lds	r23, 0x08C4	; 0x8008c4 <clear+0x1>
    56ba:	82 e5       	ldi	r24, 0x52	; 82
    56bc:	90 e0       	ldi	r25, 0x00	; 0
    56be:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
main():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:572
        blu_r_calibrated = 1;
    56c2:	aa 24       	eor	r10, r10
    56c4:	a3 94       	inc	r10
    56c6:	e8 cd       	rjmp	.-1072   	; 0x5298 <main+0x102c>
color_calib():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:576
      }
    }

    else if (page == 7)  // yelow left
    56c8:	87 30       	cpi	r24, 0x07	; 7
    56ca:	61 f5       	brne	.+88     	; 0x5724 <main+0x14b8>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:578
    {
      if (start == 0) {
    56cc:	86 e0       	ldi	r24, 0x06	; 6
    56ce:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    56d2:	89 2b       	or	r24, r25
    56d4:	09 f0       	breq	.+2      	; 0x56d8 <main+0x146c>
    56d6:	e0 cd       	rjmp	.-1088   	; 0x5298 <main+0x102c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:579
        color_L;
    56d8:	81 e0       	ldi	r24, 0x01	; 1
    56da:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <color(char)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:580
        EEPROM_write_int(yellow_left_r, red);
    56de:	60 91 c9 08 	lds	r22, 0x08C9	; 0x8008c9 <red>
    56e2:	70 91 ca 08 	lds	r23, 0x08CA	; 0x8008ca <red+0x1>
    56e6:	8c e2       	ldi	r24, 0x2C	; 44
    56e8:	90 e0       	ldi	r25, 0x00	; 0
    56ea:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:581
        EEPROM_write_int(yellow_left_g, green);
    56ee:	60 91 c7 08 	lds	r22, 0x08C7	; 0x8008c7 <green>
    56f2:	70 91 c8 08 	lds	r23, 0x08C8	; 0x8008c8 <green+0x1>
    56f6:	8e e2       	ldi	r24, 0x2E	; 46
    56f8:	90 e0       	ldi	r25, 0x00	; 0
    56fa:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:582
        EEPROM_write_int(yellow_left_b, blue);
    56fe:	60 91 c5 08 	lds	r22, 0x08C5	; 0x8008c5 <blue>
    5702:	70 91 c6 08 	lds	r23, 0x08C6	; 0x8008c6 <blue+0x1>
    5706:	80 e3       	ldi	r24, 0x30	; 48
    5708:	90 e0       	ldi	r25, 0x00	; 0
    570a:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:583
        EEPROM_write_int(yellow_left_c, clear);
    570e:	60 91 c3 08 	lds	r22, 0x08C3	; 0x8008c3 <clear>
    5712:	70 91 c4 08 	lds	r23, 0x08C4	; 0x8008c4 <clear+0x1>
    5716:	82 e3       	ldi	r24, 0x32	; 50
    5718:	90 e0       	ldi	r25, 0x00	; 0
    571a:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
main():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:584
        yel_l_calibrated = 1;
    571e:	99 24       	eor	r9, r9
    5720:	93 94       	inc	r9
    5722:	ba cd       	rjmp	.-1164   	; 0x5298 <main+0x102c>
color_calib():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:586
      }
    } else if (page == 8)  // yelow right
    5724:	88 30       	cpi	r24, 0x08	; 8
    5726:	59 f5       	brne	.+86     	; 0x577e <main+0x1512>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:588
    {
      if (start == 0) {
    5728:	86 e0       	ldi	r24, 0x06	; 6
    572a:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    572e:	89 2b       	or	r24, r25
    5730:	09 f0       	breq	.+2      	; 0x5734 <main+0x14c8>
    5732:	b2 cd       	rjmp	.-1180   	; 0x5298 <main+0x102c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:589
        color_R;
    5734:	82 e0       	ldi	r24, 0x02	; 2
    5736:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <color(char)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:590
        EEPROM_write_int(yellow_right_r, red);
    573a:	60 91 c9 08 	lds	r22, 0x08C9	; 0x8008c9 <red>
    573e:	70 91 ca 08 	lds	r23, 0x08CA	; 0x8008ca <red+0x1>
    5742:	84 e5       	ldi	r24, 0x54	; 84
    5744:	90 e0       	ldi	r25, 0x00	; 0
    5746:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:591
        EEPROM_write_int(yellow_right_g, green);
    574a:	60 91 c7 08 	lds	r22, 0x08C7	; 0x8008c7 <green>
    574e:	70 91 c8 08 	lds	r23, 0x08C8	; 0x8008c8 <green+0x1>
    5752:	86 e5       	ldi	r24, 0x56	; 86
    5754:	90 e0       	ldi	r25, 0x00	; 0
    5756:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:592
        EEPROM_write_int(yellow_right_b, blue);
    575a:	60 91 c5 08 	lds	r22, 0x08C5	; 0x8008c5 <blue>
    575e:	70 91 c6 08 	lds	r23, 0x08C6	; 0x8008c6 <blue+0x1>
    5762:	88 e5       	ldi	r24, 0x58	; 88
    5764:	90 e0       	ldi	r25, 0x00	; 0
    5766:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:593
        EEPROM_write_int(yellow_right_c, clear);
    576a:	60 91 c3 08 	lds	r22, 0x08C3	; 0x8008c3 <clear>
    576e:	70 91 c4 08 	lds	r23, 0x08C4	; 0x8008c4 <clear+0x1>
    5772:	8a e5       	ldi	r24, 0x5A	; 90
    5774:	90 e0       	ldi	r25, 0x00	; 0
    5776:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
main():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:594
        yel_r_calibrated = 1;
    577a:	d1 e0       	ldi	r29, 0x01	; 1
    577c:	8d cd       	rjmp	.-1254   	; 0x5298 <main+0x102c>
color_calib():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:598
      }
    }

    else if (page == 9)  // sil left
    577e:	89 30       	cpi	r24, 0x09	; 9
    5780:	59 f5       	brne	.+86     	; 0x57d8 <main+0x156c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:600
    {
      if (start == 0) {
    5782:	86 e0       	ldi	r24, 0x06	; 6
    5784:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    5788:	89 2b       	or	r24, r25
    578a:	09 f0       	breq	.+2      	; 0x578e <main+0x1522>
    578c:	85 cd       	rjmp	.-1270   	; 0x5298 <main+0x102c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:601
        color_L;
    578e:	81 e0       	ldi	r24, 0x01	; 1
    5790:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <color(char)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:602
        EEPROM_write_int(silver_left_r, red);
    5794:	60 91 c9 08 	lds	r22, 0x08C9	; 0x8008c9 <red>
    5798:	70 91 ca 08 	lds	r23, 0x08CA	; 0x8008ca <red+0x1>
    579c:	84 e3       	ldi	r24, 0x34	; 52
    579e:	90 e0       	ldi	r25, 0x00	; 0
    57a0:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:603
        EEPROM_write_int(silver_left_g, green);
    57a4:	60 91 c7 08 	lds	r22, 0x08C7	; 0x8008c7 <green>
    57a8:	70 91 c8 08 	lds	r23, 0x08C8	; 0x8008c8 <green+0x1>
    57ac:	86 e3       	ldi	r24, 0x36	; 54
    57ae:	90 e0       	ldi	r25, 0x00	; 0
    57b0:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:604
        EEPROM_write_int(silver_left_b, blue);
    57b4:	60 91 c5 08 	lds	r22, 0x08C5	; 0x8008c5 <blue>
    57b8:	70 91 c6 08 	lds	r23, 0x08C6	; 0x8008c6 <blue+0x1>
    57bc:	88 e3       	ldi	r24, 0x38	; 56
    57be:	90 e0       	ldi	r25, 0x00	; 0
    57c0:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:605
        EEPROM_write_int(silver_left_c, clear);
    57c4:	60 91 c3 08 	lds	r22, 0x08C3	; 0x8008c3 <clear>
    57c8:	70 91 c4 08 	lds	r23, 0x08C4	; 0x8008c4 <clear+0x1>
    57cc:	8a e3       	ldi	r24, 0x3A	; 58
    57ce:	90 e0       	ldi	r25, 0x00	; 0
    57d0:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
main():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:606
        sil_l_calibrated = 1;
    57d4:	11 e0       	ldi	r17, 0x01	; 1
    57d6:	60 cd       	rjmp	.-1344   	; 0x5298 <main+0x102c>
color_calib():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:608
      }
    } else if (page == 10)  // sil right
    57d8:	8a 30       	cpi	r24, 0x0A	; 10
    57da:	59 f5       	brne	.+86     	; 0x5832 <main+0x15c6>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:610
    {
      if (start == 0) {
    57dc:	86 e0       	ldi	r24, 0x06	; 6
    57de:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    57e2:	89 2b       	or	r24, r25
    57e4:	09 f0       	breq	.+2      	; 0x57e8 <main+0x157c>
    57e6:	58 cd       	rjmp	.-1360   	; 0x5298 <main+0x102c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:611
        color_R;
    57e8:	82 e0       	ldi	r24, 0x02	; 2
    57ea:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <color(char)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:612
        EEPROM_write_int(silver_right_r, red);
    57ee:	60 91 c9 08 	lds	r22, 0x08C9	; 0x8008c9 <red>
    57f2:	70 91 ca 08 	lds	r23, 0x08CA	; 0x8008ca <red+0x1>
    57f6:	8c e5       	ldi	r24, 0x5C	; 92
    57f8:	90 e0       	ldi	r25, 0x00	; 0
    57fa:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:613
        EEPROM_write_int(silver_right_g, green);
    57fe:	60 91 c7 08 	lds	r22, 0x08C7	; 0x8008c7 <green>
    5802:	70 91 c8 08 	lds	r23, 0x08C8	; 0x8008c8 <green+0x1>
    5806:	8e e5       	ldi	r24, 0x5E	; 94
    5808:	90 e0       	ldi	r25, 0x00	; 0
    580a:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:614
        EEPROM_write_int(silver_right_b, blue);
    580e:	60 91 c5 08 	lds	r22, 0x08C5	; 0x8008c5 <blue>
    5812:	70 91 c6 08 	lds	r23, 0x08C6	; 0x8008c6 <blue+0x1>
    5816:	80 e6       	ldi	r24, 0x60	; 96
    5818:	90 e0       	ldi	r25, 0x00	; 0
    581a:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:615
        EEPROM_write_int(silver_right_c, clear);
    581e:	60 91 c3 08 	lds	r22, 0x08C3	; 0x8008c3 <clear>
    5822:	70 91 c4 08 	lds	r23, 0x08C4	; 0x8008c4 <clear+0x1>
    5826:	82 e6       	ldi	r24, 0x62	; 98
    5828:	90 e0       	ldi	r25, 0x00	; 0
    582a:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
main():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:616
        sil_r_calibrated = 1;
    582e:	01 e0       	ldi	r16, 0x01	; 1
    5830:	33 cd       	rjmp	.-1434   	; 0x5298 <main+0x102c>
color_calib():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:618
      }
    } else if (page == 11)  // grn front
    5832:	8b 30       	cpi	r24, 0x0B	; 11
    5834:	61 f5       	brne	.+88     	; 0x588e <main+0x1622>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:620
    {
      if (start == 0) {
    5836:	86 e0       	ldi	r24, 0x06	; 6
    5838:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    583c:	89 2b       	or	r24, r25
    583e:	09 f0       	breq	.+2      	; 0x5842 <main+0x15d6>
    5840:	2b cd       	rjmp	.-1450   	; 0x5298 <main+0x102c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:621
        color_F;
    5842:	83 e0       	ldi	r24, 0x03	; 3
    5844:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <color(char)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:622
        EEPROM_write_int(green_front_r, red);
    5848:	60 91 c9 08 	lds	r22, 0x08C9	; 0x8008c9 <red>
    584c:	70 91 ca 08 	lds	r23, 0x08CA	; 0x8008ca <red+0x1>
    5850:	8c e6       	ldi	r24, 0x6C	; 108
    5852:	90 e0       	ldi	r25, 0x00	; 0
    5854:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:623
        EEPROM_write_int(green_front_g, green);
    5858:	60 91 c7 08 	lds	r22, 0x08C7	; 0x8008c7 <green>
    585c:	70 91 c8 08 	lds	r23, 0x08C8	; 0x8008c8 <green+0x1>
    5860:	8e e6       	ldi	r24, 0x6E	; 110
    5862:	90 e0       	ldi	r25, 0x00	; 0
    5864:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:624
        EEPROM_write_int(green_front_b, blue);
    5868:	60 91 c5 08 	lds	r22, 0x08C5	; 0x8008c5 <blue>
    586c:	70 91 c6 08 	lds	r23, 0x08C6	; 0x8008c6 <blue+0x1>
    5870:	80 e7       	ldi	r24, 0x70	; 112
    5872:	90 e0       	ldi	r25, 0x00	; 0
    5874:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:625
        EEPROM_write_int(green_front_c, clear);
    5878:	60 91 c3 08 	lds	r22, 0x08C3	; 0x8008c3 <clear>
    587c:	70 91 c4 08 	lds	r23, 0x08C4	; 0x8008c4 <clear+0x1>
    5880:	82 e7       	ldi	r24, 0x72	; 114
    5882:	90 e0       	ldi	r25, 0x00	; 0
    5884:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
main():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:626
        grn_f_calibrated = 1;
    5888:	88 24       	eor	r8, r8
    588a:	83 94       	inc	r8
    588c:	05 cd       	rjmp	.-1526   	; 0x5298 <main+0x102c>
color_calib():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:628
      }
    } else if (page == 12)  // red front
    588e:	8c 30       	cpi	r24, 0x0C	; 12
    5890:	09 f0       	breq	.+2      	; 0x5894 <main+0x1628>
    5892:	02 cd       	rjmp	.-1532   	; 0x5298 <main+0x102c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:630
    {
      if (start == 0) {
    5894:	86 e0       	ldi	r24, 0x06	; 6
    5896:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <digitalRead>
    589a:	89 2b       	or	r24, r25
    589c:	09 f0       	breq	.+2      	; 0x58a0 <main+0x1634>
    589e:	fc cc       	rjmp	.-1544   	; 0x5298 <main+0x102c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:631
        color_F;
    58a0:	83 e0       	ldi	r24, 0x03	; 3
    58a2:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <color(char)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:632
        EEPROM_write_int(red_front_r, red);
    58a6:	60 91 c9 08 	lds	r22, 0x08C9	; 0x8008c9 <red>
    58aa:	70 91 ca 08 	lds	r23, 0x08CA	; 0x8008ca <red+0x1>
    58ae:	84 e6       	ldi	r24, 0x64	; 100
    58b0:	90 e0       	ldi	r25, 0x00	; 0
    58b2:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:633
        EEPROM_write_int(red_front_g, green);
    58b6:	60 91 c7 08 	lds	r22, 0x08C7	; 0x8008c7 <green>
    58ba:	70 91 c8 08 	lds	r23, 0x08C8	; 0x8008c8 <green+0x1>
    58be:	86 e6       	ldi	r24, 0x66	; 102
    58c0:	90 e0       	ldi	r25, 0x00	; 0
    58c2:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:634
        EEPROM_write_int(red_front_b, blue);
    58c6:	60 91 c5 08 	lds	r22, 0x08C5	; 0x8008c5 <blue>
    58ca:	70 91 c6 08 	lds	r23, 0x08C6	; 0x8008c6 <blue+0x1>
    58ce:	88 e6       	ldi	r24, 0x68	; 104
    58d0:	90 e0       	ldi	r25, 0x00	; 0
    58d2:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:635
        EEPROM_write_int(red_front_c, clear);
    58d6:	60 91 c3 08 	lds	r22, 0x08C3	; 0x8008c3 <clear>
    58da:	70 91 c4 08 	lds	r23, 0x08C4	; 0x8008c4 <clear+0x1>
    58de:	8a e6       	ldi	r24, 0x6A	; 106
    58e0:	90 e0       	ldi	r25, 0x00	; 0
    58e2:	0e 94 43 0a 	call	0x1486	; 0x1486 <EEPROM_write_int(int, int)>
main():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:636
        red_f_calibrated = 1;
    58e6:	c1 e0       	ldi	r28, 0x01	; 1
    58e8:	d7 cc       	rjmp	.-1618   	; 0x5298 <main+0x102c>
football():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1737
  int T90 = EEPROM_read_int(T90_address);
  int arm_dropping = EEPROM_read_int(arm_dropping_address);
  int arm_normal = EEPROM_read_int(arm_normal_address);
  while (1) {
    linefollow();
    if (intersectionL && intersectionR) {
    58ea:	40 e0       	ldi	r20, 0x00	; 0
    58ec:	60 e0       	ldi	r22, 0x00	; 0
    58ee:	81 e0       	ldi	r24, 0x01	; 1
    58f0:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    58f4:	89 2b       	or	r24, r25
    58f6:	11 f0       	breq	.+4      	; 0x58fc <main+0x1690>
    58f8:	0c 94 54 24 	jmp	0x48a8	; 0x48a8 <main+0x63c>
    58fc:	40 e0       	ldi	r20, 0x00	; 0
    58fe:	61 e0       	ldi	r22, 0x01	; 1
    5900:	81 e0       	ldi	r24, 0x01	; 1
    5902:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    5906:	89 2b       	or	r24, r25
    5908:	11 f0       	breq	.+4      	; 0x590e <main+0x16a2>
    590a:	0c 94 54 24 	jmp	0x48a8	; 0x48a8 <main+0x63c>
    590e:	0c 94 49 24 	jmp	0x4892	; 0x4892 <main+0x626>
    5912:	40 e0       	ldi	r20, 0x00	; 0
    5914:	60 e0       	ldi	r22, 0x00	; 0
    5916:	81 e0       	ldi	r24, 0x01	; 1
    5918:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    591c:	89 2b       	or	r24, r25
    591e:	11 f0       	breq	.+4      	; 0x5924 <main+0x16b8>
    5920:	0c 94 64 24 	jmp	0x48c8	; 0x48c8 <main+0x65c>
    5924:	40 e0       	ldi	r20, 0x00	; 0
    5926:	61 e0       	ldi	r22, 0x01	; 1
    5928:	81 e0       	ldi	r24, 0x01	; 1
    592a:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    592e:	89 2b       	or	r24, r25
    5930:	11 f0       	breq	.+4      	; 0x5936 <main+0x16ca>
    5932:	0c 94 64 24 	jmp	0x48c8	; 0x48c8 <main+0x65c>
    5936:	0c 94 49 24 	jmp	0x4892	; 0x4892 <main+0x626>
obstacle():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1835
  get_back();
}
void obstacle() {
  int T90 = EEPROM_read_int(T90_address);
  int inter_cnt = 0;  //intersection counting
  while (!intersectionL && !intersectionR) {
    593a:	40 e0       	ldi	r20, 0x00	; 0
    593c:	60 e0       	ldi	r22, 0x00	; 0
    593e:	81 e0       	ldi	r24, 0x01	; 1
    5940:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    5944:	89 2b       	or	r24, r25
    5946:	09 f0       	breq	.+2      	; 0x594a <main+0x16de>
    5948:	51 c8       	rjmp	.-3934   	; 0x49ec <main+0x780>
    594a:	40 e0       	ldi	r20, 0x00	; 0
    594c:	61 e0       	ldi	r22, 0x01	; 1
    594e:	81 e0       	ldi	r24, 0x01	; 1
    5950:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    5954:	89 2b       	or	r24, r25
    5956:	09 f0       	breq	.+2      	; 0x595a <main+0x16ee>
    5958:	49 c8       	rjmp	.-3950   	; 0x49ec <main+0x780>
    595a:	40 e0       	ldi	r20, 0x00	; 0
    595c:	60 e0       	ldi	r22, 0x00	; 0
    595e:	80 e0       	ldi	r24, 0x00	; 0
    5960:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    5964:	89 2b       	or	r24, r25
    5966:	59 f0       	breq	.+22     	; 0x597e <main+0x1712>
    5968:	40 e0       	ldi	r20, 0x00	; 0
    596a:	63 e0       	ldi	r22, 0x03	; 3
    596c:	82 e0       	ldi	r24, 0x02	; 2
    596e:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    5972:	89 2b       	or	r24, r25
    5974:	09 f0       	breq	.+2      	; 0x5978 <main+0x170c>
    5976:	42 c8       	rjmp	.-3964   	; 0x49fc <main+0x790>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1836
    linefollow();
    5978:	0e 94 db 07 	call	0xfb6	; 0xfb6 <linefollow()>
    597c:	2f c8       	rjmp	.-4002   	; 0x49dc <main+0x770>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1835
  get_back();
}
void obstacle() {
  int T90 = EEPROM_read_int(T90_address);
  int inter_cnt = 0;  //intersection counting
  while (!intersectionL && !intersectionR) {
    597e:	40 e0       	ldi	r20, 0x00	; 0
    5980:	60 e0       	ldi	r22, 0x00	; 0
    5982:	81 e0       	ldi	r24, 0x01	; 1
    5984:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    5988:	89 2b       	or	r24, r25
    598a:	71 f7       	brne	.-36     	; 0x5968 <main+0x16fc>
    598c:	40 e0       	ldi	r20, 0x00	; 0
    598e:	61 e0       	ldi	r22, 0x01	; 1
    5990:	81 e0       	ldi	r24, 0x01	; 1
    5992:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    5996:	89 2b       	or	r24, r25
    5998:	39 f7       	brne	.-50     	; 0x5968 <main+0x16fc>
    599a:	ee cf       	rjmp	.-36     	; 0x5978 <main+0x170c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1845
  beep(2);
  move(forward, T90 / 8, 100);

  while (1) {
    go(100, 100);
    if (intersectionL && intersectionR) {
    599c:	40 e0       	ldi	r20, 0x00	; 0
    599e:	60 e0       	ldi	r22, 0x00	; 0
    59a0:	81 e0       	ldi	r24, 0x01	; 1
    59a2:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    59a6:	89 2b       	or	r24, r25
    59a8:	09 f0       	breq	.+2      	; 0x59ac <main+0x1740>
    59aa:	50 c8       	rjmp	.-3936   	; 0x4a4c <main+0x7e0>
    59ac:	40 e0       	ldi	r20, 0x00	; 0
    59ae:	61 e0       	ldi	r22, 0x01	; 1
    59b0:	81 e0       	ldi	r24, 0x01	; 1
    59b2:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    59b6:	89 2b       	or	r24, r25
    59b8:	09 f0       	breq	.+2      	; 0x59bc <main+0x1750>
    59ba:	48 c8       	rjmp	.-3952   	; 0x4a4c <main+0x7e0>
    59bc:	39 c8       	rjmp	.-3982   	; 0x4a30 <main+0x7c4>
    59be:	40 e0       	ldi	r20, 0x00	; 0
    59c0:	60 e0       	ldi	r22, 0x00	; 0
    59c2:	81 e0       	ldi	r24, 0x01	; 1
    59c4:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    59c8:	89 2b       	or	r24, r25
    59ca:	09 f0       	breq	.+2      	; 0x59ce <main+0x1762>
    59cc:	4e c8       	rjmp	.-3940   	; 0x4a6a <main+0x7fe>
    59ce:	40 e0       	ldi	r20, 0x00	; 0
    59d0:	61 e0       	ldi	r22, 0x01	; 1
    59d2:	81 e0       	ldi	r24, 0x01	; 1
    59d4:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    59d8:	89 2b       	or	r24, r25
    59da:	09 f0       	breq	.+2      	; 0x59de <main+0x1772>
    59dc:	46 c8       	rjmp	.-3956   	; 0x4a6a <main+0x7fe>
    59de:	28 c8       	rjmp	.-4016   	; 0x4a30 <main+0x7c4>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1847
      go(60, 60);
      while (intersectionL || intersectionR)
    59e0:	40 e0       	ldi	r20, 0x00	; 0
    59e2:	60 e0       	ldi	r22, 0x00	; 0
    59e4:	81 e0       	ldi	r24, 0x01	; 1
    59e6:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    59ea:	89 2b       	or	r24, r25
    59ec:	09 f0       	breq	.+2      	; 0x59f0 <main+0x1784>
    59ee:	52 c8       	rjmp	.-3932   	; 0x4a94 <main+0x828>
    59f0:	40 e0       	ldi	r20, 0x00	; 0
    59f2:	61 e0       	ldi	r22, 0x01	; 1
    59f4:	81 e0       	ldi	r24, 0x01	; 1
    59f6:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    59fa:	89 2b       	or	r24, r25
    59fc:	09 f0       	breq	.+2      	; 0x5a00 <main+0x1794>
    59fe:	4a c8       	rjmp	.-3948   	; 0x4a94 <main+0x828>
    5a00:	50 c8       	rjmp	.-3936   	; 0x4aa2 <main+0x836>
    5a02:	40 e0       	ldi	r20, 0x00	; 0
    5a04:	60 e0       	ldi	r22, 0x00	; 0
    5a06:	81 e0       	ldi	r24, 0x01	; 1
    5a08:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    5a0c:	89 2b       	or	r24, r25
    5a0e:	09 f0       	breq	.+2      	; 0x5a12 <main+0x17a6>
    5a10:	50 c8       	rjmp	.-3936   	; 0x4ab2 <main+0x846>
    5a12:	40 e0       	ldi	r20, 0x00	; 0
    5a14:	61 e0       	ldi	r22, 0x01	; 1
    5a16:	81 e0       	ldi	r24, 0x01	; 1
    5a18:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    5a1c:	89 2b       	or	r24, r25
    5a1e:	09 f0       	breq	.+2      	; 0x5a22 <main+0x17b6>
    5a20:	48 c8       	rjmp	.-3952   	; 0x4ab2 <main+0x846>
    5a22:	4e c8       	rjmp	.-3940   	; 0x4ac0 <main+0x854>
wlift():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1510
  go(80, 80);
  while (1) {
    lcd.clear();
    lcd.print(inter_cnt);
    linefollow();
    if (intersectionL && intersectionR) {
    5a24:	40 e0       	ldi	r20, 0x00	; 0
    5a26:	60 e0       	ldi	r22, 0x00	; 0
    5a28:	81 e0       	ldi	r24, 0x01	; 1
    5a2a:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    5a2e:	89 2b       	or	r24, r25
    5a30:	09 f0       	breq	.+2      	; 0x5a34 <main+0x17c8>
    5a32:	e3 c8       	rjmp	.-3642   	; 0x4bfa <main+0x98e>
    5a34:	40 e0       	ldi	r20, 0x00	; 0
    5a36:	61 e0       	ldi	r22, 0x01	; 1
    5a38:	81 e0       	ldi	r24, 0x01	; 1
    5a3a:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    5a3e:	89 2b       	or	r24, r25
    5a40:	09 f0       	breq	.+2      	; 0x5a44 <main+0x17d8>
    5a42:	db c8       	rjmp	.-3658   	; 0x4bfa <main+0x98e>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1523
        inter_cnt = 2;
      } else if (inter_cnt == 3) {
        inter_cnt += 1;
      }
    }
    if (inter_cnt == 2) {
    5a44:	c2 30       	cpi	r28, 0x02	; 2
    5a46:	d1 05       	cpc	r29, r1
    5a48:	09 f0       	breq	.+2      	; 0x5a4c <main+0x17e0>
    5a4a:	c8 c8       	rjmp	.-3696   	; 0x4bdc <main+0x970>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1524
      move(Back, T90 / 2, 100);
    5a4c:	44 e6       	ldi	r20, 0x64	; 100
    5a4e:	50 e0       	ldi	r21, 0x00	; 0
    5a50:	b8 01       	movw	r22, r16
    5a52:	8d e0       	ldi	r24, 0x0D	; 13
    5a54:	90 e0       	ldi	r25, 0x00	; 0
    5a56:	0e 94 6c 07 	call	0xed8	; 0xed8 <move(int, int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1525
      move_arm(345, 500);
    5a5a:	64 ef       	ldi	r22, 0xF4	; 244
    5a5c:	71 e0       	ldi	r23, 0x01	; 1
    5a5e:	89 e5       	ldi	r24, 0x59	; 89
    5a60:	91 e0       	ldi	r25, 0x01	; 1
    5a62:	0e 94 c8 08 	call	0x1190	; 0x1190 <move_arm(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1526
      delay(300);  //arm_normal
    5a66:	6c e2       	ldi	r22, 0x2C	; 44
    5a68:	71 e0       	ldi	r23, 0x01	; 1
    5a6a:	80 e0       	ldi	r24, 0x00	; 0
    5a6c:	90 e0       	ldi	r25, 0x00	; 0
    5a6e:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <delay>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1527
      move(forward, T90 / 5, 50);
    5a72:	42 e3       	ldi	r20, 0x32	; 50
    5a74:	50 e0       	ldi	r21, 0x00	; 0
    5a76:	b7 01       	movw	r22, r14
    5a78:	8a e0       	ldi	r24, 0x0A	; 10
    5a7a:	90 e0       	ldi	r25, 0x00	; 0
    5a7c:	0e 94 6c 07 	call	0xed8	; 0xed8 <move(int, int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1528
      beep(3);
    5a80:	83 e0       	ldi	r24, 0x03	; 3
    5a82:	90 e0       	ldi	r25, 0x00	; 0
    5a84:	0e 94 65 08 	call	0x10ca	; 0x10ca <beep(int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1529
      lcd.print(inter_cnt);
    5a88:	82 e0       	ldi	r24, 0x02	; 2
    5a8a:	90 e0       	ldi	r25, 0x00	; 0
    5a8c:	0e 94 0d 0a 	call	0x141a	; 0x141a <Print::print(int, int) [clone .constprop.4]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1530
      lcd.clear();
    5a90:	0e 94 f6 05 	call	0xbec	; 0xbec <LiquidCrystal::clear() [clone .constprop.38]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1531
      lcd.print("picking up");
    5a94:	87 e4       	ldi	r24, 0x47	; 71
    5a96:	98 e0       	ldi	r25, 0x08	; 8
    5a98:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1532
      move_arm(780, 200);  //PICKUP
    5a9c:	68 ec       	ldi	r22, 0xC8	; 200
    5a9e:	70 e0       	ldi	r23, 0x00	; 0
    5aa0:	8c e0       	ldi	r24, 0x0C	; 12
    5aa2:	93 e0       	ldi	r25, 0x03	; 3
    5aa4:	0e 94 c8 08 	call	0x1190	; 0x1190 <move_arm(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1533
      delay(1500);
    5aa8:	6c ed       	ldi	r22, 0xDC	; 220
    5aaa:	75 e0       	ldi	r23, 0x05	; 5
    5aac:	80 e0       	ldi	r24, 0x00	; 0
    5aae:	90 e0       	ldi	r25, 0x00	; 0
    5ab0:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <delay>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1534
      move(forward, T90 / 2, 100);
    5ab4:	44 e6       	ldi	r20, 0x64	; 100
    5ab6:	50 e0       	ldi	r21, 0x00	; 0
    5ab8:	b8 01       	movw	r22, r16
    5aba:	8a e0       	ldi	r24, 0x0A	; 10
    5abc:	90 e0       	ldi	r25, 0x00	; 0
    5abe:	0e 94 6c 07 	call	0xed8	; 0xed8 <move(int, int, int)>
main():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1535
      inter_cnt += 1;
    5ac2:	c3 e0       	ldi	r28, 0x03	; 3
    5ac4:	d0 e0       	ldi	r29, 0x00	; 0
    5ac6:	8a c8       	rjmp	.-3820   	; 0x4bdc <main+0x970>
wlift():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1510
  go(80, 80);
  while (1) {
    lcd.clear();
    lcd.print(inter_cnt);
    linefollow();
    if (intersectionL && intersectionR) {
    5ac8:	40 e0       	ldi	r20, 0x00	; 0
    5aca:	60 e0       	ldi	r22, 0x00	; 0
    5acc:	81 e0       	ldi	r24, 0x01	; 1
    5ace:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    5ad2:	89 2b       	or	r24, r25
    5ad4:	09 f0       	breq	.+2      	; 0x5ad8 <main+0x186c>
    5ad6:	a1 c8       	rjmp	.-3774   	; 0x4c1a <main+0x9ae>
    5ad8:	40 e0       	ldi	r20, 0x00	; 0
    5ada:	61 e0       	ldi	r22, 0x01	; 1
    5adc:	81 e0       	ldi	r24, 0x01	; 1
    5ade:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    5ae2:	89 2b       	or	r24, r25
    5ae4:	09 f0       	breq	.+2      	; 0x5ae8 <main+0x187c>
    5ae6:	99 c8       	rjmp	.-3790   	; 0x4c1a <main+0x9ae>
    5ae8:	ad cf       	rjmp	.-166    	; 0x5a44 <main+0x17d8>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1513
      if (inter_cnt == 0) {
        go(50, 50);
        while (intersectionL && intersectionR)
    5aea:	40 e0       	ldi	r20, 0x00	; 0
    5aec:	60 e0       	ldi	r22, 0x00	; 0
    5aee:	81 e0       	ldi	r24, 0x01	; 1
    5af0:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    5af4:	89 2b       	or	r24, r25
    5af6:	09 f0       	breq	.+2      	; 0x5afa <main+0x188e>
    5af8:	a9 c8       	rjmp	.-3758   	; 0x4c4c <main+0x9e0>
    5afa:	40 e0       	ldi	r20, 0x00	; 0
    5afc:	61 e0       	ldi	r22, 0x01	; 1
    5afe:	81 e0       	ldi	r24, 0x01	; 1
    5b00:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    5b04:	89 2b       	or	r24, r25
    5b06:	09 f0       	breq	.+2      	; 0x5b0a <main+0x189e>
    5b08:	a1 c8       	rjmp	.-3774   	; 0x4c4c <main+0x9e0>
    5b0a:	a8 c8       	rjmp	.-3760   	; 0x4c5c <main+0x9f0>
    5b0c:	40 e0       	ldi	r20, 0x00	; 0
    5b0e:	60 e0       	ldi	r22, 0x00	; 0
    5b10:	80 e0       	ldi	r24, 0x00	; 0
    5b12:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    5b16:	89 2b       	or	r24, r25
    5b18:	49 f0       	breq	.+18     	; 0x5b2c <main+0x18c0>
    5b1a:	40 e0       	ldi	r20, 0x00	; 0
    5b1c:	63 e0       	ldi	r22, 0x03	; 3
    5b1e:	82 e0       	ldi	r24, 0x02	; 2
    5b20:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    5b24:	89 2b       	or	r24, r25
    5b26:	09 f0       	breq	.+2      	; 0x5b2a <main+0x18be>
    5b28:	89 c8       	rjmp	.-3822   	; 0x4c3c <main+0x9d0>
    5b2a:	98 c8       	rjmp	.-3792   	; 0x4c5c <main+0x9f0>
    5b2c:	40 e0       	ldi	r20, 0x00	; 0
    5b2e:	60 e0       	ldi	r22, 0x00	; 0
    5b30:	81 e0       	ldi	r24, 0x01	; 1
    5b32:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    5b36:	89 2b       	or	r24, r25
    5b38:	81 f7       	brne	.-32     	; 0x5b1a <main+0x18ae>
    5b3a:	40 e0       	ldi	r20, 0x00	; 0
    5b3c:	61 e0       	ldi	r22, 0x01	; 1
    5b3e:	81 e0       	ldi	r24, 0x01	; 1
    5b40:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    5b44:	89 2b       	or	r24, r25
    5b46:	49 f7       	brne	.-46     	; 0x5b1a <main+0x18ae>
    5b48:	89 c8       	rjmp	.-3822   	; 0x4c5c <main+0x9f0>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1516
          ;
        inter_cnt += 1;
      } else if (inter_cnt == 1) {
    5b4a:	c1 30       	cpi	r28, 0x01	; 1
    5b4c:	d1 05       	cpc	r29, r1
    5b4e:	39 f4       	brne	.+14     	; 0x5b5e <main+0x18f2>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1517
        go(0, 0);
    5b50:	70 e0       	ldi	r23, 0x00	; 0
    5b52:	60 e0       	ldi	r22, 0x00	; 0
    5b54:	90 e0       	ldi	r25, 0x00	; 0
    5b56:	80 e0       	ldi	r24, 0x00	; 0
    5b58:	0e 94 07 07 	call	0xe0e	; 0xe0e <go(int, int)>
    5b5c:	77 cf       	rjmp	.-274    	; 0x5a4c <main+0x17e0>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1519
        inter_cnt = 2;
      } else if (inter_cnt == 3) {
    5b5e:	c3 30       	cpi	r28, 0x03	; 3
    5b60:	d1 05       	cpc	r29, r1
    5b62:	09 f0       	breq	.+2      	; 0x5b66 <main+0x18fa>
    5b64:	6f cf       	rjmp	.-290    	; 0x5a44 <main+0x17d8>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1538
      delay(1500);
      move(forward, T90 / 2, 100);
      inter_cnt += 1;
    }
    if (inter_cnt >= 4) {
      go(0, 0);
    5b66:	70 e0       	ldi	r23, 0x00	; 0
    5b68:	60 e0       	ldi	r22, 0x00	; 0
    5b6a:	90 e0       	ldi	r25, 0x00	; 0
    5b6c:	80 e0       	ldi	r24, 0x00	; 0
    5b6e:	0e 94 07 07 	call	0xe0e	; 0xe0e <go(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1539
      move(Back, T90 / 13, 60);
    5b72:	c6 01       	movw	r24, r12
    5b74:	6d e0       	ldi	r22, 0x0D	; 13
    5b76:	70 e0       	ldi	r23, 0x00	; 0
    5b78:	0e 94 17 35 	call	0x6a2e	; 0x6a2e <__divmodhi4>
    5b7c:	4c e3       	ldi	r20, 0x3C	; 60
    5b7e:	50 e0       	ldi	r21, 0x00	; 0
    5b80:	8d e0       	ldi	r24, 0x0D	; 13
    5b82:	90 e0       	ldi	r25, 0x00	; 0
    5b84:	0e 94 6c 07 	call	0xed8	; 0xed8 <move(int, int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1540
      lcd.clear();
    5b88:	0e 94 f6 05 	call	0xbec	; 0xbec <LiquidCrystal::clear() [clone .constprop.38]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1541
      lcd.print("putting down");
    5b8c:	8a e3       	ldi	r24, 0x3A	; 58
    5b8e:	98 e0       	ldi	r25, 0x08	; 8
    5b90:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1542
      move_arm(345, 200);  //Dropping the weight
    5b94:	68 ec       	ldi	r22, 0xC8	; 200
    5b96:	70 e0       	ldi	r23, 0x00	; 0
    5b98:	89 e5       	ldi	r24, 0x59	; 89
    5b9a:	91 e0       	ldi	r25, 0x01	; 1
    5b9c:	0e 94 c8 08 	call	0x1190	; 0x1190 <move_arm(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1543
      delay(3000);
    5ba0:	68 eb       	ldi	r22, 0xB8	; 184
    5ba2:	7b e0       	ldi	r23, 0x0B	; 11
    5ba4:	80 e0       	ldi	r24, 0x00	; 0
    5ba6:	90 e0       	ldi	r25, 0x00	; 0
    5ba8:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <delay>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1544
      move(Back, T90 * 1.5, 100);
    5bac:	b6 01       	movw	r22, r12
    5bae:	0d 2c       	mov	r0, r13
    5bb0:	00 0c       	add	r0, r0
    5bb2:	88 0b       	sbc	r24, r24
    5bb4:	99 0b       	sbc	r25, r25
    5bb6:	0e 94 e6 33 	call	0x67cc	; 0x67cc <__floatsisf>
    5bba:	20 e0       	ldi	r18, 0x00	; 0
    5bbc:	30 e0       	ldi	r19, 0x00	; 0
    5bbe:	40 ec       	ldi	r20, 0xC0	; 192
    5bc0:	5f e3       	ldi	r21, 0x3F	; 63
    5bc2:	0e 94 96 34 	call	0x692c	; 0x692c <__mulsf3>
    5bc6:	0e 94 ae 33 	call	0x675c	; 0x675c <__fixsfsi>
    5bca:	44 e6       	ldi	r20, 0x64	; 100
    5bcc:	50 e0       	ldi	r21, 0x00	; 0
    5bce:	8d e0       	ldi	r24, 0x0D	; 13
    5bd0:	90 e0       	ldi	r25, 0x00	; 0
    5bd2:	0e 94 6c 07 	call	0xed8	; 0xed8 <move(int, int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1545
      move(Left, T90 * 2, 150);
    5bd6:	b6 01       	movw	r22, r12
    5bd8:	66 0f       	add	r22, r22
    5bda:	77 1f       	adc	r23, r23
    5bdc:	46 e9       	ldi	r20, 0x96	; 150
    5bde:	50 e0       	ldi	r21, 0x00	; 0
    5be0:	8b e0       	ldi	r24, 0x0B	; 11
    5be2:	90 e0       	ldi	r25, 0x00	; 0
    5be4:	0e 94 6c 07 	call	0xed8	; 0xed8 <move(int, int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1546
      get_back();
    5be8:	0e 94 e4 0e 	call	0x1dc8	; 0x1dc8 <get_back()>
color_detection():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1965
        lcd.clear();
        lcd.print("weight lift");
        wlift();
      }
    }
    if (left_card == RED) {
    5bec:	e0 90 06 01 	lds	r14, 0x0106	; 0x800106 <left_card>
    5bf0:	f0 90 07 01 	lds	r15, 0x0107	; 0x800107 <left_card+0x1>
    5bf4:	e1 14       	cp	r14, r1
    5bf6:	f1 04       	cpc	r15, r1
    5bf8:	09 f0       	breq	.+2      	; 0x5bfc <main+0x1990>
    5bfa:	3d c1       	rjmp	.+634    	; 0x5e76 <main+0x1c0a>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1966
      go(0, 0);
    5bfc:	70 e0       	ldi	r23, 0x00	; 0
    5bfe:	60 e0       	ldi	r22, 0x00	; 0
    5c00:	90 e0       	ldi	r25, 0x00	; 0
    5c02:	80 e0       	ldi	r24, 0x00	; 0
    5c04:	0e 94 07 07 	call	0xe0e	; 0xe0e <go(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1967
      if (color_L == RED) {
    5c08:	81 e0       	ldi	r24, 0x01	; 1
    5c0a:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <color(char)>
    5c0e:	81 11       	cpse	r24, r1
    5c10:	9d c1       	rjmp	.+826    	; 0x5f4c <main+0x1ce0>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1968
        lcd.clear();
    5c12:	0e 94 f6 05 	call	0xbec	; 0xbec <LiquidCrystal::clear() [clone .constprop.38]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1969
        lcd.print("Trck");
    5c16:	82 e5       	ldi	r24, 0x52	; 82
    5c18:	98 e0       	ldi	r25, 0x08	; 8
    5c1a:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
track():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1762
}
void track(int round, int direction) {
  int track_rounds = 0;
  int track_direction = Left;  //clockwise is right ccw is left
  int inter_cnt = 0;           //intersection counting
  int T90 = EEPROM_read_int(T90_address);
    5c1e:	88 e9       	ldi	r24, 0x98	; 152
    5c20:	90 e0       	ldi	r25, 0x00	; 0
    5c22:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    5c26:	ec 01       	movw	r28, r24
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1766
  track_rounds = round;
  track_direction = direction;
  while (1) {
    linefollow();
    5c28:	0e 94 db 07 	call	0xfb6	; 0xfb6 <linefollow()>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1767
    if (intersectionL && intersectionR) {
    5c2c:	40 e0       	ldi	r20, 0x00	; 0
    5c2e:	60 e0       	ldi	r22, 0x00	; 0
    5c30:	80 e0       	ldi	r24, 0x00	; 0
    5c32:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    5c36:	89 2b       	or	r24, r25
    5c38:	09 f4       	brne	.+2      	; 0x5c3c <main+0x19d0>
    5c3a:	76 c0       	rjmp	.+236    	; 0x5d28 <main+0x1abc>
    5c3c:	40 e0       	ldi	r20, 0x00	; 0
    5c3e:	62 e0       	ldi	r22, 0x02	; 2
    5c40:	82 e0       	ldi	r24, 0x02	; 2
    5c42:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    5c46:	89 2b       	or	r24, r25
    5c48:	79 f3       	breq	.-34     	; 0x5c28 <main+0x19bc>
    5c4a:	40 e0       	ldi	r20, 0x00	; 0
    5c4c:	60 e0       	ldi	r22, 0x00	; 0
    5c4e:	80 e0       	ldi	r24, 0x00	; 0
    5c50:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    5c54:	89 2b       	or	r24, r25
    5c56:	09 f4       	brne	.+2      	; 0x5c5a <main+0x19ee>
    5c58:	78 c0       	rjmp	.+240    	; 0x5d4a <main+0x1ade>
    5c5a:	40 e0       	ldi	r20, 0x00	; 0
    5c5c:	63 e0       	ldi	r22, 0x03	; 3
    5c5e:	82 e0       	ldi	r24, 0x02	; 2
    5c60:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    5c64:	89 2b       	or	r24, r25
    5c66:	01 f3       	breq	.-64     	; 0x5c28 <main+0x19bc>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1768
      move(forward, T90 / 4, 100);
    5c68:	8e 01       	movw	r16, r28
    5c6a:	d7 ff       	sbrs	r29, 7
    5c6c:	02 c0       	rjmp	.+4      	; 0x5c72 <main+0x1a06>
    5c6e:	0d 5f       	subi	r16, 0xFD	; 253
    5c70:	1f 4f       	sbci	r17, 0xFF	; 255
    5c72:	15 95       	asr	r17
    5c74:	07 95       	ror	r16
    5c76:	15 95       	asr	r17
    5c78:	07 95       	ror	r16
    5c7a:	44 e6       	ldi	r20, 0x64	; 100
    5c7c:	50 e0       	ldi	r21, 0x00	; 0
    5c7e:	b8 01       	movw	r22, r16
    5c80:	8a e0       	ldi	r24, 0x0A	; 10
    5c82:	90 e0       	ldi	r25, 0x00	; 0
    5c84:	0e 94 6c 07 	call	0xed8	; 0xed8 <move(int, int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1772
      if (direction == Right) {
        move(Right, T90, 100);
      } else {
        move(Left, T90, 100);
    5c88:	44 e6       	ldi	r20, 0x64	; 100
    5c8a:	50 e0       	ldi	r21, 0x00	; 0
    5c8c:	be 01       	movw	r22, r28
    5c8e:	8b e0       	ldi	r24, 0x0B	; 11
    5c90:	90 e0       	ldi	r25, 0x00	; 0
    5c92:	0e 94 6c 07 	call	0xed8	; 0xed8 <move(int, int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1774
      }
      move(forward, T90 / 6, 100);
    5c96:	ce 01       	movw	r24, r28
    5c98:	b4 01       	movw	r22, r8
    5c9a:	0e 94 17 35 	call	0x6a2e	; 0x6a2e <__divmodhi4>
    5c9e:	6b 01       	movw	r12, r22
    5ca0:	44 e6       	ldi	r20, 0x64	; 100
    5ca2:	50 e0       	ldi	r21, 0x00	; 0
    5ca4:	8a e0       	ldi	r24, 0x0A	; 10
    5ca6:	90 e0       	ldi	r25, 0x00	; 0
    5ca8:	0e 94 6c 07 	call	0xed8	; 0xed8 <move(int, int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1776

      go(60, 60);
    5cac:	6c e3       	ldi	r22, 0x3C	; 60
    5cae:	70 e0       	ldi	r23, 0x00	; 0
    5cb0:	8c e3       	ldi	r24, 0x3C	; 60
    5cb2:	90 e0       	ldi	r25, 0x00	; 0
    5cb4:	0e 94 07 07 	call	0xe0e	; 0xe0e <go(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1782
      while (inter_cnt < track_rounds) {
        linefollow();
        if (intersectionL || intersectionR) {
          while (intersectionL && intersectionR)
            ;
          move(forward, T90 / 3, 100);
    5cb8:	ce 01       	movw	r24, r28
    5cba:	63 e0       	ldi	r22, 0x03	; 3
    5cbc:	70 e0       	ldi	r23, 0x00	; 0
    5cbe:	0e 94 17 35 	call	0x6a2e	; 0x6a2e <__divmodhi4>
    5cc2:	5b 01       	movw	r10, r22
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1778
      }
      move(forward, T90 / 6, 100);

      go(60, 60);
      while (inter_cnt < track_rounds) {
        linefollow();
    5cc4:	0e 94 db 07 	call	0xfb6	; 0xfb6 <linefollow()>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1779
        if (intersectionL || intersectionR) {
    5cc8:	40 e0       	ldi	r20, 0x00	; 0
    5cca:	60 e0       	ldi	r22, 0x00	; 0
    5ccc:	80 e0       	ldi	r24, 0x00	; 0
    5cce:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    5cd2:	89 2b       	or	r24, r25
    5cd4:	09 f4       	brne	.+2      	; 0x5cd8 <main+0x1a6c>
    5cd6:	4a c0       	rjmp	.+148    	; 0x5d6c <main+0x1b00>
    5cd8:	40 e0       	ldi	r20, 0x00	; 0
    5cda:	62 e0       	ldi	r22, 0x02	; 2
    5cdc:	82 e0       	ldi	r24, 0x02	; 2
    5cde:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    5ce2:	89 2b       	or	r24, r25
    5ce4:	09 f4       	brne	.+2      	; 0x5ce8 <main+0x1a7c>
    5ce6:	52 c0       	rjmp	.+164    	; 0x5d8c <main+0x1b20>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1780
          while (intersectionL && intersectionR)
    5ce8:	40 e0       	ldi	r20, 0x00	; 0
    5cea:	60 e0       	ldi	r22, 0x00	; 0
    5cec:	80 e0       	ldi	r24, 0x00	; 0
    5cee:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    5cf2:	89 2b       	or	r24, r25
    5cf4:	09 f4       	brne	.+2      	; 0x5cf8 <main+0x1a8c>
    5cf6:	3f c1       	rjmp	.+638    	; 0x5f76 <main+0x1d0a>
    5cf8:	40 e0       	ldi	r20, 0x00	; 0
    5cfa:	62 e0       	ldi	r22, 0x02	; 2
    5cfc:	82 e0       	ldi	r24, 0x02	; 2
    5cfe:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    5d02:	89 2b       	or	r24, r25
    5d04:	09 f0       	breq	.+2      	; 0x5d08 <main+0x1a9c>
    5d06:	48 c1       	rjmp	.+656    	; 0x5f98 <main+0x1d2c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1782
            ;
          move(forward, T90 / 3, 100);
    5d08:	44 e6       	ldi	r20, 0x64	; 100
    5d0a:	50 e0       	ldi	r21, 0x00	; 0
    5d0c:	b5 01       	movw	r22, r10
    5d0e:	8a e0       	ldi	r24, 0x0A	; 10
    5d10:	90 e0       	ldi	r25, 0x00	; 0
    5d12:	0e 94 6c 07 	call	0xed8	; 0xed8 <move(int, int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1783
          inter_cnt += 1;
    5d16:	2f ef       	ldi	r18, 0xFF	; 255
    5d18:	e2 1a       	sub	r14, r18
    5d1a:	f2 0a       	sbc	r15, r18
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1784
          lcd.clear();
    5d1c:	0e 94 f6 05 	call	0xbec	; 0xbec <LiquidCrystal::clear() [clone .constprop.38]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1785
          lcd.print(inter_cnt);
    5d20:	c7 01       	movw	r24, r14
    5d22:	0e 94 0d 0a 	call	0x141a	; 0x141a <Print::print(int, int) [clone .constprop.4]>
    5d26:	42 c0       	rjmp	.+132    	; 0x5dac <main+0x1b40>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1767
  int T90 = EEPROM_read_int(T90_address);
  track_rounds = round;
  track_direction = direction;
  while (1) {
    linefollow();
    if (intersectionL && intersectionR) {
    5d28:	40 e0       	ldi	r20, 0x00	; 0
    5d2a:	60 e0       	ldi	r22, 0x00	; 0
    5d2c:	81 e0       	ldi	r24, 0x01	; 1
    5d2e:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    5d32:	89 2b       	or	r24, r25
    5d34:	09 f0       	breq	.+2      	; 0x5d38 <main+0x1acc>
    5d36:	82 cf       	rjmp	.-252    	; 0x5c3c <main+0x19d0>
    5d38:	40 e0       	ldi	r20, 0x00	; 0
    5d3a:	61 e0       	ldi	r22, 0x01	; 1
    5d3c:	81 e0       	ldi	r24, 0x01	; 1
    5d3e:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    5d42:	89 2b       	or	r24, r25
    5d44:	09 f0       	breq	.+2      	; 0x5d48 <main+0x1adc>
    5d46:	7a cf       	rjmp	.-268    	; 0x5c3c <main+0x19d0>
    5d48:	6f cf       	rjmp	.-290    	; 0x5c28 <main+0x19bc>
    5d4a:	40 e0       	ldi	r20, 0x00	; 0
    5d4c:	60 e0       	ldi	r22, 0x00	; 0
    5d4e:	81 e0       	ldi	r24, 0x01	; 1
    5d50:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    5d54:	89 2b       	or	r24, r25
    5d56:	09 f0       	breq	.+2      	; 0x5d5a <main+0x1aee>
    5d58:	80 cf       	rjmp	.-256    	; 0x5c5a <main+0x19ee>
    5d5a:	40 e0       	ldi	r20, 0x00	; 0
    5d5c:	61 e0       	ldi	r22, 0x01	; 1
    5d5e:	81 e0       	ldi	r24, 0x01	; 1
    5d60:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    5d64:	89 2b       	or	r24, r25
    5d66:	09 f0       	breq	.+2      	; 0x5d6a <main+0x1afe>
    5d68:	78 cf       	rjmp	.-272    	; 0x5c5a <main+0x19ee>
    5d6a:	5e cf       	rjmp	.-324    	; 0x5c28 <main+0x19bc>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1779
      move(forward, T90 / 6, 100);

      go(60, 60);
      while (inter_cnt < track_rounds) {
        linefollow();
        if (intersectionL || intersectionR) {
    5d6c:	40 e0       	ldi	r20, 0x00	; 0
    5d6e:	60 e0       	ldi	r22, 0x00	; 0
    5d70:	81 e0       	ldi	r24, 0x01	; 1
    5d72:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    5d76:	89 2b       	or	r24, r25
    5d78:	09 f0       	breq	.+2      	; 0x5d7c <main+0x1b10>
    5d7a:	ae cf       	rjmp	.-164    	; 0x5cd8 <main+0x1a6c>
    5d7c:	40 e0       	ldi	r20, 0x00	; 0
    5d7e:	61 e0       	ldi	r22, 0x01	; 1
    5d80:	81 e0       	ldi	r24, 0x01	; 1
    5d82:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    5d86:	89 2b       	or	r24, r25
    5d88:	09 f0       	breq	.+2      	; 0x5d8c <main+0x1b20>
    5d8a:	a6 cf       	rjmp	.-180    	; 0x5cd8 <main+0x1a6c>
    5d8c:	40 e0       	ldi	r20, 0x00	; 0
    5d8e:	60 e0       	ldi	r22, 0x00	; 0
    5d90:	80 e0       	ldi	r24, 0x00	; 0
    5d92:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    5d96:	89 2b       	or	r24, r25
    5d98:	09 f4       	brne	.+2      	; 0x5d9c <main+0x1b30>
    5d9a:	dc c0       	rjmp	.+440    	; 0x5f54 <main+0x1ce8>
    5d9c:	40 e0       	ldi	r20, 0x00	; 0
    5d9e:	63 e0       	ldi	r22, 0x03	; 3
    5da0:	82 e0       	ldi	r24, 0x02	; 2
    5da2:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    5da6:	89 2b       	or	r24, r25
    5da8:	09 f0       	breq	.+2      	; 0x5dac <main+0x1b40>
    5daa:	9e cf       	rjmp	.-196    	; 0x5ce8 <main+0x1a7c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1777
        move(Left, T90, 100);
      }
      move(forward, T90 / 6, 100);

      go(60, 60);
      while (inter_cnt < track_rounds) {
    5dac:	94 e0       	ldi	r25, 0x04	; 4
    5dae:	e9 16       	cp	r14, r25
    5db0:	f1 04       	cpc	r15, r1
    5db2:	09 f0       	breq	.+2      	; 0x5db6 <main+0x1b4a>
    5db4:	87 cf       	rjmp	.-242    	; 0x5cc4 <main+0x1a58>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1788
          inter_cnt += 1;
          lcd.clear();
          lcd.print(inter_cnt);
        }
      }
      move(Back, T90 / 3, 100);
    5db6:	44 e6       	ldi	r20, 0x64	; 100
    5db8:	50 e0       	ldi	r21, 0x00	; 0
    5dba:	b5 01       	movw	r22, r10
    5dbc:	8d e0       	ldi	r24, 0x0D	; 13
    5dbe:	90 e0       	ldi	r25, 0x00	; 0
    5dc0:	0e 94 6c 07 	call	0xed8	; 0xed8 <move(int, int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1789
      move(Left, T90 * 2, 100);
    5dc4:	44 e6       	ldi	r20, 0x64	; 100
    5dc6:	50 e0       	ldi	r21, 0x00	; 0
    5dc8:	be 01       	movw	r22, r28
    5dca:	66 0f       	add	r22, r22
    5dcc:	77 1f       	adc	r23, r23
    5dce:	8b e0       	ldi	r24, 0x0B	; 11
    5dd0:	90 e0       	ldi	r25, 0x00	; 0
    5dd2:	0e 94 6c 07 	call	0xed8	; 0xed8 <move(int, int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1790
      go(60, 60);
    5dd6:	6c e3       	ldi	r22, 0x3C	; 60
    5dd8:	70 e0       	ldi	r23, 0x00	; 0
    5dda:	8c e3       	ldi	r24, 0x3C	; 60
    5ddc:	90 e0       	ldi	r25, 0x00	; 0
    5dde:	0e 94 07 07 	call	0xe0e	; 0xe0e <go(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1794
      inter_cnt = 0;
      direction = Left;
      while (inter_cnt < 1) {
        linefollow();
    5de2:	0e 94 db 07 	call	0xfb6	; 0xfb6 <linefollow()>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1795
        if (intersectionL || intersectionR) {
    5de6:	40 e0       	ldi	r20, 0x00	; 0
    5de8:	60 e0       	ldi	r22, 0x00	; 0
    5dea:	80 e0       	ldi	r24, 0x00	; 0
    5dec:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    5df0:	89 2b       	or	r24, r25
    5df2:	09 f4       	brne	.+2      	; 0x5df6 <main+0x1b8a>
    5df4:	f0 c0       	rjmp	.+480    	; 0x5fd6 <main+0x1d6a>
    5df6:	40 e0       	ldi	r20, 0x00	; 0
    5df8:	62 e0       	ldi	r22, 0x02	; 2
    5dfa:	82 e0       	ldi	r24, 0x02	; 2
    5dfc:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    5e00:	89 2b       	or	r24, r25
    5e02:	09 f4       	brne	.+2      	; 0x5e06 <main+0x1b9a>
    5e04:	f8 c0       	rjmp	.+496    	; 0x5ff6 <main+0x1d8a>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1796
          while (intersectionL && intersectionR)
    5e06:	40 e0       	ldi	r20, 0x00	; 0
    5e08:	60 e0       	ldi	r22, 0x00	; 0
    5e0a:	80 e0       	ldi	r24, 0x00	; 0
    5e0c:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    5e10:	89 2b       	or	r24, r25
    5e12:	09 f4       	brne	.+2      	; 0x5e16 <main+0x1baa>
    5e14:	0f c1       	rjmp	.+542    	; 0x6034 <main+0x1dc8>
    5e16:	40 e0       	ldi	r20, 0x00	; 0
    5e18:	62 e0       	ldi	r22, 0x02	; 2
    5e1a:	82 e0       	ldi	r24, 0x02	; 2
    5e1c:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    5e20:	89 2b       	or	r24, r25
    5e22:	09 f0       	breq	.+2      	; 0x5e26 <main+0x1bba>
    5e24:	18 c1       	rjmp	.+560    	; 0x6056 <main+0x1dea>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1798
            ;
          move(forward, T90 / 4, 100);
    5e26:	44 e6       	ldi	r20, 0x64	; 100
    5e28:	50 e0       	ldi	r21, 0x00	; 0
    5e2a:	b8 01       	movw	r22, r16
    5e2c:	8a e0       	ldi	r24, 0x0A	; 10
    5e2e:	90 e0       	ldi	r25, 0x00	; 0
    5e30:	0e 94 6c 07 	call	0xed8	; 0xed8 <move(int, int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1800
          inter_cnt += 1;
          lcd.clear();
    5e34:	0e 94 f6 05 	call	0xbec	; 0xbec <LiquidCrystal::clear() [clone .constprop.38]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1801
          lcd.print(inter_cnt);
    5e38:	81 e0       	ldi	r24, 0x01	; 1
    5e3a:	90 e0       	ldi	r25, 0x00	; 0
    5e3c:	0e 94 0d 0a 	call	0x141a	; 0x141a <Print::print(int, int) [clone .constprop.4]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1804
        }
      }
      move(forward, T90 / 6, 100);
    5e40:	44 e6       	ldi	r20, 0x64	; 100
    5e42:	50 e0       	ldi	r21, 0x00	; 0
    5e44:	b6 01       	movw	r22, r12
    5e46:	8a e0       	ldi	r24, 0x0A	; 10
    5e48:	90 e0       	ldi	r25, 0x00	; 0
    5e4a:	0e 94 6c 07 	call	0xed8	; 0xed8 <move(int, int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1806
      if (direction = Right) {
        move(Right, T90, 100);
    5e4e:	44 e6       	ldi	r20, 0x64	; 100
    5e50:	50 e0       	ldi	r21, 0x00	; 0
    5e52:	be 01       	movw	r22, r28
    5e54:	8c e0       	ldi	r24, 0x0C	; 12
    5e56:	90 e0       	ldi	r25, 0x00	; 0
    5e58:	0e 94 6c 07 	call	0xed8	; 0xed8 <move(int, int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1810
      } else {
        move(Left, T90, 100);
      }
      move(forward, T90 / 2, 100);
    5e5c:	d7 fd       	sbrc	r29, 7
    5e5e:	21 96       	adiw	r28, 0x01	; 1
    5e60:	be 01       	movw	r22, r28
    5e62:	75 95       	asr	r23
    5e64:	67 95       	ror	r22
    5e66:	44 e6       	ldi	r20, 0x64	; 100
    5e68:	50 e0       	ldi	r21, 0x00	; 0
    5e6a:	8a e0       	ldi	r24, 0x0A	; 10
    5e6c:	90 e0       	ldi	r25, 0x00	; 0
    5e6e:	0e 94 6c 07 	call	0xed8	; 0xed8 <move(int, int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1814
      break;
    }
  }
  get_back();
    5e72:	0e 94 e4 0e 	call	0x1dc8	; 0x1dc8 <get_back()>
color_detection():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1973
        lcd.clear();
        lcd.print("Trck");
        track(4,Left);
      }
    }
    if (left_card == YELLOW) {
    5e76:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <left_card>
    5e7a:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <left_card+0x1>
    5e7e:	04 97       	sbiw	r24, 0x04	; 4
    5e80:	09 f0       	breq	.+2      	; 0x5e84 <main+0x1c18>
    5e82:	64 c0       	rjmp	.+200    	; 0x5f4c <main+0x1ce0>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1974
      go(0, 0);
    5e84:	70 e0       	ldi	r23, 0x00	; 0
    5e86:	60 e0       	ldi	r22, 0x00	; 0
    5e88:	90 e0       	ldi	r25, 0x00	; 0
    5e8a:	80 e0       	ldi	r24, 0x00	; 0
    5e8c:	0e 94 07 07 	call	0xe0e	; 0xe0e <go(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1975
      if (color_L == YELLOW) {
    5e90:	81 e0       	ldi	r24, 0x01	; 1
    5e92:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <color(char)>
    5e96:	84 30       	cpi	r24, 0x04	; 4
    5e98:	09 f0       	breq	.+2      	; 0x5e9c <main+0x1c30>
    5e9a:	58 c0       	rjmp	.+176    	; 0x5f4c <main+0x1ce0>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1976
        lcd.clear();
    5e9c:	0e 94 f6 05 	call	0xbec	; 0xbec <LiquidCrystal::clear() [clone .constprop.38]>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1977
        lcd.print("archery");
    5ea0:	87 e5       	ldi	r24, 0x57	; 87
    5ea2:	98 e0       	ldi	r25, 0x08	; 8
    5ea4:	0e 94 36 0a 	call	0x146c	; 0x146c <Print::print(char const*) [clone .constprop.9]>
archery():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1818
  }
  get_back();
}
void archery() {
  int arm_dropping = EEPROM_read_int(arm_dropping_address);
  int T90 = EEPROM_read_int(T90_address);
    5ea8:	88 e9       	ldi	r24, 0x98	; 152
    5eaa:	90 e0       	ldi	r25, 0x00	; 0
    5eac:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <EEPROM_read_int(int)>
    5eb0:	ec 01       	movw	r28, r24
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1819
  while (!intersectionL && !intersectionR) {
    5eb2:	40 e0       	ldi	r20, 0x00	; 0
    5eb4:	60 e0       	ldi	r22, 0x00	; 0
    5eb6:	80 e0       	ldi	r24, 0x00	; 0
    5eb8:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    5ebc:	89 2b       	or	r24, r25
    5ebe:	09 f4       	brne	.+2      	; 0x5ec2 <main+0x1c56>
    5ec0:	e9 c0       	rjmp	.+466    	; 0x6094 <main+0x1e28>
    5ec2:	40 e0       	ldi	r20, 0x00	; 0
    5ec4:	62 e0       	ldi	r22, 0x02	; 2
    5ec6:	82 e0       	ldi	r24, 0x02	; 2
    5ec8:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    5ecc:	89 2b       	or	r24, r25
    5ece:	09 f4       	brne	.+2      	; 0x5ed2 <main+0x1c66>
    5ed0:	f1 c0       	rjmp	.+482    	; 0x60b4 <main+0x1e48>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1822
    linefollow();
  }
  go(0, 0);
    5ed2:	70 e0       	ldi	r23, 0x00	; 0
    5ed4:	60 e0       	ldi	r22, 0x00	; 0
    5ed6:	90 e0       	ldi	r25, 0x00	; 0
    5ed8:	80 e0       	ldi	r24, 0x00	; 0
    5eda:	0e 94 07 07 	call	0xe0e	; 0xe0e <go(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1823
  beep(3);
    5ede:	83 e0       	ldi	r24, 0x03	; 3
    5ee0:	90 e0       	ldi	r25, 0x00	; 0
    5ee2:	0e 94 65 08 	call	0x10ca	; 0x10ca <beep(int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1824
  XL_Gripper(31, 100, 1000);
    5ee6:	48 ee       	ldi	r20, 0xE8	; 232
    5ee8:	53 e0       	ldi	r21, 0x03	; 3
    5eea:	64 e6       	ldi	r22, 0x64	; 100
    5eec:	70 e0       	ldi	r23, 0x00	; 0
    5eee:	8f e1       	ldi	r24, 0x1F	; 31
    5ef0:	0e 94 df 08 	call	0x11be	; 0x11be <XL_Gripper(char, int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1825
  delay(1);
    5ef4:	61 e0       	ldi	r22, 0x01	; 1
    5ef6:	70 e0       	ldi	r23, 0x00	; 0
    5ef8:	80 e0       	ldi	r24, 0x00	; 0
    5efa:	90 e0       	ldi	r25, 0x00	; 0
    5efc:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <delay>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1826
  delay(2000);
    5f00:	60 ed       	ldi	r22, 0xD0	; 208
    5f02:	77 e0       	ldi	r23, 0x07	; 7
    5f04:	80 e0       	ldi	r24, 0x00	; 0
    5f06:	90 e0       	ldi	r25, 0x00	; 0
    5f08:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <delay>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1827
  move(Back, T90 / 4, 120);
    5f0c:	be 01       	movw	r22, r28
    5f0e:	d7 ff       	sbrs	r29, 7
    5f10:	02 c0       	rjmp	.+4      	; 0x5f16 <main+0x1caa>
    5f12:	6d 5f       	subi	r22, 0xFD	; 253
    5f14:	7f 4f       	sbci	r23, 0xFF	; 255
    5f16:	75 95       	asr	r23
    5f18:	67 95       	ror	r22
    5f1a:	75 95       	asr	r23
    5f1c:	67 95       	ror	r22
    5f1e:	48 e7       	ldi	r20, 0x78	; 120
    5f20:	50 e0       	ldi	r21, 0x00	; 0
    5f22:	8d e0       	ldi	r24, 0x0D	; 13
    5f24:	90 e0       	ldi	r25, 0x00	; 0
    5f26:	0e 94 6c 07 	call	0xed8	; 0xed8 <move(int, int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1828
  move(Left, T90 * 2, 120);
    5f2a:	be 01       	movw	r22, r28
    5f2c:	66 0f       	add	r22, r22
    5f2e:	77 1f       	adc	r23, r23
    5f30:	48 e7       	ldi	r20, 0x78	; 120
    5f32:	50 e0       	ldi	r21, 0x00	; 0
    5f34:	8b e0       	ldi	r24, 0x0B	; 11
    5f36:	90 e0       	ldi	r25, 0x00	; 0
    5f38:	0e 94 6c 07 	call	0xed8	; 0xed8 <move(int, int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1829
  go(60, 60);
    5f3c:	6c e3       	ldi	r22, 0x3C	; 60
    5f3e:	70 e0       	ldi	r23, 0x00	; 0
    5f40:	8c e3       	ldi	r24, 0x3C	; 60
    5f42:	90 e0       	ldi	r25, 0x00	; 0
    5f44:	0e 94 07 07 	call	0xe0e	; 0xe0e <go(int, int)>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1830
  get_back();
    5f48:	0e 94 e4 0e 	call	0x1dc8	; 0x1dc8 <get_back()>
main():
C:\Users\beibe\AppData\Local\Arduino15\packages\MegaCore\hardware\avr\3.0.3\cores\MCUdude_corefiles/main.cpp:47
  
  setup();
    
  for (;;) {
    loop();
    if (serialEventRun) serialEventRun();
    5f4c:	0e 94 9c 04 	call	0x938	; 0x938 <serialEventRun()>
    5f50:	0c 94 1e 24 	jmp	0x483c	; 0x483c <main+0x5d0>
track():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1779
      move(forward, T90 / 6, 100);

      go(60, 60);
      while (inter_cnt < track_rounds) {
        linefollow();
        if (intersectionL || intersectionR) {
    5f54:	40 e0       	ldi	r20, 0x00	; 0
    5f56:	60 e0       	ldi	r22, 0x00	; 0
    5f58:	81 e0       	ldi	r24, 0x01	; 1
    5f5a:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    5f5e:	89 2b       	or	r24, r25
    5f60:	09 f0       	breq	.+2      	; 0x5f64 <main+0x1cf8>
    5f62:	1c cf       	rjmp	.-456    	; 0x5d9c <main+0x1b30>
    5f64:	40 e0       	ldi	r20, 0x00	; 0
    5f66:	61 e0       	ldi	r22, 0x01	; 1
    5f68:	81 e0       	ldi	r24, 0x01	; 1
    5f6a:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    5f6e:	89 2b       	or	r24, r25
    5f70:	09 f0       	breq	.+2      	; 0x5f74 <main+0x1d08>
    5f72:	14 cf       	rjmp	.-472    	; 0x5d9c <main+0x1b30>
    5f74:	1b cf       	rjmp	.-458    	; 0x5dac <main+0x1b40>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1780
          while (intersectionL && intersectionR)
    5f76:	40 e0       	ldi	r20, 0x00	; 0
    5f78:	60 e0       	ldi	r22, 0x00	; 0
    5f7a:	81 e0       	ldi	r24, 0x01	; 1
    5f7c:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    5f80:	89 2b       	or	r24, r25
    5f82:	09 f0       	breq	.+2      	; 0x5f86 <main+0x1d1a>
    5f84:	b9 ce       	rjmp	.-654    	; 0x5cf8 <main+0x1a8c>
    5f86:	40 e0       	ldi	r20, 0x00	; 0
    5f88:	61 e0       	ldi	r22, 0x01	; 1
    5f8a:	81 e0       	ldi	r24, 0x01	; 1
    5f8c:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    5f90:	89 2b       	or	r24, r25
    5f92:	09 f0       	breq	.+2      	; 0x5f96 <main+0x1d2a>
    5f94:	b1 ce       	rjmp	.-670    	; 0x5cf8 <main+0x1a8c>
    5f96:	b8 ce       	rjmp	.-656    	; 0x5d08 <main+0x1a9c>
    5f98:	40 e0       	ldi	r20, 0x00	; 0
    5f9a:	60 e0       	ldi	r22, 0x00	; 0
    5f9c:	80 e0       	ldi	r24, 0x00	; 0
    5f9e:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    5fa2:	89 2b       	or	r24, r25
    5fa4:	49 f0       	breq	.+18     	; 0x5fb8 <main+0x1d4c>
    5fa6:	40 e0       	ldi	r20, 0x00	; 0
    5fa8:	63 e0       	ldi	r22, 0x03	; 3
    5faa:	82 e0       	ldi	r24, 0x02	; 2
    5fac:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    5fb0:	89 2b       	or	r24, r25
    5fb2:	09 f0       	breq	.+2      	; 0x5fb6 <main+0x1d4a>
    5fb4:	99 ce       	rjmp	.-718    	; 0x5ce8 <main+0x1a7c>
    5fb6:	a8 ce       	rjmp	.-688    	; 0x5d08 <main+0x1a9c>
    5fb8:	40 e0       	ldi	r20, 0x00	; 0
    5fba:	60 e0       	ldi	r22, 0x00	; 0
    5fbc:	81 e0       	ldi	r24, 0x01	; 1
    5fbe:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    5fc2:	89 2b       	or	r24, r25
    5fc4:	81 f7       	brne	.-32     	; 0x5fa6 <main+0x1d3a>
    5fc6:	40 e0       	ldi	r20, 0x00	; 0
    5fc8:	61 e0       	ldi	r22, 0x01	; 1
    5fca:	81 e0       	ldi	r24, 0x01	; 1
    5fcc:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    5fd0:	89 2b       	or	r24, r25
    5fd2:	49 f7       	brne	.-46     	; 0x5fa6 <main+0x1d3a>
    5fd4:	99 ce       	rjmp	.-718    	; 0x5d08 <main+0x1a9c>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1795
      go(60, 60);
      inter_cnt = 0;
      direction = Left;
      while (inter_cnt < 1) {
        linefollow();
        if (intersectionL || intersectionR) {
    5fd6:	40 e0       	ldi	r20, 0x00	; 0
    5fd8:	60 e0       	ldi	r22, 0x00	; 0
    5fda:	81 e0       	ldi	r24, 0x01	; 1
    5fdc:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    5fe0:	89 2b       	or	r24, r25
    5fe2:	09 f0       	breq	.+2      	; 0x5fe6 <main+0x1d7a>
    5fe4:	08 cf       	rjmp	.-496    	; 0x5df6 <main+0x1b8a>
    5fe6:	40 e0       	ldi	r20, 0x00	; 0
    5fe8:	61 e0       	ldi	r22, 0x01	; 1
    5fea:	81 e0       	ldi	r24, 0x01	; 1
    5fec:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    5ff0:	89 2b       	or	r24, r25
    5ff2:	09 f0       	breq	.+2      	; 0x5ff6 <main+0x1d8a>
    5ff4:	00 cf       	rjmp	.-512    	; 0x5df6 <main+0x1b8a>
    5ff6:	40 e0       	ldi	r20, 0x00	; 0
    5ff8:	60 e0       	ldi	r22, 0x00	; 0
    5ffa:	80 e0       	ldi	r24, 0x00	; 0
    5ffc:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    6000:	89 2b       	or	r24, r25
    6002:	49 f0       	breq	.+18     	; 0x6016 <main+0x1daa>
    6004:	40 e0       	ldi	r20, 0x00	; 0
    6006:	63 e0       	ldi	r22, 0x03	; 3
    6008:	82 e0       	ldi	r24, 0x02	; 2
    600a:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    600e:	89 2b       	or	r24, r25
    6010:	09 f4       	brne	.+2      	; 0x6014 <main+0x1da8>
    6012:	e7 ce       	rjmp	.-562    	; 0x5de2 <main+0x1b76>
    6014:	f8 ce       	rjmp	.-528    	; 0x5e06 <main+0x1b9a>
    6016:	40 e0       	ldi	r20, 0x00	; 0
    6018:	60 e0       	ldi	r22, 0x00	; 0
    601a:	81 e0       	ldi	r24, 0x01	; 1
    601c:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    6020:	89 2b       	or	r24, r25
    6022:	81 f7       	brne	.-32     	; 0x6004 <main+0x1d98>
    6024:	40 e0       	ldi	r20, 0x00	; 0
    6026:	61 e0       	ldi	r22, 0x01	; 1
    6028:	81 e0       	ldi	r24, 0x01	; 1
    602a:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    602e:	89 2b       	or	r24, r25
    6030:	49 f7       	brne	.-46     	; 0x6004 <main+0x1d98>
    6032:	d7 ce       	rjmp	.-594    	; 0x5de2 <main+0x1b76>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1796
          while (intersectionL && intersectionR)
    6034:	40 e0       	ldi	r20, 0x00	; 0
    6036:	60 e0       	ldi	r22, 0x00	; 0
    6038:	81 e0       	ldi	r24, 0x01	; 1
    603a:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    603e:	89 2b       	or	r24, r25
    6040:	09 f0       	breq	.+2      	; 0x6044 <main+0x1dd8>
    6042:	e9 ce       	rjmp	.-558    	; 0x5e16 <main+0x1baa>
    6044:	40 e0       	ldi	r20, 0x00	; 0
    6046:	61 e0       	ldi	r22, 0x01	; 1
    6048:	81 e0       	ldi	r24, 0x01	; 1
    604a:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    604e:	89 2b       	or	r24, r25
    6050:	09 f0       	breq	.+2      	; 0x6054 <main+0x1de8>
    6052:	e1 ce       	rjmp	.-574    	; 0x5e16 <main+0x1baa>
    6054:	e8 ce       	rjmp	.-560    	; 0x5e26 <main+0x1bba>
    6056:	40 e0       	ldi	r20, 0x00	; 0
    6058:	60 e0       	ldi	r22, 0x00	; 0
    605a:	80 e0       	ldi	r24, 0x00	; 0
    605c:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    6060:	89 2b       	or	r24, r25
    6062:	49 f0       	breq	.+18     	; 0x6076 <main+0x1e0a>
    6064:	40 e0       	ldi	r20, 0x00	; 0
    6066:	63 e0       	ldi	r22, 0x03	; 3
    6068:	82 e0       	ldi	r24, 0x02	; 2
    606a:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    606e:	89 2b       	or	r24, r25
    6070:	09 f0       	breq	.+2      	; 0x6074 <main+0x1e08>
    6072:	c9 ce       	rjmp	.-622    	; 0x5e06 <main+0x1b9a>
    6074:	d8 ce       	rjmp	.-592    	; 0x5e26 <main+0x1bba>
    6076:	40 e0       	ldi	r20, 0x00	; 0
    6078:	60 e0       	ldi	r22, 0x00	; 0
    607a:	81 e0       	ldi	r24, 0x01	; 1
    607c:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    6080:	89 2b       	or	r24, r25
    6082:	81 f7       	brne	.-32     	; 0x6064 <main+0x1df8>
    6084:	40 e0       	ldi	r20, 0x00	; 0
    6086:	61 e0       	ldi	r22, 0x01	; 1
    6088:	81 e0       	ldi	r24, 0x01	; 1
    608a:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    608e:	89 2b       	or	r24, r25
    6090:	49 f7       	brne	.-46     	; 0x6064 <main+0x1df8>
    6092:	c9 ce       	rjmp	.-622    	; 0x5e26 <main+0x1bba>
archery():
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1819
  get_back();
}
void archery() {
  int arm_dropping = EEPROM_read_int(arm_dropping_address);
  int T90 = EEPROM_read_int(T90_address);
  while (!intersectionL && !intersectionR) {
    6094:	40 e0       	ldi	r20, 0x00	; 0
    6096:	60 e0       	ldi	r22, 0x00	; 0
    6098:	81 e0       	ldi	r24, 0x01	; 1
    609a:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    609e:	89 2b       	or	r24, r25
    60a0:	09 f0       	breq	.+2      	; 0x60a4 <main+0x1e38>
    60a2:	0f cf       	rjmp	.-482    	; 0x5ec2 <main+0x1c56>
    60a4:	40 e0       	ldi	r20, 0x00	; 0
    60a6:	61 e0       	ldi	r22, 0x01	; 1
    60a8:	81 e0       	ldi	r24, 0x01	; 1
    60aa:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    60ae:	89 2b       	or	r24, r25
    60b0:	09 f0       	breq	.+2      	; 0x60b4 <main+0x1e48>
    60b2:	07 cf       	rjmp	.-498    	; 0x5ec2 <main+0x1c56>
    60b4:	40 e0       	ldi	r20, 0x00	; 0
    60b6:	60 e0       	ldi	r22, 0x00	; 0
    60b8:	80 e0       	ldi	r24, 0x00	; 0
    60ba:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    60be:	89 2b       	or	r24, r25
    60c0:	59 f0       	breq	.+22     	; 0x60d8 <main+0x1e6c>
    60c2:	40 e0       	ldi	r20, 0x00	; 0
    60c4:	63 e0       	ldi	r22, 0x03	; 3
    60c6:	82 e0       	ldi	r24, 0x02	; 2
    60c8:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    60cc:	89 2b       	or	r24, r25
    60ce:	09 f0       	breq	.+2      	; 0x60d2 <main+0x1e66>
    60d0:	00 cf       	rjmp	.-512    	; 0x5ed2 <main+0x1c66>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1820
    linefollow();
    60d2:	0e 94 db 07 	call	0xfb6	; 0xfb6 <linefollow()>
    60d6:	ed ce       	rjmp	.-550    	; 0x5eb2 <main+0x1c46>
C:\Users\beibe\OneDrive\Desktop\refactored code Rescue\refactored code Rescue\sport_main_code_2023/sport_menu.h:1819
  get_back();
}
void archery() {
  int arm_dropping = EEPROM_read_int(arm_dropping_address);
  int T90 = EEPROM_read_int(T90_address);
  while (!intersectionL && !intersectionR) {
    60d8:	40 e0       	ldi	r20, 0x00	; 0
    60da:	60 e0       	ldi	r22, 0x00	; 0
    60dc:	81 e0       	ldi	r24, 0x01	; 1
    60de:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    60e2:	89 2b       	or	r24, r25
    60e4:	71 f7       	brne	.-36     	; 0x60c2 <main+0x1e56>
    60e6:	40 e0       	ldi	r20, 0x00	; 0
    60e8:	61 e0       	ldi	r22, 0x01	; 1
    60ea:	81 e0       	ldi	r24, 0x01	; 1
    60ec:	0e 94 ba 06 	call	0xd74	; 0xd74 <read_sensor(char, char, char)>
    60f0:	89 2b       	or	r24, r25
    60f2:	39 f7       	brne	.-50     	; 0x60c2 <main+0x1e56>
    60f4:	ee cf       	rjmp	.-36     	; 0x60d2 <main+0x1e66>

000060f6 <vfprintf>:
vfprintf():
    60f6:	2f 92       	push	r2
    60f8:	3f 92       	push	r3
    60fa:	4f 92       	push	r4
    60fc:	5f 92       	push	r5
    60fe:	6f 92       	push	r6
    6100:	7f 92       	push	r7
    6102:	8f 92       	push	r8
    6104:	9f 92       	push	r9
    6106:	af 92       	push	r10
    6108:	bf 92       	push	r11
    610a:	cf 92       	push	r12
    610c:	df 92       	push	r13
    610e:	ef 92       	push	r14
    6110:	ff 92       	push	r15
    6112:	0f 93       	push	r16
    6114:	1f 93       	push	r17
    6116:	cf 93       	push	r28
    6118:	df 93       	push	r29
    611a:	cd b7       	in	r28, 0x3d	; 61
    611c:	de b7       	in	r29, 0x3e	; 62
    611e:	2b 97       	sbiw	r28, 0x0b	; 11
    6120:	0f b6       	in	r0, 0x3f	; 63
    6122:	f8 94       	cli
    6124:	de bf       	out	0x3e, r29	; 62
    6126:	0f be       	out	0x3f, r0	; 63
    6128:	cd bf       	out	0x3d, r28	; 61
    612a:	7c 01       	movw	r14, r24
    612c:	3b 01       	movw	r6, r22
    612e:	8a 01       	movw	r16, r20
    6130:	fc 01       	movw	r30, r24
    6132:	17 82       	std	Z+7, r1	; 0x07
    6134:	16 82       	std	Z+6, r1	; 0x06
    6136:	83 81       	ldd	r24, Z+3	; 0x03
    6138:	81 ff       	sbrs	r24, 1
    613a:	dd c1       	rjmp	.+954    	; 0x64f6 <vfprintf+0x400>
    613c:	ce 01       	movw	r24, r28
    613e:	01 96       	adiw	r24, 0x01	; 1
    6140:	5c 01       	movw	r10, r24
    6142:	f7 01       	movw	r30, r14
    6144:	93 81       	ldd	r25, Z+3	; 0x03
    6146:	f3 01       	movw	r30, r6
    6148:	93 fd       	sbrc	r25, 3
    614a:	85 91       	lpm	r24, Z+
    614c:	93 ff       	sbrs	r25, 3
    614e:	81 91       	ld	r24, Z+
    6150:	3f 01       	movw	r6, r30
    6152:	88 23       	and	r24, r24
    6154:	09 f4       	brne	.+2      	; 0x6158 <vfprintf+0x62>
    6156:	53 c1       	rjmp	.+678    	; 0x63fe <vfprintf+0x308>
    6158:	85 32       	cpi	r24, 0x25	; 37
    615a:	39 f4       	brne	.+14     	; 0x616a <vfprintf+0x74>
    615c:	93 fd       	sbrc	r25, 3
    615e:	85 91       	lpm	r24, Z+
    6160:	93 ff       	sbrs	r25, 3
    6162:	81 91       	ld	r24, Z+
    6164:	3f 01       	movw	r6, r30
    6166:	85 32       	cpi	r24, 0x25	; 37
    6168:	29 f4       	brne	.+10     	; 0x6174 <vfprintf+0x7e>
    616a:	b7 01       	movw	r22, r14
    616c:	90 e0       	ldi	r25, 0x00	; 0
    616e:	0e 94 94 32 	call	0x6528	; 0x6528 <fputc>
    6172:	e7 cf       	rjmp	.-50     	; 0x6142 <vfprintf+0x4c>
    6174:	91 2c       	mov	r9, r1
    6176:	21 2c       	mov	r2, r1
    6178:	31 2c       	mov	r3, r1
    617a:	ff e1       	ldi	r31, 0x1F	; 31
    617c:	f3 15       	cp	r31, r3
    617e:	38 f0       	brcs	.+14     	; 0x618e <vfprintf+0x98>
    6180:	8b 32       	cpi	r24, 0x2B	; 43
    6182:	11 f1       	breq	.+68     	; 0x61c8 <vfprintf+0xd2>
    6184:	90 f4       	brcc	.+36     	; 0x61aa <vfprintf+0xb4>
    6186:	80 32       	cpi	r24, 0x20	; 32
    6188:	09 f1       	breq	.+66     	; 0x61cc <vfprintf+0xd6>
    618a:	83 32       	cpi	r24, 0x23	; 35
    618c:	29 f1       	breq	.+74     	; 0x61d8 <vfprintf+0xe2>
    618e:	37 fc       	sbrc	r3, 7
    6190:	3c c0       	rjmp	.+120    	; 0x620a <vfprintf+0x114>
    6192:	20 ed       	ldi	r18, 0xD0	; 208
    6194:	28 0f       	add	r18, r24
    6196:	2a 30       	cpi	r18, 0x0A	; 10
    6198:	50 f5       	brcc	.+84     	; 0x61ee <vfprintf+0xf8>
    619a:	36 fe       	sbrs	r3, 6
    619c:	20 c0       	rjmp	.+64     	; 0x61de <vfprintf+0xe8>
    619e:	8a e0       	ldi	r24, 0x0A	; 10
    61a0:	98 9e       	mul	r9, r24
    61a2:	20 0d       	add	r18, r0
    61a4:	11 24       	eor	r1, r1
    61a6:	92 2e       	mov	r9, r18
    61a8:	06 c0       	rjmp	.+12     	; 0x61b6 <vfprintf+0xc0>
    61aa:	8d 32       	cpi	r24, 0x2D	; 45
    61ac:	91 f0       	breq	.+36     	; 0x61d2 <vfprintf+0xdc>
    61ae:	80 33       	cpi	r24, 0x30	; 48
    61b0:	71 f7       	brne	.-36     	; 0x618e <vfprintf+0x98>
    61b2:	68 94       	set
    61b4:	30 f8       	bld	r3, 0
    61b6:	f3 01       	movw	r30, r6
    61b8:	93 fd       	sbrc	r25, 3
    61ba:	85 91       	lpm	r24, Z+
    61bc:	93 ff       	sbrs	r25, 3
    61be:	81 91       	ld	r24, Z+
    61c0:	3f 01       	movw	r6, r30
    61c2:	81 11       	cpse	r24, r1
    61c4:	da cf       	rjmp	.-76     	; 0x617a <vfprintf+0x84>
    61c6:	21 c0       	rjmp	.+66     	; 0x620a <vfprintf+0x114>
    61c8:	68 94       	set
    61ca:	31 f8       	bld	r3, 1
    61cc:	68 94       	set
    61ce:	32 f8       	bld	r3, 2
    61d0:	f2 cf       	rjmp	.-28     	; 0x61b6 <vfprintf+0xc0>
    61d2:	68 94       	set
    61d4:	33 f8       	bld	r3, 3
    61d6:	ef cf       	rjmp	.-34     	; 0x61b6 <vfprintf+0xc0>
    61d8:	68 94       	set
    61da:	34 f8       	bld	r3, 4
    61dc:	ec cf       	rjmp	.-40     	; 0x61b6 <vfprintf+0xc0>
    61de:	ea e0       	ldi	r30, 0x0A	; 10
    61e0:	2e 9e       	mul	r2, r30
    61e2:	20 0d       	add	r18, r0
    61e4:	11 24       	eor	r1, r1
    61e6:	22 2e       	mov	r2, r18
    61e8:	68 94       	set
    61ea:	35 f8       	bld	r3, 5
    61ec:	e4 cf       	rjmp	.-56     	; 0x61b6 <vfprintf+0xc0>
    61ee:	8e 32       	cpi	r24, 0x2E	; 46
    61f0:	29 f4       	brne	.+10     	; 0x61fc <vfprintf+0x106>
    61f2:	36 fc       	sbrc	r3, 6
    61f4:	04 c1       	rjmp	.+520    	; 0x63fe <vfprintf+0x308>
    61f6:	68 94       	set
    61f8:	36 f8       	bld	r3, 6
    61fa:	dd cf       	rjmp	.-70     	; 0x61b6 <vfprintf+0xc0>
    61fc:	8c 36       	cpi	r24, 0x6C	; 108
    61fe:	19 f4       	brne	.+6      	; 0x6206 <vfprintf+0x110>
    6200:	68 94       	set
    6202:	37 f8       	bld	r3, 7
    6204:	d8 cf       	rjmp	.-80     	; 0x61b6 <vfprintf+0xc0>
    6206:	88 36       	cpi	r24, 0x68	; 104
    6208:	b1 f2       	breq	.-84     	; 0x61b6 <vfprintf+0xc0>
    620a:	98 2f       	mov	r25, r24
    620c:	9f 7d       	andi	r25, 0xDF	; 223
    620e:	95 54       	subi	r25, 0x45	; 69
    6210:	93 30       	cpi	r25, 0x03	; 3
    6212:	e0 f0       	brcs	.+56     	; 0x624c <vfprintf+0x156>
    6214:	83 36       	cpi	r24, 0x63	; 99
    6216:	a1 f1       	breq	.+104    	; 0x6280 <vfprintf+0x18a>
    6218:	83 37       	cpi	r24, 0x73	; 115
    621a:	c1 f1       	breq	.+112    	; 0x628c <vfprintf+0x196>
    621c:	83 35       	cpi	r24, 0x53	; 83
    621e:	09 f0       	breq	.+2      	; 0x6222 <vfprintf+0x12c>
    6220:	63 c0       	rjmp	.+198    	; 0x62e8 <vfprintf+0x1f2>
    6222:	28 01       	movw	r4, r16
    6224:	f2 e0       	ldi	r31, 0x02	; 2
    6226:	4f 0e       	add	r4, r31
    6228:	51 1c       	adc	r5, r1
    622a:	f8 01       	movw	r30, r16
    622c:	c0 80       	ld	r12, Z
    622e:	d1 80       	ldd	r13, Z+1	; 0x01
    6230:	69 2d       	mov	r22, r9
    6232:	70 e0       	ldi	r23, 0x00	; 0
    6234:	36 fc       	sbrc	r3, 6
    6236:	02 c0       	rjmp	.+4      	; 0x623c <vfprintf+0x146>
    6238:	6f ef       	ldi	r22, 0xFF	; 255
    623a:	7f ef       	ldi	r23, 0xFF	; 255
    623c:	c6 01       	movw	r24, r12
    623e:	0e 94 7e 32 	call	0x64fc	; 0x64fc <strnlen_P>
    6242:	4c 01       	movw	r8, r24
    6244:	68 94       	set
    6246:	37 f8       	bld	r3, 7
    6248:	82 01       	movw	r16, r4
    624a:	0a c0       	rjmp	.+20     	; 0x6260 <vfprintf+0x16a>
    624c:	0c 5f       	subi	r16, 0xFC	; 252
    624e:	1f 4f       	sbci	r17, 0xFF	; 255
    6250:	ff e3       	ldi	r31, 0x3F	; 63
    6252:	f9 83       	std	Y+1, r31	; 0x01
    6254:	88 24       	eor	r8, r8
    6256:	83 94       	inc	r8
    6258:	91 2c       	mov	r9, r1
    625a:	65 01       	movw	r12, r10
    625c:	e8 94       	clt
    625e:	37 f8       	bld	r3, 7
    6260:	33 fe       	sbrs	r3, 3
    6262:	2d c0       	rjmp	.+90     	; 0x62be <vfprintf+0x1c8>
    6264:	52 2c       	mov	r5, r2
    6266:	81 14       	cp	r8, r1
    6268:	91 04       	cpc	r9, r1
    626a:	71 f5       	brne	.+92     	; 0x62c8 <vfprintf+0x1d2>
    626c:	55 20       	and	r5, r5
    626e:	09 f4       	brne	.+2      	; 0x6272 <vfprintf+0x17c>
    6270:	68 cf       	rjmp	.-304    	; 0x6142 <vfprintf+0x4c>
    6272:	b7 01       	movw	r22, r14
    6274:	80 e2       	ldi	r24, 0x20	; 32
    6276:	90 e0       	ldi	r25, 0x00	; 0
    6278:	0e 94 94 32 	call	0x6528	; 0x6528 <fputc>
    627c:	5a 94       	dec	r5
    627e:	f6 cf       	rjmp	.-20     	; 0x626c <vfprintf+0x176>
    6280:	f8 01       	movw	r30, r16
    6282:	80 81       	ld	r24, Z
    6284:	89 83       	std	Y+1, r24	; 0x01
    6286:	0e 5f       	subi	r16, 0xFE	; 254
    6288:	1f 4f       	sbci	r17, 0xFF	; 255
    628a:	e4 cf       	rjmp	.-56     	; 0x6254 <vfprintf+0x15e>
    628c:	28 01       	movw	r4, r16
    628e:	f2 e0       	ldi	r31, 0x02	; 2
    6290:	4f 0e       	add	r4, r31
    6292:	51 1c       	adc	r5, r1
    6294:	f8 01       	movw	r30, r16
    6296:	c0 80       	ld	r12, Z
    6298:	d1 80       	ldd	r13, Z+1	; 0x01
    629a:	69 2d       	mov	r22, r9
    629c:	70 e0       	ldi	r23, 0x00	; 0
    629e:	36 fc       	sbrc	r3, 6
    62a0:	02 c0       	rjmp	.+4      	; 0x62a6 <vfprintf+0x1b0>
    62a2:	6f ef       	ldi	r22, 0xFF	; 255
    62a4:	7f ef       	ldi	r23, 0xFF	; 255
    62a6:	c6 01       	movw	r24, r12
    62a8:	0e 94 89 32 	call	0x6512	; 0x6512 <strnlen>
    62ac:	4c 01       	movw	r8, r24
    62ae:	82 01       	movw	r16, r4
    62b0:	d5 cf       	rjmp	.-86     	; 0x625c <vfprintf+0x166>
    62b2:	b7 01       	movw	r22, r14
    62b4:	80 e2       	ldi	r24, 0x20	; 32
    62b6:	90 e0       	ldi	r25, 0x00	; 0
    62b8:	0e 94 94 32 	call	0x6528	; 0x6528 <fputc>
    62bc:	2a 94       	dec	r2
    62be:	28 14       	cp	r2, r8
    62c0:	19 04       	cpc	r1, r9
    62c2:	09 f0       	breq	.+2      	; 0x62c6 <vfprintf+0x1d0>
    62c4:	b0 f7       	brcc	.-20     	; 0x62b2 <vfprintf+0x1bc>
    62c6:	ce cf       	rjmp	.-100    	; 0x6264 <vfprintf+0x16e>
    62c8:	f6 01       	movw	r30, r12
    62ca:	37 fc       	sbrc	r3, 7
    62cc:	85 91       	lpm	r24, Z+
    62ce:	37 fe       	sbrs	r3, 7
    62d0:	81 91       	ld	r24, Z+
    62d2:	6f 01       	movw	r12, r30
    62d4:	b7 01       	movw	r22, r14
    62d6:	90 e0       	ldi	r25, 0x00	; 0
    62d8:	0e 94 94 32 	call	0x6528	; 0x6528 <fputc>
    62dc:	51 10       	cpse	r5, r1
    62de:	5a 94       	dec	r5
    62e0:	f1 e0       	ldi	r31, 0x01	; 1
    62e2:	8f 1a       	sub	r8, r31
    62e4:	91 08       	sbc	r9, r1
    62e6:	bf cf       	rjmp	.-130    	; 0x6266 <vfprintf+0x170>
    62e8:	84 36       	cpi	r24, 0x64	; 100
    62ea:	19 f0       	breq	.+6      	; 0x62f2 <vfprintf+0x1fc>
    62ec:	89 36       	cpi	r24, 0x69	; 105
    62ee:	09 f0       	breq	.+2      	; 0x62f2 <vfprintf+0x1fc>
    62f0:	77 c0       	rjmp	.+238    	; 0x63e0 <vfprintf+0x2ea>
    62f2:	f8 01       	movw	r30, r16
    62f4:	37 fe       	sbrs	r3, 7
    62f6:	6b c0       	rjmp	.+214    	; 0x63ce <vfprintf+0x2d8>
    62f8:	60 81       	ld	r22, Z
    62fa:	71 81       	ldd	r23, Z+1	; 0x01
    62fc:	82 81       	ldd	r24, Z+2	; 0x02
    62fe:	93 81       	ldd	r25, Z+3	; 0x03
    6300:	0c 5f       	subi	r16, 0xFC	; 252
    6302:	1f 4f       	sbci	r17, 0xFF	; 255
    6304:	f3 2d       	mov	r31, r3
    6306:	ff 76       	andi	r31, 0x6F	; 111
    6308:	3f 2e       	mov	r3, r31
    630a:	97 ff       	sbrs	r25, 7
    630c:	09 c0       	rjmp	.+18     	; 0x6320 <vfprintf+0x22a>
    630e:	90 95       	com	r25
    6310:	80 95       	com	r24
    6312:	70 95       	com	r23
    6314:	61 95       	neg	r22
    6316:	7f 4f       	sbci	r23, 0xFF	; 255
    6318:	8f 4f       	sbci	r24, 0xFF	; 255
    631a:	9f 4f       	sbci	r25, 0xFF	; 255
    631c:	68 94       	set
    631e:	37 f8       	bld	r3, 7
    6320:	2a e0       	ldi	r18, 0x0A	; 10
    6322:	30 e0       	ldi	r19, 0x00	; 0
    6324:	a5 01       	movw	r20, r10
    6326:	0e 94 c4 32 	call	0x6588	; 0x6588 <__ultoa_invert>
    632a:	c8 2e       	mov	r12, r24
    632c:	ca 18       	sub	r12, r10
    632e:	8c 2c       	mov	r8, r12
    6330:	43 2c       	mov	r4, r3
    6332:	36 fe       	sbrs	r3, 6
    6334:	0c c0       	rjmp	.+24     	; 0x634e <vfprintf+0x258>
    6336:	e8 94       	clt
    6338:	40 f8       	bld	r4, 0
    633a:	c9 14       	cp	r12, r9
    633c:	40 f4       	brcc	.+16     	; 0x634e <vfprintf+0x258>
    633e:	34 fe       	sbrs	r3, 4
    6340:	05 c0       	rjmp	.+10     	; 0x634c <vfprintf+0x256>
    6342:	32 fc       	sbrc	r3, 2
    6344:	03 c0       	rjmp	.+6      	; 0x634c <vfprintf+0x256>
    6346:	f3 2d       	mov	r31, r3
    6348:	fe 7e       	andi	r31, 0xEE	; 238
    634a:	4f 2e       	mov	r4, r31
    634c:	89 2c       	mov	r8, r9
    634e:	44 fe       	sbrs	r4, 4
    6350:	aa c0       	rjmp	.+340    	; 0x64a6 <vfprintf+0x3b0>
    6352:	fe 01       	movw	r30, r28
    6354:	ec 0d       	add	r30, r12
    6356:	f1 1d       	adc	r31, r1
    6358:	80 81       	ld	r24, Z
    635a:	80 33       	cpi	r24, 0x30	; 48
    635c:	09 f0       	breq	.+2      	; 0x6360 <vfprintf+0x26a>
    635e:	9c c0       	rjmp	.+312    	; 0x6498 <vfprintf+0x3a2>
    6360:	24 2d       	mov	r18, r4
    6362:	29 7e       	andi	r18, 0xE9	; 233
    6364:	42 2e       	mov	r4, r18
    6366:	84 2d       	mov	r24, r4
    6368:	88 70       	andi	r24, 0x08	; 8
    636a:	58 2e       	mov	r5, r24
    636c:	43 fc       	sbrc	r4, 3
    636e:	aa c0       	rjmp	.+340    	; 0x64c4 <vfprintf+0x3ce>
    6370:	40 fe       	sbrs	r4, 0
    6372:	a4 c0       	rjmp	.+328    	; 0x64bc <vfprintf+0x3c6>
    6374:	9c 2c       	mov	r9, r12
    6376:	82 14       	cp	r8, r2
    6378:	18 f4       	brcc	.+6      	; 0x6380 <vfprintf+0x28a>
    637a:	2c 0c       	add	r2, r12
    637c:	92 2c       	mov	r9, r2
    637e:	98 18       	sub	r9, r8
    6380:	44 fe       	sbrs	r4, 4
    6382:	a6 c0       	rjmp	.+332    	; 0x64d0 <vfprintf+0x3da>
    6384:	b7 01       	movw	r22, r14
    6386:	80 e3       	ldi	r24, 0x30	; 48
    6388:	90 e0       	ldi	r25, 0x00	; 0
    638a:	0e 94 94 32 	call	0x6528	; 0x6528 <fputc>
    638e:	42 fe       	sbrs	r4, 2
    6390:	09 c0       	rjmp	.+18     	; 0x63a4 <vfprintf+0x2ae>
    6392:	88 e7       	ldi	r24, 0x78	; 120
    6394:	90 e0       	ldi	r25, 0x00	; 0
    6396:	41 fe       	sbrs	r4, 1
    6398:	02 c0       	rjmp	.+4      	; 0x639e <vfprintf+0x2a8>
    639a:	88 e5       	ldi	r24, 0x58	; 88
    639c:	90 e0       	ldi	r25, 0x00	; 0
    639e:	b7 01       	movw	r22, r14
    63a0:	0e 94 94 32 	call	0x6528	; 0x6528 <fputc>
    63a4:	c9 14       	cp	r12, r9
    63a6:	08 f4       	brcc	.+2      	; 0x63aa <vfprintf+0x2b4>
    63a8:	9f c0       	rjmp	.+318    	; 0x64e8 <vfprintf+0x3f2>
    63aa:	ca 94       	dec	r12
    63ac:	d1 2c       	mov	r13, r1
    63ae:	9f ef       	ldi	r25, 0xFF	; 255
    63b0:	c9 1a       	sub	r12, r25
    63b2:	d9 0a       	sbc	r13, r25
    63b4:	ca 0c       	add	r12, r10
    63b6:	db 1c       	adc	r13, r11
    63b8:	f6 01       	movw	r30, r12
    63ba:	82 91       	ld	r24, -Z
    63bc:	6f 01       	movw	r12, r30
    63be:	b7 01       	movw	r22, r14
    63c0:	90 e0       	ldi	r25, 0x00	; 0
    63c2:	0e 94 94 32 	call	0x6528	; 0x6528 <fputc>
    63c6:	ac 14       	cp	r10, r12
    63c8:	bd 04       	cpc	r11, r13
    63ca:	b1 f7       	brne	.-20     	; 0x63b8 <vfprintf+0x2c2>
    63cc:	4f cf       	rjmp	.-354    	; 0x626c <vfprintf+0x176>
    63ce:	60 81       	ld	r22, Z
    63d0:	71 81       	ldd	r23, Z+1	; 0x01
    63d2:	07 2e       	mov	r0, r23
    63d4:	00 0c       	add	r0, r0
    63d6:	88 0b       	sbc	r24, r24
    63d8:	99 0b       	sbc	r25, r25
    63da:	0e 5f       	subi	r16, 0xFE	; 254
    63dc:	1f 4f       	sbci	r17, 0xFF	; 255
    63de:	92 cf       	rjmp	.-220    	; 0x6304 <vfprintf+0x20e>
    63e0:	d3 2c       	mov	r13, r3
    63e2:	e8 94       	clt
    63e4:	d4 f8       	bld	r13, 4
    63e6:	2a e0       	ldi	r18, 0x0A	; 10
    63e8:	30 e0       	ldi	r19, 0x00	; 0
    63ea:	85 37       	cpi	r24, 0x75	; 117
    63ec:	e1 f1       	breq	.+120    	; 0x6466 <vfprintf+0x370>
    63ee:	23 2d       	mov	r18, r3
    63f0:	29 7f       	andi	r18, 0xF9	; 249
    63f2:	d2 2e       	mov	r13, r18
    63f4:	8f 36       	cpi	r24, 0x6F	; 111
    63f6:	a9 f1       	breq	.+106    	; 0x6462 <vfprintf+0x36c>
    63f8:	f0 f4       	brcc	.+60     	; 0x6436 <vfprintf+0x340>
    63fa:	88 35       	cpi	r24, 0x58	; 88
    63fc:	51 f1       	breq	.+84     	; 0x6452 <vfprintf+0x35c>
    63fe:	f7 01       	movw	r30, r14
    6400:	86 81       	ldd	r24, Z+6	; 0x06
    6402:	97 81       	ldd	r25, Z+7	; 0x07
    6404:	2b 96       	adiw	r28, 0x0b	; 11
    6406:	0f b6       	in	r0, 0x3f	; 63
    6408:	f8 94       	cli
    640a:	de bf       	out	0x3e, r29	; 62
    640c:	0f be       	out	0x3f, r0	; 63
    640e:	cd bf       	out	0x3d, r28	; 61
    6410:	df 91       	pop	r29
    6412:	cf 91       	pop	r28
    6414:	1f 91       	pop	r17
    6416:	0f 91       	pop	r16
    6418:	ff 90       	pop	r15
    641a:	ef 90       	pop	r14
    641c:	df 90       	pop	r13
    641e:	cf 90       	pop	r12
    6420:	bf 90       	pop	r11
    6422:	af 90       	pop	r10
    6424:	9f 90       	pop	r9
    6426:	8f 90       	pop	r8
    6428:	7f 90       	pop	r7
    642a:	6f 90       	pop	r6
    642c:	5f 90       	pop	r5
    642e:	4f 90       	pop	r4
    6430:	3f 90       	pop	r3
    6432:	2f 90       	pop	r2
    6434:	08 95       	ret
    6436:	80 37       	cpi	r24, 0x70	; 112
    6438:	49 f0       	breq	.+18     	; 0x644c <vfprintf+0x356>
    643a:	88 37       	cpi	r24, 0x78	; 120
    643c:	01 f7       	brne	.-64     	; 0x63fe <vfprintf+0x308>
    643e:	d4 fe       	sbrs	r13, 4
    6440:	02 c0       	rjmp	.+4      	; 0x6446 <vfprintf+0x350>
    6442:	68 94       	set
    6444:	d2 f8       	bld	r13, 2
    6446:	20 e1       	ldi	r18, 0x10	; 16
    6448:	30 e0       	ldi	r19, 0x00	; 0
    644a:	0d c0       	rjmp	.+26     	; 0x6466 <vfprintf+0x370>
    644c:	68 94       	set
    644e:	d4 f8       	bld	r13, 4
    6450:	f6 cf       	rjmp	.-20     	; 0x643e <vfprintf+0x348>
    6452:	34 fe       	sbrs	r3, 4
    6454:	03 c0       	rjmp	.+6      	; 0x645c <vfprintf+0x366>
    6456:	82 2f       	mov	r24, r18
    6458:	86 60       	ori	r24, 0x06	; 6
    645a:	d8 2e       	mov	r13, r24
    645c:	20 e1       	ldi	r18, 0x10	; 16
    645e:	32 e0       	ldi	r19, 0x02	; 2
    6460:	02 c0       	rjmp	.+4      	; 0x6466 <vfprintf+0x370>
    6462:	28 e0       	ldi	r18, 0x08	; 8
    6464:	30 e0       	ldi	r19, 0x00	; 0
    6466:	f8 01       	movw	r30, r16
    6468:	d7 fe       	sbrs	r13, 7
    646a:	0f c0       	rjmp	.+30     	; 0x648a <vfprintf+0x394>
    646c:	60 81       	ld	r22, Z
    646e:	71 81       	ldd	r23, Z+1	; 0x01
    6470:	82 81       	ldd	r24, Z+2	; 0x02
    6472:	93 81       	ldd	r25, Z+3	; 0x03
    6474:	0c 5f       	subi	r16, 0xFC	; 252
    6476:	1f 4f       	sbci	r17, 0xFF	; 255
    6478:	a5 01       	movw	r20, r10
    647a:	0e 94 c4 32 	call	0x6588	; 0x6588 <__ultoa_invert>
    647e:	c8 2e       	mov	r12, r24
    6480:	ca 18       	sub	r12, r10
    6482:	3d 2c       	mov	r3, r13
    6484:	e8 94       	clt
    6486:	37 f8       	bld	r3, 7
    6488:	52 cf       	rjmp	.-348    	; 0x632e <vfprintf+0x238>
    648a:	60 81       	ld	r22, Z
    648c:	71 81       	ldd	r23, Z+1	; 0x01
    648e:	90 e0       	ldi	r25, 0x00	; 0
    6490:	80 e0       	ldi	r24, 0x00	; 0
    6492:	0e 5f       	subi	r16, 0xFE	; 254
    6494:	1f 4f       	sbci	r17, 0xFF	; 255
    6496:	f0 cf       	rjmp	.-32     	; 0x6478 <vfprintf+0x382>
    6498:	42 fc       	sbrc	r4, 2
    649a:	02 c0       	rjmp	.+4      	; 0x64a0 <vfprintf+0x3aa>
    649c:	83 94       	inc	r8
    649e:	63 cf       	rjmp	.-314    	; 0x6366 <vfprintf+0x270>
    64a0:	83 94       	inc	r8
    64a2:	83 94       	inc	r8
    64a4:	60 cf       	rjmp	.-320    	; 0x6366 <vfprintf+0x270>
    64a6:	84 2d       	mov	r24, r4
    64a8:	86 78       	andi	r24, 0x86	; 134
    64aa:	09 f4       	brne	.+2      	; 0x64ae <vfprintf+0x3b8>
    64ac:	5c cf       	rjmp	.-328    	; 0x6366 <vfprintf+0x270>
    64ae:	f6 cf       	rjmp	.-20     	; 0x649c <vfprintf+0x3a6>
    64b0:	b7 01       	movw	r22, r14
    64b2:	80 e2       	ldi	r24, 0x20	; 32
    64b4:	90 e0       	ldi	r25, 0x00	; 0
    64b6:	0e 94 94 32 	call	0x6528	; 0x6528 <fputc>
    64ba:	83 94       	inc	r8
    64bc:	82 14       	cp	r8, r2
    64be:	c0 f3       	brcs	.-16     	; 0x64b0 <vfprintf+0x3ba>
    64c0:	51 2c       	mov	r5, r1
    64c2:	5e cf       	rjmp	.-324    	; 0x6380 <vfprintf+0x28a>
    64c4:	52 2c       	mov	r5, r2
    64c6:	58 18       	sub	r5, r8
    64c8:	82 14       	cp	r8, r2
    64ca:	08 f4       	brcc	.+2      	; 0x64ce <vfprintf+0x3d8>
    64cc:	59 cf       	rjmp	.-334    	; 0x6380 <vfprintf+0x28a>
    64ce:	f8 cf       	rjmp	.-16     	; 0x64c0 <vfprintf+0x3ca>
    64d0:	84 2d       	mov	r24, r4
    64d2:	86 78       	andi	r24, 0x86	; 134
    64d4:	09 f4       	brne	.+2      	; 0x64d8 <vfprintf+0x3e2>
    64d6:	66 cf       	rjmp	.-308    	; 0x63a4 <vfprintf+0x2ae>
    64d8:	8b e2       	ldi	r24, 0x2B	; 43
    64da:	41 fe       	sbrs	r4, 1
    64dc:	80 e2       	ldi	r24, 0x20	; 32
    64de:	47 fc       	sbrc	r4, 7
    64e0:	8d e2       	ldi	r24, 0x2D	; 45
    64e2:	b7 01       	movw	r22, r14
    64e4:	90 e0       	ldi	r25, 0x00	; 0
    64e6:	5c cf       	rjmp	.-328    	; 0x63a0 <vfprintf+0x2aa>
    64e8:	b7 01       	movw	r22, r14
    64ea:	80 e3       	ldi	r24, 0x30	; 48
    64ec:	90 e0       	ldi	r25, 0x00	; 0
    64ee:	0e 94 94 32 	call	0x6528	; 0x6528 <fputc>
    64f2:	9a 94       	dec	r9
    64f4:	57 cf       	rjmp	.-338    	; 0x63a4 <vfprintf+0x2ae>
    64f6:	8f ef       	ldi	r24, 0xFF	; 255
    64f8:	9f ef       	ldi	r25, 0xFF	; 255
    64fa:	84 cf       	rjmp	.-248    	; 0x6404 <vfprintf+0x30e>

000064fc <strnlen_P>:
strnlen_P():
    64fc:	fc 01       	movw	r30, r24
    64fe:	05 90       	lpm	r0, Z+
    6500:	61 50       	subi	r22, 0x01	; 1
    6502:	70 40       	sbci	r23, 0x00	; 0
    6504:	01 10       	cpse	r0, r1
    6506:	d8 f7       	brcc	.-10     	; 0x64fe <strnlen_P+0x2>
    6508:	80 95       	com	r24
    650a:	90 95       	com	r25
    650c:	8e 0f       	add	r24, r30
    650e:	9f 1f       	adc	r25, r31
    6510:	08 95       	ret

00006512 <strnlen>:
strnlen():
    6512:	fc 01       	movw	r30, r24
    6514:	61 50       	subi	r22, 0x01	; 1
    6516:	70 40       	sbci	r23, 0x00	; 0
    6518:	01 90       	ld	r0, Z+
    651a:	01 10       	cpse	r0, r1
    651c:	d8 f7       	brcc	.-10     	; 0x6514 <strnlen+0x2>
    651e:	80 95       	com	r24
    6520:	90 95       	com	r25
    6522:	8e 0f       	add	r24, r30
    6524:	9f 1f       	adc	r25, r31
    6526:	08 95       	ret

00006528 <fputc>:
fputc():
    6528:	0f 93       	push	r16
    652a:	1f 93       	push	r17
    652c:	cf 93       	push	r28
    652e:	df 93       	push	r29
    6530:	18 2f       	mov	r17, r24
    6532:	09 2f       	mov	r16, r25
    6534:	eb 01       	movw	r28, r22
    6536:	8b 81       	ldd	r24, Y+3	; 0x03
    6538:	81 fd       	sbrc	r24, 1
    653a:	09 c0       	rjmp	.+18     	; 0x654e <fputc+0x26>
    653c:	1f ef       	ldi	r17, 0xFF	; 255
    653e:	0f ef       	ldi	r16, 0xFF	; 255
    6540:	81 2f       	mov	r24, r17
    6542:	90 2f       	mov	r25, r16
    6544:	df 91       	pop	r29
    6546:	cf 91       	pop	r28
    6548:	1f 91       	pop	r17
    654a:	0f 91       	pop	r16
    654c:	08 95       	ret
    654e:	82 ff       	sbrs	r24, 2
    6550:	14 c0       	rjmp	.+40     	; 0x657a <fputc+0x52>
    6552:	2e 81       	ldd	r18, Y+6	; 0x06
    6554:	3f 81       	ldd	r19, Y+7	; 0x07
    6556:	8c 81       	ldd	r24, Y+4	; 0x04
    6558:	9d 81       	ldd	r25, Y+5	; 0x05
    655a:	28 17       	cp	r18, r24
    655c:	39 07       	cpc	r19, r25
    655e:	3c f4       	brge	.+14     	; 0x656e <fputc+0x46>
    6560:	e8 81       	ld	r30, Y
    6562:	f9 81       	ldd	r31, Y+1	; 0x01
    6564:	cf 01       	movw	r24, r30
    6566:	01 96       	adiw	r24, 0x01	; 1
    6568:	99 83       	std	Y+1, r25	; 0x01
    656a:	88 83       	st	Y, r24
    656c:	10 83       	st	Z, r17
    656e:	8e 81       	ldd	r24, Y+6	; 0x06
    6570:	9f 81       	ldd	r25, Y+7	; 0x07
    6572:	01 96       	adiw	r24, 0x01	; 1
    6574:	9f 83       	std	Y+7, r25	; 0x07
    6576:	8e 83       	std	Y+6, r24	; 0x06
    6578:	e3 cf       	rjmp	.-58     	; 0x6540 <fputc+0x18>
    657a:	e8 85       	ldd	r30, Y+8	; 0x08
    657c:	f9 85       	ldd	r31, Y+9	; 0x09
    657e:	81 2f       	mov	r24, r17
    6580:	09 95       	icall
    6582:	89 2b       	or	r24, r25
    6584:	a1 f3       	breq	.-24     	; 0x656e <fputc+0x46>
    6586:	da cf       	rjmp	.-76     	; 0x653c <fputc+0x14>

00006588 <__ultoa_invert>:
__ultoa_invert():
    6588:	fa 01       	movw	r30, r20
    658a:	aa 27       	eor	r26, r26
    658c:	28 30       	cpi	r18, 0x08	; 8
    658e:	51 f1       	breq	.+84     	; 0x65e4 <__ultoa_invert+0x5c>
    6590:	20 31       	cpi	r18, 0x10	; 16
    6592:	81 f1       	breq	.+96     	; 0x65f4 <__ultoa_invert+0x6c>
    6594:	e8 94       	clt
    6596:	6f 93       	push	r22
    6598:	6e 7f       	andi	r22, 0xFE	; 254
    659a:	6e 5f       	subi	r22, 0xFE	; 254
    659c:	7f 4f       	sbci	r23, 0xFF	; 255
    659e:	8f 4f       	sbci	r24, 0xFF	; 255
    65a0:	9f 4f       	sbci	r25, 0xFF	; 255
    65a2:	af 4f       	sbci	r26, 0xFF	; 255
    65a4:	b1 e0       	ldi	r27, 0x01	; 1
    65a6:	3e d0       	rcall	.+124    	; 0x6624 <__ultoa_invert+0x9c>
    65a8:	b4 e0       	ldi	r27, 0x04	; 4
    65aa:	3c d0       	rcall	.+120    	; 0x6624 <__ultoa_invert+0x9c>
    65ac:	67 0f       	add	r22, r23
    65ae:	78 1f       	adc	r23, r24
    65b0:	89 1f       	adc	r24, r25
    65b2:	9a 1f       	adc	r25, r26
    65b4:	a1 1d       	adc	r26, r1
    65b6:	68 0f       	add	r22, r24
    65b8:	79 1f       	adc	r23, r25
    65ba:	8a 1f       	adc	r24, r26
    65bc:	91 1d       	adc	r25, r1
    65be:	a1 1d       	adc	r26, r1
    65c0:	6a 0f       	add	r22, r26
    65c2:	71 1d       	adc	r23, r1
    65c4:	81 1d       	adc	r24, r1
    65c6:	91 1d       	adc	r25, r1
    65c8:	a1 1d       	adc	r26, r1
    65ca:	20 d0       	rcall	.+64     	; 0x660c <__ultoa_invert+0x84>
    65cc:	09 f4       	brne	.+2      	; 0x65d0 <__ultoa_invert+0x48>
    65ce:	68 94       	set
    65d0:	3f 91       	pop	r19
    65d2:	2a e0       	ldi	r18, 0x0A	; 10
    65d4:	26 9f       	mul	r18, r22
    65d6:	11 24       	eor	r1, r1
    65d8:	30 19       	sub	r19, r0
    65da:	30 5d       	subi	r19, 0xD0	; 208
    65dc:	31 93       	st	Z+, r19
    65de:	de f6       	brtc	.-74     	; 0x6596 <__ultoa_invert+0xe>
    65e0:	cf 01       	movw	r24, r30
    65e2:	08 95       	ret
    65e4:	46 2f       	mov	r20, r22
    65e6:	47 70       	andi	r20, 0x07	; 7
    65e8:	40 5d       	subi	r20, 0xD0	; 208
    65ea:	41 93       	st	Z+, r20
    65ec:	b3 e0       	ldi	r27, 0x03	; 3
    65ee:	0f d0       	rcall	.+30     	; 0x660e <__ultoa_invert+0x86>
    65f0:	c9 f7       	brne	.-14     	; 0x65e4 <__ultoa_invert+0x5c>
    65f2:	f6 cf       	rjmp	.-20     	; 0x65e0 <__ultoa_invert+0x58>
    65f4:	46 2f       	mov	r20, r22
    65f6:	4f 70       	andi	r20, 0x0F	; 15
    65f8:	40 5d       	subi	r20, 0xD0	; 208
    65fa:	4a 33       	cpi	r20, 0x3A	; 58
    65fc:	18 f0       	brcs	.+6      	; 0x6604 <__ultoa_invert+0x7c>
    65fe:	49 5d       	subi	r20, 0xD9	; 217
    6600:	31 fd       	sbrc	r19, 1
    6602:	40 52       	subi	r20, 0x20	; 32
    6604:	41 93       	st	Z+, r20
    6606:	02 d0       	rcall	.+4      	; 0x660c <__ultoa_invert+0x84>
    6608:	a9 f7       	brne	.-22     	; 0x65f4 <__ultoa_invert+0x6c>
    660a:	ea cf       	rjmp	.-44     	; 0x65e0 <__ultoa_invert+0x58>
    660c:	b4 e0       	ldi	r27, 0x04	; 4
    660e:	a6 95       	lsr	r26
    6610:	97 95       	ror	r25
    6612:	87 95       	ror	r24
    6614:	77 95       	ror	r23
    6616:	67 95       	ror	r22
    6618:	ba 95       	dec	r27
    661a:	c9 f7       	brne	.-14     	; 0x660e <__ultoa_invert+0x86>
    661c:	00 97       	sbiw	r24, 0x00	; 0
    661e:	61 05       	cpc	r22, r1
    6620:	71 05       	cpc	r23, r1
    6622:	08 95       	ret
    6624:	9b 01       	movw	r18, r22
    6626:	ac 01       	movw	r20, r24
    6628:	0a 2e       	mov	r0, r26
    662a:	06 94       	lsr	r0
    662c:	57 95       	ror	r21
    662e:	47 95       	ror	r20
    6630:	37 95       	ror	r19
    6632:	27 95       	ror	r18
    6634:	ba 95       	dec	r27
    6636:	c9 f7       	brne	.-14     	; 0x662a <__ultoa_invert+0xa2>
    6638:	62 0f       	add	r22, r18
    663a:	73 1f       	adc	r23, r19
    663c:	84 1f       	adc	r24, r20
    663e:	95 1f       	adc	r25, r21
    6640:	a0 1d       	adc	r26, r0
    6642:	08 95       	ret

00006644 <eeprom_read_byte>:
eeprom_read_byte():
    6644:	e1 99       	sbic	0x1c, 1	; 28
    6646:	fe cf       	rjmp	.-4      	; 0x6644 <eeprom_read_byte>
    6648:	9f bb       	out	0x1f, r25	; 31
    664a:	8e bb       	out	0x1e, r24	; 30
    664c:	e0 9a       	sbi	0x1c, 0	; 28
    664e:	99 27       	eor	r25, r25
    6650:	8d b3       	in	r24, 0x1d	; 29
    6652:	08 95       	ret

00006654 <eeprom_write_byte>:
eeprom_write_byte():
    6654:	26 2f       	mov	r18, r22

00006656 <eeprom_write_r18>:
    6656:	e1 99       	sbic	0x1c, 1	; 28
    6658:	fe cf       	rjmp	.-4      	; 0x6656 <eeprom_write_r18>
    665a:	9f bb       	out	0x1f, r25	; 31
    665c:	8e bb       	out	0x1e, r24	; 30
    665e:	2d bb       	out	0x1d, r18	; 29
    6660:	0f b6       	in	r0, 0x3f	; 63
    6662:	f8 94       	cli
    6664:	e2 9a       	sbi	0x1c, 2	; 28
    6666:	e1 9a       	sbi	0x1c, 1	; 28
    6668:	0f be       	out	0x3f, r0	; 63
    666a:	01 96       	adiw	r24, 0x01	; 1
    666c:	08 95       	ret

0000666e <__cmpsf2>:
__cmpsf2():
    666e:	0e 94 21 34 	call	0x6842	; 0x6842 <__fp_cmp>
    6672:	08 f4       	brcc	.+2      	; 0x6676 <__cmpsf2+0x8>
    6674:	81 e0       	ldi	r24, 0x01	; 1
    6676:	08 95       	ret

00006678 <__divsf3>:
__divsf3():
    6678:	0e 94 50 33 	call	0x66a0	; 0x66a0 <__divsf3x>
    667c:	0c 94 5c 34 	jmp	0x68b8	; 0x68b8 <__fp_round>
    6680:	0e 94 55 34 	call	0x68aa	; 0x68aa <__fp_pscB>
    6684:	58 f0       	brcs	.+22     	; 0x669c <__divsf3+0x24>
    6686:	0e 94 4e 34 	call	0x689c	; 0x689c <__fp_pscA>
    668a:	40 f0       	brcs	.+16     	; 0x669c <__divsf3+0x24>
    668c:	29 f4       	brne	.+10     	; 0x6698 <__divsf3+0x20>
    668e:	5f 3f       	cpi	r21, 0xFF	; 255
    6690:	29 f0       	breq	.+10     	; 0x669c <__divsf3+0x24>
    6692:	0c 94 45 34 	jmp	0x688a	; 0x688a <__fp_inf>
    6696:	51 11       	cpse	r21, r1
    6698:	0c 94 90 34 	jmp	0x6920	; 0x6920 <__fp_szero>
    669c:	0c 94 4b 34 	jmp	0x6896	; 0x6896 <__fp_nan>

000066a0 <__divsf3x>:
__divsf3x():
    66a0:	0e 94 6d 34 	call	0x68da	; 0x68da <__fp_split3>
    66a4:	68 f3       	brcs	.-38     	; 0x6680 <__divsf3+0x8>

000066a6 <__divsf3_pse>:
    66a6:	99 23       	and	r25, r25
    66a8:	b1 f3       	breq	.-20     	; 0x6696 <__divsf3+0x1e>
    66aa:	55 23       	and	r21, r21
    66ac:	91 f3       	breq	.-28     	; 0x6692 <__divsf3+0x1a>
    66ae:	95 1b       	sub	r25, r21
    66b0:	55 0b       	sbc	r21, r21
    66b2:	bb 27       	eor	r27, r27
    66b4:	aa 27       	eor	r26, r26
    66b6:	62 17       	cp	r22, r18
    66b8:	73 07       	cpc	r23, r19
    66ba:	84 07       	cpc	r24, r20
    66bc:	38 f0       	brcs	.+14     	; 0x66cc <__divsf3_pse+0x26>
    66be:	9f 5f       	subi	r25, 0xFF	; 255
    66c0:	5f 4f       	sbci	r21, 0xFF	; 255
    66c2:	22 0f       	add	r18, r18
    66c4:	33 1f       	adc	r19, r19
    66c6:	44 1f       	adc	r20, r20
    66c8:	aa 1f       	adc	r26, r26
    66ca:	a9 f3       	breq	.-22     	; 0x66b6 <__divsf3_pse+0x10>
    66cc:	35 d0       	rcall	.+106    	; 0x6738 <__divsf3_pse+0x92>
    66ce:	0e 2e       	mov	r0, r30
    66d0:	3a f0       	brmi	.+14     	; 0x66e0 <__divsf3_pse+0x3a>
    66d2:	e0 e8       	ldi	r30, 0x80	; 128
    66d4:	32 d0       	rcall	.+100    	; 0x673a <__divsf3_pse+0x94>
    66d6:	91 50       	subi	r25, 0x01	; 1
    66d8:	50 40       	sbci	r21, 0x00	; 0
    66da:	e6 95       	lsr	r30
    66dc:	00 1c       	adc	r0, r0
    66de:	ca f7       	brpl	.-14     	; 0x66d2 <__divsf3_pse+0x2c>
    66e0:	2b d0       	rcall	.+86     	; 0x6738 <__divsf3_pse+0x92>
    66e2:	fe 2f       	mov	r31, r30
    66e4:	29 d0       	rcall	.+82     	; 0x6738 <__divsf3_pse+0x92>
    66e6:	66 0f       	add	r22, r22
    66e8:	77 1f       	adc	r23, r23
    66ea:	88 1f       	adc	r24, r24
    66ec:	bb 1f       	adc	r27, r27
    66ee:	26 17       	cp	r18, r22
    66f0:	37 07       	cpc	r19, r23
    66f2:	48 07       	cpc	r20, r24
    66f4:	ab 07       	cpc	r26, r27
    66f6:	b0 e8       	ldi	r27, 0x80	; 128
    66f8:	09 f0       	breq	.+2      	; 0x66fc <__divsf3_pse+0x56>
    66fa:	bb 0b       	sbc	r27, r27
    66fc:	80 2d       	mov	r24, r0
    66fe:	bf 01       	movw	r22, r30
    6700:	ff 27       	eor	r31, r31
    6702:	93 58       	subi	r25, 0x83	; 131
    6704:	5f 4f       	sbci	r21, 0xFF	; 255
    6706:	3a f0       	brmi	.+14     	; 0x6716 <__divsf3_pse+0x70>
    6708:	9e 3f       	cpi	r25, 0xFE	; 254
    670a:	51 05       	cpc	r21, r1
    670c:	78 f0       	brcs	.+30     	; 0x672c <__divsf3_pse+0x86>
    670e:	0c 94 45 34 	jmp	0x688a	; 0x688a <__fp_inf>
    6712:	0c 94 90 34 	jmp	0x6920	; 0x6920 <__fp_szero>
    6716:	5f 3f       	cpi	r21, 0xFF	; 255
    6718:	e4 f3       	brlt	.-8      	; 0x6712 <__divsf3_pse+0x6c>
    671a:	98 3e       	cpi	r25, 0xE8	; 232
    671c:	d4 f3       	brlt	.-12     	; 0x6712 <__divsf3_pse+0x6c>
    671e:	86 95       	lsr	r24
    6720:	77 95       	ror	r23
    6722:	67 95       	ror	r22
    6724:	b7 95       	ror	r27
    6726:	f7 95       	ror	r31
    6728:	9f 5f       	subi	r25, 0xFF	; 255
    672a:	c9 f7       	brne	.-14     	; 0x671e <__divsf3_pse+0x78>
    672c:	88 0f       	add	r24, r24
    672e:	91 1d       	adc	r25, r1
    6730:	96 95       	lsr	r25
    6732:	87 95       	ror	r24
    6734:	97 f9       	bld	r25, 7
    6736:	08 95       	ret
    6738:	e1 e0       	ldi	r30, 0x01	; 1
    673a:	66 0f       	add	r22, r22
    673c:	77 1f       	adc	r23, r23
    673e:	88 1f       	adc	r24, r24
    6740:	bb 1f       	adc	r27, r27
    6742:	62 17       	cp	r22, r18
    6744:	73 07       	cpc	r23, r19
    6746:	84 07       	cpc	r24, r20
    6748:	ba 07       	cpc	r27, r26
    674a:	20 f0       	brcs	.+8      	; 0x6754 <__divsf3_pse+0xae>
    674c:	62 1b       	sub	r22, r18
    674e:	73 0b       	sbc	r23, r19
    6750:	84 0b       	sbc	r24, r20
    6752:	ba 0b       	sbc	r27, r26
    6754:	ee 1f       	adc	r30, r30
    6756:	88 f7       	brcc	.-30     	; 0x673a <__divsf3_pse+0x94>
    6758:	e0 95       	com	r30
    675a:	08 95       	ret

0000675c <__fixsfsi>:
    675c:	0e 94 b5 33 	call	0x676a	; 0x676a <__fixunssfsi>
    6760:	68 94       	set
    6762:	b1 11       	cpse	r27, r1
    6764:	0c 94 90 34 	jmp	0x6920	; 0x6920 <__fp_szero>
    6768:	08 95       	ret

0000676a <__fixunssfsi>:
    676a:	0e 94 75 34 	call	0x68ea	; 0x68ea <__fp_splitA>
    676e:	88 f0       	brcs	.+34     	; 0x6792 <__fixunssfsi+0x28>
    6770:	9f 57       	subi	r25, 0x7F	; 127
    6772:	98 f0       	brcs	.+38     	; 0x679a <__fixunssfsi+0x30>
    6774:	b9 2f       	mov	r27, r25
    6776:	99 27       	eor	r25, r25
    6778:	b7 51       	subi	r27, 0x17	; 23
    677a:	b0 f0       	brcs	.+44     	; 0x67a8 <__fixunssfsi+0x3e>
__fixunssfsi():
    677c:	e1 f0       	breq	.+56     	; 0x67b6 <__fixunssfsi+0x4c>
    677e:	66 0f       	add	r22, r22
    6780:	77 1f       	adc	r23, r23
    6782:	88 1f       	adc	r24, r24
    6784:	99 1f       	adc	r25, r25
    6786:	1a f0       	brmi	.+6      	; 0x678e <__fixunssfsi+0x24>
    6788:	ba 95       	dec	r27
    678a:	c9 f7       	brne	.-14     	; 0x677e <__fixunssfsi+0x14>
    678c:	14 c0       	rjmp	.+40     	; 0x67b6 <__fixunssfsi+0x4c>
    678e:	b1 30       	cpi	r27, 0x01	; 1
    6790:	91 f0       	breq	.+36     	; 0x67b6 <__fixunssfsi+0x4c>
    6792:	0e 94 8f 34 	call	0x691e	; 0x691e <__fp_zero>
    6796:	b1 e0       	ldi	r27, 0x01	; 1
    6798:	08 95       	ret
    679a:	0c 94 8f 34 	jmp	0x691e	; 0x691e <__fp_zero>
    679e:	67 2f       	mov	r22, r23
    67a0:	78 2f       	mov	r23, r24
    67a2:	88 27       	eor	r24, r24
    67a4:	b8 5f       	subi	r27, 0xF8	; 248
    67a6:	39 f0       	breq	.+14     	; 0x67b6 <__fixunssfsi+0x4c>
    67a8:	b9 3f       	cpi	r27, 0xF9	; 249
    67aa:	cc f3       	brlt	.-14     	; 0x679e <__fixunssfsi+0x34>
    67ac:	86 95       	lsr	r24
    67ae:	77 95       	ror	r23
    67b0:	67 95       	ror	r22
    67b2:	b3 95       	inc	r27
    67b4:	d9 f7       	brne	.-10     	; 0x67ac <__fixunssfsi+0x42>
    67b6:	3e f4       	brtc	.+14     	; 0x67c6 <__fixunssfsi+0x5c>
    67b8:	90 95       	com	r25
    67ba:	80 95       	com	r24
    67bc:	70 95       	com	r23
    67be:	61 95       	neg	r22
    67c0:	7f 4f       	sbci	r23, 0xFF	; 255
    67c2:	8f 4f       	sbci	r24, 0xFF	; 255
    67c4:	9f 4f       	sbci	r25, 0xFF	; 255
    67c6:	08 95       	ret

000067c8 <__floatunsisf>:
__floatunsisf():
    67c8:	e8 94       	clt
    67ca:	09 c0       	rjmp	.+18     	; 0x67de <__floatsisf+0x12>

000067cc <__floatsisf>:
    67cc:	97 fb       	bst	r25, 7
    67ce:	3e f4       	brtc	.+14     	; 0x67de <__floatsisf+0x12>
    67d0:	90 95       	com	r25
    67d2:	80 95       	com	r24
    67d4:	70 95       	com	r23
    67d6:	61 95       	neg	r22
    67d8:	7f 4f       	sbci	r23, 0xFF	; 255
    67da:	8f 4f       	sbci	r24, 0xFF	; 255
    67dc:	9f 4f       	sbci	r25, 0xFF	; 255
    67de:	99 23       	and	r25, r25
    67e0:	a9 f0       	breq	.+42     	; 0x680c <__floatsisf+0x40>
    67e2:	f9 2f       	mov	r31, r25
    67e4:	96 e9       	ldi	r25, 0x96	; 150
    67e6:	bb 27       	eor	r27, r27
    67e8:	93 95       	inc	r25
    67ea:	f6 95       	lsr	r31
    67ec:	87 95       	ror	r24
    67ee:	77 95       	ror	r23
    67f0:	67 95       	ror	r22
    67f2:	b7 95       	ror	r27
    67f4:	f1 11       	cpse	r31, r1
    67f6:	f8 cf       	rjmp	.-16     	; 0x67e8 <__floatsisf+0x1c>
    67f8:	fa f4       	brpl	.+62     	; 0x6838 <__floatsisf+0x6c>
    67fa:	bb 0f       	add	r27, r27
    67fc:	11 f4       	brne	.+4      	; 0x6802 <__floatsisf+0x36>
    67fe:	60 ff       	sbrs	r22, 0
    6800:	1b c0       	rjmp	.+54     	; 0x6838 <__floatsisf+0x6c>
    6802:	6f 5f       	subi	r22, 0xFF	; 255
    6804:	7f 4f       	sbci	r23, 0xFF	; 255
    6806:	8f 4f       	sbci	r24, 0xFF	; 255
    6808:	9f 4f       	sbci	r25, 0xFF	; 255
    680a:	16 c0       	rjmp	.+44     	; 0x6838 <__floatsisf+0x6c>
    680c:	88 23       	and	r24, r24
    680e:	11 f0       	breq	.+4      	; 0x6814 <__floatsisf+0x48>
    6810:	96 e9       	ldi	r25, 0x96	; 150
    6812:	11 c0       	rjmp	.+34     	; 0x6836 <__floatsisf+0x6a>
    6814:	77 23       	and	r23, r23
    6816:	21 f0       	breq	.+8      	; 0x6820 <__floatsisf+0x54>
    6818:	9e e8       	ldi	r25, 0x8E	; 142
    681a:	87 2f       	mov	r24, r23
    681c:	76 2f       	mov	r23, r22
    681e:	05 c0       	rjmp	.+10     	; 0x682a <__floatsisf+0x5e>
    6820:	66 23       	and	r22, r22
    6822:	71 f0       	breq	.+28     	; 0x6840 <__floatsisf+0x74>
    6824:	96 e8       	ldi	r25, 0x86	; 134
    6826:	86 2f       	mov	r24, r22
    6828:	70 e0       	ldi	r23, 0x00	; 0
    682a:	60 e0       	ldi	r22, 0x00	; 0
    682c:	2a f0       	brmi	.+10     	; 0x6838 <__floatsisf+0x6c>
    682e:	9a 95       	dec	r25
    6830:	66 0f       	add	r22, r22
    6832:	77 1f       	adc	r23, r23
    6834:	88 1f       	adc	r24, r24
    6836:	da f7       	brpl	.-10     	; 0x682e <__floatsisf+0x62>
    6838:	88 0f       	add	r24, r24
    683a:	96 95       	lsr	r25
    683c:	87 95       	ror	r24
    683e:	97 f9       	bld	r25, 7
    6840:	08 95       	ret

00006842 <__fp_cmp>:
__fp_cmp():
    6842:	99 0f       	add	r25, r25
    6844:	00 08       	sbc	r0, r0
    6846:	55 0f       	add	r21, r21
    6848:	aa 0b       	sbc	r26, r26
    684a:	e0 e8       	ldi	r30, 0x80	; 128
    684c:	fe ef       	ldi	r31, 0xFE	; 254
    684e:	16 16       	cp	r1, r22
    6850:	17 06       	cpc	r1, r23
    6852:	e8 07       	cpc	r30, r24
    6854:	f9 07       	cpc	r31, r25
    6856:	c0 f0       	brcs	.+48     	; 0x6888 <__fp_cmp+0x46>
    6858:	12 16       	cp	r1, r18
    685a:	13 06       	cpc	r1, r19
    685c:	e4 07       	cpc	r30, r20
    685e:	f5 07       	cpc	r31, r21
    6860:	98 f0       	brcs	.+38     	; 0x6888 <__fp_cmp+0x46>
    6862:	62 1b       	sub	r22, r18
    6864:	73 0b       	sbc	r23, r19
    6866:	84 0b       	sbc	r24, r20
    6868:	95 0b       	sbc	r25, r21
    686a:	39 f4       	brne	.+14     	; 0x687a <__fp_cmp+0x38>
    686c:	0a 26       	eor	r0, r26
    686e:	61 f0       	breq	.+24     	; 0x6888 <__fp_cmp+0x46>
    6870:	23 2b       	or	r18, r19
    6872:	24 2b       	or	r18, r20
    6874:	25 2b       	or	r18, r21
    6876:	21 f4       	brne	.+8      	; 0x6880 <__fp_cmp+0x3e>
    6878:	08 95       	ret
    687a:	0a 26       	eor	r0, r26
    687c:	09 f4       	brne	.+2      	; 0x6880 <__fp_cmp+0x3e>
    687e:	a1 40       	sbci	r26, 0x01	; 1
    6880:	a6 95       	lsr	r26
    6882:	8f ef       	ldi	r24, 0xFF	; 255
    6884:	81 1d       	adc	r24, r1
    6886:	81 1d       	adc	r24, r1
    6888:	08 95       	ret

0000688a <__fp_inf>:
__fp_inf():
    688a:	97 f9       	bld	r25, 7
    688c:	9f 67       	ori	r25, 0x7F	; 127
    688e:	80 e8       	ldi	r24, 0x80	; 128
    6890:	70 e0       	ldi	r23, 0x00	; 0
    6892:	60 e0       	ldi	r22, 0x00	; 0
    6894:	08 95       	ret

00006896 <__fp_nan>:
__fp_nan():
    6896:	9f ef       	ldi	r25, 0xFF	; 255
    6898:	80 ec       	ldi	r24, 0xC0	; 192
    689a:	08 95       	ret

0000689c <__fp_pscA>:
__fp_pscA():
    689c:	00 24       	eor	r0, r0
    689e:	0a 94       	dec	r0
    68a0:	16 16       	cp	r1, r22
    68a2:	17 06       	cpc	r1, r23
    68a4:	18 06       	cpc	r1, r24
    68a6:	09 06       	cpc	r0, r25
    68a8:	08 95       	ret

000068aa <__fp_pscB>:
__fp_pscB():
    68aa:	00 24       	eor	r0, r0
    68ac:	0a 94       	dec	r0
    68ae:	12 16       	cp	r1, r18
    68b0:	13 06       	cpc	r1, r19
    68b2:	14 06       	cpc	r1, r20
    68b4:	05 06       	cpc	r0, r21
    68b6:	08 95       	ret

000068b8 <__fp_round>:
__fp_round():
    68b8:	09 2e       	mov	r0, r25
    68ba:	03 94       	inc	r0
    68bc:	00 0c       	add	r0, r0
    68be:	11 f4       	brne	.+4      	; 0x68c4 <__fp_round+0xc>
    68c0:	88 23       	and	r24, r24
    68c2:	52 f0       	brmi	.+20     	; 0x68d8 <__fp_round+0x20>
    68c4:	bb 0f       	add	r27, r27
    68c6:	40 f4       	brcc	.+16     	; 0x68d8 <__fp_round+0x20>
    68c8:	bf 2b       	or	r27, r31
    68ca:	11 f4       	brne	.+4      	; 0x68d0 <__fp_round+0x18>
    68cc:	60 ff       	sbrs	r22, 0
    68ce:	04 c0       	rjmp	.+8      	; 0x68d8 <__fp_round+0x20>
    68d0:	6f 5f       	subi	r22, 0xFF	; 255
    68d2:	7f 4f       	sbci	r23, 0xFF	; 255
    68d4:	8f 4f       	sbci	r24, 0xFF	; 255
    68d6:	9f 4f       	sbci	r25, 0xFF	; 255
    68d8:	08 95       	ret

000068da <__fp_split3>:
__fp_split3():
    68da:	57 fd       	sbrc	r21, 7
    68dc:	90 58       	subi	r25, 0x80	; 128
    68de:	44 0f       	add	r20, r20
    68e0:	55 1f       	adc	r21, r21
    68e2:	59 f0       	breq	.+22     	; 0x68fa <__fp_splitA+0x10>
    68e4:	5f 3f       	cpi	r21, 0xFF	; 255
    68e6:	71 f0       	breq	.+28     	; 0x6904 <__fp_splitA+0x1a>
    68e8:	47 95       	ror	r20

000068ea <__fp_splitA>:
    68ea:	88 0f       	add	r24, r24
    68ec:	97 fb       	bst	r25, 7
    68ee:	99 1f       	adc	r25, r25
    68f0:	61 f0       	breq	.+24     	; 0x690a <__fp_splitA+0x20>
    68f2:	9f 3f       	cpi	r25, 0xFF	; 255
    68f4:	79 f0       	breq	.+30     	; 0x6914 <__fp_splitA+0x2a>
    68f6:	87 95       	ror	r24
    68f8:	08 95       	ret
    68fa:	12 16       	cp	r1, r18
    68fc:	13 06       	cpc	r1, r19
    68fe:	14 06       	cpc	r1, r20
    6900:	55 1f       	adc	r21, r21
    6902:	f2 cf       	rjmp	.-28     	; 0x68e8 <__fp_split3+0xe>
    6904:	46 95       	lsr	r20
    6906:	f1 df       	rcall	.-30     	; 0x68ea <__fp_splitA>
    6908:	08 c0       	rjmp	.+16     	; 0x691a <__fp_splitA+0x30>
    690a:	16 16       	cp	r1, r22
    690c:	17 06       	cpc	r1, r23
    690e:	18 06       	cpc	r1, r24
    6910:	99 1f       	adc	r25, r25
    6912:	f1 cf       	rjmp	.-30     	; 0x68f6 <__fp_splitA+0xc>
    6914:	86 95       	lsr	r24
    6916:	71 05       	cpc	r23, r1
    6918:	61 05       	cpc	r22, r1
    691a:	08 94       	sec
    691c:	08 95       	ret

0000691e <__fp_zero>:
__fp_zero():
    691e:	e8 94       	clt

00006920 <__fp_szero>:
    6920:	bb 27       	eor	r27, r27
    6922:	66 27       	eor	r22, r22
    6924:	77 27       	eor	r23, r23
    6926:	cb 01       	movw	r24, r22
    6928:	97 f9       	bld	r25, 7
    692a:	08 95       	ret

0000692c <__mulsf3>:
__mulsf3():
    692c:	0e 94 a9 34 	call	0x6952	; 0x6952 <__mulsf3x>
    6930:	0c 94 5c 34 	jmp	0x68b8	; 0x68b8 <__fp_round>
    6934:	0e 94 4e 34 	call	0x689c	; 0x689c <__fp_pscA>
    6938:	38 f0       	brcs	.+14     	; 0x6948 <__mulsf3+0x1c>
    693a:	0e 94 55 34 	call	0x68aa	; 0x68aa <__fp_pscB>
    693e:	20 f0       	brcs	.+8      	; 0x6948 <__mulsf3+0x1c>
    6940:	95 23       	and	r25, r21
    6942:	11 f0       	breq	.+4      	; 0x6948 <__mulsf3+0x1c>
    6944:	0c 94 45 34 	jmp	0x688a	; 0x688a <__fp_inf>
    6948:	0c 94 4b 34 	jmp	0x6896	; 0x6896 <__fp_nan>
    694c:	11 24       	eor	r1, r1
    694e:	0c 94 90 34 	jmp	0x6920	; 0x6920 <__fp_szero>

00006952 <__mulsf3x>:
__mulsf3x():
    6952:	0e 94 6d 34 	call	0x68da	; 0x68da <__fp_split3>
    6956:	70 f3       	brcs	.-36     	; 0x6934 <__mulsf3+0x8>

00006958 <__mulsf3_pse>:
    6958:	95 9f       	mul	r25, r21
    695a:	c1 f3       	breq	.-16     	; 0x694c <__mulsf3+0x20>
    695c:	95 0f       	add	r25, r21
    695e:	50 e0       	ldi	r21, 0x00	; 0
    6960:	55 1f       	adc	r21, r21
    6962:	62 9f       	mul	r22, r18
    6964:	f0 01       	movw	r30, r0
    6966:	72 9f       	mul	r23, r18
    6968:	bb 27       	eor	r27, r27
    696a:	f0 0d       	add	r31, r0
    696c:	b1 1d       	adc	r27, r1
    696e:	63 9f       	mul	r22, r19
    6970:	aa 27       	eor	r26, r26
    6972:	f0 0d       	add	r31, r0
    6974:	b1 1d       	adc	r27, r1
    6976:	aa 1f       	adc	r26, r26
    6978:	64 9f       	mul	r22, r20
    697a:	66 27       	eor	r22, r22
    697c:	b0 0d       	add	r27, r0
    697e:	a1 1d       	adc	r26, r1
    6980:	66 1f       	adc	r22, r22
    6982:	82 9f       	mul	r24, r18
    6984:	22 27       	eor	r18, r18
    6986:	b0 0d       	add	r27, r0
    6988:	a1 1d       	adc	r26, r1
    698a:	62 1f       	adc	r22, r18
    698c:	73 9f       	mul	r23, r19
    698e:	b0 0d       	add	r27, r0
    6990:	a1 1d       	adc	r26, r1
    6992:	62 1f       	adc	r22, r18
    6994:	83 9f       	mul	r24, r19
    6996:	a0 0d       	add	r26, r0
    6998:	61 1d       	adc	r22, r1
    699a:	22 1f       	adc	r18, r18
    699c:	74 9f       	mul	r23, r20
    699e:	33 27       	eor	r19, r19
    69a0:	a0 0d       	add	r26, r0
    69a2:	61 1d       	adc	r22, r1
    69a4:	23 1f       	adc	r18, r19
    69a6:	84 9f       	mul	r24, r20
    69a8:	60 0d       	add	r22, r0
    69aa:	21 1d       	adc	r18, r1
    69ac:	82 2f       	mov	r24, r18
    69ae:	76 2f       	mov	r23, r22
    69b0:	6a 2f       	mov	r22, r26
    69b2:	11 24       	eor	r1, r1
    69b4:	9f 57       	subi	r25, 0x7F	; 127
    69b6:	50 40       	sbci	r21, 0x00	; 0
    69b8:	9a f0       	brmi	.+38     	; 0x69e0 <__mulsf3_pse+0x88>
    69ba:	f1 f0       	breq	.+60     	; 0x69f8 <__mulsf3_pse+0xa0>
    69bc:	88 23       	and	r24, r24
    69be:	4a f0       	brmi	.+18     	; 0x69d2 <__mulsf3_pse+0x7a>
    69c0:	ee 0f       	add	r30, r30
    69c2:	ff 1f       	adc	r31, r31
    69c4:	bb 1f       	adc	r27, r27
    69c6:	66 1f       	adc	r22, r22
    69c8:	77 1f       	adc	r23, r23
    69ca:	88 1f       	adc	r24, r24
    69cc:	91 50       	subi	r25, 0x01	; 1
    69ce:	50 40       	sbci	r21, 0x00	; 0
    69d0:	a9 f7       	brne	.-22     	; 0x69bc <__mulsf3_pse+0x64>
    69d2:	9e 3f       	cpi	r25, 0xFE	; 254
    69d4:	51 05       	cpc	r21, r1
    69d6:	80 f0       	brcs	.+32     	; 0x69f8 <__mulsf3_pse+0xa0>
    69d8:	0c 94 45 34 	jmp	0x688a	; 0x688a <__fp_inf>
    69dc:	0c 94 90 34 	jmp	0x6920	; 0x6920 <__fp_szero>
    69e0:	5f 3f       	cpi	r21, 0xFF	; 255
    69e2:	e4 f3       	brlt	.-8      	; 0x69dc <__mulsf3_pse+0x84>
    69e4:	98 3e       	cpi	r25, 0xE8	; 232
    69e6:	d4 f3       	brlt	.-12     	; 0x69dc <__mulsf3_pse+0x84>
    69e8:	86 95       	lsr	r24
    69ea:	77 95       	ror	r23
    69ec:	67 95       	ror	r22
    69ee:	b7 95       	ror	r27
    69f0:	f7 95       	ror	r31
    69f2:	e7 95       	ror	r30
    69f4:	9f 5f       	subi	r25, 0xFF	; 255
    69f6:	c1 f7       	brne	.-16     	; 0x69e8 <__mulsf3_pse+0x90>
    69f8:	fe 2b       	or	r31, r30
    69fa:	88 0f       	add	r24, r24
    69fc:	91 1d       	adc	r25, r1
    69fe:	96 95       	lsr	r25
    6a00:	87 95       	ror	r24
    6a02:	97 f9       	bld	r25, 7
    6a04:	08 95       	ret

00006a06 <__udivmodhi4>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1408
    6a06:	aa 1b       	sub	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1409
    6a08:	bb 1b       	sub	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1410
    6a0a:	51 e1       	ldi	r21, 0x11	; 17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1411
    6a0c:	07 c0       	rjmp	.+14     	; 0x6a1c <__udivmodhi4_ep>

00006a0e <__udivmodhi4_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1413
    6a0e:	aa 1f       	adc	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1414
    6a10:	bb 1f       	adc	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1415
    6a12:	a6 17       	cp	r26, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1416
    6a14:	b7 07       	cpc	r27, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1417
    6a16:	10 f0       	brcs	.+4      	; 0x6a1c <__udivmodhi4_ep>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1418
    6a18:	a6 1b       	sub	r26, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1419
    6a1a:	b7 0b       	sbc	r27, r23

00006a1c <__udivmodhi4_ep>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1421
    6a1c:	88 1f       	adc	r24, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1422
    6a1e:	99 1f       	adc	r25, r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1423
    6a20:	5a 95       	dec	r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1424
    6a22:	a9 f7       	brne	.-22     	; 0x6a0e <__udivmodhi4_loop>
__udivmodhi4_ep():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1425
    6a24:	80 95       	com	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1426
    6a26:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1428
    6a28:	bc 01       	movw	r22, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1430
    6a2a:	cd 01       	movw	r24, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1432
    6a2c:	08 95       	ret

00006a2e <__divmodhi4>:
__divmodhi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1440
    6a2e:	97 fb       	bst	r25, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1441
    6a30:	07 2e       	mov	r0, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1442
    6a32:	16 f4       	brtc	.+4      	; 0x6a38 <__divmodhi4+0xa>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1443
    6a34:	00 94       	com	r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1444
    6a36:	07 d0       	rcall	.+14     	; 0x6a46 <__divmodhi4_neg1>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1446
    6a38:	77 fd       	sbrc	r23, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1447
    6a3a:	09 d0       	rcall	.+18     	; 0x6a4e <__divmodhi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1448
    6a3c:	0e 94 03 35 	call	0x6a06	; 0x6a06 <__udivmodhi4>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1449
    6a40:	07 fc       	sbrc	r0, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1450
    6a42:	05 d0       	rcall	.+10     	; 0x6a4e <__divmodhi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1451
    6a44:	3e f4       	brtc	.+14     	; 0x6a54 <__divmodhi4_exit>

00006a46 <__divmodhi4_neg1>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1454
    6a46:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1455
    6a48:	81 95       	neg	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1456
    6a4a:	9f 4f       	sbci	r25, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1457
    6a4c:	08 95       	ret

00006a4e <__divmodhi4_neg2>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1460
    6a4e:	70 95       	com	r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1461
    6a50:	61 95       	neg	r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1462
    6a52:	7f 4f       	sbci	r23, 0xFF	; 255

00006a54 <__divmodhi4_exit>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1464
    6a54:	08 95       	ret

00006a56 <__udivmodsi4>:
__udivmodsi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1638
    6a56:	a1 e2       	ldi	r26, 0x21	; 33
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1639
    6a58:	1a 2e       	mov	r1, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1640
    6a5a:	aa 1b       	sub	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1641
    6a5c:	bb 1b       	sub	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1642
    6a5e:	fd 01       	movw	r30, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1644
    6a60:	0d c0       	rjmp	.+26     	; 0x6a7c <__udivmodsi4_ep>

00006a62 <__udivmodsi4_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1646
    6a62:	aa 1f       	adc	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1647
    6a64:	bb 1f       	adc	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1648
    6a66:	ee 1f       	adc	r30, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1649
    6a68:	ff 1f       	adc	r31, r31
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1650
    6a6a:	a2 17       	cp	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1651
    6a6c:	b3 07       	cpc	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1652
    6a6e:	e4 07       	cpc	r30, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1653
    6a70:	f5 07       	cpc	r31, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1654
    6a72:	20 f0       	brcs	.+8      	; 0x6a7c <__udivmodsi4_ep>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1655
    6a74:	a2 1b       	sub	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1656
    6a76:	b3 0b       	sbc	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1657
    6a78:	e4 0b       	sbc	r30, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1658
    6a7a:	f5 0b       	sbc	r31, r21

00006a7c <__udivmodsi4_ep>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1660
    6a7c:	66 1f       	adc	r22, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1661
    6a7e:	77 1f       	adc	r23, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1662
    6a80:	88 1f       	adc	r24, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1663
    6a82:	99 1f       	adc	r25, r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1664
    6a84:	1a 94       	dec	r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1665
    6a86:	69 f7       	brne	.-38     	; 0x6a62 <__udivmodsi4_loop>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1667
    6a88:	60 95       	com	r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1668
    6a8a:	70 95       	com	r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1669
    6a8c:	80 95       	com	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1670
    6a8e:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1672
    6a90:	9b 01       	movw	r18, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1674
    6a92:	ac 01       	movw	r20, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1676
    6a94:	bd 01       	movw	r22, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1678
    6a96:	cf 01       	movw	r24, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1680
    6a98:	08 95       	ret

00006a9a <__divmodsi4>:
__divmodsi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1686
    6a9a:	05 2e       	mov	r0, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1687
    6a9c:	97 fb       	bst	r25, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1688
    6a9e:	1e f4       	brtc	.+6      	; 0x6aa6 <__divmodsi4+0xc>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1689
    6aa0:	00 94       	com	r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1690
    6aa2:	0e 94 64 35 	call	0x6ac8	; 0x6ac8 <__negsi2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1692
    6aa6:	57 fd       	sbrc	r21, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1693
    6aa8:	07 d0       	rcall	.+14     	; 0x6ab8 <__divmodsi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1694
    6aaa:	0e 94 2b 35 	call	0x6a56	; 0x6a56 <__udivmodsi4>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1695
    6aae:	07 fc       	sbrc	r0, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1696
    6ab0:	03 d0       	rcall	.+6      	; 0x6ab8 <__divmodsi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1697
    6ab2:	4e f4       	brtc	.+18     	; 0x6ac6 <__divmodsi4_exit>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1698
    6ab4:	0c 94 64 35 	jmp	0x6ac8	; 0x6ac8 <__negsi2>

00006ab8 <__divmodsi4_neg2>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1701
    6ab8:	50 95       	com	r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1702
    6aba:	40 95       	com	r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1703
    6abc:	30 95       	com	r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1704
    6abe:	21 95       	neg	r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1705
    6ac0:	3f 4f       	sbci	r19, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1706
    6ac2:	4f 4f       	sbci	r20, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1707
    6ac4:	5f 4f       	sbci	r21, 0xFF	; 255

00006ac6 <__divmodsi4_exit>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1709
    6ac6:	08 95       	ret

00006ac8 <__negsi2>:
__negsi2():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1718
    6ac8:	90 95       	com	r25
    6aca:	80 95       	com	r24
    6acc:	70 95       	com	r23
    6ace:	61 95       	neg	r22
    6ad0:	7f 4f       	sbci	r23, 0xFF	; 255
    6ad2:	8f 4f       	sbci	r24, 0xFF	; 255
    6ad4:	9f 4f       	sbci	r25, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1719
    6ad6:	08 95       	ret

00006ad8 <__tablejump2__>:
__tablejump2__():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2296
    6ad8:	ee 0f       	add	r30, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2297
    6ada:	ff 1f       	adc	r31, r31
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2304
    6adc:	00 24       	eor	r0, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2305
    6ade:	00 1c       	adc	r0, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2306
    6ae0:	0b be       	out	0x3b, r0	; 59
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2312
    6ae2:	07 90       	elpm	r0, Z+
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2313
    6ae4:	f6 91       	elpm	r31, Z
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2314
    6ae6:	e0 2d       	mov	r30, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2319
    6ae8:	09 94       	ijmp

00006aea <__umulhisi3>:
__umulhisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:564
    6aea:	a2 9f       	mul	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:565
    6aec:	b0 01       	movw	r22, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:566
    6aee:	b3 9f       	mul	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:567
    6af0:	c0 01       	movw	r24, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:568
    6af2:	a3 9f       	mul	r26, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:573
    6af4:	70 0d       	add	r23, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:574
    6af6:	81 1d       	adc	r24, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:575
    6af8:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:576
    6afa:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:580
    6afc:	b2 9f       	mul	r27, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:581
    6afe:	70 0d       	add	r23, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:582
    6b00:	81 1d       	adc	r24, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:583
    6b02:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:584
    6b04:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:585
    6b06:	08 95       	ret

00006b08 <__muluhisi3>:
__muluhisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:626
    6b08:	0e 94 75 35 	call	0x6aea	; 0x6aea <__umulhisi3>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:627
    6b0c:	a5 9f       	mul	r26, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:628
    6b0e:	90 0d       	add	r25, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:629
    6b10:	b4 9f       	mul	r27, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:630
    6b12:	90 0d       	add	r25, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:631
    6b14:	a4 9f       	mul	r26, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:632
    6b16:	80 0d       	add	r24, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:633
    6b18:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:634
    6b1a:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:635
    6b1c:	08 95       	ret

00006b1e <_exit>:
exit():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2278
    6b1e:	f8 94       	cli

00006b20 <__stop_program>:
__stop_program():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2280
    6b20:	ff cf       	rjmp	.-2      	; 0x6b20 <__stop_program>
